{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "21ef4a29-f4b6-4cef-a9a8-c2a4fc2af2dc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "04b1fd17-2231-4ce0-b610-84a24baf1d7d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6e16ef5-45ba-431f-9cf9-2d7b25559212",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51cf0ff7-0b09-4f13-a03f-e86d0b250657"
                }
              }
            ]
          },
          {
            "id": "7e6ab3f0-76b5-4a3f-8108-c31e0c8934e5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39424a5c-051e-4e9a-b856-08eedb7b96c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c8a205e-42b5-4d74-a56b-bd0df2fb840e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4118e7a9-dade-4ad0-ab73-5c00456bad41",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8789c62f-2e39-492e-b429-a0998204daac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6be985ba-76f6-4ad2-8fb5-f815f4747576",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de2c6e72-05f9-4c88-92b4-68027da06c69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53b2825a-b1ab-4464-9996-fcca33b0108b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef20275e-d91c-4771-bb48-9b38a340ef50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d8a38cb-7ca1-40e1-8df4-734b8ecd1b42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10711228-f897-44c0-856d-becc53f87322",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6f28655-fc6a-4980-babc-cf6d198f6d33"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2910609-b77f-4022-a2f8-089b75ad4474",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "125edc44-7d25-49b7-9552-d743381ac0b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae7f585e-6ebb-4ab2-b195-f24f488caccb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7488b5fc-3a55-47ed-b3fd-3463a123a040"
            }
          }
        ]
      },
      {
        "id": "7c101d94-94b0-4b6c-a899-35d576f832a0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4d0fd23c-46a3-4256-94b9-438c087eb14a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "009943a4-b49e-4fe5-a1a8-e437e7e8e6c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c6b8cc4-b9e3-4f59-ba5c-eb77d0316ad0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85823369-500b-4e6e-b6ac-a90c15633623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7af1e0c-1d6d-408d-be57-dd1ba2ee4749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ae6fc-4b30-46d2-9fd9-be23024e2f4b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f832f70c-e6e6-4430-83b3-2d1776fb1bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d54d0033-7845-4ffd-adc8-ccd686b1c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19749e1-7699-4b1e-a8ec-293b13674d28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac4a4b2-dfa2-4efe-81d3-361f6d93edcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b16385c-3317-471e-8754-820d3092b115"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "970b7973-5761-4e2f-95bf-a24ebe9ccae6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79123458-bcff-4133-b418-edc7c4c0c8d9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8fe34c-d150-4c10-8480-4f6248bf4c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6485f69-4abb-43cd-b711-368135b28ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d16be5f-11e1-4afd-a024-37c3d74e299a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eddf675-c7c1-478b-bfb0-c317d34fc515"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e6f96d4-adac-4314-bae0-9552fd717b29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5717310-2d4e-46dd-bb17-11631130dbb4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "618b50df-9df9-4609-a37a-33c2096782e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "676febf0-16f0-47c8-a983-f51bbb30a3ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db04cf5-6e3b-47e7-8567-c2931ce46e62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "23876972-0a19-447f-908e-3a15da39d4c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86d82008-3a7e-4d70-a9c7-3a2e9dfbec8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8feb342-b14b-4561-9a43-2e1f372145e3"
            }
          }
        ]
      },
      {
        "id": "e769a2d8-0837-429a-9524-f94de02ede21",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5c39f57e-c687-4703-98f9-4cd55f5ebf9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29a7fba5-50a7-440f-9d78-ee06ea38fcb2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25d1a7d8-d088-4259-ae58-ec0010950041",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166924c2-ec91-432c-9793-85201c52987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146e2605-9a14-4e70-a93a-6f0656268dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36216018-be13-4526-90ee-51b4bffd59fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228c362c-a5ff-49b3-af13-937c9f502e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31c4d02-7a33-4c43-8973-13efdeee5811",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245361b4-7d04-420f-9893-49adcb625d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a6e39c-5cae-478b-936d-ebe65145436e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76436374-a5b0-4b8c-8ef2-ff636f3b1cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1349280a-4f04-4f92-9fd2-b80a80b307ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc2bccb-fee1-4bdc-89ff-1351d8cffbdd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f52a5e5-77f6-48f2-842d-2f34796f4e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702339ac-56ed-4500-bad0-002334e165dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae1f19-4825-4885-af27-6b9b9773c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c3c5f60-b8e0-472b-91e9-80fcb099ce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c33a62b-dedf-4da2-ac53-c5f3fe8c8842",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ac792-ec30-414f-807e-68aad06546b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284db6d7-a95d-4dc8-96fd-ed562a66f377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c905c309-dff2-469d-aa22-f0ef4ce3a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b1c6ef7-1b5d-4e9d-9106-76e027364efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69a29b7-493f-4dd1-97dd-fa193d36b931",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d336f-9e20-40d6-9736-b96bb53f159e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19da741-cb76-4c40-9dff-0969ef0d6c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6840c9a7-ed86-4d84-9970-4ff9454aec04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4c76421-a589-4ca3-89ca-af7aa16235b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653310c-5be2-4af4-bcab-1cf04017d896",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76726e42-eeb0-4a22-8161-3a650a0fc081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f691434-5e5b-410d-bdc7-0fb40a42e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d893132-af1e-4945-b82a-ca6e3ac3f862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "361cbbdf-fa96-4e15-b166-61238ffbf907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d30f1a-483b-418e-8d59-ca2511046d0b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6bd99b-7259-4edd-8ef2-1f655c8a48c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89044f13-4b46-4a02-9650-6cc01578861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3157647-43e0-4dbf-a4fb-eb5e843d240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2536668-d93d-46f4-85eb-f3f6ff9c869c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b243a-7140-4010-bba8-84c00999affd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1156259f-564e-46bb-8bbb-f7e9e2fb3a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7b7214-6b69-4644-b2df-0cc99e2bb111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57f02b6-eb1e-4c43-9bb1-5e5649763f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "466843d4-946c-4895-8e49-c5a29f1c3f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a535744-242d-488b-bc0b-ed501b1ce48b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e37563-74a5-47f5-813d-12b13773e404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6ec532-cd59-4fb4-8950-40aa69363732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dd640d-eb94-43c3-b031-ba2496013ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f87b2679-e714-462e-9b53-c6dc83f6e741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec0e937-d8e7-4542-bc05-e1ad52234468",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da98827f-1544-45ac-a7c0-9d6b3553991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78c64e4-91fa-43a4-935d-4f213a0d5578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedef868-4f47-4132-b80f-86a0911cfdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3360d55-9dff-4974-a099-5cdc01db0d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d647f694-886d-44ea-b1cc-0ee64006ce6a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43710562-3886-412a-90b7-70c68d8079e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951d4114-2392-4b85-8f30-90785b4302bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671ebe84-3fc1-45eb-92af-5e374da16a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "566e80fb-ad39-414d-857c-49c352181f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40f90b-d5f3-4a6f-8477-50b6596b7d53",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48545fd-d6cf-49f2-8fff-7cf95ee9c7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686d0594-1f7d-4d42-82f5-fe767362e15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a876bbb0-199c-4fa0-9c48-52d40cab7870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f16f36e3-4829-4a1f-8bfd-4c67f21cf050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feae1847-4fec-4dc4-99ec-f35f68a750db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a83b34a-adf0-4b8e-ace8-3e4a6ff8c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b85dcc-dd73-4677-861d-75a8d378efd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f05f360-bfbf-4a70-88e9-578d128e10bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3960677d-0c72-455f-a6b5-be190eb37af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63032b9-5c9f-41c2-b161-3d2425535d46",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf41e4-d2ed-4556-8abe-cea2455a81df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8454b14-cd4a-4f5c-996a-bcfcc992b109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16d5f5f-3347-4854-864b-170e1f4cf1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5463272c-c71c-4ae8-9489-99c8d9331713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96826c1a-0602-4dfd-98e0-53bd81a04099",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4823eee-c2b3-424b-8534-d85ac3b1358e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a5116a-6d4c-4ced-906b-5035a1c7b231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e5b677-7257-4814-99c2-559705ec8c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94919b23-4796-4ac4-8259-dd8148968f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5aa307-07cb-4f06-9194-2921069420fc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962b6093-fffd-45e8-889b-42644f23179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da00742-7286-4a55-9e29-ecf220e685cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c568b-095e-4e37-b486-6f9abc6c9ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f5726bb-5881-412d-b234-a12acf95286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b1ba2-6081-4c18-9297-5055168a1f9d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec15dd4d-60ab-4972-b321-ff5ce5d58218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2e400f-f0af-4ce9-9ac1-bd24d4fa57f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6592e6e-388e-4eed-8812-32813f3218c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65821bb8-468c-4eda-a757-03396d92eef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db1d9c9-4f33-4837-b0e7-c10b239e3d3b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77962e8d-65f0-40b2-8544-1641c3dd9f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e690f134-32c7-48d7-a74c-2db85fd97a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040860a6-4086-4598-89bb-2bf999e9c129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "477fb917-e84b-4b63-843e-9b09f1f7e030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21200c9f-9c9c-4ed2-abcd-0233f8571bb7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691507da-7328-45eb-ba29-25d885aa4da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71013ed0-e2e5-4948-b2fd-6bf4cdbcc097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32957130-eff9-44ec-82ec-f6593becc608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ea1ffd-1d70-41f3-80a4-dc5b76e5ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ac6f13-37e1-49b6-becc-790ff6bea921",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea11ea04-3be6-4b5f-a84a-c50c1c5d20d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38959e91-6194-4b91-8243-0143fae4fd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b6df57-1d04-46c1-abd7-0d79c8f99b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14b4a29-28b2-43e1-8c66-4e5c3e5d4974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e1571d-b843-49e7-bbf5-6d3e1b3a6d26",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea01f7-2bcf-437e-83a5-4804654b82c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8672609-796c-4fe2-8e17-d07d93fed5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8b0387-c961-486e-af72-d72d71cb1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f1432-42a1-4940-812b-695fcfb0072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503a823b-8755-415f-a6d6-dc256298002b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f718f-0f45-4a63-a4bf-e0f4a9024afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717d4a0c-92ca-42a8-a2e8-adf4086f0daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745b1d8b-9170-46d0-b078-c719cf38c9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b446327d-08b4-4e6f-875d-87223108dbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bef02e9-1c8f-40eb-a304-1c0173572617",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e5d300-6082-4098-97ec-1c5ee27b698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7b58c9-1520-44b0-babb-135bcb565041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a30e36d-ed4f-4e42-82d5-a4ac661f2bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58779a2d-1b2c-4592-8e96-40b0dafbee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c58861b-4608-4133-bc5f-3e02739cbe0a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a68e933-510e-4b9b-a216-1e243a0e8cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f22c820-59eb-4068-be82-e52b12b7879c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02462647-4c0f-497b-9788-609b580e2532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "80536daa-8108-448c-8890-203a97612ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ebf06f-ff9d-4dc7-a054-09185fe42cf6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84dc976-4309-49cb-8d47-c1bf099aac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab5c054-7c09-4ae2-8f17-72e7ae7ccfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae8304-854a-40a6-8df7-d874b735b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "604fba9c-47f9-49d3-9703-b1ed7ae4ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de3c8f8-30ee-4491-aed2-c905c08fa83d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073fe4e2-1d4d-4b0e-b67e-360b5453e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82277ae-894e-4450-926f-4587269bc142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4d5df6-1149-4a3f-933f-cc96f8798ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3566959-c424-4221-b23e-afe351d8cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3800bff-df87-4844-8d2b-c9dd5a4ce9b1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b6c152-d686-4bf5-86cd-b83322e04bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88f1bfa-9d89-40e8-8408-d95adb0ae93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea03bb0-f580-4c0f-88b4-2d2777617f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b05ceea-05b6-4646-a475-1ffb8667cd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f616440d-221a-4b34-8114-8700e87da689",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df12834-64a9-46e8-bf4e-358c69c5dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bd5620-4fc9-4894-b9bd-4ca5e5a5a855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38929f1-4220-40ee-94f2-2ec5c5670a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bbf15d-67c3-4c02-bbf1-eb33b17f31a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fe1deb-a533-4550-ae37-5cf08809562e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7991a9f1-1742-42a7-bba6-a205a678748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e5fe80-b951-4645-aafb-968aeca64a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c55f82-00b7-40a2-acc3-a952187961fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dc8c39-1016-4abd-b277-dd785d1d9637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd7a4e8-c93a-4aad-935d-12eb1f8637c5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540971f5-0ca6-4339-b801-60bcc7aa0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb67bd8b-2f51-41b1-b21c-995072e56472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9290570-3db4-45d1-ae81-353ec607f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc98d2d-af65-49b8-8ff9-ccbc0feb8079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb5a2e4-168d-4dc8-a61f-9a40bfb0eb4c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2af8d46-9bc2-4609-b230-74f6bcc64e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353b360e-e7e0-4e0a-89da-f72ef9683ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba23a0d-a72e-4e44-bd0c-c0906af73219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec1bc9c-a4e8-41c9-b758-532e6da4afb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b85cb2-f4df-4bce-95c9-ef3f2df38566",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5386dc-2f2e-4dcb-8236-4a9505a4d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c81ca9d-c184-448c-a96c-0da41b7aa9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346850a3-b958-467e-9408-40f333b78215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6939f5-b0b5-4576-8693-029d88ab8cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a985a4d-2083-46e2-9378-a8527329c41d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858f6467-4e6a-444f-aeaa-4642b1d1f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6bad70-1810-4689-8175-a8e51a077a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9a69b-e2ba-4d1c-8d13-19bbdbfedd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "500c3ed7-e3ae-4360-86e9-b2f166472667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231844be-fcf4-4657-8ff9-9280f90c6fcd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f9d67e-5af0-4425-a948-7ca773bb9019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779d5263-d2f2-4a71-86c1-25f7ba60a519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cedcb13-1fcf-40ae-89db-5ca0ee9f0900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72290b6c-5513-49ce-897a-9ff416bbfe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb21544-35e5-4fb4-a319-2e556396dd20",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3a777d-798d-43ee-bb69-2d25fa76621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2b2025-b3a2-454f-b0d5-0518dbb5dbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4ad276-0592-49b5-aead-ca68842f07ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "50e59ac8-146e-4805-b7a5-e68c4e9934dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4602ed-5884-4b7b-bb1a-9cd82a667c42",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfd30ab-6173-4d43-b8d4-ff2b1bc1e865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcc27290-be30-4a63-97c5-77a481f92980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b547a-daa3-4fce-a93b-c4c3f2c46021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa046deb-26cd-4637-828f-7e90b6b31793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f31fcd6-878d-4f0e-ab0d-19179b7d2376",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0da1a86-147b-43e0-83f8-e50922ef775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cf436c-642f-40a8-8463-93429d3df37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb292e6-dfa2-49f9-ab0b-9f9d4677eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3add338-e0b9-420a-8899-f352321388ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f966f9-8ffc-4c1d-a1c8-f70dd27b19d1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a3dd6-7404-40ef-902d-6c010070472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46a4d23-ad22-4eb8-97a6-8ea8255969e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92bf385-e5b5-45ab-93ed-a0196a3c726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f785977-8450-4325-9719-773e98e1a4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98cdce8-66d9-4356-b5c5-f7e6e3e91f77",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ca3c16-868d-461d-b6c8-66ac8095e7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100a0fd1-27b3-481e-a585-d84cfeb6e1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e2266-c6a6-48ae-a988-2b4c0bc7961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a76f6c6f-5b60-4e78-8643-61a8d3aee742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46269bba-5016-4a2f-a5c7-0116c96ef741",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58339d-36e3-46fa-b56a-3766258519b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcfb6c1-0c0f-4dd3-8081-66841ed25a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c415ab-06d3-41e7-89f0-30a616c07288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd1bdf9-85fe-4e37-a158-645f8f6e04ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4e96fb-0e97-4e54-9b34-c7471778034f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeede745-f3ad-4dcc-b5ca-d6042e0025d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3b3890-a360-404d-8c22-315f74aa3369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de5f205-3e0a-4190-8759-6e377e155f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c91fff9-786b-48e8-99fc-d8ddd5c28309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20fd706-3ce2-4fa3-ad16-ddbd93ed22cb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75074a89-82e4-4dbb-8d4a-b91b674627a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a01d67-c6db-471b-8796-782d49224c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1527a60-5562-4626-8b57-03a13a521b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b02ba0cc-18b1-4dc1-ab30-52b5ac08114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff11f963-95a9-4ccc-9a37-1059d6e46355",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e27a32-c0c1-4539-b4ee-f4225d220bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ded7fc-678a-44be-91c3-803ffa00b10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33785200-75b1-4f5a-ba68-f6d6f664a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "53fa59a1-374d-4a18-8db6-593acc92ab4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b150834-b3e5-4d87-9bdb-322ef3d3b6b0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0408121a-6abe-4fe8-8a75-c220d71056fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab1ed4f-1df3-4961-9274-9e6c94349ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec93a98-0f12-47ca-b850-fdec285704ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6aa3c2-1ac8-4e67-b1a8-eca0ff451649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd3a56-532a-4bf1-a1d8-0c8dd1d9ad56",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4106b7f0-b714-4c8c-a4a8-d104e5662c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c36b8c6-7d87-476d-92e6-21481047864c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9f5e2f-99f3-454c-a817-d6e889b6683b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c75ad26-e14d-4e36-a48f-912db4e73e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad40163c-683b-48cf-8d18-a1f38576362d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef8624-59b5-44c8-a0cf-7c31423f3cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9819987-abf3-47f5-a94d-158eb951dcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018388f1-cc35-41e2-933d-453d66b77733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d568555b-9f26-4f14-8929-ecf5a6298611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7c2c41-2326-4dd4-815e-2ecf448cf5ff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cead1c2-878d-4c8b-be01-cf3772a2c119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb3eb8-005e-46bb-a896-aeb02532e0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc40c81-8759-487f-ad64-17f67069ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fefbd16-b1da-4b42-9289-d3959e1a42af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8805d6e-d38e-40e6-a318-2f267c6d720e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccecec2-3870-45c6-8104-781c2e79f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdbf349-adcb-4b80-b286-1dc5ff806eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3648ae-4586-4f59-8c28-30c166f8847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e508b0-5ef5-49b3-8fc6-c74698c1fb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e793e9-c8eb-413b-a8f5-3ad541290641",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63a2b27-58ee-4dc3-a21e-f6953f1e1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603966fd-8a85-420c-b628-3bfdb43b7ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4daea5-27af-41d4-9c83-2eb5d68bcf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa8d5fb-c3e1-4aec-8697-f073e8ae07de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e83fe5-c704-4fdc-b104-d84be7661079",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3342c9e0-f8dc-4f47-8ba0-7abb00974e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f82e8b-8adc-4827-a70f-36cd12759d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71253be9-e03e-46b9-a5b4-8143f8a00745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66630738-7dc5-46ab-9281-cc96d0769acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff09bdaa-444f-488e-bd6d-412246f89128",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125cd9b2-59ff-4a13-a610-d18690f49084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e38141c-d971-43a5-b1b6-36fddc4252cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22e4dda-f078-462d-a7e5-c63d09fddba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "709eb211-9b78-4afd-a949-3ee08b3da372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d3154-5705-4e1d-9fc4-36f0ba6e25ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233eed39-eec4-4ccd-a8ae-0fef03c2311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d8a3d5-10db-47c8-bc10-b118eb101919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28285151-4171-4fad-8e51-4e52119062f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d13dfc-583c-4a0a-96b7-36dbb147ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534f315-7d75-4b93-a10b-58a008932a07",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddad933-5f88-46b7-8d05-6216d8d6b30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6fe57c-4e21-4f81-b22a-5e9aa34ccec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ded375-75d7-47b9-8836-53d6ebe68b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbfd788-f05c-4d0b-9797-8fe4b2525a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a12020f-25f7-41b3-9e5d-0b655cc3306d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd16e8-00a1-4f8d-a5bc-a787816411f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679cdff5-e2e0-4884-8fa2-af07ac9ad6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552a0389-078e-4b7a-8b9b-b16af486add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c47b2b-d97e-42c8-824b-f4d6a4789ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e1db5d-b74e-4064-a745-030be5f4d159",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2783f05f-74ed-4160-ac5f-a08abf03ef60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0dc5a3-11e7-4d0b-8ca9-6ff7760c90a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a8646-183f-4bee-b6ed-11a2527f51e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf17b2e-b295-45af-9beb-fc38651ceb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b8521f-dc96-4be1-89ce-500b97acc3a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aa6d2a-9b1f-44de-8acb-231dd6667b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952fc879-3c17-4a34-8520-a3e1477b2bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edb166e-661e-4f2b-bd08-07dc6d751ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "96eeba58-2d9b-4417-a378-6015dd555c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bd81cd-771d-4ef8-9215-113d9eec5de7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f973d7-4bd7-4eb8-b2b0-41a532a882de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f7ff15-e3f0-4816-a6b3-eeb057b39e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32b18d5-53e6-484f-a60a-45ce0c93c806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "036f762e-f6a5-46ed-999d-c9e221c0c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8133e-3b04-49a2-a984-7ea7b686a0de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c995f2f-0cc8-4b40-811f-aa450b683df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867fd954-81be-4d86-b58a-46f3328568f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec4bf90-2a5a-4e0c-8440-fbc5f63d4c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c487c69c-fd19-4674-9667-b230ca6344ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c733d0a-09c5-4848-90c1-6e1bfdb3b56b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e47569e-f175-40aa-ad6c-8474d5f3da29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6072da-1abf-4bea-95b4-8195b666e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1afb36-405d-4e9e-a586-afc241c6824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "972f8161-c971-4a65-b7c2-298ba3a8d608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec39912-4443-4616-bf17-bc7c3d9f7e1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af12293c-05fc-4473-9f93-da379309c065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2c4073-4f17-46d7-bf24-62d15be6a70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347e2e7-198b-46be-bc87-cbb508b6faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9bc33e-f51a-4d4c-b339-f8ebe0f4c3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e686bd0-dbf0-4c67-b559-c1a859de41ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e1874c-3c5a-458d-8174-771187fa43a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8883fc95-5a29-433d-a2df-729385faa62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff02938b-9df9-45a0-9f4e-dcde07d794ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f323422-64d8-4ac1-8c11-027540f57bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27052148-fd26-4975-82e2-4dd1b5c32a6b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cb63a9-c51d-4af2-bacb-bf881411cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6827f3ad-5cc6-4f28-853b-7366685b44c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f888f82-532a-446b-b121-a09829a680e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b85795c-dc2c-40a8-87e9-605a73a2b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b1a44a-78c5-4d7a-a190-3782233fb89e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b93f3db-7767-4e5b-858d-e9fae0d6c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be66d48-17de-4c97-9535-1fa5beed3ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87205bd0-c2bd-447c-aba0-ae13da1489ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c8da2c-ca92-4688-b861-63f0d65ff548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c342f25-a24c-403d-a5b2-4b926b8148af",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689e7d9-4932-430f-890d-a6bc66f23bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effb159b-a902-4f2a-9151-1bf6f5b426b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd27571-919c-4117-95f0-dc7f1c73f219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bfaa19-8bb2-43b9-a79c-edb3358ac10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8fb8c7-c98d-4b92-a514-3bd5482979b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb33787-b6b3-4a2a-a6d3-f826b6793398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18c718f-7e09-43c4-b03a-497f18dd8196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eac08af-67aa-4bc6-ba4a-10710eff2830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e40bfcc0-2f49-4e3f-aa14-cdacf4126196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5e40de-4087-4fc1-9ae1-a4ef545bd46c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165f73c4-f31a-46a9-b92e-9bf1e5188ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d1be2b-7ed5-4b47-9dd6-5852f3f17d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb45b981-146e-4522-8836-18c6ba269893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f08a82-305b-4884-911a-2c3eded479ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d6db0-8aeb-4bab-a195-d8b8c0bc1a6a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cbeddc-117c-4efd-b5e2-b5d4b130d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3ed1d1-80c0-4880-a08a-4bd36d73ec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a382b7b-ea10-4f9b-bd14-a92fda42b694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2269829-b7fd-472c-8f8a-d2676d6981db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8307d85-e799-475a-8883-531de53ea9d4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ffcc04-0ecd-4cf0-b790-8ac63b52a704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca0a36d-94a4-410f-9a36-6e89f7b51640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d57977-c02c-4671-bc25-368bb068de59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a35c497-de81-405a-bae5-709379963d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40437921-9078-4cde-b7e3-56c0610b2256",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006e7e81-261e-403e-8c4d-4c07201c4119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b9c581-4f41-467a-9096-9da2dd6ab0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f7cd55-9ca2-4e15-93dd-6301424ecbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "977431af-3374-4d15-bed2-8777346cc9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71258c9b-f214-4b7e-827d-37741f618db2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f36b95-18b2-4cc9-b5b3-f828c136a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0e184d-cd6d-474e-9784-6bb7191dda71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6279513f-d806-4054-af37-4c0f757e68ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0c3fbf-78c3-4691-80f9-894769394131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba96ca52-7803-41b4-9e15-f2fa22fd406e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2765978b-b57c-4001-9f57-173f2d7bfd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d0ebe8-ef80-4490-8456-ab66ddd39de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c404e70-8c10-48ec-ade1-44f6092614bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a36c0ee-5094-4ac5-acc4-15e62f3bbc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d68d10-f510-4d15-9dee-c9969190c7a4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf40d8-7e02-4911-bf85-cf7c9a3b01da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4119c6b3-7544-4a3e-93a3-16d9e9857a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a9c818-5bd7-4477-8c28-2a30ec7bbe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2826df-59ee-45b2-9207-7b1370b483b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15751e8a-7501-44bd-ae36-889fb809de61",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169de36d-967d-4407-acac-4a8ab318f19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a2d51e-80c5-474e-9100-339e2b8738c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2433e8bd-12fd-4ed3-b8c0-459aa39d4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96474717-9cb8-45f4-8872-9bec453d3d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a77e57-5c77-4ee9-87c5-5e99c3697508",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969aac00-4bfa-42c1-9939-b0282678c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1891715e-96a7-4675-94bd-21ace9e28add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c711fb45-0770-463e-ab5c-b3c5b9a83469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe154909-2326-461d-a5dd-e58eb0dab14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd7020e-a0e8-4608-94ef-aac421bf46b1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f065c839-8bc3-4b6e-a42d-ae89d2177c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a5b2d5-8a02-405f-926a-f234cf02029b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46706e6-dd69-40c7-a600-6e1e097f5af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54119ff-899b-49cd-a2ab-3ddbe71487a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45251cfb-3758-467d-bea4-708f80bb98c0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00d8499-b6f5-4150-8963-a5f761646554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458c2f1e-066e-45c6-a32f-3bf42d7a012f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae275522-b041-4ba3-a281-800c29b4a878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8130541-ca8c-4773-a6c5-db79b8473531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a000ba49-acd5-4ea4-8404-9765f4d5881f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ec93c3-479b-43ee-9a53-05b4c6058a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4762519-b533-4635-a6c5-36f79282cfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7108695e-42c5-40e6-a97a-60de90cad7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4234c53d-594a-4178-824b-23bb83a82053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e420b-a269-40c6-9e64-a3724ccafdec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd1e372-dcf0-407e-961a-d8573f727bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d34a7c-2a87-4b0a-8062-e083104a2255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d66eb7-fbc8-49f5-bc74-b2848325583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d16cf404-81ac-43d0-9780-0a09b72acbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa1af4-fa07-4590-a7aa-fc134bb11093",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60861ed-e79c-42a7-8a2e-7bef56e905b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2503b96e-1254-4db0-8209-c9f09050669d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f8141-0ce2-4aa6-a3c0-3301ee79bf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5620ba7d-3177-4039-8d6f-c498e9edb3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41960f55-b767-479f-8d62-ef03d039cf48",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0724fd1e-ca9a-466f-b3bc-dbcde636c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c751bb0-078d-4d0b-ac83-8716574c2c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b610a30-0a6a-4b60-ba8b-6a894aaca656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d241e9a-3bcf-48d8-9d4c-9d980d2c1cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924ec5ff-776d-451d-8328-816afe4b276d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e4eb7a-79a9-473f-8d2e-0772da1e8a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a81fb4e-4d49-49f6-8530-b0db7db2c514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276f2eb1-3c95-4ed9-a871-993c20502fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "870a2bc2-e0ca-4f06-821e-844931085915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c52618-2d8f-4d19-94a9-3cd88d3cd914",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad380378-50ba-4877-a3d5-a397a6f33a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8cf0fc-23a0-4ac0-a40a-e1a545e818c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc6b3e0-f17f-47f2-835a-b4398561465b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b50df61-a75f-433e-84f7-852982f6e326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89f1df7-faef-4f42-b08d-edac8bd6d7b2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96849ff2-f749-432a-adcd-021fb8ad0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1d7516-fe44-459c-af96-eaedf63a2faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89837f95-725c-4f7c-9102-d0943e6b96b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22037af-f5a4-4187-bb7c-9054981de4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd25bc9c-40fe-49ae-8313-17c99d9f963b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4817c8-8c58-45c9-8646-dd45cbefbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886cc41a-80b9-4976-86e6-80097259c043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c77a42d-ef81-43ec-831f-ed4d1cca06c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ec1966-0701-4ff5-a6fb-35fa8b2afa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c523e433-7df6-4341-960c-1f58289c5177",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11322570-2b55-4871-9d2e-ae258b395c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc22965-348d-4411-83c3-1a047eae3b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f28b167-c002-4940-8e90-a94f4586bc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "025c181c-cb4d-4a05-879c-7e1b60744ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9517bda2-022d-4be2-b606-38c0fadb9dea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ca380-075b-4e7e-8291-3931876256ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fc8250-8cc9-4349-97a5-52c46ef27b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc3cae3-cc94-4ccb-8384-af2c60c30b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d384ee2-8d38-4d60-95a7-bf2affb8cabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93337553-548b-4f1c-ac95-d2216e0806b9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf2ad8-cb7c-4479-a4df-d47d96eaa7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410ebd32-4fab-45a5-a872-dedc49b9449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5a818e-011c-4d4b-a92e-76707648e43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65eab5c1-5173-41f8-ba9c-a00378c625e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e504ef53-e6c0-46c6-9b82-0d8ab03eb33f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f854e5b-825d-4f09-ae6e-e6f829322e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761ca14f-d3de-41ea-87d5-2fac6cdbba5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d276b586-120a-49e9-b508-432beb4955fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7c2fbd-34fd-46f9-982e-91da9d63ff4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c048936a-c382-4c33-aed3-398210668d13",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0667628-b7d2-4fda-b657-15975804c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af8f6df-fb7c-4e1c-8a24-497fe67264c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16c0581-3f60-4337-9db2-4f95136d92e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75e44bc6-22ad-4dc1-9097-89a7eb26dfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a32129-da56-4b6f-b0cb-a423a410fb8e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a29d5c-eeaf-41f6-8e2e-7ef2fac763c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adefec0f-185e-4ad2-837c-af2315bc34ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b4e176-458f-4e54-895f-71fe23679e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fddb796-62ec-425b-835d-4e5bf7a4bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cc8a35-7a37-4431-991b-abd74227097e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeb78d2-3575-4358-82df-eb51698a5f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f19386-7d72-4e9d-8fa8-b1ce7a741a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2268b4c9-5d01-4692-8950-f5d4d32299ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a4b780-a056-4043-8efa-259de07f1d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb47dae3-f8d5-4c3c-9031-ec1f5e935aeb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ca6fa6-ae45-457f-9323-deefff2f00d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5cb2a009-3005-4c07-b4aa-2f428d423fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae4c70f-a075-4216-bd70-b447953e2869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b2239f-0142-4976-a304-f5d1796f2ec6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edc22f35-e38b-4f97-ae0d-5dc94dbb5781",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d6d7bb5-816a-4497-9b47-b616aa17eb40",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2763b463-fc72-4167-8a71-4eeaf39dcce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed01e388-22f1-46db-9a8c-37e86cc5663e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd5598-e3a6-40d3-9063-0bc67c286d9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53a11345-92db-46e0-89ef-a9c8ac9f0188"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff8b233e-b01d-4170-b6c0-858cf23d3c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad5e181b-d605-4073-ae62-a06b7744f9df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0214d438-368f-4230-8867-eb037417a424",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c607792d-6527-4ee5-8887-7b4ae4cc7363"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb20b7df-87ad-443b-8cce-ff35f30a6e7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "736f7c16-85c9-4fa8-bfd3-6a759883ffa5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a15f14b4-0661-4e78-a2d1-bebea4a4f801",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "305f27bf-ee37-4158-aaf0-da6dc2b6c364"
                }
              }
            ]
          },
          {
            "id": "8de37664-6732-4881-9f28-e4edaab92a03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85efd442-e167-42ff-8d8d-e60d4c9bdeba",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3445d841-253b-4502-b252-2c74e45bd932",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af74b13-1ed2-49f0-a402-1ab724b252b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c20d8404-e5dc-41aa-bfc4-f979e75d7e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d40ad2a-e118-4657-985c-b18d7a029cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d28805-bbce-424a-9ba4-78086e9479d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bae2144c-cbc5-4927-b829-c531e3415853",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d02e816-77e3-480a-b31c-5873adba1a71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8d67cde-6f20-4ac9-a265-2d6a9a10f43d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a44dfdf1-3901-473b-8879-3f755ecadd7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7d13a03-c030-4a5d-95cb-4c7630549a41"
                    }
                  }
                ]
              },
              {
                "id": "d5fce1e4-b435-4dd3-8b99-d519b2fd026d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f18461fd-8379-43de-b91d-e01f5732c204",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e47c9580-cb82-4b98-899d-3e8c6ede76b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84d4fa7f-ea25-4fc2-88a3-1dc09ce1b333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c86261a2-039f-4c2e-80c6-fa4ef3154e6f"
                    }
                  }
                ]
              },
              {
                "id": "4b37ac44-4148-4123-a1a1-0d3573a7ba74",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ecc2b1-a14c-4146-b42c-651e6016e1b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ddda11c-c778-4136-94c3-8e23d5b31698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "995e8433-c9cd-4fff-a190-4d5f8eefbeda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8074488-3473-4baa-a218-26225087ab5b"
                    }
                  }
                ]
              },
              {
                "id": "8da33948-ad3c-4ebb-98bb-3460915b84e0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c147cb1c-7419-481b-b084-97541d3db049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28668202-20e6-41d4-9f15-3900702dbd79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22ea6eaa-7648-4cd3-af81-3230c9f51c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ded9448c-97b7-4d71-afb0-5e0a2e419572"
                    }
                  }
                ]
              },
              {
                "id": "6ac02cb5-ea05-41cb-beb7-21e9f1cd9764",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ab250a8-22db-4b9a-b5a6-cff40b1352f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8121feed-9d85-4ecc-9cd3-b5004ca2fd94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acee33b1-7064-42be-bd5f-923f6b3d2097",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "441c9964-9679-45ef-90c3-81a2ae66124a"
                    }
                  }
                ]
              },
              {
                "id": "78aafe12-7524-4c4c-8c74-b974e9ab80d9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f19bed-84b8-43c8-a4c0-7ea0270f1f46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5d705b7-8773-4672-95f9-de353afb9af2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91e70fb4-a4f2-48ac-901d-6c203b6a39bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d916f372-9739-4514-a1cb-48f1dab110ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a6dea48-42c5-45a8-9906-642f96c5ee6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da27d490-092c-42da-96e2-705be2a6952a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e033a3b4-27d8-438c-87eb-51dad1d9aef7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "547c36c8-ce70-41fd-b22e-989519622527"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fd86c98-e85a-4459-9b0f-0a61d102e5e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9124620d-5f44-446c-8852-a90efc927c06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5dc2b4e-78e6-4719-b3e7-2884da95dc03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b710acb8-4979-4ce8-9a02-01d73885f1d8"
            }
          }
        ]
      },
      {
        "id": "cabfb049-329e-400c-ad5d-541b41a783fc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d85a2f15-06ff-4cd6-9d63-c91f2a3db993",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fad1625-865c-46bf-baab-f57839457028",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7067676-cc41-4ba5-a7a2-5adc0706d5ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcfc40a-f687-4d17-98d5-b55d2dd02a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe90c7a-d507-4592-8137-d21ad6ba3783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40557b4-7b50-4b07-9668-8d40c754b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69cefbb-7e1c-44d9-a707-5265a800f74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814b4500-d11f-4820-99ce-75b475e7b8ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b395a4-76f0-4060-ae09-18db70e02d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9995f4c-5da8-4a95-a16e-4116447817cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5170b1-bec8-44bf-b5d6-9edf270a60b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0032715-4ed8-4b40-bade-8926d6e9bd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55da5366-a205-40d1-9b74-77f257e926b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5c1606-f8f2-4c48-9c2f-e77fcc846915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbe5f8a-5708-4895-9a0c-c724abddd44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904e237b-d3f3-480e-9dd1-468581dee2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63fbf430-9a1b-4127-af41-67317c041bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc36dcd-9d2f-480d-b647-a0c1b48558a5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726d444-04b7-4fc4-be99-0b21c564fc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca4f5e2-56ce-4547-be49-b113e3acf898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a8734-f85c-4da9-8383-1454e1c312a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c545e90-dc1c-40a2-a433-49cc46add871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c40d8f-814d-4ae1-bb2c-47a18e6b4f7e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ef7654-48a7-4a56-a488-0699bc3700b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940fb622-f680-46e1-8eae-fcdec785acfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dedf08e-f190-4f9e-9894-15ab958d3131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33accf0-d200-4c5a-bf5c-705277e83e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e6645-0c84-424b-920a-81c3af62d718",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150bd77f-4c1d-4400-8cf7-08df8651edeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec75f5a-baf7-4f20-a661-aadab2ed7469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7931eac-a07d-4448-a0d6-dfdeb8c03b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33d0e388-b40d-40f8-af70-17845ef1be09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab95473-5ed0-422b-8804-1cf5b06c7dd6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59991e2-4e45-4c2e-8182-536516106f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e998532b-d3d8-4fb6-8fd3-6cf69de5113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331f0022-4efe-4934-b5de-e0098d3d4474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "029b8403-0e88-4f51-9bb3-98cf6aa37b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5410b6be-c58f-4eea-bcf7-dcb0e398d0b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7964e1d0-3820-4f2a-a270-d98a5cbeabd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59b5fab-1255-4f09-9a8b-070853b5f329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69cb1c3-6ad8-463e-b28b-713493a18657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6bc594-9fb6-4bfb-a0a7-2f578e9655e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c818633f-7ab2-4473-8559-3f136d7ca04f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947abf2d-e8b1-48b7-aa78-b6d0dbc95a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d69456-3689-425c-81ff-1589e6f10cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec351cfa-ded8-45c7-b7ed-63905c565877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50e05844-0aa3-4a55-bbd8-a544f3a79e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf1ba56-11d9-43f9-bf46-17e660fb9c7b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be39525-5b2f-40ba-ada9-0aaa26cec4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960188c0-5446-458e-9aae-3e0936bad88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cf88ea-7785-462f-8253-8df563b7b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "243794d0-6c4a-4688-a29b-4d242f40be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008e51d3-24c7-4378-b25c-7e97a160e277",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e62db47-971c-47c3-bb0a-1369f2b32463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7e5bff-c5e5-4c06-b602-9a7e996cb8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdec039-0361-4b5f-a9d8-45f17150ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6bb8ff-a39c-4311-b5ee-e67301a3170f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3dd25e-3710-4e44-a8a1-e270a9f63a29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c694641-ae7d-4569-adf3-a4eb5fdbcc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9703521-199d-417f-be56-2cc2481f6560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330760e-77ed-4d47-9aec-eb5a5acabb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97cb60a8-a9cc-41a9-845d-e53b9cd03101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9312fa8-7c04-40dd-a490-4b242568f45c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d029830f-4235-48b6-8c1f-3d07184909c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c0c162-7500-4582-b219-3b340edd1d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1072d-0391-498d-b282-d590ec50d788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cda396c-e0f3-4e52-8f06-6a1283962d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9c7dad-defb-49c0-a83e-7fce647e2c58",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a271fc5-7087-4ebb-9982-c6937bbe48ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbee02c-34cb-4413-b20e-dd0a911aff1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b465a036-1c44-47e6-9c51-13adc2261a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3654e575-93d1-44a6-bbff-e2e16b0d9575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd5695f-b8f8-4da0-aaa9-23e61dd5a89c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf5e2e5-716e-45d6-9d0c-92f76848c311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73150bd-bb03-48b8-90e7-c0b6e253ad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c69ce94-5225-405d-8eee-20511391f57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ade60ce-524f-440e-9ed3-6d3fa323a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dab23c-3939-435e-a748-52840dd489e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0966fff-e806-4fd4-9b8b-bc9a0c7ebc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a180b597-9cef-419c-bdce-7cf3058c6196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556e8806-ee46-4114-96ea-1c5541d4d128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27377077-3d51-457d-8e97-0e0076544103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df5bf75-7e16-4920-b2ab-86c954cacb1d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0029aa2f-be4a-4a34-b329-efa471a1d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4cb66f-8074-4b1e-b447-116cd3a982fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f0abe5-26cf-4eb5-906a-e98571a6608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8497ee3f-1632-42f6-a3d2-a9b9adc421eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68220fc-f3a3-4a90-b178-d4e555ea9f05",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4989675-0875-481e-a20c-1d6e0782677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b357815-5d9e-4797-bfc1-e16e2cb5fa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f300c1e-5525-4347-83fe-03a1c38e62ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de910d55-2acd-408e-bcd6-6bf2a7bc7bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dea916-de96-4a34-8a40-59a53de4a27a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bc7570-c696-46cb-b958-634f4408fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5925b403-35c1-4faa-aafe-a1d4c7bfd796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace00bf-3af9-4824-a885-036029b3080e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d689e3b1-9d55-4ee1-92b9-cb27f70529e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb22135-c72b-4b0f-8c2c-28824628fedf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855af23f-ad62-4ce0-bdb5-2d0190374cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88771811-963e-49ba-8195-82be7158333e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151aa2f-09c4-42b2-a501-11ecc26b8fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6bfac2-84a6-45f2-b84a-624522e947fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be741b73-fd0f-4a6e-af29-85e3100aefc7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85498dbd-f00b-49a2-b77a-d0561c804e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca0552f-b44d-49e1-bfcb-8dd7cdea2d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7ce942-a5e7-4fce-85ca-ca127ae7b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c4a38c-e9ff-4793-b122-d10a2fbaf3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20928c3e-c5cb-4a5a-a34a-485a7ed5fa93",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083092c0-1c3f-40e1-ac3f-2fa1c10309ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65afaad-020a-4235-8d86-17b9f4a5a35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71025be9-89ad-47d7-974f-7bbec9d6501e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5095f34-0a5b-4e55-8f6a-27800b801bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e99fc68-3038-4434-822f-eb882965179e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49235795-8c4b-418c-be98-20bc2a21586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e7498e-5f29-4889-bda4-056e17aef0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e6c68-3696-46bb-b55c-440258798a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51026b76-5213-4d7b-9d85-1d8a06a761cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3441fee4-4fde-4d86-81d7-00336bd25e0e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a11d4f-375a-4aae-83bc-7d8a5fdb6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f88e1b-9265-44e7-8c39-f7f0dfd70f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d9f7d6-bc91-4b16-8630-b408c1245540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeba236-0228-48ce-b222-ba3deeea5808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517bf6fd-e85d-49e6-a44c-fcd251061d52",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd19510d-2259-4859-aec8-249cfbda1912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4d504d-3359-4ed2-9416-eb0bc7788fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b104f94c-b78b-4724-bbbd-597a692b4ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "172926cf-2579-46f4-bcfb-8af11df7699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0331917c-fa44-4e65-9d54-e8f2b7f50d5d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9b5fc-af99-424d-9f9e-c770a1c089ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08f422e-7b8d-4b94-9ade-0246c4641a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7f8065-ae89-4825-a40a-f82f746685e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd346f6-3a29-4f52-a2bc-849134c1f4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a1154-2537-43ab-98dc-e372713fdeb9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c50e3-59d5-4867-9e54-8dfb052fb842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405ef7c9-4b7c-49bd-a48a-f058547d4efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5d66f-42f4-4d70-90c3-e79ad9206c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d43a2-5b5f-4b27-972b-5757297343b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a173ba7-55bf-41da-b53e-fd8b27a4996c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7cc41f-2571-4b6e-9713-f846f92c403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84689cf2-bfdd-44d5-901f-36f059e1b6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02fc9a6-1485-4e6b-9029-65e1b6a4cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81b07fa-2a71-41e0-9d4c-4972be66513c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b73d330-dd70-4cd5-a014-20ce3949bd0b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9610efe1-d55d-4ac1-a12f-7d5518dad35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba9f9f1-4a51-4ac0-a9f3-a104e2914d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa896fe-2124-4bbd-a8d4-e9d3a1f79b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d088c7-96b9-4c71-9f12-50d6e185311c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd164197-57dc-4dce-b234-ea70e974e7e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca50a2-7938-484a-9448-4740b3e2e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df618deb-a5d1-41bd-a0b4-b2e2ae9c34b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d93af9-43fc-4e15-8842-dc3a147a6da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0662a099-146c-4ae0-9c00-40dfac807040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603ba6c5-5838-4230-be0d-fb85bb0cf014",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ae53c-84c3-418f-b097-bbd1bfd332d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb54d2f-0e30-47f8-a2c4-bf7d24776694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba27538-a8cd-434e-8902-2616ac9931e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d44573c-2a53-4769-a986-797db3108e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89bdbd9-4cb8-41df-9613-884caca508a8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022004e-ff6e-4b2b-b08c-f7d91d0af8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e116e8d-9448-45c7-b269-37bf74a9493a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e35713-55d3-451a-9061-d14975c4c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c2f871-b89d-452b-97f2-62d4a5fbfe66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96df0047-2e4d-4bd9-9b51-d8e3f28df0f5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc157cd0-cadf-4213-8348-73460c2666c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767c97d5-ca02-461c-9cbc-f24fd5458a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e610a20-8a12-40b8-b6e8-24a4c33eb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc95d8b-b738-496b-be94-57450280ea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75d9de9-fcd9-4b4a-ab5b-232a5757c69a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c1104-2d68-4a09-ab9c-145e33ae1f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8557f685-9327-4308-a9f3-cd727e42f8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db397c8-227f-412a-b405-8d9260419f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908df607-b3af-48a5-8ad7-772983e205e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76903a0c-53f7-41c6-bf55-74a99b6083d9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974c8d51-733f-4374-bc57-8e6cbf71a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51071347-78c2-489d-b266-b9f2cfaff600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d09326d-2b74-4d01-8dc3-defe596d194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09f5110-2795-4852-aa39-e24652fd8b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00404c20-8788-4feb-9ef4-c993e02c8019",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd10b51-34b3-42e6-8e46-34cf7c8c103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f03689-da40-46e0-bacf-d27ca071562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb1a1b-b0e8-4370-8a99-651c540bc6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2c894d-e3a4-4544-971e-2ea010b8252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815b7ad0-7bed-4d4e-afb1-f405e6cf5631",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79be467-8524-4e25-8ee1-96a9842e6f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d77eb9-e7d2-49c8-beca-2ad525d6c738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce22168e-dfd3-42a5-b703-9c6927160b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3cd9a6-e4eb-4f6d-8a37-7075b6952a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb2bb38d-a39e-4f47-bade-9ae206ae3494",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04b2699a-8514-46db-9c35-04fdd54ae626",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14747b04-8f79-4473-9a1f-c3ed86147f48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79a85f21-c91f-44f7-bcc9-2a0d4f3dac1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26105f5-bc01-4f60-8078-ea9113f9f178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb7952c-16e0-44de-a338-c6eb837bd6a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86a1ca55-3db7-4904-b43e-a7b92afd2f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "113f5fe7-075a-4580-8d66-d66b865ca272"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad81ab99-cf38-45e4-a642-276965352944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e97b622-80fb-40b1-845e-94825ae828f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f9f3bcd-3352-491c-8732-922d60633b9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f9f4f71-d287-4567-a392-305680187fcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6661374-da2e-419a-a4b3-2b345d3fb34d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f632a24-53e1-4406-bf67-86de469debc5"
            }
          }
        ]
      },
      {
        "id": "3b153bc2-fc9e-40f8-8714-2944d58cb553",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "46559335-00fd-47aa-955e-503a5c99afed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fbd6a65-95ea-4fe2-a4d9-88b99ad78536",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea66fe22-d0a1-4a83-b4d7-f06338d4e112",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f52628-4fe6-4479-af67-d0e1ec19d6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c1f05-b7b4-49f4-a807-5519dc76bf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4182a6-e3a5-416e-9115-ecc6021f65c0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f1780-7bd1-4356-8665-397940cc27ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0076451b-bfde-4e8e-9d37-252da0d40c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8b05ff-71b2-4473-a249-c01b9ac00e03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782dc03-29ed-4394-be2f-2fcde68c40f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb41489a-fa72-4fb4-9dbe-fdb878681368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1038b5f-f521-487a-a4ca-8394b54545c8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db62f8a-fa13-4e33-b0dd-e0faca1989f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb6b45d-3b5c-4d43-9759-bfd1a0123517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d99e92c-0534-4694-9abc-a220ebc38e1b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d852b0-be5b-4ccb-99fa-680513098892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef955378-5264-466d-95eb-d1fba31dfcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e224e64d-0927-4702-8a00-cc68bf172c0a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8cbb1f-172c-49ec-93f4-f405eb2320fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb4284a-b6b3-4a3c-8be7-c2f4358e8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1367c2-c8a8-4156-ad09-66c830d7eb90",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e8a13c-e671-48b2-b3f8-bf4c5e274fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1d03ba-1f3b-436d-9390-868dda5d3fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4d7ea0-f8e5-4955-abd7-be4d7058bfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c480bbd-03dd-4d37-98c6-78055759186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60829912-fce5-4d28-8d75-8fd84dcad3b3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb13657-9d0d-4d9b-af5f-a05fd7d701a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258564d8-105b-4e2a-a868-498e7326d7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0c2208-96de-411d-a4af-852f5d4f6408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b20a91c-d6c3-4c20-8b12-ac4746df293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120d1b01-5302-4994-bde4-c446a44f1def",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731edbc2-4e5f-41be-bd2e-10a9f247b96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af9be2f-001b-44d8-b673-9b6f58412c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077b5d7-a30b-42cc-bc7a-2ee019c5f45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6c9392-5320-4f48-b491-a879977bd3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e006745-03fd-445e-bbd9-a606120ae636",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fc03c6-b926-41be-bd8c-776e437c1cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0997c0b8-f5c5-443e-b5f7-dd939f3cd082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64993126-0f1b-446c-8e5b-55125da6ca31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805d2446-8d86-44f4-8d3f-6a79d0027723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159be319-5d11-48b7-bf75-ed457c6fed78",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4ac7d4-8f93-4620-8e7b-7ff74c1ebbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97810e0-31c1-4b1f-ae0b-6ec74081aee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76f2618-49ed-4314-ae10-92985b10da44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e191299-3b04-4dda-aa1f-29eab879c13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f24013e-157c-484d-8b71-2f2c29959048",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4752ddcf-a8ec-473b-aaed-e345ed2eec23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c135e9a0-e76c-4a7a-bd48-9a110bdd485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44cbc71-a7ef-4f12-983b-adf2d23a3a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bbb8ab-bb61-4d79-bd4c-4991e9fab26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd3b78d-8ce9-4949-806d-fc8519f223b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b49c3-6007-4ebe-9518-2ebbfd3419a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11beba58-1545-4f43-8464-50f85252ff5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0d5085-25d9-4600-ad54-c2a83b5e5485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcae5dd-f827-4945-8b7c-6a128e372449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a8d32-494d-4a9a-b970-d6996e911427",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7fd24f-043f-4bc0-92c7-122c2490be3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a92abb9-7385-4eef-88ae-95348bcb2c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee2806e-616c-4900-be7e-38566a2fee69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65a5456-91b9-415d-bc14-f6791cca813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54745b8c-46e9-4dca-8521-bd169eab5008",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151feb8e-c012-4b4b-ad41-f22c7960d90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab37ccf0-253b-4cfb-a760-ad36e4ad5f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3bfedd-cbe6-479a-adf5-1f50e9662978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60d867d-4707-41d2-a1ff-085bdef89d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f335d00-30de-4fdd-9758-f7ffeafedd0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b9a6b-aef9-4ca2-8739-4b627e282f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c966da1e-78a5-4b97-8bcd-c2adfb66ff18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fb35f5-1d29-4ef7-a2b4-988e7ba736d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87dc3247-bf7b-43f8-9ab3-7647a1af727e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0604be-63d4-4309-89e4-b673af4b7616",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e0b66-fc7d-4802-afec-adcd803af7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067f7792-5d51-4398-80ab-b7223377145a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbc669-7dde-45a9-b31c-76b7ff7f51f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca53debb-2261-4cc9-99ab-e8945d8a2f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d293b6b8-bcfe-42ef-8d7e-4f7d4d26cb5f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac62e485-29ef-4fc0-b7fe-93b2f817941e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0889a7-8b78-4298-ac19-d8a19906a568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a40901-ea97-4a9b-94b8-96630deeb050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ac45bd-4604-4dde-8018-3368a3cff75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a114a13-d492-415b-a181-6f8b703b9d4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac72902-b0a2-474d-a17b-a2f18bc16f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a58e94f-faff-47ae-8bc4-e4064a7dda4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b404e4a-2b6e-4e8d-a773-0f4faef5ba4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44728d6f-834a-4e7b-858e-bbea4507d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fbdcc6-c237-4a8c-8e55-d7c14b91517e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17397f77-e4dc-4cf6-b1be-78cb1eaf7324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712c31d2-9a58-4a48-81ce-89ada20d25e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09791232-2241-4b72-91b2-942c78cc24a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34567491-604c-449f-bd3f-271fffc9c753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63259f65-70e8-41af-aff8-ce2d8587f2d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd513b4b-8fa5-4a03-935c-83f4825cf376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072c62b8-2eae-4fa4-bd60-e9c03df37b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180cc7a7-9fd8-46d5-bb1b-d7c13832f2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc2031e-2578-46a3-b190-66fcc22aea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467549b0-f3d5-4cf3-a344-1f19772dbdf9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4b4569-45ef-491e-aedd-dc5425d8d6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f147f9-6756-4470-85cd-679c09344cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d98018-df12-4cc9-9a60-cadd11f00042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70461c0c-529d-4079-ab29-625ee7779784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9c9b96-83ec-44c3-8ce4-c43add97f480",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760a6f9d-ed54-4834-89f6-98c9ab2931d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cfe6de-565e-4d84-ae1e-18802d987590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58d9377-cc3e-4d98-a9ed-8b3e293ae9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d54f534-1563-4adc-b815-787e96f78665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a60bb2-b949-4cf7-940d-781677cf6089",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eaee30-dddd-49bf-9cc7-01c9c292655f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd58fa11-cd3e-4ee2-acd5-374caa023fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f54e897-dac3-4d2c-921c-7198a88feb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea6a4de-b539-4fab-852d-8f79ff6a9a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc42a1-7a13-4f37-b9ce-108d2ebc5ada",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd4122d-b3c0-40e0-9f8c-5d569dd24840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c07c243-872b-40c2-9bc6-75fb94cc4780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55be71d2-195a-4ade-8a52-e60c43f4c7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a319e8-7a37-4574-83d5-af21ee4c74ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20dad5-52d8-445c-be42-39ce51af48f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f18ac33-7aac-427b-ac2c-ded8c5ea32b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8dd9c9d-0dcd-45ad-ba74-e7e61164509e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d35cff-9e2c-4b01-9e56-a94eeac02bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86632b7c-2f45-4152-af40-37e250a3d619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa52a7b5-c890-4f20-a737-c1ecdc873744",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62537ae-8c75-4c9c-841c-5d53f410e546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d18d96-dbd5-49e9-8cdf-13b4473f00dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5ed5f1-591b-457b-9b8c-a4e101c60e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d59428e-ffab-47b5-90de-ae0bd28ffe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94491435-5c5c-4a2f-a94b-d7c8ba155f9e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89304c8-9eac-4d7f-9c50-69f30a005106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09252bc2-a4ed-46d2-8d69-7087b4a191f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e3f1d-229b-40d2-bf67-e048fd7861ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6a0541-b2ea-4518-90af-12f59ff17e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd28c04b-10ab-4898-b413-725ce0d240d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ed2869-c816-473d-87db-dd5ebde702c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718ececf-01a4-42ce-9acc-fdf28e9b1fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7fb4d9-a2ca-44c5-8471-442f048ea8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24e4450-4c58-4a0b-b6a5-9194a50658b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f90524-d6a2-40ba-9f63-70ca3c236d26",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de9bd5-2289-4d56-9e6d-3b818c66436d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60fc9e7-0ef7-44c9-8a20-bd000e23adba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f55e669-eab6-46a5-bf45-57b4cb795fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e04a52c-6a00-42c2-834e-e13826e2346b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b226736f-c4ae-4957-be63-0301e8215612",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea475211-c599-46c0-9086-2666cd4b4926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd048ff5-34d1-4593-a30e-df75b2662c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0eefa8-3259-49b0-83df-380af22c5325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf3f209-9539-4729-8ba0-73e1fe5527c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e4a037-b795-49a7-8de1-d31446598aad",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14daad51-0b33-49f2-a0bf-e30067b2a96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b297703-517f-4300-b3a6-626b96d575c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1a46a-59a4-4ef2-8ffc-228e53c6ab2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d5386c-2e34-4eef-b32b-d870a950bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bdb6fa-e912-4968-b847-0f5c5b0f0c7d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c52e67-3eb4-4f47-909c-649418560b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41175f18-4f28-44ff-aa32-0df308f02050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d0fa4b-7111-4aed-9056-392d1beb1b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf46fdb-5318-4da3-9941-dc22e89cfb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bb6286-59c0-4ae7-8f8c-aa8133c5166e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dafa523-4f4f-49b7-9a4a-c143f676fb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9873d0bc-1891-43c8-a92f-9fd816bd0c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851fb1fe-16f1-40eb-b845-bf70158bf8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d43d411-9920-49ec-921c-a702c41f0a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea1a9fa-0b9a-41c2-adfb-299efe2ad14b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d4ff99-9923-4234-a316-ebf296cb3fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac299837-d2da-40f2-8c3d-93db09eeef3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577fc44a-8b17-40d1-b29b-c725a5ed72ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af240408-e0d5-4a44-a998-e1b2f6486603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec859a1-34e7-4003-b6cc-fd894c3b7237",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ef7cdf-78bf-46df-a356-59d56f349951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aca8c72-5dc3-4cfb-bc33-aa6ce4a6c9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bf5df5-6be2-403e-b5b3-184306f0237c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf75f11-6081-4a25-b098-7170383af3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f1a84b-6f13-4128-b4c4-e46dc1bcb868",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12003235-9d72-4ca5-8e3b-93f42848e1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49437fb2-af05-493a-b9ad-9261cf12cc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ead3f7-a002-4614-b76c-c381ecce6660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e274230-d4ab-44cb-8773-2a572a3120b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191b3098-90b4-43e5-88f9-79cf118b92f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a554da1c-c5c1-44fc-adbc-4f9220356b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7492b624-d59d-4501-b305-ae63f1f7179f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3827feb-47b1-4119-9402-d78c43dcb8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02bfd84-b6fd-4793-b392-12a74f20a536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215eea28-b0ae-498b-8a00-ec64d708d5a7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e55c9b1-9c73-4060-9201-f81d5892ff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd5f5a4-aff3-482f-a61c-1384ae345e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8467748a-d32c-4a48-94fe-03675b866523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16528671-eb24-40a8-93a1-ad0849cb115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f6e90-eac9-4398-8dca-e23fc599beb3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6501a3f-14f2-41f0-9646-badf9aa4a110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559b08ee-f057-4ab2-8794-f9c29250a63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac9dc3f-67a1-46f4-8bf4-2922baab25ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5d9c6b-8770-46d1-8735-39022607cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367569aa-68fd-4a4a-9f61-02cf56cce501",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a04b3fe-3a83-4e26-ad87-b354fff2d2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082ad047-821a-47db-b5e5-7046b45c0e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf66bbe-26e0-4285-88a0-b0f7414cb136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc25612-aedf-4a39-a0a0-d91053e2db5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2342cff5-2b11-430b-9779-235c0a995428",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a89707-a3d5-49c2-a5c1-05bcfece4b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946a5c9d-9257-4558-9439-c5b3657a98ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc690d2-d64c-4791-a814-a042b8923c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03df8614-f6be-44a8-aee2-e3904878f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e85c8-dada-4fb5-b30c-ab55bcf91164",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c9a321-23e1-45b8-bff1-72be970a5e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f05467-f5fb-45b4-9d90-8af3fc01a110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f2e1a7-ce05-4647-8d5b-840ae2ed2db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4c4fd5-2857-4dab-a5f2-64e2a1d3f577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f57190-3eb4-4112-8a7b-cc32334d10fb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe5eb4-2aa9-46c9-b0a6-8f8b0361c97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cebb6e-7c4e-4058-87e5-646aca788923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b526eac-cb9b-4f10-b267-9c32972677ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0304f57-31c0-4636-8053-839f120162ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb6ee7-abb2-4c2a-a642-58620aa284f1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4151af05-bcfe-41cb-9a24-e2b8c1302171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac955be9-a8ca-4baa-a70b-213739c1ceeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd16c73-8ee4-4f62-8093-4df47fb27ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d920ff-881c-415a-9bde-751dc6f72873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37628a81-6625-422b-96b4-024d3ba873e9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e3f816-e57d-4d3c-af4c-298f30d95ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0996423b-56ab-4be0-ba4f-6b21e54ae19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ececa0c1-8828-4ace-9779-014dd27e01fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4662a03f-4288-4f60-b4b3-98654587a6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c7d43-7447-4a1c-8ab9-9d12b23e2a75",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f804549d-8fd5-46c5-84a7-2e85b29259f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e943c778-43d0-4e56-a7d6-21d300b9c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba96a9c-ad83-4a79-9e33-455285d342a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d84ad85-3751-44f9-9530-f811f43f10df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504144df-c94f-4264-9e75-430bebf9322e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb268004-dfc9-42e1-b621-a4ec921c98e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9549e30-35ec-49b7-a69b-c7cfa4cbcbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb584b3-800c-4fe1-a340-9f85655c3c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44183fb-d0ab-4f58-9280-9bf9714713cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98876c4-8a6d-4e07-a307-c003f2a884a0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404e6c97-a0b3-4a3e-a9d8-cded4a757749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c32ec1-df70-4f4d-8647-84d2e374a868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5ab48d-1e4e-4cf2-b6ac-9904eebeb215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f57a10-5c90-4a52-957a-6923e2529a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defd30e4-4332-4ee3-9234-4a3ed7e8013d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebcd547-922d-4cb1-af8b-566a83a90e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca4828f-d76e-4585-b66f-cfa6850bf01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25af47b3-9c13-4941-ae21-9e959c769591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3bb9a6-e4ab-4b5a-bee0-b8b9eeb9e750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440fea2d-bf81-418e-bcd3-dd6a28e02bf9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820d64c4-bf20-47fb-acca-f58e14879978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e50c6d7-722e-4f15-9211-b6b0835defb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99d6311-6be6-4002-8757-a0de563a42d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77df813f-4eb7-4a77-b52a-bb2c1f9e0b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b7ac3f-7bf2-4099-ad30-1743f6a0a561",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fcef72-bfd5-49cc-9dd9-a9ac6603788d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ce0b1f-6141-4ecd-8253-287ffe2b4d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93f8bf7-91ec-4c82-8014-0dcdc0152cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57be1e6-3e78-4f6d-bb51-27e8866d93a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323e17ed-05b6-483d-a7ab-2790e0963fdc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3bdcc1-0f32-41d1-b02c-c2c01c601d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc715791-e753-48a7-b9bd-92f5ce024cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893edaf9-2edc-4008-af07-d89c79648747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0780292b-3550-4cb7-9689-d50b5500f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ad79ec-0500-4a3d-846e-84babf61c3ce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812f8730-3fc8-42af-9b66-f233eb7559fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c679cfc2-1460-439d-bb09-799d05b18645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72cf348-6808-4712-b6be-36325d2a1583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39df987-f5b4-4eef-afa4-9145c68b8d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c382b63-6092-4c0d-b06c-e2ee7aa0a9fc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85efc323-71b5-4fde-af1b-3bda61b6571d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d460245-c7c9-4e17-9ff2-19b66aeda298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31573c2-ab7d-4b9a-9f87-405a16f736c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89f6fb4-8d84-44ad-bc06-9c653f0357dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e039b44a-52ca-4c3e-84bd-872786405aa6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a06598b-91e8-4f03-ae71-c9b3f31d3cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed90448-8389-4e4c-b99a-27245f70515d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b1486b-23e3-47b4-845e-8c08013dffb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e65abf-91a1-4a7a-a914-643dd928506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c5e765-c2a6-49ab-8ae0-3e4239dff357",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1765edb2-02c0-4d8d-9d4f-13d6599f9596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedfd448-5dc6-4eb8-bfcd-c90f566fdea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e88e9-c7bc-4c24-8bab-f3f05b85cb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b2811-fb18-40e3-96b6-6a758a4033dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56a15a-6695-4a8f-a083-6e4ea50d0a7d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5c3994-e15e-4ffa-b0c9-b8304f87bb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3187db-1378-4072-952c-e2298c1770f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a007e0-063e-41d3-a7f6-649331c913ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8223601d-58c4-4329-867c-a51e72388977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28478a69-7cc3-4d6b-8a9e-53bf0248010e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca4c6a9-9b8a-4758-af24-4de3f9397146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1791d73c-c57e-43ac-bffa-12e025f55538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcfd5d1-c51f-4580-9ff5-030a242d6a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a663c3ad-2e6e-468f-bb56-dc3c2d5beef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a59bd8-71da-4027-a3f6-f7e365b25f8d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bc3115-bd39-4682-a0b6-30ee02968ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478a3345-146b-4d8b-bfcc-9544bdb7b7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16da746-8a2e-4c0a-a1a7-a95d0049f34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a982465-dadc-4245-b25c-7e88a143047f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b30a57-61e0-4a0d-90dd-360af49eda47",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25f99ed-cbda-43e0-b655-cdb0b913ecb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7cb98d-1ccb-4f13-adbb-283e0922593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edbc73c-8fee-4c8b-a57d-7429c8ef7149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07febe3f-b1dc-4e10-aaa6-b7b9c3a6efc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74f1bc0-4eae-46c9-a07d-715de866561e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b5206-f6f5-4345-8be3-c9e4103caa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044c9e73-4fc3-469b-897b-197a4e9dc30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf6f8d3-e544-40c3-9597-780982224305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d4f57b-3826-43ae-a14c-2efa9faa07f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ce11ff-1584-42a0-b286-05f8943a8898",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd313ed-c6b2-49b8-b408-9f9101396418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c19339-40de-4024-9151-406c8698133b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89580ce7-d264-44ec-bb98-2f7f2c5a1a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7280814-40d2-4460-a4ea-d0e5803a86fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266b5b95-512a-4da3-bd4b-95b4b96d4654",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a227474-ea2e-401d-8e58-a0a2d1154639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485338d0-8b33-4638-802f-6e0febde4bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ac142c-2fd6-4417-820f-7fd340499900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0e5241-f98c-4a6e-b83f-7711f86b3626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e535094-0166-47de-b6b6-a8ea446a9573",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930d9d38-f3dd-4359-8aee-94e38c2775f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8e200c-e01e-4412-b7dd-ff0baba70339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd89c77a-f2c6-4d21-9b24-34b6afa38bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8fd50b-5d13-48da-9c3a-d47db2e5b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35653ee2-d510-4f8f-8dad-b164ccb1e610",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43fe02a-22b1-411d-bec4-f6a22a72c486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86151c27-d512-4a6c-a426-90bc99981a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212764b1-2f07-41d8-a9cd-3071faf2fc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21937ff3-add6-40ad-a2e4-79aeaecf9f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002bc91-ca53-4127-b0b3-b12a5997def7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85567b9f-5f96-4aa5-bf00-cffab968c522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09e752a-8c93-455a-b4da-2d6a30a0b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db3498b-ee66-4eeb-91a9-a364ad1c140f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21d96b1-ea40-4fad-851c-310e818cdc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd502360-8e09-4743-aaf9-17b76f9bf0db",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e6c7c3-438d-4c0f-a036-a8995a91b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fbbacc-508b-42a8-ae12-e4a19da4f229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea8bb0-99f9-48bf-8bb3-52eb7011a62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59754bbb-c375-424d-9da2-d8fc714f2068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15147d01-f604-4754-84cf-8d8dc87cdc02",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079d04c7-c58c-4c74-b09b-77cf18e6ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8251d7-379e-40c5-860d-a5d6cf50f961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c591599-29ae-4b03-b49e-f9c23c052a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b566228b-7f99-49f7-b196-043bf25d4eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83f9a25-ea18-4539-842c-2ccc7c7caef9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a8f8b-6089-4ec9-91d3-621cb19ce855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31ac745-1d49-4db3-963d-9f36269f64ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c52fa-3ee9-4018-b16c-593b4b70f88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854b88a1-e60f-4433-a57d-0dcfe3c2fc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a987dc31-a472-4fcd-9394-696c81cf559e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a03fd8b-19b3-42c0-8200-133c92f7ac82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af79e5e8-8380-4320-9ca2-4ca967a2cc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37558ebb-7c22-4c96-94b3-38f3563e1f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de05151e-6cce-459b-881b-281d565d3c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add6f749-59f9-45dd-a91c-1ff5f2660534",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c25916-48bf-4c9b-b4b2-7d5af3960b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079173a0-0c48-4cc6-8e18-ca9db1416d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccf7396-d3c4-4390-8d70-9df79e4a7643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858d7a0a-0f02-4562-b0cd-790ac255af08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7ac557-318a-4a64-b683-3e67d7654ce0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf084be1-4469-4258-a0d0-888e7de620de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008b5679-e13e-4d55-94b9-b280d7c215a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c5740-8e6c-4355-a1b6-ce4bde5e8e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee74d521-6acf-4c99-80ea-50217da3a215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e7fe3d-48cc-4762-8c3f-b3d8fdaddec4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ee6f66-db16-469f-97ab-35907270cd91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c011953-efa0-412d-b334-6cb2db9f2ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95df92d5-0508-46a6-931c-f5cf7c320d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9169d07-6b7b-407e-91ba-1f3f5ab0a83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8165be1-b5d3-42a9-8a25-73beadc610d8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d8b8f8-2207-4cc9-aaa4-434a073bcc74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1563f8-c494-4050-85b7-7c2493a397c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e5659-1ebb-4b1e-b171-8bc36087c16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89223f0a-870c-44af-a965-a8a4838a5ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a82aee-efce-4ef4-8723-e690416c2d57",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636b78ff-a1ef-41a6-a015-d369c74e75c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49861fb-b496-464d-b894-09c2626ebb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce9f321-c22a-4a92-a8ab-990d495f2283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0be172-550e-47dd-a71a-365dc5024429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e817503c-e048-42f4-95db-d2f3e5427526",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4b678d-1a9e-47ed-af5c-fcdf63d4a24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d5eeb8-1b31-4866-8b27-4af21be6638a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9348b2-9a21-4934-aae1-0c9300f4dff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a91002-c113-499a-90d2-cd71c89dd92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2391fb41-0e6b-45eb-9f30-d433107d014f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d279119-573a-45d7-a67f-9586c3daec6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7b39d5-759d-441d-94e5-049d4d8ffa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ab569a-79af-478b-b57d-b2e0af5b1b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40d18de-c518-4d2b-a276-21a2dd102a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27621726-aebd-4264-8d04-d160d2fc5313",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0341a56-0220-4ae0-9f28-0df6c371485b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f1a1bd-0382-44fb-ae6f-b5ba168f8984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a890eb54-71c5-40fe-9524-dfd8392dca41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4faeaf-83e5-468f-8a9e-42c3bf9aa153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95c6149-ba8c-4a18-ac15-a295a92efef9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79c6b9-841b-4109-a943-5545a232fd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f809457-eeab-40d2-bf41-72a31201fcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c556bad8-85bc-4b49-bba6-0be4933a32fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e583435d-73dc-4702-b9f9-64fbddec347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6b783-3681-4ecb-a770-052da30b8d85",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824ebcdc-870e-4060-b7f9-fe817dd6335b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1133c673-8cc6-4321-af2a-912e06f9ae41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32316a5a-0f2e-4f89-9093-57b70ec79379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c62f799-ac2d-4df5-99e9-ccfc4ef8f912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca1e679-1fba-4862-80b7-57accb640593",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac05a67-a28f-46d0-bc36-019159efb220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e58e5c6b-9fc2-4fe8-8357-5194d1af2d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890b9522-f53c-4936-82ff-68a07684af7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e307584e-3c6a-415b-8c1f-3c2f88eb5804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccd117d-6f60-480b-9079-6680761655c2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e044050b-c8c4-43c3-b0c6-f28a0584168e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2d591c-6a81-4e07-9534-9c9b9389046f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e612f907-9a78-451e-b3b0-4de966330391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6293724-e5e9-43e7-b62a-0fcff8aa81c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e7eb70-533b-4731-8acc-730fb7b6249a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8580d7f-5dd6-45c9-870a-9359cf299fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cc9452-de63-4dfa-bd45-e37dff0a85be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21849102-17c4-4435-8391-da50b0366ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db86ae2b-b4c6-4aa0-8c9b-07480dec94d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c138bbdc-8d9d-4ae4-b37e-a14a151996d4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86b297b-84f3-414a-8683-a8081348199d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d48f464-3231-4bc0-beaa-fed265444f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fc5673-23f1-4e35-9778-5f554278aa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df47e45-16db-420f-94f7-4dd4a3eea6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5989da11-2c89-4508-86a3-4efbc79d8867",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6ead36-ffcd-4fea-94ae-87f55b79f342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc25b3a-b796-4e01-afbc-11a3c3942276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2d5e98-76e8-4d3e-9657-0524ddedf9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1cd370-d86a-46e7-bd38-2a2507933686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087e7a2e-aae8-4860-b770-cc9c014c6d82",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de3f162-36da-4b2c-9c65-2d6d475c0725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f45efd-03ea-4ea3-a27c-d98840cda688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21807a60-2cf0-4542-9138-00b036090614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b252449-190f-47ab-b168-3865ac5e10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2458b214-27cc-4858-a52f-325072ebd1de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d221f-13b4-44a6-8274-ca2a5643687e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce03dfb5-2c44-40b8-9e80-d9e0ebcea5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b8c67-7cc0-48b1-9889-a587061a0f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b87750-d039-44b4-ab9f-8ef76aa9ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b8463-bf4d-4d7c-9d59-282f1692ccc4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14742cfb-2c64-4937-97ae-a7097edf8a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f39065-ef50-4ae1-94b9-38aa25488ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985cc40-c958-49a8-a2ed-981cc4adb4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3ec970-1e99-449a-9ae6-7a93c295fea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f55c649-970c-4c15-9534-68141a79f84f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bc0f54-83a0-4cb7-bf14-b98ea01b2276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f618a9-a3e2-41ce-a433-d481873b1397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e72eed9-8dda-4e54-a14e-327c6da3f6f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fbb29d-a73d-4f43-b691-1b4bcb59da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200beca4-9782-4515-bc0d-cef9b99178a1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36df41e-5e80-41f6-b58a-c4d7ba1986a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc1c4ed-d76b-4d0c-a4d4-e2011bc3ce0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60699c54-872f-4853-97f4-555d71c58573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c45b6a-069e-44da-a7f3-af675730aa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4fe0e3-967b-4753-9b3d-1987ad65df4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d223292a-3018-4287-a153-1725fedeadd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0cb9094-84fd-46c7-b7b2-c66400aec831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bba6a16-f400-4369-978a-94718979f9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6d8a50-0c20-495e-a80a-952a56061707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea86a96-373e-46e8-ae12-7993df217980",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc895b7-afe9-463b-9e07-834f9f8d6603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f14467c-06c6-4091-bbfe-55d32e9460b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94f3010-31af-4c00-85bc-c189c046703e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405f6fa1-aee8-45bd-b4e9-7651ab1da262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fab6a33-62e9-4a13-aab4-3ea96cdddd17",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80786d69-9ac6-4cb5-b2ef-cd5630e092f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334e7c5b-4ccd-4207-abcb-87ace2855b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64115384-1a2e-4721-b749-51667b90728c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c04e03-b653-4010-99da-e40b3ae9b5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedf7e42-39d7-4532-8811-8dbba5aa89db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13206258-4c31-40a1-a15a-643a0543b1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67f2879-c0a8-4fcb-8f0e-f7a939c50034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d05a1a-9322-48cb-992b-d2a257b82d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10995418-a989-48f2-9ce3-ba1c3949a63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f9fd3-3ee0-4db4-b4de-f864eedda783",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1795b347-3092-4c1f-aebf-decac6c2d6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e63e9fd-aae8-41aa-983a-c00ff3f9ddbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051c106a-5a85-4f0f-afe3-7ba774ce361a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ac4cf-fa80-4e44-b316-62ad6114449e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b14361-8de7-48fd-8b1d-53c177a21221",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92061cee-53fa-4594-986d-cb84cd14abaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5091bc5c-bd81-4cb1-af6a-6e77caf2d10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751526f-d9d4-4d10-be9f-5f23e90f8fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489f0b02-0bc8-4c98-8495-3248cf047a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3ee8ac-958e-463d-861b-3cb868233198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c328c05f-8b28-4cf9-964d-f513868165fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35361d50-6d3b-465d-a708-8287666d7c2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e38ceaf-d982-4421-b8dd-ddb3938fa958"
                    }
                  }
                ]
              },
              {
                "id": "804fd2b4-b581-4f67-aeb4-f6ccd3e3a6c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34519419-8253-41c8-a6a6-ec3ad8559b41",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e8a88-c23e-4e89-9811-c20cb11fc61f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8d0559f-1b5c-4c41-8648-647ccb57e312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d061c6a6-0ff6-426f-be6d-a8d3a06db04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5d00dd4-fe77-40d0-b6e1-ce611902291f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88feccaf-8596-44d0-9d3e-5e697db75d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "424981d2-a24e-42cb-b230-adbfc862b471"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dac89d4d-dcad-43b8-afa6-ab52813b1ff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71d9e181-14fe-4ed0-ac0d-75813afa0de4"
                    }
                  }
                ]
              },
              {
                "id": "f2a860ae-250b-4557-a1c4-3722f808c10d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e0f3eeb5-2257-4cd6-b8a1-8bab0049d227",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721d1b39-9793-4417-94b1-ad8fb8ac5d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4807170a-5393-4d2e-8ad5-98cbdaa8a63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d469b4-763a-4429-be9a-6f4aaab81952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5344df7d-01dd-4cd1-a987-952d1e4a6ce8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca6474a0-a1e4-46b7-b6f5-985c25eb8ab9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "024dfaea-a2a1-4eba-a31a-0e365c12f92c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b122b62-b500-46eb-a731-a6d1114ae382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "898aebad-3e20-4a02-bac4-f7e5c5a77464"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb36e8fe-7fbb-4c09-8100-7331bd975c4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3372f5d-55be-4942-adab-b1b84871f655"
                    }
                  }
                ]
              },
              {
                "id": "e7e67c6d-ccee-4686-bd7f-59ef2f679817",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "271b758c-7135-49c1-933c-d5f27efb3436",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1e2dbdc-f23a-4054-a911-6c873fc04d86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ebaf5ee-135a-4fd6-9760-6d5ec423dbee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a25fdfb-6484-4828-aea3-a4661a145a57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1be67917-99f6-4461-b084-6396a88b3393",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b09b23ed-c5d7-4923-a7fa-3aadadbc2d2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21ca4aae-8d5e-4087-8945-68bae0d8509d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b910e00-189a-4c9e-ad08-4ea8e4d21f1c"
            }
          }
        ]
      },
      {
        "id": "320c27b1-fc3e-4022-b894-f9177fb8685c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ba8bb7dc-b826-4b59-99f5-639c630b4810",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d96bd003-561c-44d9-9b94-6d9e9730e55f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1187ffda-c0c5-4835-a7fd-2379635de3a0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53b30ab-36bf-40d6-a249-3fa20824895f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8381147d-dc02-4c38-bd53-06bddb4fb936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a6d78-fdab-415c-82d5-bb3b0a783ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da968134-29a1-4309-8373-ada2a61e5c92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089d2ff8-bb7e-4582-931b-9c92ab5d1b53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "105a8be1-3d25-4b82-b8b0-545f2eff5782"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e5be71-a656-4999-9690-96d28c8f455d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f67e5f0f-a4c6-4755-9c5b-517eca634c7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "375efc73-b1d1-4f3b-b0c6-6b5498aff91a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47d6336c-bf18-4d11-bcb7-7f81127bf358"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cac27a07-59ad-4624-9800-884c37e98e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62fb781f-b3dd-4213-9628-08ea1e124dc2"
            }
          }
        ]
      },
      {
        "id": "ece4f2fe-7f0e-49d9-94df-eaed7be49113",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "322d9a3f-d7a5-4360-850b-ac3519770966",
            "name": "Negative Testing",
            "item": [
              {
                "id": "230e30b9-c864-4810-8fbe-d22da38e760e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a121ff1-07d8-444c-90af-2fd6f59d285c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aed383-5284-4ae5-92a5-a1b8f6eabd2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec242032-41a1-430b-b928-23244227978d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69d376b-f552-4412-97fd-9f9bb7779d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac37a6f3-3cb4-461b-bed8-cc843d7cb83a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089da56c-0544-420f-b03e-a97f062b4028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b3c743-42a8-4767-aaf9-93b902a1b073"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "540653e7-2ece-4598-bc0a-f67082fee94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20359d22-5d74-4133-b6c3-77f5b68c11a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c69c11c-3699-4db1-894c-7390ddea8dc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1d73dc0-5b24-4838-913f-543c64ca3765"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acad0306-57fb-4b1c-b6dd-b8a168588e53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69fcc214-c509-43c1-a960-e5a1909745ea"
            }
          }
        ]
      },
      {
        "id": "a00d62a4-b253-4707-b967-061ae62ab73e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4373b302-231f-4cb3-af2c-305a70a1a2a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3334dd2-b24f-41b3-9296-c6e6e9e73314",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7474ccf-1f23-4201-b248-3bca36c782e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1ec732-131d-4290-94e8-0a5b8a44c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e0d6165-1015-49e1-948d-8104381382d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4154559-710b-4c38-a426-040f933e9ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bf052cd-6d38-4582-a008-4329472d5896"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "164b537a-d854-4a96-8bdb-5401f19d58b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "450d7263-14aa-4251-8a09-f3db56a5b43f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e613fe-417f-464b-b8ae-fc5c2f7a1485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d153013-fb6b-41a4-9b84-b4436fa1248d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a64212c-49f1-4966-8c1f-b396bf90380b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63fff569-6df4-4164-a4ac-c81fc175bcd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07bae3dd-bdf5-41c2-b5eb-24dc44d502b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df11b33a-7396-4d65-8c99-68c377c72874"
            }
          }
        ]
      },
      {
        "id": "0f117b70-3b91-4e80-8ea3-c5aaf919258d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d7c7dad-fb47-4991-a1d0-8d0e5cc96228",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34410dcc-300d-4d11-a101-ffac2822cd4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb975a12-0efe-4e81-a719-2fe6c03d21b4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c96dfafb-c65d-4b63-96f7-061c07b1594d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a76f215-75f8-485a-8740-df46a2e0c585",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 126.59126984126992,
      "responseMin": 11,
      "responseMax": 11726,
      "responseSd": 777.1835315225194,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726274554652,
      "completed": 1726274594883
    },
    "executions": [
      {
        "id": "04b1fd17-2231-4ce0-b610-84a24baf1d7d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c4fa5492-1b97-40a2-818a-ea7834866b15",
          "httpRequestId": "d305af89-3244-4d21-830a-7df96ed2ce4d"
        },
        "item": {
          "id": "04b1fd17-2231-4ce0-b610-84a24baf1d7d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c3dc6f99-06c3-430b-b4a3-fa049cdc01dc",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "7e6ab3f0-76b5-4a3f-8108-c31e0c8934e5",
        "cursor": {
          "ref": "08427312-7d12-4867-a49b-0150500b11fd",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "58f32d27-0dfe-4747-86fe-ec986b22e9b4"
        },
        "item": {
          "id": "7e6ab3f0-76b5-4a3f-8108-c31e0c8934e5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e96260c9-cbf5-4b5c-8f1d-709d094ef0e5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "6be985ba-76f6-4ad2-8fb5-f815f4747576",
        "cursor": {
          "ref": "a566867a-0366-48bb-94b6-7d42c7479b21",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "22771923-45eb-4730-9cab-a6c7d90c1f0a"
        },
        "item": {
          "id": "6be985ba-76f6-4ad2-8fb5-f815f4747576",
          "name": "did_json"
        },
        "response": {
          "id": "622c953a-396e-4837-ab57-981d4bad3d32",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6b8cc4-b9e3-4f59-ba5c-eb77d0316ad0",
        "cursor": {
          "ref": "e62c39f4-4387-4604-8a98-782a164c53b3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d1e0ec9-9a49-4364-a4e3-a2eedc0d5fcf"
        },
        "item": {
          "id": "4c6b8cc4-b9e3-4f59-ba5c-eb77d0316ad0",
          "name": "did:invalid"
        },
        "response": {
          "id": "893acf9b-3bc9-4c57-96a6-a83797652cb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 610,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6b8cc4-b9e3-4f59-ba5c-eb77d0316ad0",
        "cursor": {
          "ref": "e62c39f4-4387-4604-8a98-782a164c53b3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d1e0ec9-9a49-4364-a4e3-a2eedc0d5fcf"
        },
        "item": {
          "id": "4c6b8cc4-b9e3-4f59-ba5c-eb77d0316ad0",
          "name": "did:invalid"
        },
        "response": {
          "id": "893acf9b-3bc9-4c57-96a6-a83797652cb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 610,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ae6fc-4b30-46d2-9fd9-be23024e2f4b",
        "cursor": {
          "ref": "90a24498-6cc2-40f5-9a61-6e075636d6c2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e8751c45-036a-4310-aecb-c776ba9b2a47"
        },
        "item": {
          "id": "572ae6fc-4b30-46d2-9fd9-be23024e2f4b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "feac1a5b-7f28-4cbf-98b1-e42ac5fd2826",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19749e1-7699-4b1e-a8ec-293b13674d28",
        "cursor": {
          "ref": "6fd1bcc6-1ca0-4d54-a0a9-0ddab3b7172b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "829ac67e-edbd-4b85-9d6d-f07f933c0002"
        },
        "item": {
          "id": "d19749e1-7699-4b1e-a8ec-293b13674d28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b8942bfe-8c57-4a38-9b0e-c530f3ca64d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79123458-bcff-4133-b418-edc7c4c0c8d9",
        "cursor": {
          "ref": "aacf2af2-0384-429d-9422-87e38dda3b0e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "35d1e505-9c54-4507-9b42-324a1119227a"
        },
        "item": {
          "id": "79123458-bcff-4133-b418-edc7c4c0c8d9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8874388f-27dc-4976-909e-e264f939bf00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5717310-2d4e-46dd-bb17-11631130dbb4",
        "cursor": {
          "ref": "b1fbc732-0a1d-4c7f-b539-5a675a12c8e8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e358be23-fec5-4bf8-84c1-ec54b5402522"
        },
        "item": {
          "id": "e5717310-2d4e-46dd-bb17-11631130dbb4",
          "name": "identifiers"
        },
        "response": {
          "id": "51776771-676c-4a4a-9b4e-29a331af11a0",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d1a7d8-d088-4259-ae58-ec0010950041",
        "cursor": {
          "ref": "17995fdb-d751-4040-a3d9-2312d65a9054",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9f55f62-2c1c-4d25-ab27-14b53cc8b1d0"
        },
        "item": {
          "id": "25d1a7d8-d088-4259-ae58-ec0010950041",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b8627f9-57fb-4a93-9864-6897884db19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31c4d02-7a33-4c43-8973-13efdeee5811",
        "cursor": {
          "ref": "48369d44-d3b1-48e7-a814-a0a076530732",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "466ef1d0-3575-436f-bc51-c159615c4f58"
        },
        "item": {
          "id": "f31c4d02-7a33-4c43-8973-13efdeee5811",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "61756787-f7d6-4c8a-8aff-0dc8f9ca5fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2bccb-fee1-4bdc-89ff-1351d8cffbdd",
        "cursor": {
          "ref": "c0def91f-87b6-4475-bf09-b4a12f38bae6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "555ffc15-8f84-4c18-8aa2-70b2b09a79cd"
        },
        "item": {
          "id": "ffc2bccb-fee1-4bdc-89ff-1351d8cffbdd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b6a15e55-4a99-424f-b9e4-16f7a912ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c33a62b-dedf-4da2-ac53-c5f3fe8c8842",
        "cursor": {
          "ref": "cd2eac43-4fee-4a51-b81d-36220fddf2ad",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6bf18183-d2ae-4c79-9d2e-cbac4c16e063"
        },
        "item": {
          "id": "7c33a62b-dedf-4da2-ac53-c5f3fe8c8842",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7ac4adcc-feac-4efc-91d5-0f25abfbc9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69a29b7-493f-4dd1-97dd-fa193d36b931",
        "cursor": {
          "ref": "20a233d9-207a-4b59-aea2-e1470cd46a26",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ce541188-4110-47e5-ae47-232a778e689a"
        },
        "item": {
          "id": "d69a29b7-493f-4dd1-97dd-fa193d36b931",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ee615d91-1c44-42ba-bf80-06c6b8d51330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653310c-5be2-4af4-bcab-1cf04017d896",
        "cursor": {
          "ref": "550e79c3-966f-4dd3-8bcb-227b19c22a8d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4c059c0f-d92a-41aa-bfe9-ab334053d38b"
        },
        "item": {
          "id": "6653310c-5be2-4af4-bcab-1cf04017d896",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7d95b33a-f0ce-4597-ad69-5f65d97c97a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d30f1a-483b-418e-8d59-ca2511046d0b",
        "cursor": {
          "ref": "af9818b5-587f-4efd-9019-cac2490d92c9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1233e1e2-03b2-4135-862c-07b94faf9a51"
        },
        "item": {
          "id": "f5d30f1a-483b-418e-8d59-ca2511046d0b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0b6ed85f-fc8a-489a-a018-5c044713066b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b243a-7140-4010-bba8-84c00999affd",
        "cursor": {
          "ref": "ef450252-7c46-4cc2-b36a-fc62f66753d5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4b40daf6-bb49-4920-ae4d-81129ebb0888"
        },
        "item": {
          "id": "c86b243a-7140-4010-bba8-84c00999affd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c56b0fd5-2a05-4875-84e1-fce3c4992dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a535744-242d-488b-bc0b-ed501b1ce48b",
        "cursor": {
          "ref": "7ae418c3-54a2-424a-b359-6959b472b015",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b8538473-fcd1-49c4-90f5-35bec9fe04f9"
        },
        "item": {
          "id": "7a535744-242d-488b-bc0b-ed501b1ce48b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d7eb167e-4a05-4cc1-b13d-53d9f8f3d839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec0e937-d8e7-4542-bc05-e1ad52234468",
        "cursor": {
          "ref": "5a34f7a8-23b0-49e3-a0dd-ff39c63f037f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "da69d4d2-e6c8-4025-a4ab-71f99847bbfc"
        },
        "item": {
          "id": "6ec0e937-d8e7-4542-bc05-e1ad52234468",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b70939ed-6e48-4fb7-b0ab-77e54b41f3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d647f694-886d-44ea-b1cc-0ee64006ce6a",
        "cursor": {
          "ref": "eae98d10-f67b-41a5-8caa-4bbbee11c9a3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4c23f0e7-759f-4022-a04c-9e9de41b0599"
        },
        "item": {
          "id": "d647f694-886d-44ea-b1cc-0ee64006ce6a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4e8e09b9-c9df-4087-9dbb-7eac1b52a1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40f90b-d5f3-4a6f-8477-50b6596b7d53",
        "cursor": {
          "ref": "bbf36de3-6431-415b-8265-0f7deed3af10",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d47597d6-9daa-48ec-9938-4fcf82ddb4a0"
        },
        "item": {
          "id": "2f40f90b-d5f3-4a6f-8477-50b6596b7d53",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c2a1919d-a424-4860-8008-7629b4f5d187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feae1847-4fec-4dc4-99ec-f35f68a750db",
        "cursor": {
          "ref": "a010e2cd-2068-43f3-9856-4e9c41567c40",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dd68629e-e6c1-4b98-b034-cde311ec6a04"
        },
        "item": {
          "id": "feae1847-4fec-4dc4-99ec-f35f68a750db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb4a4452-896b-4daa-b05f-7caca86d4747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63032b9-5c9f-41c2-b161-3d2425535d46",
        "cursor": {
          "ref": "479853da-3636-43d7-b96f-091e594ef2ac",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ac335931-e909-4ecb-8080-efe562f34b14"
        },
        "item": {
          "id": "d63032b9-5c9f-41c2-b161-3d2425535d46",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7cec6e08-e3e7-4eab-9dd0-cc9e293f1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96826c1a-0602-4dfd-98e0-53bd81a04099",
        "cursor": {
          "ref": "28422e1f-5b23-4259-a518-386632d081ca",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85c070dd-e64a-4baa-9fa2-884de35004db"
        },
        "item": {
          "id": "96826c1a-0602-4dfd-98e0-53bd81a04099",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "45cc2ede-b1b0-4ea7-9300-af461cb5ed60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5aa307-07cb-4f06-9194-2921069420fc",
        "cursor": {
          "ref": "c03230eb-79e9-43bc-a5bf-2a69a6d07477",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b1ef1406-0b49-41ec-a277-a2c8cee94105"
        },
        "item": {
          "id": "6c5aa307-07cb-4f06-9194-2921069420fc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "edd364f6-144c-4f6b-977d-871ff5d2b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b1ba2-6081-4c18-9297-5055168a1f9d",
        "cursor": {
          "ref": "d5d34061-538b-4914-92d3-a2d8d2ded820",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a890e5a9-eb30-4470-81ce-d86e1fc6f250"
        },
        "item": {
          "id": "d17b1ba2-6081-4c18-9297-5055168a1f9d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17f3dcb0-35e2-458f-8c9c-42916e4518ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db1d9c9-4f33-4837-b0e7-c10b239e3d3b",
        "cursor": {
          "ref": "47aa09fd-c47a-4b85-91de-5a600436712a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3b572cb8-4b25-4258-bdf2-e92027309f8a"
        },
        "item": {
          "id": "6db1d9c9-4f33-4837-b0e7-c10b239e3d3b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "285c5a15-ab5f-4d73-b6fb-eed385a974e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21200c9f-9c9c-4ed2-abcd-0233f8571bb7",
        "cursor": {
          "ref": "1afeca47-540c-454a-8282-b850357a36d8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "01d3ffb7-d46f-4025-b68e-6cee4b9fc12c"
        },
        "item": {
          "id": "21200c9f-9c9c-4ed2-abcd-0233f8571bb7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "375c60a3-883f-4a2c-aeb9-852d2a4848a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ac6f13-37e1-49b6-becc-790ff6bea921",
        "cursor": {
          "ref": "045f28f5-f4b3-453e-bee9-eda95858aea7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3d6e28c4-a2ae-4ce6-a670-a959cce4b318"
        },
        "item": {
          "id": "47ac6f13-37e1-49b6-becc-790ff6bea921",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a327ac4a-92c0-4ec8-ab5d-3d690a905b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e1571d-b843-49e7-bbf5-6d3e1b3a6d26",
        "cursor": {
          "ref": "b585028b-f69d-491b-a2cc-14148055aadc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "93b22bb3-94ac-44d2-a4fc-0342edb3beb7"
        },
        "item": {
          "id": "64e1571d-b843-49e7-bbf5-6d3e1b3a6d26",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4b9a936d-2433-4cc2-9e29-6d25ae49faac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503a823b-8755-415f-a6d6-dc256298002b",
        "cursor": {
          "ref": "f3808771-b85a-4ce5-9f1a-1b014e7b3736",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cf7e734c-93b1-4176-a957-d4ede7a631b3"
        },
        "item": {
          "id": "503a823b-8755-415f-a6d6-dc256298002b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e92bf168-7906-49f5-a6fe-3ab51e6931c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef02e9-1c8f-40eb-a304-1c0173572617",
        "cursor": {
          "ref": "275c3fa3-4be5-44fe-8390-c5b2cc884f42",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d958ce63-d421-4efe-b40c-0821415466c8"
        },
        "item": {
          "id": "9bef02e9-1c8f-40eb-a304-1c0173572617",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "69784d8a-afc1-439e-bf17-faa846fa4bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c58861b-4608-4133-bc5f-3e02739cbe0a",
        "cursor": {
          "ref": "dacb50b1-7283-45ee-bd5b-29a6c10fb26e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "93e0ee90-0752-4816-9a8f-20c01187a90b"
        },
        "item": {
          "id": "8c58861b-4608-4133-bc5f-3e02739cbe0a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c2b7817-2d2d-418c-a125-304fdb85a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ebf06f-ff9d-4dc7-a054-09185fe42cf6",
        "cursor": {
          "ref": "8c94016c-ea03-4f86-90a8-48d72359e0dd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "88d5f616-b7b8-4d93-bd00-9f376b06ead4"
        },
        "item": {
          "id": "35ebf06f-ff9d-4dc7-a054-09185fe42cf6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ef8e1e7-4c39-475f-a498-707ecf79b181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de3c8f8-30ee-4491-aed2-c905c08fa83d",
        "cursor": {
          "ref": "86d958a4-e922-417a-bf05-5636f883bb67",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "45364aae-960b-4876-8a80-92460765d7de"
        },
        "item": {
          "id": "0de3c8f8-30ee-4491-aed2-c905c08fa83d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "65df0f04-21fc-4c40-84be-c2f08c54e1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3800bff-df87-4844-8d2b-c9dd5a4ce9b1",
        "cursor": {
          "ref": "f099d52f-4e52-4180-ad33-a873b61b85f6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d49c2b10-fc41-4f50-a27f-43b9f833c20d"
        },
        "item": {
          "id": "d3800bff-df87-4844-8d2b-c9dd5a4ce9b1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3efade08-6dce-40d4-abb2-5fd4e7c106d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f616440d-221a-4b34-8114-8700e87da689",
        "cursor": {
          "ref": "bc163358-88be-4bac-9d07-000c6cb5591a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "13e21ce7-af1a-4519-92cb-3a9c80221d96"
        },
        "item": {
          "id": "f616440d-221a-4b34-8114-8700e87da689",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d6dba1e0-d5a6-4cce-8d6d-c31ff71c88a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fe1deb-a533-4550-ae37-5cf08809562e",
        "cursor": {
          "ref": "8f11a0eb-04b0-4d04-be95-c693f612eafa",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "77383d38-c979-4297-9a98-62598dda9504"
        },
        "item": {
          "id": "f2fe1deb-a533-4550-ae37-5cf08809562e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0d0989b5-4b3a-41da-8560-20d26853ff0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd7a4e8-c93a-4aad-935d-12eb1f8637c5",
        "cursor": {
          "ref": "36764eda-bc54-471f-8de3-db94ace98404",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "27c9c0e0-c214-49cb-819f-df328a082f8a"
        },
        "item": {
          "id": "7dd7a4e8-c93a-4aad-935d-12eb1f8637c5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bee033d0-eeda-4067-8724-3818bc3b3828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb5a2e4-168d-4dc8-a61f-9a40bfb0eb4c",
        "cursor": {
          "ref": "0de40216-4a2f-4f9b-8b7e-594be246d538",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d00a40aa-6323-4b68-ac95-bf9f66a22453"
        },
        "item": {
          "id": "0eb5a2e4-168d-4dc8-a61f-9a40bfb0eb4c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "08e90d2d-76d9-4983-8739-2e244aa40ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b85cb2-f4df-4bce-95c9-ef3f2df38566",
        "cursor": {
          "ref": "d788abab-982c-43bc-a3c9-25d6209007bb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "44772329-860a-4a01-9fcf-f523b2f83185"
        },
        "item": {
          "id": "a5b85cb2-f4df-4bce-95c9-ef3f2df38566",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dde4157d-7571-4dad-96f0-a97b78e82d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a985a4d-2083-46e2-9378-a8527329c41d",
        "cursor": {
          "ref": "edc29592-4e4c-43a4-89db-41e748201809",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5500cc6d-3f0b-44a6-bac1-64454ca42a81"
        },
        "item": {
          "id": "4a985a4d-2083-46e2-9378-a8527329c41d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9926a77f-a0f8-42c9-ac96-7bb75e5cc57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231844be-fcf4-4657-8ff9-9280f90c6fcd",
        "cursor": {
          "ref": "fb8f309e-5542-4520-85c2-2dafadbf70f4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "de73e696-e263-4f34-a097-e095740f617e"
        },
        "item": {
          "id": "231844be-fcf4-4657-8ff9-9280f90c6fcd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6b3d342c-0a64-41e4-8da7-0e3316e4782d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb21544-35e5-4fb4-a319-2e556396dd20",
        "cursor": {
          "ref": "e4e8d1c8-eed5-40c6-9629-24edac19178d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4ba5743b-b625-4f15-a0d6-f190344c698c"
        },
        "item": {
          "id": "8bb21544-35e5-4fb4-a319-2e556396dd20",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4cb70f21-e019-4e1f-b338-aa1dbdf4f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4602ed-5884-4b7b-bb1a-9cd82a667c42",
        "cursor": {
          "ref": "d4e08745-5d4e-4bc7-af7a-29abbf9f10d2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5482115-39f5-4cf2-bb51-78d8e333ae65"
        },
        "item": {
          "id": "bc4602ed-5884-4b7b-bb1a-9cd82a667c42",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "16000137-0ac6-423c-b14a-438a8498ad77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f31fcd6-878d-4f0e-ab0d-19179b7d2376",
        "cursor": {
          "ref": "865b9163-b7d5-4884-9f94-c2c044e4479e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a0008c7-c3ff-42b9-8b7b-d603558860d5"
        },
        "item": {
          "id": "6f31fcd6-878d-4f0e-ab0d-19179b7d2376",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f977f284-a4a7-4891-bdc2-84f026354e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f966f9-8ffc-4c1d-a1c8-f70dd27b19d1",
        "cursor": {
          "ref": "41777686-e1a1-49b8-a78f-e20190054728",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c1ca431f-9d68-461b-9f2d-c9d8fbc82560"
        },
        "item": {
          "id": "a0f966f9-8ffc-4c1d-a1c8-f70dd27b19d1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11973aaf-c9f7-43c3-991f-88efaaf362eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98cdce8-66d9-4356-b5c5-f7e6e3e91f77",
        "cursor": {
          "ref": "b0b09994-e752-4446-bdcb-d3e3542f3b3f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "59502981-bca2-4c4d-9695-02e5fd70fdac"
        },
        "item": {
          "id": "c98cdce8-66d9-4356-b5c5-f7e6e3e91f77",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "481ad924-6b71-408d-a5cb-31cc41638499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46269bba-5016-4a2f-a5c7-0116c96ef741",
        "cursor": {
          "ref": "a83f7aea-f149-48dc-8c8b-2dea8824637c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e78dba47-5f2a-4be8-bc55-ea7d1b87ff30"
        },
        "item": {
          "id": "46269bba-5016-4a2f-a5c7-0116c96ef741",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "28f68b1d-aa36-4ea2-b49b-09a66fe7b6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e96fb-0e97-4e54-9b34-c7471778034f",
        "cursor": {
          "ref": "f60e10de-7451-45fa-ab36-2684f308a937",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f2b65ceb-c013-462e-bc98-eebbeca5fbed"
        },
        "item": {
          "id": "cb4e96fb-0e97-4e54-9b34-c7471778034f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e46a1e32-ee22-426e-8cd8-eb614387e06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20fd706-3ce2-4fa3-ad16-ddbd93ed22cb",
        "cursor": {
          "ref": "eb6f2413-4fcc-45f2-9c69-0915b19cd161",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "faf354c9-01ef-4efd-aad5-76f3c5d937da"
        },
        "item": {
          "id": "b20fd706-3ce2-4fa3-ad16-ddbd93ed22cb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46c87bfa-2042-49b4-b44d-5b6a111c56fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff11f963-95a9-4ccc-9a37-1059d6e46355",
        "cursor": {
          "ref": "680f96a9-4b08-47fc-9a2e-87817769647d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3fb73eeb-89ed-476e-8247-32e9eb556773"
        },
        "item": {
          "id": "ff11f963-95a9-4ccc-9a37-1059d6e46355",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "014ed0e4-f4a6-4798-8204-78b56fc2b2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b150834-b3e5-4d87-9bdb-322ef3d3b6b0",
        "cursor": {
          "ref": "51bfe756-c3f9-4cff-a9bd-028d882d2ca9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8456c4f2-15d5-4f63-be1b-3bc2cf5436fb"
        },
        "item": {
          "id": "4b150834-b3e5-4d87-9bdb-322ef3d3b6b0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c5b0ec80-fb14-4cbc-8c01-b7874339da2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd3a56-532a-4bf1-a1d8-0c8dd1d9ad56",
        "cursor": {
          "ref": "cd92a107-6c3c-4958-90f5-b89444dbbc46",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5ad5cd70-0066-4167-8b70-bc05b820188b"
        },
        "item": {
          "id": "fdfd3a56-532a-4bf1-a1d8-0c8dd1d9ad56",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4470fb9e-510c-48ec-b317-6a5d9003d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad40163c-683b-48cf-8d18-a1f38576362d",
        "cursor": {
          "ref": "5f600b77-ed89-4fd8-b0ed-8ca613abf0eb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "73e5e543-42e6-49eb-8849-a8724e84d484"
        },
        "item": {
          "id": "ad40163c-683b-48cf-8d18-a1f38576362d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c3059b73-ebfd-445b-abd1-340a3252b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7c2c41-2326-4dd4-815e-2ecf448cf5ff",
        "cursor": {
          "ref": "fc10b9c2-9237-4bd3-b169-5d527bc98bcd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1cab52bb-18aa-48cf-9017-18f96875874e"
        },
        "item": {
          "id": "de7c2c41-2326-4dd4-815e-2ecf448cf5ff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "56979fad-c439-4e9d-b4e7-fe159a162f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8805d6e-d38e-40e6-a318-2f267c6d720e",
        "cursor": {
          "ref": "b2bb099b-94d2-48ab-988d-35b87f962bfc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80031d17-40f3-455e-ae1d-dd5791117818"
        },
        "item": {
          "id": "c8805d6e-d38e-40e6-a318-2f267c6d720e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2591bfbd-be86-406b-8a93-0caf7c0f7d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e793e9-c8eb-413b-a8f5-3ad541290641",
        "cursor": {
          "ref": "ed3b42fb-0a51-4adc-bf7e-25416b8ff52a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "acb800b0-21f5-4a21-8a0b-945ea6926d78"
        },
        "item": {
          "id": "b9e793e9-c8eb-413b-a8f5-3ad541290641",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f6a1ac02-b8f2-4f09-8270-4b79cd803414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e83fe5-c704-4fdc-b104-d84be7661079",
        "cursor": {
          "ref": "d5fdf49b-b2ab-4d11-b907-7358edc22128",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "594716ea-14a4-4b19-b835-461dbc89cb12"
        },
        "item": {
          "id": "69e83fe5-c704-4fdc-b104-d84be7661079",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "415d6e75-0e04-4b8a-bff5-61cecd75d977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff09bdaa-444f-488e-bd6d-412246f89128",
        "cursor": {
          "ref": "e9935d45-a506-4709-83da-58a8f90fffd0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0cee2efc-4a4f-4101-aef6-2ab229fd2add"
        },
        "item": {
          "id": "ff09bdaa-444f-488e-bd6d-412246f89128",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "44c50110-6d70-456e-99fe-851d1426527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d3154-5705-4e1d-9fc4-36f0ba6e25ff",
        "cursor": {
          "ref": "af65ad95-644b-4cdb-8712-23987978942b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08d28380-574a-44c4-8c9a-4473ba1cacfb"
        },
        "item": {
          "id": "933d3154-5705-4e1d-9fc4-36f0ba6e25ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fe2e2da9-fd89-449d-bbb8-716093a25635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534f315-7d75-4b93-a10b-58a008932a07",
        "cursor": {
          "ref": "1eef4c76-effb-4dd1-959a-ebdf78c7bc9f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8fa7954-b273-47f1-9d8f-631ff71524d0"
        },
        "item": {
          "id": "6534f315-7d75-4b93-a10b-58a008932a07",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "64633814-000b-4a76-af7e-62d8badc0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a12020f-25f7-41b3-9e5d-0b655cc3306d",
        "cursor": {
          "ref": "366ed54f-46a5-4d80-8d3b-86ec55f8fad7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a5387d6c-932b-44e3-9c9d-145b65bb35de"
        },
        "item": {
          "id": "6a12020f-25f7-41b3-9e5d-0b655cc3306d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "71f5a6db-90a3-42aa-a9b1-a7105daf8b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1db5d-b74e-4064-a745-030be5f4d159",
        "cursor": {
          "ref": "3c1ec4cb-4ae5-4a98-8037-61e304f64b3a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d9ac9cc2-cceb-42ff-ba48-cd52247ca9e8"
        },
        "item": {
          "id": "83e1db5d-b74e-4064-a745-030be5f4d159",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "edf569d6-2cbb-407a-97c3-9a7b28168fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b8521f-dc96-4be1-89ce-500b97acc3a7",
        "cursor": {
          "ref": "99a17c8e-4c5d-4c4f-8fb4-71d50fd92a8a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e8aace31-7fcd-4536-957f-be1f0cbd9119"
        },
        "item": {
          "id": "e5b8521f-dc96-4be1-89ce-500b97acc3a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c99ec2c6-b681-4b6a-8c6a-97d3bfff6792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bd81cd-771d-4ef8-9215-113d9eec5de7",
        "cursor": {
          "ref": "cb68d470-22ef-4e25-b486-c8625b65f62a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fd7090c4-455e-4b57-900f-a3c2fa5d8509"
        },
        "item": {
          "id": "12bd81cd-771d-4ef8-9215-113d9eec5de7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d9f9cb7-98e5-43bc-98a3-00fae4fa0ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8133e-3b04-49a2-a984-7ea7b686a0de",
        "cursor": {
          "ref": "93146cfb-af83-4e5b-b486-6d7eec6e57ed",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57b0b78d-2507-4e91-811b-33d649f0f83c"
        },
        "item": {
          "id": "3ee8133e-3b04-49a2-a984-7ea7b686a0de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "51a50a50-90f2-42df-8107-52ddc238bc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c733d0a-09c5-4848-90c1-6e1bfdb3b56b",
        "cursor": {
          "ref": "b0798374-8048-4960-8532-b2cdceffdb29",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d98a788-5d3c-41b6-9d34-da49b2ed1265"
        },
        "item": {
          "id": "8c733d0a-09c5-4848-90c1-6e1bfdb3b56b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2fe9c7c4-3e34-44aa-8a2e-e678fea76e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec39912-4443-4616-bf17-bc7c3d9f7e1c",
        "cursor": {
          "ref": "53446af7-a9db-421d-bd6a-14f9809423d1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b5d5de31-4beb-4764-9b77-633c8d573863"
        },
        "item": {
          "id": "6ec39912-4443-4616-bf17-bc7c3d9f7e1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b84be262-5479-4e31-8dbd-d255d75311b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e686bd0-dbf0-4c67-b559-c1a859de41ba",
        "cursor": {
          "ref": "d9087f7a-5128-47e7-819d-126883d3a869",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5e4fdb89-8bd6-498b-8de1-d8582b49f179"
        },
        "item": {
          "id": "5e686bd0-dbf0-4c67-b559-c1a859de41ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3b2ad834-1d8b-457c-80d6-806ad2158245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27052148-fd26-4975-82e2-4dd1b5c32a6b",
        "cursor": {
          "ref": "9b539548-209c-4a09-9498-810282d374a0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4ac24d81-16b6-4e6b-9805-15c22a5d92ea"
        },
        "item": {
          "id": "27052148-fd26-4975-82e2-4dd1b5c32a6b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6f4fabd2-bb1d-4cc8-a0ad-93afbd76a251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b1a44a-78c5-4d7a-a190-3782233fb89e",
        "cursor": {
          "ref": "8f1d5a51-0a68-4479-9044-2314e8da7eb5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "14c811ee-8309-4e97-a8f8-d6ee9937ea6e"
        },
        "item": {
          "id": "a3b1a44a-78c5-4d7a-a190-3782233fb89e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4cbf6a4a-1786-417d-b825-516a031ecdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c342f25-a24c-403d-a5b2-4b926b8148af",
        "cursor": {
          "ref": "57e7555a-9da6-47cb-b806-33a588d194e8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4f055d99-a1eb-496d-b09a-dbb689ec4acf"
        },
        "item": {
          "id": "5c342f25-a24c-403d-a5b2-4b926b8148af",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ec3cea8-a28f-441b-a579-42d347cb8e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8fb8c7-c98d-4b92-a514-3bd5482979b7",
        "cursor": {
          "ref": "2fd15e77-0151-47df-b872-d936e36f6a3c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "68a8a18d-596f-4e05-b813-e87609faebc3"
        },
        "item": {
          "id": "8d8fb8c7-c98d-4b92-a514-3bd5482979b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "88dd5dfa-5a90-4c56-ad3f-be9346cd11f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5e40de-4087-4fc1-9ae1-a4ef545bd46c",
        "cursor": {
          "ref": "88fb328f-c51d-4959-87d3-0ca93b54570a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a30bbe29-0f28-4605-89d4-7f977061ad51"
        },
        "item": {
          "id": "bd5e40de-4087-4fc1-9ae1-a4ef545bd46c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4625c45a-2e06-41c3-a355-75cdbbe7fde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d6db0-8aeb-4bab-a195-d8b8c0bc1a6a",
        "cursor": {
          "ref": "d972dd5a-5746-4d95-9905-25b4502c01ca",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d6533ed6-e435-4cb1-9b36-b58ad05de72d"
        },
        "item": {
          "id": "d60d6db0-8aeb-4bab-a195-d8b8c0bc1a6a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e3e66ee-517e-4228-a0a6-9a624905aa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8307d85-e799-475a-8883-531de53ea9d4",
        "cursor": {
          "ref": "c17a8f68-6593-4afd-87e0-15ecec13fe2d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c1a7552-a138-4b02-b48a-521130ef282f"
        },
        "item": {
          "id": "e8307d85-e799-475a-8883-531de53ea9d4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5b3ed950-d604-4c98-9e5d-11cdcc5cbadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40437921-9078-4cde-b7e3-56c0610b2256",
        "cursor": {
          "ref": "6f897f95-f6e4-40b3-97a2-2224c2cb0e25",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b83aa336-2674-4989-ac23-cf408a83e5c7"
        },
        "item": {
          "id": "40437921-9078-4cde-b7e3-56c0610b2256",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d579606a-2c20-4356-9d29-08feee0939c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71258c9b-f214-4b7e-827d-37741f618db2",
        "cursor": {
          "ref": "cc99b66c-a753-4779-aa60-38c0437f39e1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "171c1b30-3c28-4ae2-9789-de93d9e88f59"
        },
        "item": {
          "id": "71258c9b-f214-4b7e-827d-37741f618db2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "14fc75e9-a06c-4117-8656-24da748b40e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba96ca52-7803-41b4-9e15-f2fa22fd406e",
        "cursor": {
          "ref": "5e5fa0fc-c74b-4b33-9a66-e8c93bea1b9b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c7af49c-4c5d-4cce-b3c6-a2cb8679254d"
        },
        "item": {
          "id": "ba96ca52-7803-41b4-9e15-f2fa22fd406e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b4791f90-6527-494d-a05a-b4ea1ccc0536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d68d10-f510-4d15-9dee-c9969190c7a4",
        "cursor": {
          "ref": "a469cacf-0649-42c8-bb52-c41d4fb7cd46",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aa0d3eb8-d254-4047-bf8a-ca68a4dbd5d3"
        },
        "item": {
          "id": "a8d68d10-f510-4d15-9dee-c9969190c7a4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93c4b604-fb75-4d8f-8ada-0d8c7077a19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15751e8a-7501-44bd-ae36-889fb809de61",
        "cursor": {
          "ref": "c32c6704-cff6-4f93-9bcc-5d0ce212bccc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e05e598-0b4f-4cf6-8b77-eaeffee91e15"
        },
        "item": {
          "id": "15751e8a-7501-44bd-ae36-889fb809de61",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7d5d3805-6d32-416b-bd49-645435671906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a77e57-5c77-4ee9-87c5-5e99c3697508",
        "cursor": {
          "ref": "824d7cee-e53e-4376-bf6b-475a07349780",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1520e81c-fe69-411a-9313-6fe0ba6648ef"
        },
        "item": {
          "id": "04a77e57-5c77-4ee9-87c5-5e99c3697508",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4c2d0aca-28e8-4d96-8cdf-375bf7e78c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd7020e-a0e8-4608-94ef-aac421bf46b1",
        "cursor": {
          "ref": "72b05abd-48b6-4edf-9762-032fbfab96d5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1f0e85c-7256-4114-b0d5-7dfdb6926205"
        },
        "item": {
          "id": "acd7020e-a0e8-4608-94ef-aac421bf46b1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e129c509-ecde-4b09-b26f-ddacb469811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45251cfb-3758-467d-bea4-708f80bb98c0",
        "cursor": {
          "ref": "2fe9de5a-e747-4197-9689-cb25a0786868",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b5597681-cdaa-4aee-bad5-585640a33b32"
        },
        "item": {
          "id": "45251cfb-3758-467d-bea4-708f80bb98c0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a6ade5a5-6e73-4197-a70a-a3b321a923fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a000ba49-acd5-4ea4-8404-9765f4d5881f",
        "cursor": {
          "ref": "e54addbf-50fe-4d5e-b155-7d42076152bd",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3ea0b46-d22a-4f50-9128-67869df96fd1"
        },
        "item": {
          "id": "a000ba49-acd5-4ea4-8404-9765f4d5881f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "803459c9-abe0-4289-b576-619b6d0ff353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e420b-a269-40c6-9e64-a3724ccafdec",
        "cursor": {
          "ref": "db514009-c0d0-49cf-bec7-87f6eb5639b8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8adcae33-c37f-4605-9131-cb77347fd7aa"
        },
        "item": {
          "id": "251e420b-a269-40c6-9e64-a3724ccafdec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88b1ba36-4e69-4581-8dfe-dddc2e78ff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa1af4-fa07-4590-a7aa-fc134bb11093",
        "cursor": {
          "ref": "25e5d9a6-f87c-49fa-9d71-382e1dc24634",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "83fa7efd-7009-4b60-ae74-5813834925d3"
        },
        "item": {
          "id": "60fa1af4-fa07-4590-a7aa-fc134bb11093",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83bf5f46-e2ed-427b-affb-90fb96dd2710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41960f55-b767-479f-8d62-ef03d039cf48",
        "cursor": {
          "ref": "4b906e0b-36b0-4816-a70d-f7af142b67cc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "09dae008-0350-400a-ab95-cf820afb5cae"
        },
        "item": {
          "id": "41960f55-b767-479f-8d62-ef03d039cf48",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d46aaf43-bd41-497b-bb0f-93d1d38b0230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924ec5ff-776d-451d-8328-816afe4b276d",
        "cursor": {
          "ref": "4e17f527-618a-43c3-b80e-79961643323a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "def73879-eaaa-49f0-88c3-07a72ff71db7"
        },
        "item": {
          "id": "924ec5ff-776d-451d-8328-816afe4b276d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1c8c11c5-c415-4fef-bf57-fefe05a06cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c52618-2d8f-4d19-94a9-3cd88d3cd914",
        "cursor": {
          "ref": "ce453546-81b3-4800-b296-f4ef2d4ede27",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27ddf2e2-048d-461a-b0f6-0e24c2f7bd6d"
        },
        "item": {
          "id": "23c52618-2d8f-4d19-94a9-3cd88d3cd914",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6dc3f890-4f1e-4329-a840-220f99b2baae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89f1df7-faef-4f42-b08d-edac8bd6d7b2",
        "cursor": {
          "ref": "c721c4ef-b127-4e20-abb3-f43a300f59ee",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "96ffe882-5fc1-4bce-aadc-d2b3ef94829e"
        },
        "item": {
          "id": "c89f1df7-faef-4f42-b08d-edac8bd6d7b2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f74ec18c-03aa-4e6a-843f-37097cc37a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd25bc9c-40fe-49ae-8313-17c99d9f963b",
        "cursor": {
          "ref": "e057faa1-282f-40d3-b132-0e5553125655",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5b5b7ddc-ff02-41f0-bac2-01b512830a9e"
        },
        "item": {
          "id": "fd25bc9c-40fe-49ae-8313-17c99d9f963b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d252212c-935e-48f8-b2f6-d9d09ae1245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c523e433-7df6-4341-960c-1f58289c5177",
        "cursor": {
          "ref": "388bab0c-776f-4be0-a462-00c109d961da",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fa4dcb0b-de03-442c-93d2-2b9f8b2249f9"
        },
        "item": {
          "id": "c523e433-7df6-4341-960c-1f58289c5177",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "97c67ce0-fcd8-414c-a4c2-45265b862333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9517bda2-022d-4be2-b606-38c0fadb9dea",
        "cursor": {
          "ref": "451a63e1-9662-4f30-8285-47f132be624b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2e44d209-4249-4dfc-b751-b748548a774f"
        },
        "item": {
          "id": "9517bda2-022d-4be2-b606-38c0fadb9dea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "29fb5e2c-1131-4602-b4b7-3b8739700f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93337553-548b-4f1c-ac95-d2216e0806b9",
        "cursor": {
          "ref": "791e9b21-1412-450a-8fc4-fa7701847b23",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d4e0cd9d-696d-4438-9e0d-f8b90cd86c9b"
        },
        "item": {
          "id": "93337553-548b-4f1c-ac95-d2216e0806b9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f1dc0f1c-fdb4-4e98-8b61-32f79d55d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e504ef53-e6c0-46c6-9b82-0d8ab03eb33f",
        "cursor": {
          "ref": "70b73af5-69af-454a-98a0-4c08d9a2c821",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6e04d86d-04af-4740-82f0-636141af790e"
        },
        "item": {
          "id": "e504ef53-e6c0-46c6-9b82-0d8ab03eb33f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7cbe2af7-124e-41da-a04e-cba961b95800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c048936a-c382-4c33-aed3-398210668d13",
        "cursor": {
          "ref": "5b7895a9-4d6c-4106-ad27-5d3dda2f125d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2c89254d-97fa-4b05-9d6d-bc2076f9477b"
        },
        "item": {
          "id": "c048936a-c382-4c33-aed3-398210668d13",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6d2b5acd-d65b-4f0b-a6ed-0312c5a8c891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a32129-da56-4b6f-b0cb-a423a410fb8e",
        "cursor": {
          "ref": "284316ce-b610-4431-838f-50816705be71",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2c413b6b-3c7e-4209-81ff-de6f316b6809"
        },
        "item": {
          "id": "39a32129-da56-4b6f-b0cb-a423a410fb8e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "630c6b65-886b-474e-bacb-57efd93e6334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cc8a35-7a37-4431-991b-abd74227097e",
        "cursor": {
          "ref": "0d583f93-3ea1-4000-8cd8-a2a02e233804",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9e88737f-cfcf-4e4d-b1a9-467a6f70ebfa"
        },
        "item": {
          "id": "e4cc8a35-7a37-4431-991b-abd74227097e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0aa2df20-a34e-4452-9dd8-729ba7ee5fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb47dae3-f8d5-4c3c-9031-ec1f5e935aeb",
        "cursor": {
          "ref": "9c47ba47-608b-49fb-a0b4-8484654a9819",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "59db8603-dedb-471a-9e9b-0b1e3b5a8d95"
        },
        "item": {
          "id": "cb47dae3-f8d5-4c3c-9031-ec1f5e935aeb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c04c9447-c870-4f32-95f6-ab39bd14687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6d7bb5-816a-4497-9b47-b616aa17eb40",
        "cursor": {
          "ref": "d86eda56-54a9-42e5-9871-28fcc3e1cb49",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d5d8b84e-de03-4358-a99d-ab8080571dc9"
        },
        "item": {
          "id": "3d6d7bb5-816a-4497-9b47-b616aa17eb40",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b381affc-3903-4afe-befd-016a30be3c43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3445d841-253b-4502-b252-2c74e45bd932",
        "cursor": {
          "ref": "eb8c37cb-7cfd-4f8d-adb2-3e135fc38299",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a135db31-4a81-421e-9f34-1bd7ee69d992"
        },
        "item": {
          "id": "3445d841-253b-4502-b252-2c74e45bd932",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8d8bc8be-f901-4017-b07d-5e91fcf01e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bae2144c-cbc5-4927-b829-c531e3415853",
        "cursor": {
          "ref": "34d0d689-0c1b-4899-a6c9-9ff23c56effd",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "834dda51-422e-45bb-b196-54ad8cd29699"
        },
        "item": {
          "id": "bae2144c-cbc5-4927-b829-c531e3415853",
          "name": "credentials_issue"
        },
        "response": {
          "id": "73838926-c18a-49e5-8e3e-dc411a44d4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d5fce1e4-b435-4dd3-8b99-d519b2fd026d",
        "cursor": {
          "ref": "058f8a33-bf7a-4f0e-b597-219a4a35b429",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "714ebb75-aa61-42b8-9ff3-8abc89abb3a2"
        },
        "item": {
          "id": "d5fce1e4-b435-4dd3-8b99-d519b2fd026d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ab7c29e4-be48-4399-b7b3-17a98145d656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4b37ac44-4148-4123-a1a1-0d3573a7ba74",
        "cursor": {
          "ref": "c2c2637d-9216-439a-8c5f-15f6f09bb8c4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8391f31-c884-4bce-a9cd-1f1a23e0050f"
        },
        "item": {
          "id": "4b37ac44-4148-4123-a1a1-0d3573a7ba74",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4c52ceac-6d5b-46de-9a3c-8bf77b0a34da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8da33948-ad3c-4ebb-98bb-3460915b84e0",
        "cursor": {
          "ref": "e0514e5f-179a-4344-af5a-dcc93228c186",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "58025fb2-e404-4e32-af62-9a037d8310cd"
        },
        "item": {
          "id": "8da33948-ad3c-4ebb-98bb-3460915b84e0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bc494d23-d6cd-477b-bb42-fad9bc2dbdf3",
          "status": "Created",
          "code": 201,
          "responseTime": 11726,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac02cb5-ea05-41cb-beb7-21e9f1cd9764",
        "cursor": {
          "ref": "c2adcb70-3925-4430-8381-df04e4102861",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d620b5f-30be-4ba4-8eab-75c435711867"
        },
        "item": {
          "id": "6ac02cb5-ea05-41cb-beb7-21e9f1cd9764",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5b1e9634-a839-49b1-a6eb-92d3ae964183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "78aafe12-7524-4c4c-8c74-b974e9ab80d9",
        "cursor": {
          "ref": "31ea0839-86a4-4f87-a894-ccd72d553c53",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a3d96da4-297d-4c9b-a951-9489cf6b32f6"
        },
        "item": {
          "id": "78aafe12-7524-4c4c-8c74-b974e9ab80d9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b86ad86-6fe7-4403-afec-c269011a4558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d7067676-cc41-4ba5-a7a2-5adc0706d5ac",
        "cursor": {
          "ref": "28c05df0-8084-42b1-b573-d6a35bb46a90",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0716a2fe-d1fe-404c-8b6b-65357871bbae"
        },
        "item": {
          "id": "d7067676-cc41-4ba5-a7a2-5adc0706d5ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "22e940c1-bfd6-4a91-a823-a4c93dd472df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814b4500-d11f-4820-99ce-75b475e7b8ca",
        "cursor": {
          "ref": "5c9fecc3-155e-4237-9ee6-9c1c746a5e46",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "35133b50-3532-4626-9469-e8828f577d77"
        },
        "item": {
          "id": "814b4500-d11f-4820-99ce-75b475e7b8ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "836b79d3-88a5-4c11-a3aa-f2c4db51792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55da5366-a205-40d1-9b74-77f257e926b2",
        "cursor": {
          "ref": "769649a7-26d1-4f45-a02c-0d586f9a2d6f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a0adadc9-719a-4c7f-8517-8809b2a2fc2b"
        },
        "item": {
          "id": "55da5366-a205-40d1-9b74-77f257e926b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6b4b22ac-c075-4768-9b12-ac4e78ee8439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc36dcd-9d2f-480d-b647-a0c1b48558a5",
        "cursor": {
          "ref": "d8caa9cd-a6d1-405c-b59c-838882cc2308",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cfe5e047-92fd-48bc-9ce8-0c3ebc4add6c"
        },
        "item": {
          "id": "edc36dcd-9d2f-480d-b647-a0c1b48558a5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c0dfdfe0-ce76-4ce0-a458-c219f2f410cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c40d8f-814d-4ae1-bb2c-47a18e6b4f7e",
        "cursor": {
          "ref": "ff35e634-547e-4fc6-a84e-92587624bd05",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2823a775-0513-48e9-84ba-95bf2548cea3"
        },
        "item": {
          "id": "d4c40d8f-814d-4ae1-bb2c-47a18e6b4f7e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "52bd85c2-6054-46ab-a372-4c517735d992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e6645-0c84-424b-920a-81c3af62d718",
        "cursor": {
          "ref": "e421a05d-6ec9-45b8-8c5b-adabf1a4bda1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e180f3a0-7544-47e7-8184-9736e1149c23"
        },
        "item": {
          "id": "6d7e6645-0c84-424b-920a-81c3af62d718",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97dd43e4-d6bc-493f-aa7e-f295b6c4a09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab95473-5ed0-422b-8804-1cf5b06c7dd6",
        "cursor": {
          "ref": "fbb87e3f-8325-48e0-abab-e93832e1375c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "446d6ba0-98e2-4fb7-b1df-8900a844056d"
        },
        "item": {
          "id": "aab95473-5ed0-422b-8804-1cf5b06c7dd6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "39ab20c5-71d7-47ac-9565-01ecee7af1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5410b6be-c58f-4eea-bcf7-dcb0e398d0b2",
        "cursor": {
          "ref": "367bf37d-d7aa-4bfb-99b8-872790e9f5b0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4cc31b8b-6bcd-41eb-8b14-69d750a15402"
        },
        "item": {
          "id": "5410b6be-c58f-4eea-bcf7-dcb0e398d0b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "efc5cc57-0cdf-4958-9ea4-04d400fd3cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c818633f-7ab2-4473-8559-3f136d7ca04f",
        "cursor": {
          "ref": "cb4c753e-3618-46fc-97ff-eeb1e4a0c414",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ef80e0cc-f947-4526-8b86-ef0e0b0dbca1"
        },
        "item": {
          "id": "c818633f-7ab2-4473-8559-3f136d7ca04f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "437aa30e-fca1-4a2b-8b8e-60e36b90bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf1ba56-11d9-43f9-bf46-17e660fb9c7b",
        "cursor": {
          "ref": "167ca0e2-fdba-4356-8015-534fcaa6ffd2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f2f2170-6e22-4ce2-80ef-89a8194d5d02"
        },
        "item": {
          "id": "1cf1ba56-11d9-43f9-bf46-17e660fb9c7b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9cd64c68-346c-4599-bf5f-acf8f7181549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008e51d3-24c7-4378-b25c-7e97a160e277",
        "cursor": {
          "ref": "d32263ec-25e8-49a1-9593-7accc3d8a38f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39f0ecb4-461b-493c-bc28-cd5291a71676"
        },
        "item": {
          "id": "008e51d3-24c7-4378-b25c-7e97a160e277",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b11dfc9b-328f-4a03-95b6-c97deb9a28be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3dd25e-3710-4e44-a8a1-e270a9f63a29",
        "cursor": {
          "ref": "9bb28eb2-4319-49e5-9283-681428129e2d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98297dc8-9af6-4012-bf4a-501b75f446e8"
        },
        "item": {
          "id": "1b3dd25e-3710-4e44-a8a1-e270a9f63a29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "238eab43-1fae-497e-994e-efb534afae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9312fa8-7c04-40dd-a490-4b242568f45c",
        "cursor": {
          "ref": "1ecd83de-55e3-4603-b90c-0c85a3cfcce5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f6b0d44e-664c-4009-ab02-eb11f4393ce1"
        },
        "item": {
          "id": "e9312fa8-7c04-40dd-a490-4b242568f45c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7c648a85-3d46-4e35-b32a-76cabe01bffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9c7dad-defb-49c0-a83e-7fce647e2c58",
        "cursor": {
          "ref": "7df6027a-7fb8-4229-90a5-2e14167bc697",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a87a41a-3f67-4767-843e-80a833dbc2c2"
        },
        "item": {
          "id": "1d9c7dad-defb-49c0-a83e-7fce647e2c58",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "147198c9-3bf9-4f71-a03c-c5ba25c8b397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd5695f-b8f8-4da0-aaa9-23e61dd5a89c",
        "cursor": {
          "ref": "b89de4fb-c3a1-411b-a4f7-db16b4843f3a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "abdb9b18-3e67-4119-92d7-25a16ce31481"
        },
        "item": {
          "id": "1fd5695f-b8f8-4da0-aaa9-23e61dd5a89c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2e8577e-7d93-44ff-9c8f-90cefb08a6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dab23c-3939-435e-a748-52840dd489e3",
        "cursor": {
          "ref": "34a2a73b-ea8b-4890-9ff2-e653f2696777",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4e388d55-3d3b-4d24-aa2f-57b095a461a5"
        },
        "item": {
          "id": "a5dab23c-3939-435e-a748-52840dd489e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2a03d8d-dbae-46a6-b29d-a56ab01cfab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df5bf75-7e16-4920-b2ab-86c954cacb1d",
        "cursor": {
          "ref": "4750e5ab-0814-44a6-9b88-7d48a46983f3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1eda56ec-1914-462b-b0c8-bd049d02096a"
        },
        "item": {
          "id": "7df5bf75-7e16-4920-b2ab-86c954cacb1d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "43a4f155-7514-4400-b45b-1c1133260973",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f68220fc-f3a3-4a90-b178-d4e555ea9f05",
        "cursor": {
          "ref": "808c0dd6-12cf-45cc-af4f-bdcf0895248f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58d0c97a-6683-4ce1-a9b5-b4ee62537e6d"
        },
        "item": {
          "id": "f68220fc-f3a3-4a90-b178-d4e555ea9f05",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65f11bb3-89f6-45b4-8092-6e2a3167b6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dea916-de96-4a34-8a40-59a53de4a27a",
        "cursor": {
          "ref": "fba40686-b540-4455-8423-abc04cca1534",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc918566-bd47-4cef-a4db-f007f0b1d54b"
        },
        "item": {
          "id": "12dea916-de96-4a34-8a40-59a53de4a27a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "867147ef-e444-4c64-81cf-bcc4e0020731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb22135-c72b-4b0f-8c2c-28824628fedf",
        "cursor": {
          "ref": "9e950962-dfaa-40c6-9e42-5c29dd63d3ef",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "003aa1e4-6500-4b6d-a5f6-71018369f16f"
        },
        "item": {
          "id": "4fb22135-c72b-4b0f-8c2c-28824628fedf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b151cb3c-f52b-42c7-977a-9b2f9b881bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be741b73-fd0f-4a6e-af29-85e3100aefc7",
        "cursor": {
          "ref": "d5e3a0d7-ec1c-47f3-a79b-bdfb4e5f6e5e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "be9ffec1-edd2-4f4c-8455-9ab739abf2af"
        },
        "item": {
          "id": "be741b73-fd0f-4a6e-af29-85e3100aefc7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5997dc4-cf2c-4b44-ad67-1963bf07bdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20928c3e-c5cb-4a5a-a34a-485a7ed5fa93",
        "cursor": {
          "ref": "02e9a21d-8b58-420f-9442-795fc360dccc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "212c065a-f840-41f8-9e5d-eb3df80d6c47"
        },
        "item": {
          "id": "20928c3e-c5cb-4a5a-a34a-485a7ed5fa93",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7171e79d-a660-4187-a8ee-4cf2efb35dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e99fc68-3038-4434-822f-eb882965179e",
        "cursor": {
          "ref": "a90a8a97-f1dc-4917-a538-2119081954eb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d825a8f2-98dc-4feb-9e24-00a5ca369c5f"
        },
        "item": {
          "id": "7e99fc68-3038-4434-822f-eb882965179e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed47b82f-5557-458f-9502-705cc47f0b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3441fee4-4fde-4d86-81d7-00336bd25e0e",
        "cursor": {
          "ref": "6340453c-3fdb-4140-bde9-66af0099ff63",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8da8c11f-2c66-46b6-b59b-f5acd2a8b6f4"
        },
        "item": {
          "id": "3441fee4-4fde-4d86-81d7-00336bd25e0e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "533f31a4-1951-4193-9943-2df562934437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517bf6fd-e85d-49e6-a44c-fcd251061d52",
        "cursor": {
          "ref": "4d2b2aef-c23e-48e5-a124-45cc3f16165d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f8a672ca-8528-48ac-a938-85676460729c"
        },
        "item": {
          "id": "517bf6fd-e85d-49e6-a44c-fcd251061d52",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6f7bc6c-dff5-4c16-a4b3-b2e424a28c63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0331917c-fa44-4e65-9d54-e8f2b7f50d5d",
        "cursor": {
          "ref": "33668506-9594-47f3-a17f-18eb23183bc5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5f48e893-5bad-4c1a-b3ab-f8b7222129a3"
        },
        "item": {
          "id": "0331917c-fa44-4e65-9d54-e8f2b7f50d5d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ecade01-7688-4495-8c41-9e82683cfe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a1154-2537-43ab-98dc-e372713fdeb9",
        "cursor": {
          "ref": "eb3968c4-af5b-4a9e-9d3d-a0749ddba81c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "abf12e35-19df-47a8-9672-530eca7deb41"
        },
        "item": {
          "id": "c56a1154-2537-43ab-98dc-e372713fdeb9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a0a3917e-a27a-4917-a267-d386b1c888f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a173ba7-55bf-41da-b53e-fd8b27a4996c",
        "cursor": {
          "ref": "31ad7436-3311-4c07-8613-797756773b9b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b9d42ef0-129d-4d55-8e1e-8a373ea7c2b4"
        },
        "item": {
          "id": "7a173ba7-55bf-41da-b53e-fd8b27a4996c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d111b017-9590-4474-a2dc-cc804ba40b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b73d330-dd70-4cd5-a014-20ce3949bd0b",
        "cursor": {
          "ref": "46bb0047-64cf-4b77-8cdb-b87d8d680908",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2d754e75-056f-4488-a424-08313272e650"
        },
        "item": {
          "id": "1b73d330-dd70-4cd5-a014-20ce3949bd0b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "884b60e9-2484-4087-a414-12a593e1066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd164197-57dc-4dce-b234-ea70e974e7e9",
        "cursor": {
          "ref": "5b870dfc-1f20-4590-9d80-5316bec802e5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "08095c90-c026-42ff-b810-d2d2b784029f"
        },
        "item": {
          "id": "cd164197-57dc-4dce-b234-ea70e974e7e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cac32de6-19ac-4d50-902e-853b8b5765a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603ba6c5-5838-4230-be0d-fb85bb0cf014",
        "cursor": {
          "ref": "9cc21f9f-f9a2-4def-beab-d1867ac140c2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0376c0cc-f175-4d99-a95e-3e00764879c7"
        },
        "item": {
          "id": "603ba6c5-5838-4230-be0d-fb85bb0cf014",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b90809f-7a11-4a3d-8d71-9aaa5d420c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89bdbd9-4cb8-41df-9613-884caca508a8",
        "cursor": {
          "ref": "cd7f6adc-f564-4230-a8da-071adc10c666",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb542799-dc52-4a81-b97f-cc348cce09ac"
        },
        "item": {
          "id": "b89bdbd9-4cb8-41df-9613-884caca508a8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f66f3f7a-75ef-41d7-8145-3e34fb104cd1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "96df0047-2e4d-4bd9-9b51-d8e3f28df0f5",
        "cursor": {
          "ref": "0478e883-964f-4383-b289-b9ba5877f34e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7f05906b-8beb-4847-9fed-28a9243a4819"
        },
        "item": {
          "id": "96df0047-2e4d-4bd9-9b51-d8e3f28df0f5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ae034fa4-c752-413b-bc2a-05115bb8f2f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c75d9de9-fcd9-4b4a-ab5b-232a5757c69a",
        "cursor": {
          "ref": "80e53f6d-2705-4901-a83b-1206d302da73",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7d192086-9c7a-4ef7-be81-88d42656d37f"
        },
        "item": {
          "id": "c75d9de9-fcd9-4b4a-ab5b-232a5757c69a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6521d38-c4f0-4e22-829d-48ceec4e43a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "76903a0c-53f7-41c6-bf55-74a99b6083d9",
        "cursor": {
          "ref": "e32c6249-e692-4b39-85fe-19c95d7b6812",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "57388f4b-2f28-4055-9e07-6086f6257a67"
        },
        "item": {
          "id": "76903a0c-53f7-41c6-bf55-74a99b6083d9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c405a34d-a0e4-41d9-b99a-868341caa4b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "00404c20-8788-4feb-9ef4-c993e02c8019",
        "cursor": {
          "ref": "9ade5fd8-d676-410e-8914-835d68d1fd32",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "09a59001-64df-4e82-81fc-1ea719493cc9"
        },
        "item": {
          "id": "00404c20-8788-4feb-9ef4-c993e02c8019",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "23203a9d-18bc-455f-a90d-3b9a220947a2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "815b7ad0-7bed-4d4e-afb1-f405e6cf5631",
        "cursor": {
          "ref": "14f6333e-9816-43d2-9997-3dde7d1858e6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "284fa1e0-d816-401a-8467-d2fd7c82ce40"
        },
        "item": {
          "id": "815b7ad0-7bed-4d4e-afb1-f405e6cf5631",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aea61eec-4bbe-46a6-be7b-ab16aa847e14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "04b2699a-8514-46db-9c35-04fdd54ae626",
        "cursor": {
          "ref": "0248712f-d7f6-4539-86f9-ef4de45a96f3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a4211cbb-ba01-4528-b6c4-13cdcf845e05"
        },
        "item": {
          "id": "04b2699a-8514-46db-9c35-04fdd54ae626",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b468f90d-c7d8-4ccf-ada8-44f5385c7ccd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea66fe22-d0a1-4a83-b4d7-f06338d4e112",
        "cursor": {
          "ref": "1c093e30-fa38-474f-9730-3bf6f6a2ed34",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3b336204-6124-4802-b72c-6e3f2ef3b118"
        },
        "item": {
          "id": "ea66fe22-d0a1-4a83-b4d7-f06338d4e112",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "520aaa48-a6f4-47e3-b84e-8787667ba1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4182a6-e3a5-416e-9115-ecc6021f65c0",
        "cursor": {
          "ref": "6dc257bc-63d2-4119-8f6f-5539d9e754c2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1241b51a-d868-4090-a465-e533b6efefb8"
        },
        "item": {
          "id": "4e4182a6-e3a5-416e-9115-ecc6021f65c0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "11770119-b0b4-41d3-8928-07043ef94bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8b05ff-71b2-4473-a249-c01b9ac00e03",
        "cursor": {
          "ref": "a2a61559-5dcd-483a-a6db-763bdeeaf29b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e4c3798-af47-4187-8796-c853c28f55ce"
        },
        "item": {
          "id": "4c8b05ff-71b2-4473-a249-c01b9ac00e03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "602473af-479c-4ca6-b19b-ef9dde289299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1038b5f-f521-487a-a4ca-8394b54545c8",
        "cursor": {
          "ref": "ceb8cb3d-6a7f-452e-a59d-f6fc55a48d41",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dd6f6bce-9c80-4830-9858-07c839e4841c"
        },
        "item": {
          "id": "d1038b5f-f521-487a-a4ca-8394b54545c8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "df49675e-66b3-4fd0-8259-e6e0699be12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d99e92c-0534-4694-9abc-a220ebc38e1b",
        "cursor": {
          "ref": "82670110-febd-47c8-a4ab-d6c34648e66b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ef988c0f-e95e-45cc-8220-e982332b723b"
        },
        "item": {
          "id": "3d99e92c-0534-4694-9abc-a220ebc38e1b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f98d4417-b500-49cd-860d-5b1b63fbf778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e224e64d-0927-4702-8a00-cc68bf172c0a",
        "cursor": {
          "ref": "6478e8d1-a573-40ea-a393-1d309b6dedb3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "76eed4a2-5046-4d2d-bec8-1ab59e4ef367"
        },
        "item": {
          "id": "e224e64d-0927-4702-8a00-cc68bf172c0a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0e6e3cc9-3cae-4f9a-983a-97e89653aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1367c2-c8a8-4156-ad09-66c830d7eb90",
        "cursor": {
          "ref": "9d058826-397a-467e-b9b0-6d44815776a6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e1554c87-5f70-4be8-8b5f-b6d18c57c4ff"
        },
        "item": {
          "id": "0e1367c2-c8a8-4156-ad09-66c830d7eb90",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9b55b2a-fe52-4286-9381-ec9b903d22a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60829912-fce5-4d28-8d75-8fd84dcad3b3",
        "cursor": {
          "ref": "4aa5ddba-6a05-4228-affa-dbd3eca31bb2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e0d4a4b-e35c-409f-8c73-54e260989992"
        },
        "item": {
          "id": "60829912-fce5-4d28-8d75-8fd84dcad3b3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "64da6015-2c97-4fa0-b32a-45bb17f60cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120d1b01-5302-4994-bde4-c446a44f1def",
        "cursor": {
          "ref": "2330a37f-bbca-49f1-abe6-a9d88e707dce",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "65461e6a-a081-4893-9532-ccdebd345cf5"
        },
        "item": {
          "id": "120d1b01-5302-4994-bde4-c446a44f1def",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "66a419d0-2714-40fd-947c-9cd33623ec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e006745-03fd-445e-bbd9-a606120ae636",
        "cursor": {
          "ref": "afe85a4c-327d-4f1b-a8eb-9e9db6fe5542",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "179d2a54-fb96-430b-a5bd-85cb48895519"
        },
        "item": {
          "id": "2e006745-03fd-445e-bbd9-a606120ae636",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e665ee81-e114-4470-8446-f5df645539cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159be319-5d11-48b7-bf75-ed457c6fed78",
        "cursor": {
          "ref": "3350f63c-61ac-4864-9d56-65c94edbca1b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb4f3b1c-a362-4a41-b02e-e2bea3bf76eb"
        },
        "item": {
          "id": "159be319-5d11-48b7-bf75-ed457c6fed78",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3da2af68-5e17-466d-a96d-b3a1006804f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f24013e-157c-484d-8b71-2f2c29959048",
        "cursor": {
          "ref": "31c1a7d0-9c47-44ff-af1a-b9f5faa1b2a5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0095fda2-2cca-4bb4-ae49-14785b55c718"
        },
        "item": {
          "id": "4f24013e-157c-484d-8b71-2f2c29959048",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8c219456-6b63-4781-85f5-df19a92216cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd3b78d-8ce9-4949-806d-fc8519f223b4",
        "cursor": {
          "ref": "9abeb717-dfd9-41d1-a42e-ebf80d3dbb0f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9b96fb3-de32-415f-a7d9-502514536ecd"
        },
        "item": {
          "id": "4dd3b78d-8ce9-4949-806d-fc8519f223b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5fc64c1f-6ee6-4054-8518-73572235efbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a8d32-494d-4a9a-b970-d6996e911427",
        "cursor": {
          "ref": "16f7fed9-bcd5-4860-85ea-2247dcba6ab2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2743e5ad-ea3d-41b1-834f-cb404f26fce5"
        },
        "item": {
          "id": "ae1a8d32-494d-4a9a-b970-d6996e911427",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5c8d6e08-e4df-40ab-80c8-a903f812cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54745b8c-46e9-4dca-8521-bd169eab5008",
        "cursor": {
          "ref": "e4426706-3f5e-4d1f-9ba7-e37ea53d96a0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3b566817-3a0b-4d1d-aaf1-dbecfb0c5ce0"
        },
        "item": {
          "id": "54745b8c-46e9-4dca-8521-bd169eab5008",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bc374cb6-4d3e-4433-a41b-0fba7ae107ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f335d00-30de-4fdd-9758-f7ffeafedd0c",
        "cursor": {
          "ref": "3f041962-82ef-4ed9-8b1b-832a016367e6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "05e9ba43-f953-471d-a5fa-210f3c62928e"
        },
        "item": {
          "id": "9f335d00-30de-4fdd-9758-f7ffeafedd0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dec44fc6-2c3f-4220-a034-b5714b73481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0604be-63d4-4309-89e4-b673af4b7616",
        "cursor": {
          "ref": "d3095866-ba9d-458e-bb75-0376ecfe8afb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dafca1a3-f030-4844-8e78-4542b9cc588a"
        },
        "item": {
          "id": "2f0604be-63d4-4309-89e4-b673af4b7616",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2a73e5fc-8822-4d1b-a611-eaea1aa2ef60",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d293b6b8-bcfe-42ef-8d7e-4f7d4d26cb5f",
        "cursor": {
          "ref": "23f252ba-9d9b-4d6d-b37a-9bec72698e61",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bda668c-d7ff-4114-bd0b-eec27140f30f"
        },
        "item": {
          "id": "d293b6b8-bcfe-42ef-8d7e-4f7d4d26cb5f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1adcd35b-1640-4689-9356-83f1a00cb196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a114a13-d492-415b-a181-6f8b703b9d4d",
        "cursor": {
          "ref": "21549e7f-d239-42cb-95b2-e8ea29d7f238",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d9217cae-f000-4d2f-b17f-bb4bb8955b1b"
        },
        "item": {
          "id": "1a114a13-d492-415b-a181-6f8b703b9d4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "684267d2-7c7c-4669-b829-9117929ffe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fbdcc6-c237-4a8c-8e55-d7c14b91517e",
        "cursor": {
          "ref": "97f7a4ff-80a6-4ee6-89e7-a534f10ac2c3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0a5c8e15-9689-497c-a1f8-18ddf6ab57fe"
        },
        "item": {
          "id": "f0fbdcc6-c237-4a8c-8e55-d7c14b91517e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "54a6ccf7-2ef9-4d8c-8e70-d6edbc2a6ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63259f65-70e8-41af-aff8-ce2d8587f2d2",
        "cursor": {
          "ref": "4e88ece1-37d2-4ce2-b35d-48e2cab0c8ba",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7cf0f8fe-bfef-4d59-97f1-b199dca47de1"
        },
        "item": {
          "id": "63259f65-70e8-41af-aff8-ce2d8587f2d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0e63f98b-5da9-4c0e-89db-dafc9bca0c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467549b0-f3d5-4cf3-a344-1f19772dbdf9",
        "cursor": {
          "ref": "b278ed8e-8286-4282-be67-2fd4ac4c1af3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22387b87-592a-424e-b115-ca50da2141da"
        },
        "item": {
          "id": "467549b0-f3d5-4cf3-a344-1f19772dbdf9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f608b6f2-9e82-43fa-8b30-be6a54c8954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9c9b96-83ec-44c3-8ce4-c43add97f480",
        "cursor": {
          "ref": "76858397-c978-4315-8e1d-122805688f4e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2f52034-e841-44c6-ab68-e42db3878a80"
        },
        "item": {
          "id": "5b9c9b96-83ec-44c3-8ce4-c43add97f480",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e6bb95c8-861c-45f9-a492-81a1d920ac39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a60bb2-b949-4cf7-940d-781677cf6089",
        "cursor": {
          "ref": "65e579f5-3c6d-4e67-9717-295ca97f112c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8fb0659c-5f16-4e85-89cf-009d349f1340"
        },
        "item": {
          "id": "88a60bb2-b949-4cf7-940d-781677cf6089",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ee66d228-3894-4e4e-87a3-16d78c522df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc42a1-7a13-4f37-b9ce-108d2ebc5ada",
        "cursor": {
          "ref": "e238c48d-6044-42b7-8a3b-da250724aa47",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "630e79a2-34ad-4f3b-baa6-349707ce6757"
        },
        "item": {
          "id": "02fc42a1-7a13-4f37-b9ce-108d2ebc5ada",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fc616b9d-3d80-4921-860b-41d3f17ccf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20dad5-52d8-445c-be42-39ce51af48f5",
        "cursor": {
          "ref": "05ca72d8-46f2-444e-9d57-e469afe77b5d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65a45ae7-8619-403c-bf12-76dd9eaa3b87"
        },
        "item": {
          "id": "1f20dad5-52d8-445c-be42-39ce51af48f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aa10a388-da84-4b1d-8efc-f2e7343da441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa52a7b5-c890-4f20-a737-c1ecdc873744",
        "cursor": {
          "ref": "ad77d385-9884-4bdb-af08-d86e1d26dc00",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8968de9a-9d02-4d1f-85ad-b36c9c782ed4"
        },
        "item": {
          "id": "aa52a7b5-c890-4f20-a737-c1ecdc873744",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1a783799-99b0-46b3-901e-cb5d2e13d68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94491435-5c5c-4a2f-a94b-d7c8ba155f9e",
        "cursor": {
          "ref": "efe3d8ed-d29b-4683-9934-d150d27849a6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c4372c9f-ec46-43d5-8d05-79ca03cb0453"
        },
        "item": {
          "id": "94491435-5c5c-4a2f-a94b-d7c8ba155f9e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e63f5a06-5a86-4df0-a306-cc87a5e12af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28c04b-10ab-4898-b413-725ce0d240d4",
        "cursor": {
          "ref": "fc2c4de8-385f-4bf6-ab1e-f673a43287a1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8fc98b2e-6e3a-4f2c-9c8b-c63c32ced0e1"
        },
        "item": {
          "id": "fd28c04b-10ab-4898-b413-725ce0d240d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a3b50f1-a992-43f3-912a-247d5dc41a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f90524-d6a2-40ba-9f63-70ca3c236d26",
        "cursor": {
          "ref": "4afa28ba-ee08-4617-a574-798ebf90d071",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "34d9b240-c4e0-4cb5-9438-90d70dba97fd"
        },
        "item": {
          "id": "b1f90524-d6a2-40ba-9f63-70ca3c236d26",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "44cb9cd8-6d45-4615-9968-854618a5f525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b226736f-c4ae-4957-be63-0301e8215612",
        "cursor": {
          "ref": "9fc2aa9c-96b2-4318-9c37-ed2e8ab578ec",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4ade52d9-809d-40e6-9d4d-e85e489b1bf5"
        },
        "item": {
          "id": "b226736f-c4ae-4957-be63-0301e8215612",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "38f8f904-d722-4d4e-abce-586315384d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4a037-b795-49a7-8de1-d31446598aad",
        "cursor": {
          "ref": "ed9b8ef2-b528-48f7-b650-78f4cc87f1dc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0800bfa6-b3a7-4e72-a0eb-f9807e5f3e99"
        },
        "item": {
          "id": "d1e4a037-b795-49a7-8de1-d31446598aad",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9e426605-a743-406a-a478-0d32d36c0b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bdb6fa-e912-4968-b847-0f5c5b0f0c7d",
        "cursor": {
          "ref": "8fc39614-6c17-4147-973e-42959522658b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "10b00985-c43b-44db-9b7b-53e09dffc7f9"
        },
        "item": {
          "id": "88bdb6fa-e912-4968-b847-0f5c5b0f0c7d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cbd4b822-03f7-4934-9134-feaccaabd70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bb6286-59c0-4ae7-8f8c-aa8133c5166e",
        "cursor": {
          "ref": "d12c359c-687d-4fd4-857c-e35214f90762",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "985dd3c6-1db5-48e0-b374-fb78de09313f"
        },
        "item": {
          "id": "e4bb6286-59c0-4ae7-8f8c-aa8133c5166e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "39a34d90-fdf1-4cc0-b8e0-b6ccf7a65a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea1a9fa-0b9a-41c2-adfb-299efe2ad14b",
        "cursor": {
          "ref": "bbce8de6-89da-4702-8bdf-8408f1b7d8f7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "38cfa7f7-ecae-488d-b7af-4a94db928da6"
        },
        "item": {
          "id": "fea1a9fa-0b9a-41c2-adfb-299efe2ad14b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ce5d753f-c5f7-487a-ba2d-696b0b6d9478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec859a1-34e7-4003-b6cc-fd894c3b7237",
        "cursor": {
          "ref": "36c2c94b-b22f-4a50-a6d6-ed2f072c1d3b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4210dbd-5a32-4e16-a625-36d4a9a47b5d"
        },
        "item": {
          "id": "2ec859a1-34e7-4003-b6cc-fd894c3b7237",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6dbea17b-5305-42e2-935d-6d659860a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f1a84b-6f13-4128-b4c4-e46dc1bcb868",
        "cursor": {
          "ref": "d24bc113-8e2a-4311-bb80-fe5a39d86ff8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9770de57-6b3f-4e7c-a75f-44a8ced317a9"
        },
        "item": {
          "id": "29f1a84b-6f13-4128-b4c4-e46dc1bcb868",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0388f48d-afd8-4e73-8540-505c423549d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191b3098-90b4-43e5-88f9-79cf118b92f4",
        "cursor": {
          "ref": "1895260e-1091-4ed7-92a1-cd2e0b5d4c71",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "99733850-ee39-4ca7-a591-6f0ebb066d37"
        },
        "item": {
          "id": "191b3098-90b4-43e5-88f9-79cf118b92f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "87249de2-5b80-450c-9b97-4a44ad5552cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215eea28-b0ae-498b-8a00-ec64d708d5a7",
        "cursor": {
          "ref": "9f400146-6ce4-40b8-a4b2-675d7a983546",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "afe22621-781c-4954-8bdf-d73aef63582c"
        },
        "item": {
          "id": "215eea28-b0ae-498b-8a00-ec64d708d5a7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9a8f847-301d-434e-9aef-4171e7e93569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f6e90-eac9-4398-8dca-e23fc599beb3",
        "cursor": {
          "ref": "2d9b96b1-e920-4ba2-aa63-7447f50c8882",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f5cd260b-4bb0-4603-87c7-6a3ce57f4721"
        },
        "item": {
          "id": "cb7f6e90-eac9-4398-8dca-e23fc599beb3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b87a97b-7ed1-4723-91a3-9099cfeee0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367569aa-68fd-4a4a-9f61-02cf56cce501",
        "cursor": {
          "ref": "aae42756-7891-416f-b3fb-a925029ad5d1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f1bb2ed3-86e9-4eba-9f1e-6b7da4d80894"
        },
        "item": {
          "id": "367569aa-68fd-4a4a-9f61-02cf56cce501",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "74842125-6c59-4e17-a03c-bac5403657cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2342cff5-2b11-430b-9779-235c0a995428",
        "cursor": {
          "ref": "78db1f99-4afa-4c60-a1be-27123eff2171",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "900be038-7eb5-4126-a773-eee1ec546e81"
        },
        "item": {
          "id": "2342cff5-2b11-430b-9779-235c0a995428",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4cdc2fc6-f5e8-460e-bd39-1645f1e8f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e85c8-dada-4fb5-b30c-ab55bcf91164",
        "cursor": {
          "ref": "c0ea644a-27f6-45ed-94ca-ab745358d2b2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9109b6ba-51fd-4e75-8407-ffea9661a986"
        },
        "item": {
          "id": "3e0e85c8-dada-4fb5-b30c-ab55bcf91164",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "77337d6a-6e6d-4ad6-a7c3-711fa381c1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f57190-3eb4-4112-8a7b-cc32334d10fb",
        "cursor": {
          "ref": "04a32ee9-9fc6-445a-baf1-2c397c5f0a1b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c3ec010d-842e-4626-9e5d-f1e4400d6c66"
        },
        "item": {
          "id": "15f57190-3eb4-4112-8a7b-cc32334d10fb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "12929b18-168d-49f2-86d3-b16d1f362fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb6ee7-abb2-4c2a-a642-58620aa284f1",
        "cursor": {
          "ref": "9227bff3-7101-4f3d-9826-56882d4b16a2",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4fdcd16c-9b12-4a8d-b965-b23b753ac94d"
        },
        "item": {
          "id": "4abb6ee7-abb2-4c2a-a642-58620aa284f1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18aed083-5876-4433-bcf2-4c9cf4958ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37628a81-6625-422b-96b4-024d3ba873e9",
        "cursor": {
          "ref": "383045fa-5e28-49f4-8121-b728e787a644",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "090ecb7c-1402-4dc0-bb08-acbd55db95cf"
        },
        "item": {
          "id": "37628a81-6625-422b-96b4-024d3ba873e9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "28e6ffe9-2934-4bc7-90e0-048bd2ea8f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c7d43-7447-4a1c-8ab9-9d12b23e2a75",
        "cursor": {
          "ref": "eec77dfd-2d81-4600-adf7-e954b47d41b9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "287b6975-103c-481e-89f6-bc4cbf297607"
        },
        "item": {
          "id": "8e7c7d43-7447-4a1c-8ab9-9d12b23e2a75",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fbad9fef-065c-4a6f-aa6e-1b811a02961d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504144df-c94f-4264-9e75-430bebf9322e",
        "cursor": {
          "ref": "6f34e2ac-9e4c-4ca7-a790-b7e939c25770",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "810b2a5f-4257-48f0-a50c-0c7b39fc3a2d"
        },
        "item": {
          "id": "504144df-c94f-4264-9e75-430bebf9322e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1d9d3689-18f8-4c23-99dc-14b77f3860be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98876c4-8a6d-4e07-a307-c003f2a884a0",
        "cursor": {
          "ref": "24060a35-695d-44b2-80dc-7df5e9cc5b9c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4990f7ce-679f-4128-8955-71f774a16a5c"
        },
        "item": {
          "id": "d98876c4-8a6d-4e07-a307-c003f2a884a0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9e25c0ec-09c5-4650-8b9e-04e3c1914d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defd30e4-4332-4ee3-9234-4a3ed7e8013d",
        "cursor": {
          "ref": "75b0fc4e-4e43-43d9-91d1-0ab09805dc44",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97af7b15-90d3-4096-8320-06043e05b43e"
        },
        "item": {
          "id": "defd30e4-4332-4ee3-9234-4a3ed7e8013d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fa34872c-fbf1-4bba-be4c-211acfaae135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440fea2d-bf81-418e-bcd3-dd6a28e02bf9",
        "cursor": {
          "ref": "0a290dd9-1bd7-4578-a873-729e34472018",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2993228f-f037-49bd-9f49-bf6429b49c78"
        },
        "item": {
          "id": "440fea2d-bf81-418e-bcd3-dd6a28e02bf9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "059a986e-e1c3-494b-b9dd-a067ee3eb437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b7ac3f-7bf2-4099-ad30-1743f6a0a561",
        "cursor": {
          "ref": "994e094b-13b5-49ff-9bb5-63c5844a73cc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf463faa-ad74-42fe-bc26-06bb02f062a1"
        },
        "item": {
          "id": "05b7ac3f-7bf2-4099-ad30-1743f6a0a561",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e984b84e-08f7-4824-810d-92b2528e9213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323e17ed-05b6-483d-a7ab-2790e0963fdc",
        "cursor": {
          "ref": "d75c6e83-da2d-419e-a5f2-6805abc68403",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c0db701-4d58-4966-91d3-177e087d555d"
        },
        "item": {
          "id": "323e17ed-05b6-483d-a7ab-2790e0963fdc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b195a87c-ee32-4e50-a69e-573be75d4897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad79ec-0500-4a3d-846e-84babf61c3ce",
        "cursor": {
          "ref": "5a26d949-6c64-465a-92d3-a69ffc108b62",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "602cf0c8-7071-44d6-899f-77d7285c0a0a"
        },
        "item": {
          "id": "86ad79ec-0500-4a3d-846e-84babf61c3ce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bbc64637-917b-4f55-b26e-246c665852e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c382b63-6092-4c0d-b06c-e2ee7aa0a9fc",
        "cursor": {
          "ref": "0e7ca77b-8144-49be-a299-94a846cb2d38",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c4d2a9dc-8f77-4810-b658-310a6289f879"
        },
        "item": {
          "id": "4c382b63-6092-4c0d-b06c-e2ee7aa0a9fc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b15f863d-87d3-42cc-b8f5-0649795a78eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e039b44a-52ca-4c3e-84bd-872786405aa6",
        "cursor": {
          "ref": "0330a49d-6535-4196-a923-20a6ac7017a9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60f02ba4-a75a-43a4-990d-4a0159a4ddf1"
        },
        "item": {
          "id": "e039b44a-52ca-4c3e-84bd-872786405aa6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7756e23c-ed3a-4af9-80b3-1f316c6ff343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c5e765-c2a6-49ab-8ae0-3e4239dff357",
        "cursor": {
          "ref": "4ca82262-ee8d-4b4d-8338-c21e739d7120",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3603552c-791d-475f-b51a-a9226567883f"
        },
        "item": {
          "id": "46c5e765-c2a6-49ab-8ae0-3e4239dff357",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c23ce90b-a50d-47a0-af07-a30e0b7c6d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56a15a-6695-4a8f-a083-6e4ea50d0a7d",
        "cursor": {
          "ref": "d792089c-cfa5-423b-a84c-5918b1d2aa89",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "92f0a7c3-fe29-48f0-92e2-3c50e91835b4"
        },
        "item": {
          "id": "1d56a15a-6695-4a8f-a083-6e4ea50d0a7d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "52d40bc4-ab08-43eb-9334-e1d0d870e20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28478a69-7cc3-4d6b-8a9e-53bf0248010e",
        "cursor": {
          "ref": "52b85bfb-2bb3-4e9e-be39-230346b46be1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f5aee508-7dc5-4ef2-9152-f876badf35d3"
        },
        "item": {
          "id": "28478a69-7cc3-4d6b-8a9e-53bf0248010e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fd9208bf-bb75-404a-8da1-7b847dd237bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a59bd8-71da-4027-a3f6-f7e365b25f8d",
        "cursor": {
          "ref": "082bb18c-56ca-4b7f-b18d-9611f90d170f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ccb81f4-87cb-4eaa-b78a-4c7c8b8cb982"
        },
        "item": {
          "id": "c9a59bd8-71da-4027-a3f6-f7e365b25f8d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cab0c96a-5418-47c9-a59c-9ae152d919c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b30a57-61e0-4a0d-90dd-360af49eda47",
        "cursor": {
          "ref": "eb189b5a-4d7a-4d59-99bd-8da3eb43d083",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2a49c31c-ec21-4491-b88f-2bd01ec180df"
        },
        "item": {
          "id": "20b30a57-61e0-4a0d-90dd-360af49eda47",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d083fc82-52b7-413a-80a4-61c27ec4eec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74f1bc0-4eae-46c9-a07d-715de866561e",
        "cursor": {
          "ref": "073d194d-848f-4ec0-bab6-ca148f62a8b9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79a05ae0-2b2d-4200-bb00-14a6e69a6693"
        },
        "item": {
          "id": "a74f1bc0-4eae-46c9-a07d-715de866561e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "52bfc10d-3ef6-472d-a36b-37d198ad9f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ce11ff-1584-42a0-b286-05f8943a8898",
        "cursor": {
          "ref": "3be870ce-2369-4159-a37e-ec9ce0336056",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7e2e33b0-8f35-4494-8fa3-51b269c15649"
        },
        "item": {
          "id": "e1ce11ff-1584-42a0-b286-05f8943a8898",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5d11925-e987-49f4-94c0-23c3c65851cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266b5b95-512a-4da3-bd4b-95b4b96d4654",
        "cursor": {
          "ref": "f19114e7-0470-4289-a4bd-1c1ba35d6a3f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "83d169aa-3069-4dd0-b4f9-54855c9151f1"
        },
        "item": {
          "id": "266b5b95-512a-4da3-bd4b-95b4b96d4654",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "834bb987-c4d1-4d72-ab13-fcd40ebd222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e535094-0166-47de-b6b6-a8ea446a9573",
        "cursor": {
          "ref": "37b78487-1396-421d-999c-134e1c71f89a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4979223a-86cc-43e2-bf99-f0a461def025"
        },
        "item": {
          "id": "9e535094-0166-47de-b6b6-a8ea446a9573",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2e7bd772-7dc0-4be5-92bc-42c8f37ba931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35653ee2-d510-4f8f-8dad-b164ccb1e610",
        "cursor": {
          "ref": "1ad44529-095d-4213-b233-f1db0fee0e8b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "99154c17-a1e7-429b-a4b1-e995c830ced9"
        },
        "item": {
          "id": "35653ee2-d510-4f8f-8dad-b164ccb1e610",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0066afe8-68ef-4408-b898-77de557bbeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002bc91-ca53-4127-b0b3-b12a5997def7",
        "cursor": {
          "ref": "eebda16a-ec5a-4b64-8080-3dec9ea9d7f4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "30b1115f-9eba-46bf-a48a-57bc175f78e1"
        },
        "item": {
          "id": "9002bc91-ca53-4127-b0b3-b12a5997def7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "975f63bf-efa0-4d08-846a-a074e96e3150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd502360-8e09-4743-aaf9-17b76f9bf0db",
        "cursor": {
          "ref": "3393e115-9c5b-4254-a0da-bc4943400d6f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aea3b171-b43e-47b6-8bff-4ee28505a25a"
        },
        "item": {
          "id": "bd502360-8e09-4743-aaf9-17b76f9bf0db",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "af4e0d48-6aa5-49d1-bb8b-0cd347f144e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15147d01-f604-4754-84cf-8d8dc87cdc02",
        "cursor": {
          "ref": "bf4931f9-e15e-4d02-96d7-ba07a9ddc605",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da706e37-170f-4778-875b-ca0c0320f1db"
        },
        "item": {
          "id": "15147d01-f604-4754-84cf-8d8dc87cdc02",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "08fb8b56-bfd3-4117-85c4-9fc6d1a0fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83f9a25-ea18-4539-842c-2ccc7c7caef9",
        "cursor": {
          "ref": "19a697c0-dcef-4085-ac57-7c6f389a8d53",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "091ba7d9-fae0-4297-93b8-8561a8c35bbe"
        },
        "item": {
          "id": "f83f9a25-ea18-4539-842c-2ccc7c7caef9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35e90e01-6ddf-48d0-a2e1-c2ea0b1e62e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a987dc31-a472-4fcd-9394-696c81cf559e",
        "cursor": {
          "ref": "6466f878-87d0-4928-bb87-c09f413ffcb2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1d807e80-6b8e-41ab-b4f8-8ffa2b5c5dff"
        },
        "item": {
          "id": "a987dc31-a472-4fcd-9394-696c81cf559e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a1406838-2575-48b1-90b3-de10c0be24d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add6f749-59f9-45dd-a91c-1ff5f2660534",
        "cursor": {
          "ref": "eda764be-4341-40be-b34d-f26be416bd51",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "21bbce0a-b330-4f98-83a5-4433cc71f84e"
        },
        "item": {
          "id": "add6f749-59f9-45dd-a91c-1ff5f2660534",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "75c83f72-a5cd-4739-83c7-f6e4f9579451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7ac557-318a-4a64-b683-3e67d7654ce0",
        "cursor": {
          "ref": "2139acc7-0fd3-46b6-a2b2-b2fc2c2a9c0d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aba26285-0fe5-4785-a074-90a565fe36bc"
        },
        "item": {
          "id": "4e7ac557-318a-4a64-b683-3e67d7654ce0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "97714eab-afff-4149-b0cc-e619379ff277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e7fe3d-48cc-4762-8c3f-b3d8fdaddec4",
        "cursor": {
          "ref": "11c0f5a7-1391-42f8-b004-2f974ae89c6c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6b748d47-c5d0-47cb-86a6-1609d3086a89"
        },
        "item": {
          "id": "f0e7fe3d-48cc-4762-8c3f-b3d8fdaddec4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7846edbc-c76c-4679-bb50-268d15201543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8165be1-b5d3-42a9-8a25-73beadc610d8",
        "cursor": {
          "ref": "480453b0-ca97-4457-9f87-03dfbaafd946",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "999a1d19-18fc-4e86-87c8-495bd1dda835"
        },
        "item": {
          "id": "b8165be1-b5d3-42a9-8a25-73beadc610d8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b2f3991-faf3-4cc8-92a8-3c035716cf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a82aee-efce-4ef4-8723-e690416c2d57",
        "cursor": {
          "ref": "1ee2b148-0875-4c57-b419-380e2c3be590",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "477a801f-6c41-4175-bac5-9951bd6a435d"
        },
        "item": {
          "id": "52a82aee-efce-4ef4-8723-e690416c2d57",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "439748d0-aee4-43c0-8fa1-ccf1de9cf344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e817503c-e048-42f4-95db-d2f3e5427526",
        "cursor": {
          "ref": "c829df15-92b2-496d-a859-ec55a495c435",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "63b74213-440f-41a0-8a96-0cc5f9161b83"
        },
        "item": {
          "id": "e817503c-e048-42f4-95db-d2f3e5427526",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d450b27-701c-49d8-bd39-bc3ce152483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2391fb41-0e6b-45eb-9f30-d433107d014f",
        "cursor": {
          "ref": "f3efc4d9-95f0-4a47-8b67-c4b8a8f36a10",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a1fc3fbc-cb62-46de-beea-a8d6e07bd56d"
        },
        "item": {
          "id": "2391fb41-0e6b-45eb-9f30-d433107d014f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa25c18b-f9a1-4852-813f-848b63e9c495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27621726-aebd-4264-8d04-d160d2fc5313",
        "cursor": {
          "ref": "1b19b3b1-b9b7-4b20-a2f9-9aae2b0e324f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fd65f40a-ca1e-4ad8-b642-27577cabb64f"
        },
        "item": {
          "id": "27621726-aebd-4264-8d04-d160d2fc5313",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "157be88e-c04d-4f6f-bc44-f5c250be6d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95c6149-ba8c-4a18-ac15-a295a92efef9",
        "cursor": {
          "ref": "a2773626-c2d5-4170-b1c0-1ccae8423735",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "529d3cb6-9963-48a4-8bab-a788d91e53d4"
        },
        "item": {
          "id": "d95c6149-ba8c-4a18-ac15-a295a92efef9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "49f25169-219d-44bb-8eb4-0af826f39bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6b783-3681-4ecb-a770-052da30b8d85",
        "cursor": {
          "ref": "1807588a-c1c4-48a0-9029-50fe2521bd68",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "83cdd4ab-00c0-48d5-b097-f18667eb19ca"
        },
        "item": {
          "id": "6df6b783-3681-4ecb-a770-052da30b8d85",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7205addb-f9d4-4144-9aa6-ad84f95fa8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca1e679-1fba-4862-80b7-57accb640593",
        "cursor": {
          "ref": "b9797117-c9b7-40e1-b657-212dd934a33c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "39d36b88-1d45-4956-8254-d07db7198b59"
        },
        "item": {
          "id": "9ca1e679-1fba-4862-80b7-57accb640593",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d0aed775-3889-4e87-93e7-28f3fe441c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccd117d-6f60-480b-9079-6680761655c2",
        "cursor": {
          "ref": "a21a2532-5429-49be-b439-37be6c243c52",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d4369291-d5dc-41a5-8975-972b18dc0fb9"
        },
        "item": {
          "id": "0ccd117d-6f60-480b-9079-6680761655c2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "90afc24b-6eed-4c25-ac04-4b3b85bfbc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e7eb70-533b-4731-8acc-730fb7b6249a",
        "cursor": {
          "ref": "c3d5acbc-3928-4f5f-835c-afc67f4b1996",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "52567509-13ad-4040-abfb-c7f8740241f7"
        },
        "item": {
          "id": "56e7eb70-533b-4731-8acc-730fb7b6249a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "15ead4de-88b6-4ddf-9b73-a1f838ae508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c138bbdc-8d9d-4ae4-b37e-a14a151996d4",
        "cursor": {
          "ref": "3876370a-cbd2-44f6-8d6a-114f376eee26",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1703cc0b-8a4a-48a0-8be2-b86e8da4baf2"
        },
        "item": {
          "id": "c138bbdc-8d9d-4ae4-b37e-a14a151996d4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a1b0284d-69b4-49b8-b94b-b2986a25b15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5989da11-2c89-4508-86a3-4efbc79d8867",
        "cursor": {
          "ref": "fc2df459-ae00-487f-b29f-697755fe6517",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9846453e-45bc-4208-b716-40059f95adea"
        },
        "item": {
          "id": "5989da11-2c89-4508-86a3-4efbc79d8867",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1a757e55-2ad5-46e2-9640-301b808fc413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087e7a2e-aae8-4860-b770-cc9c014c6d82",
        "cursor": {
          "ref": "90a05ba7-8bbb-42b4-a929-3bbc97fc63a2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d56d65d2-c2de-482e-9e31-306ba468404f"
        },
        "item": {
          "id": "087e7a2e-aae8-4860-b770-cc9c014c6d82",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fc7d26bd-ecb2-415c-9570-00267fb83aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2458b214-27cc-4858-a52f-325072ebd1de",
        "cursor": {
          "ref": "66994a09-55af-48cb-a0e4-9d5a21e7110c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "726ab3e1-2328-43b5-8148-8d2c84719e52"
        },
        "item": {
          "id": "2458b214-27cc-4858-a52f-325072ebd1de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a6ec827c-081a-4e23-92ba-197f81de648b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b8463-bf4d-4d7c-9d59-282f1692ccc4",
        "cursor": {
          "ref": "f667a2c9-4ad6-4dcf-a973-f87d036f2db1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c54bdeed-76b0-43ec-be83-36d3daea6ad1"
        },
        "item": {
          "id": "c57b8463-bf4d-4d7c-9d59-282f1692ccc4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1ee7355c-5627-4bfa-8b0a-df2d3248ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f55c649-970c-4c15-9534-68141a79f84f",
        "cursor": {
          "ref": "1c146799-1d75-4dd2-a6f8-2e90dcfb0293",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4e1636c3-f475-4929-bb31-e45de028e689"
        },
        "item": {
          "id": "1f55c649-970c-4c15-9534-68141a79f84f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "719d5c1a-4176-4eef-bbbc-456f391cf97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200beca4-9782-4515-bc0d-cef9b99178a1",
        "cursor": {
          "ref": "3b41b486-3c1a-40fe-bdfe-7ce42f0a9d76",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cb78bcc4-c75d-46c1-bfb2-b153ace5169f"
        },
        "item": {
          "id": "200beca4-9782-4515-bc0d-cef9b99178a1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "146d3f48-1e56-48d3-b8f6-9b3da199a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4fe0e3-967b-4753-9b3d-1987ad65df4d",
        "cursor": {
          "ref": "62cefcb4-4d73-4d8f-9c15-08cfa807a342",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72559383-b069-4aa7-b2f9-b93bab68132c"
        },
        "item": {
          "id": "fa4fe0e3-967b-4753-9b3d-1987ad65df4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e34471df-f037-4d28-96d3-d437920faefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea86a96-373e-46e8-ae12-7993df217980",
        "cursor": {
          "ref": "62acc6ac-1769-40ca-869f-5cd95b4051c5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d2c2c7d4-ce3c-442c-8ddb-06f25a2748bb"
        },
        "item": {
          "id": "eea86a96-373e-46e8-ae12-7993df217980",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "edce0e5c-822b-49ac-9958-d6f0680cfbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fab6a33-62e9-4a13-aab4-3ea96cdddd17",
        "cursor": {
          "ref": "d8990d48-beba-47f2-a504-af3606498840",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "10d801ef-825a-4ce2-99f9-99967f2f0931"
        },
        "item": {
          "id": "4fab6a33-62e9-4a13-aab4-3ea96cdddd17",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae34a628-fbda-4f46-a316-531b58e83038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedf7e42-39d7-4532-8811-8dbba5aa89db",
        "cursor": {
          "ref": "b14082fb-b36e-4823-9eac-76599ecf5390",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "01396c2a-e99d-420c-abe3-6cdfc4551044"
        },
        "item": {
          "id": "dedf7e42-39d7-4532-8811-8dbba5aa89db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b2140ea4-ea02-4712-9b86-4bc6feace651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f9fd3-3ee0-4db4-b4de-f864eedda783",
        "cursor": {
          "ref": "f2ee5bfe-c3aa-4a91-a31c-3b054a836af5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ae1b69f7-b8dc-41fb-8a23-17a3debf534c"
        },
        "item": {
          "id": "9b5f9fd3-3ee0-4db4-b4de-f864eedda783",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fc27e1f6-ab40-4b78-8017-c4d3640b8f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b14361-8de7-48fd-8b1d-53c177a21221",
        "cursor": {
          "ref": "bdca0d2c-a802-4441-9588-7b1320ab87b1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3200c682-68d8-4b84-956b-4019c6680c39"
        },
        "item": {
          "id": "a6b14361-8de7-48fd-8b1d-53c177a21221",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "99957bfc-f48f-4ebf-a460-85fbce3309d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34519419-8253-41c8-a6a6-ec3ad8559b41",
        "cursor": {
          "ref": "6b4c6a41-4579-43c1-bd7b-cf9f529f75c0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "370125f8-76bd-4422-8f08-f25399a840fc"
        },
        "item": {
          "id": "34519419-8253-41c8-a6a6-ec3ad8559b41",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4a8d251f-7ce4-44e4-ad2a-4335350a9f0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f3eeb5-2257-4cd6-b8a1-8bab0049d227",
        "cursor": {
          "ref": "61c19251-466b-4281-bf3e-d55f64d90f11",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a8a17d5b-4768-4750-81fa-569b7cd94a3f"
        },
        "item": {
          "id": "e0f3eeb5-2257-4cd6-b8a1-8bab0049d227",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df0c0dd6-8370-45d7-9060-31cb3ed1064a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "024dfaea-a2a1-4eba-a31a-0e365c12f92c",
        "cursor": {
          "ref": "3fa7b27a-3cf2-4a37-866d-7ad1a8f5f729",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d000ab6e-02d6-4115-a1e4-28726e42123d"
        },
        "item": {
          "id": "024dfaea-a2a1-4eba-a31a-0e365c12f92c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6a784e9-beef-4cff-b939-c78f662a9bb8",
          "status": "OK",
          "code": 200,
          "responseTime": 2210,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e67c6d-ccee-4686-bd7f-59ef2f679817",
        "cursor": {
          "ref": "60a41148-5bec-4787-9fc3-837ccba16e7c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "44fcc165-c265-4d33-bf37-b865572e358b"
        },
        "item": {
          "id": "e7e67c6d-ccee-4686-bd7f-59ef2f679817",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7676bbfd-a6e3-430f-b194-981cc1e167d6",
          "status": "OK",
          "code": 200,
          "responseTime": 3376,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1187ffda-c0c5-4835-a7fd-2379635de3a0",
        "cursor": {
          "ref": "df0cf7dc-8fd9-4120-a09a-f76528655041",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "721beff9-61ff-428a-bf60-97fa16482894"
        },
        "item": {
          "id": "1187ffda-c0c5-4835-a7fd-2379635de3a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "140cbfee-ff21-42cb-87f3-73db189e7c10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1187ffda-c0c5-4835-a7fd-2379635de3a0",
        "cursor": {
          "ref": "df0cf7dc-8fd9-4120-a09a-f76528655041",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "721beff9-61ff-428a-bf60-97fa16482894"
        },
        "item": {
          "id": "1187ffda-c0c5-4835-a7fd-2379635de3a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "140cbfee-ff21-42cb-87f3-73db189e7c10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a121ff1-07d8-444c-90af-2fd6f59d285c",
        "cursor": {
          "ref": "49d541db-0da3-4490-8bbb-131f04c61589",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "486290ed-3c4f-4fef-bcc9-df06e9069005"
        },
        "item": {
          "id": "4a121ff1-07d8-444c-90af-2fd6f59d285c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56a66222-d064-4141-b475-2a3c8bde57a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 100,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7474ccf-1f23-4201-b248-3bca36c782e9",
        "cursor": {
          "ref": "d110b7a3-382c-47ce-9818-291fe28e6286",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c9d48be-4e42-4e4a-9568-1a00a511e294"
        },
        "item": {
          "id": "a7474ccf-1f23-4201-b248-3bca36c782e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f13fbdbd-5ba1-4fa4-b10b-ba7fdac9587a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}