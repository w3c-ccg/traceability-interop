{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "81fb75cd-05d8-41a3-98a1-b6c9f2ceca77",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c0bf2963-aed1-4913-a172-9500a2b4cc00",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "883869c0-b3d3-4b24-b157-aeb0cac4e1e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66afa9bc-c6bb-4392-90bb-64a8189448b7"
                }
              }
            ]
          },
          {
            "id": "12576a5a-839a-4d34-b29b-3b72114d341b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffcc5a3e-2772-4ddc-b2b4-94570e59b2f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbc48d8c-5ca7-41f6-b607-20796ff12e2d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4229188a-81b6-43b2-a6d0-69001ba92ea4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c8b7383-97ac-48e5-845b-1505f9ed6af4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a88d836-0ba1-4304-af4b-17ed3fd2cc52",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bda0e1a-d72f-49e2-a72e-9d5724a6b470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "041e70d9-76bd-4964-b2e5-9114602bf877"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db13a2d0-88c4-40cf-9448-0fbbc5247bcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e20bfe-4afa-4768-918a-402c4fdd3256"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82cd5b38-b880-49dc-9eaa-144a87a0a9aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c0dd636-a199-4b4b-8947-f1f7873e3b8d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "380aa1d9-a7cf-4648-b5f7-c1588c3dd7b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d59ef83c-981f-4f78-ba79-e1abc118f4df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60512342-0def-46d0-b568-70e2e96e50e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a6a1417-09be-4347-a073-df3865e6eccd"
            }
          }
        ]
      },
      {
        "id": "fa3e8222-e376-49dd-a78d-f54c59ab1ccd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5680b0fb-ad86-448a-bbe3-9d467ad72df2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c49c331-eccf-41c6-bb60-282c485d0169",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0932ff16-2414-4b02-b02a-41532167d4c2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1611b65a-bb41-4d76-a218-36cccd100649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aec5ad4-1390-40b4-baab-89a3ad19edeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df6cf56-264b-4d86-8121-16f829bdc1d4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd66abcb-702d-4e7d-8b92-04c49014058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c532a6-b76c-4b3b-a276-90fd9030cc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c29b275-4c09-4881-8636-da3d78a9a3a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565310e9-b8c5-4d34-aa14-f980a6fb96b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10e1c9d6-2fd4-4970-9fa3-40a77b7fa270"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be335f50-ca3c-4de0-a7a6-77274c603a19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec9059e8-d8b7-402a-87b7-2e71295b8a2b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5170e9c-7f80-4863-bbb9-2d1bb5888af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6703c632-4be6-4db9-b231-3037df6c48a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c336325a-ae58-42ed-94e3-9607f2d78d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867efe3b-d57f-42f6-882f-dce4e7676509"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8988d3df-dd58-46f1-bd79-8f23d3fb4c8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa97f5c-64f7-43e9-b414-9c0d21d82cbb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f163c8c4-48c4-4c2c-b28b-838a81ee6ab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eeb9cdb0-b7a0-4fad-81b8-266050ccf235"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1194db9b-bb60-4c21-be37-6cfca5946bf6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3d79e1ab-ff0d-4003-a5a3-c0fff211fe9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6463e739-f962-4a58-81c9-a87af4514bcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74a3f087-cbbd-4db5-a572-304384fd04b4"
            }
          }
        ]
      },
      {
        "id": "20686e8f-bb41-44bd-ad64-40df8ee2615e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e5696504-e9d3-4897-9e9b-04c1df85ff20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0e20ae0-965e-4759-9a25-272057b41dfa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c5ced5cd-22d9-4f77-b42a-9e675f4f8a56",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4746b2-72cb-459d-a4d1-6cfd732a990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3553d9eb-84d8-4035-9a54-61f7e9029ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3d2f2-3d07-45a0-9677-027895d9179b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a5a0ef0-b532-4700-85c3-070a88c634ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db5497e-f92e-4008-88af-61f33f786e17",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efff2a7-2525-4017-b25c-0e641528fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f6d71-7c9c-47b0-a083-b916410bd761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0b0293-bcdc-4090-891f-718b6b5fcc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9478860-4f9e-4cbc-90ad-52a3417d96ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df9f004-2daa-444d-9cd5-1f7ec37a8c1c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75866809-e86c-4463-9db6-1c9c2c3416a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c574b758-82c6-4a15-9f07-2c1bbecf53e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2dc76f-4a7d-4892-bc72-cd960e432813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a734d63b-156e-4829-a895-a42b19694db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d4938-c1ec-44fe-98d7-242d2650cd02",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e057e1f-56a7-45ac-a47e-92f808efd72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30594a8-c73e-4487-88b3-7cf43c43afbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5995ef5-db27-4eb5-b6b5-ab0026a63794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b07109-6159-4d48-9732-ff3b4033a45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae32cab-6eb5-41e0-a8d7-55c6c3023cb2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ab9dd-5af9-43f4-bbd2-a77e28206bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1704ddc-222f-44bd-93c0-4c1d9b7cf62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a41d15-cd9a-4e53-8a2b-5df653082fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e005e1ff-0c14-4174-b5e5-7b83999fd99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ae1b95-619d-45aa-964e-0b96bda1a156",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6edf2c0-27b5-43c5-a93b-75915f4fab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f18a1dc-027e-45bf-9f35-93c59e5e8de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7511267-3f5a-4555-8618-d000050e332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7e185a3-864f-4cd1-9ecb-4b373d960203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87f7ef7-9493-4807-a2f6-5bb7c9155efd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638e81ad-8733-4a3a-9115-4eac90c4f844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d78142d-95dc-4b09-abb5-0c8e7256f977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1f493f-8e3d-4fed-925b-17b63319565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3932c3dc-1dfd-4712-a843-1264934b022f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4de37-a01a-4386-a79a-ff7afbba729d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd88afe-5656-49d0-aa55-2bc8d6f071b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986a7fd7-533c-436f-8643-e514984a8903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9decd2ac-105a-41d1-a9ea-e264fc993951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bb405cf-82d3-43ab-ae0b-2be16ba76c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f279a1c7-7bb4-4af7-8420-ec0b0ee43146",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25759cec-1769-4225-b4ac-038ca06e967d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b334fc-6f84-4063-be08-3899d1959c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410ebadb-6f73-4f51-bacb-5a54214b6067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dee6a34-9598-4d08-81e2-a8fd7e273227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0eb38a-6cfa-4759-9c44-4000384b16eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b8af62-2258-43b4-b1fe-2e7fb4fbcd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be38e40f-8d9a-474c-acba-9b2456a0a653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7895280e-dcc1-49a4-ab3c-11af35eb2115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f3f48e4-a64d-4225-a3db-551d7a7b996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc34b7d-fe9c-4363-899f-26c0a5d7e91a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbddb2b-115b-4b8f-b8a6-b4678555df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aec8250-148b-41a4-a6f2-2bb5fed4a58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0cf89b-31e3-4960-b744-e0bcc9d41848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3525f21f-61e0-4096-8f63-0275db413b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd46391b-769b-4c9a-9a79-c34636d80b66",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde0cd1a-ec0c-4b10-8cfb-b1bd356e6eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c73f57-9b9a-44be-b13c-520b692ce4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48888abb-ac26-4c7b-8177-996384d7edb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2a058b-ac4f-4348-b914-906ecb131f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac74a36-aa99-4dbe-87ee-12dc0ce223ef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d2b1c0-7d29-40bd-953d-8926a51e52cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8073c1-8fde-4fc4-afe4-11661923143e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e83b67-c79a-4b5b-aa4e-45296e5eeccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daeb791c-194c-4427-be9b-2cd0360cb63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56524427-00ec-48e1-a122-a40d80b53059",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80a77e7-836a-4bff-b503-a7bdfb8c829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02705691-5242-46d0-82d8-af729bb77d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8664f-0b04-4fd8-a08a-2a3865ee8631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f9829f-6280-41f0-a51f-1abc514f93ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cbc56b-9279-4b5a-a632-263384e8370a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3636412e-274a-4466-b2c6-ed0a54629a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18b78ef-9171-4a75-8b12-eede934f4193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a21769-79ae-4226-b763-151ed8eb2ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a54df9-2e37-4c4b-ac21-9b9b97259980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d06259-7007-4cac-84c8-d73d869ff5e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361954d2-c88b-4cec-8816-379dec5b540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc7daf-f811-479f-98f9-23f75fd32d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a075cb-117f-45ce-b031-5ee855b316a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de69924d-2a2e-4739-bd5d-bd5eb096445c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a449a566-4ecd-4048-adae-9d8e627e6da6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a90d7-da96-4519-b61b-319c3423c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72061cf0-8b42-4c26-9eeb-f4f771ac5336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13468a7c-7641-4458-a504-8d801e432d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4eeee7b-58dc-4655-b612-1ce11478f6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b0ef37-6613-451f-a178-f19543fc4557",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5148d-6ad6-483c-83eb-a5cbed58b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1901262a-16cc-427a-b342-475f25088f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0958d4ed-7041-46ec-80f0-71b47c2e9d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e222e0-65a9-4476-bee3-b37f7e997454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01258e1-3af8-4cf8-b3dd-6c5d71800fa0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572091dc-406d-4803-8c32-8a57cda36735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3f2069-8d9d-4386-82a7-47d0b18b83b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f4f7e7-37c0-45c1-89ad-1cedd030f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e7573e-8824-4b53-8cae-078dc9fff2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f1b642-3b88-4d5b-abff-7d648831f534",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82be687f-3793-4c2b-8e38-036b2646c615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d8a47d-ad94-43cd-aef5-2a1695f47779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048511a-c89c-4bd2-adca-dd723e9c5aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f1e22a-5eae-42da-90d8-041f63e98210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fbd543-6f13-4cfd-bd7a-905bd7755234",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558ff859-96b2-4e55-99c3-48da002e3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99230d68-683b-4a66-a53e-9f733bf4d6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95291823-cd51-464f-b68d-cbc354446db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e602d58-731b-4222-9ec5-bbfd8d5fabda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587d0931-b546-4cfe-9c01-78305416c016",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e33fa3-dfab-419b-b5eb-63b8b633c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dab1f9f-958c-43f2-915d-0e31cd7bef16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e76b22-e593-4340-a156-c0aeabf0c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cff756-206e-473f-91cf-332b2a145e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9140196d-bb9e-4889-a603-4ab1fb7c97cf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3386b6f9-15f0-4145-8767-357d0cf1020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cfcc15-f055-4e38-95d7-93a7a2f481ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a479c8a0-b328-4547-88a9-77c61ad111aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "794c22c5-8b5a-4b7c-8e9c-7546dd263197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c415684e-6483-4bfd-8544-d18bc7c162d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63124519-4c40-4cf6-8ecd-6a4e46b02d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32417d9f-9fe9-4684-b8f6-3dd178181cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c22947e-9e1b-40c9-840e-8b149fe41257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafe007e-9bb6-41f2-8cfd-19f0b0175e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9516ef-1998-447a-84bb-c327ecf19566",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4088e42-250b-434d-82c0-c53bd5fd7513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9427ea-c40a-490a-aabe-63ffd6c71186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44967bd3-963f-4bc6-93ab-f4a9fb180a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "590956c0-182c-4f2e-b0da-19268b40382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8484ab6f-f6c4-4875-8fcc-77f67d4da483",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f1dbda-56fc-4446-ac6c-d2aac67f0059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f12a86-c1a4-4c51-98ae-8112745c57e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9520d823-62c6-4c80-9dbe-29e28208de45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0e5d78-30b6-4224-b7c8-b99e18deb12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7458b2b-caa3-4693-ab6c-5eb7863eafa3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b8baa-888c-44d0-b5f1-51e0d6194869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78627f2e-87c2-4a8a-a894-02fae8017a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82e320-b99c-4147-898a-246ad30dfd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0880fa7-2ec4-4b40-95ec-b1b11fed7733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab349ec-0363-4163-8d24-cd54d941545e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ec09f-6a44-4d0d-bd01-d5392116d1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2762ba-5cfa-44ed-89dd-0a25356dac04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bbc931-5889-475f-b4f2-d3ac76035d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8934729-f8b6-4ffc-86b9-4228c21be088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb05f31c-266e-4d57-8f9e-efe40d839ac7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ded1fa-0969-4aed-9e65-b7945fb1a041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1154b03b-00bd-4bf0-8b63-12dc4f96298a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bb4756-be0e-4686-8ed8-728cbaa40cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb28a9-0aad-4a4c-aabb-2ec6b32ac728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1011e67b-c45e-4e11-b129-2150484c64af",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fcceca-8c10-4aae-a929-c9c403fb554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42042771-7931-40c9-9369-67505688ee0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da12c7c-0829-47a7-b040-4c59253c571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab78f121-0414-4ffc-bd85-b931427fb691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9473a8a7-6da5-42f6-ae03-b57b467b53aa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1b6f10-4336-443d-a627-a1fef05cb284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7561bcc0-0689-496b-a38d-d03777b6c981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba137c7c-4e26-449f-8707-5ffd842eeffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f50b4f6-61a4-4099-9c48-c280cc3b1161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64839880-9fcb-45b1-9b7f-e714b43965f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4557af0-5204-4d5e-9859-cdecd6845d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfc1b2f-4f08-4dad-9291-e6ec7a5024fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f320c7e-71aa-4b7e-a3b9-ad24d61fd57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "459d5012-8c29-41ae-a745-ccc2c9d406a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b363b-4dec-4476-986a-288ffc25f4a0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50965460-d195-4060-825e-d2816ed75927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922c83f1-e2eb-474f-9f23-c63365591afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190166c7-cdcf-4d0b-aa34-aeec8cdb9028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c22fbf2-e426-4b5c-8fa4-2c9bd6966f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1efe97-d3fc-4de7-aaca-92558d798a3b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f1810-94b2-4dd5-9543-79fe6567bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85124eb-b54d-482f-9050-4cf389f7beca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990fe2b7-7740-4792-8826-28e246cc4e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f150e172-b429-4150-ab5b-a51d1ae5c54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f00c5c-21bf-4f3d-bccc-58b1ed9adfe9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc0975c-cd11-4a37-9f57-c859e5b210f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf041db2-1717-4511-a0af-febef1161618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576ea24a-f4bc-4d60-b91e-d34b07f8b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb224af2-ab41-4578-82df-056a45c84d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701c6e5-f82c-4382-8191-86940b0b25ce",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd9f10-d310-47db-90af-080487370ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d91a60-6070-4d4a-aa68-16139b72fc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f7fac8-5461-4041-b61c-b10ff8cece19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb83d016-df53-496b-819b-ef17cfd956f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e67f2d6-9ea5-4711-8d64-cc30d41fbe84",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58074449-4c48-4d6e-850f-f4fb612738e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba54d1e-8cb7-4ab6-b940-ea2b56389f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0fa985-273a-4bc1-9322-bcd66d884c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e79a1d46-54bd-48d8-b705-58464d28cde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf100b2-3698-47ac-b95e-91a18482cc9d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b22136a-338c-4476-8518-575dc31702be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b01967-9ecc-4045-af14-5041dc24356b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69438af-5048-407d-8ca5-904969c3aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65de6eb0-14de-422e-8c27-9de5cf8b0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99247ce1-969b-4156-a3c2-165044ddfdd0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa959de4-9f80-4a7f-92d6-66e3d8db934d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4021d813-73e8-496b-8fbe-3b916d40d89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1e2b31-a79f-4247-90a6-9ab5dded9e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b633cdd-04ae-4553-a206-8e5148baa825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1def8e13-108d-49af-b91c-9109d975720d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ceb5f-b299-4bab-a610-e28ac047fdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bbc55e-9f26-4080-ba93-47d6f7641614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1ca437-860a-424d-a4ad-f8d0a49cdd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7611acf3-da6e-4376-a28c-7bb3004da569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97f0b5f-cf5c-4c67-935c-39c8c5f54307",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb516246-2644-4120-a269-566fb1f44393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276cf688-c1a4-4145-a480-d4205e001879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9c5ed4-e11f-4ac7-915e-5af398e1973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe62995a-df7e-4cbe-95ee-637585c38203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9e4557-6bdd-4a37-aaf6-5fa7ef71c972",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def690fe-1dba-4505-ad92-36f3b6ab75ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d283ee31-d865-4e39-b28f-03001487c27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae2f8fe-515e-480b-82b1-4f00db87d136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "856dd683-86c1-4d36-9c84-b2b3a3122cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea34f840-341d-485a-bef4-3fcbcbeaf3ee",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dfa4f0-4453-4750-9d87-04940de66ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fcd649-98ab-42c0-8e86-f582b319e081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9a5da9-ebed-420d-b2ed-50bc2c83c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aad0d2d-cfc2-436a-89e4-973b785cd513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c9004-120f-4946-bb00-ad40a3407e23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eda35e9-abe5-4f8e-b74a-80d5ae3ceb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f71e6a-85e8-41e2-9993-b05c2738590c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a996260-d18e-4f8b-a6fa-67bd776c8119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c396752-3ccd-4160-9140-5877f51c2bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d530da-df9a-4118-af7c-b38b38daa6a1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0194901-3857-4d5c-ac12-8e6a765b41d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665f894d-e896-477c-9c22-840d88981d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddca2ab-05cf-46b8-8ad3-5eae1792e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec8f934-bcd2-4554-9c7d-a01a3824d83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97d5bef-59d0-4d46-ab6f-166d58ca478b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b98ef15-74a5-49c6-8010-a4e583ac6605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e131840-ad8b-474e-a313-c9e36aa9c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baf937a-aa73-42c2-8708-cba4ed9c83cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23d65bd-f0a9-4edf-8822-e83df6d2b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5555bd-aacb-41b4-bd1f-d7e99267e9b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31644d-cdee-411c-8e43-be9679f57983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8210a987-aa37-4a72-83b0-03512331381a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546111ac-dd32-4929-b979-ea61df384131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9ae23d-b346-4a50-b488-daf87b55524c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a0dc8-4ce5-41eb-960a-8538b3dea689",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c752b29-42fe-402d-94a0-933c74ac8da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab9c4de-a959-455a-b06e-0b4b9e92a41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fea78f-1962-4bf1-a16c-ba9195d6cf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2913e83f-1109-408c-9fd9-4a83a0f70bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6751307f-9bcc-426f-8bff-440d673a816f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af96ed5-8f45-4d66-86ce-ff63677b2518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8264eda3-c4d4-4863-96fd-24ec4fba2154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204bdb2c-8b4b-427a-a8b6-715f1139b21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "471cccf2-1788-4d9f-98bd-5af7cdb8e5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c013c60-dbc4-4f13-b2e0-de26d4b84565",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f021c696-03d8-4748-a510-1855700f4edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15877fe-1a50-4c41-9256-1660f2ecb85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57110e5-add5-4016-b489-b2d7947d09e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2108cd-3aa4-41c5-9c6a-09c7c0e86d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d373a-68e1-445a-ba62-f4bde8256923",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6598f0-a676-414f-be10-5bf8f641b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3915274-cdc9-47aa-84f5-9d7d2d427202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a8c21-b79f-4898-8a6f-200900997a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1467163-f1d0-4ec9-92dc-f01bafa05149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee534e63-ca0e-47ac-8eb3-99920fb4f8fd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684974bd-03e0-46c7-af7c-f75f7462e56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b2d693-dedc-44b1-84aa-b828e662b314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1f62f4-f61e-450e-8d14-c16ba53dcec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e7618e-e304-41de-8ad1-fd25d6cd2158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8eeb46-1d35-4dd4-9f1c-02da69ed41df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e753c3-a7e6-42f4-a2ca-c36562e0c746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a30ba14-973a-426a-b945-7cb82fc4af97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5024ce2b-8d00-46e1-b695-391b202903b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f5e3d5-0630-4be5-bfa1-ec6c956c5526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4e91e6-b6e1-4d09-aaa1-89472e207f87",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3f63aa-ea63-4611-9b1b-879cdbe21b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f6311c-6422-4d9a-a6dc-7a88da687b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4517b9-5345-4473-b8b2-174433fc4c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9807bcf-0ef4-476c-ac46-3aecb8c82fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd369bc-0ab4-44e7-b47e-6b1ec83257bb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bfbc41-ecad-4b78-bd2d-c7365752198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4291ee-b2e2-4441-b5f3-811b99cc456f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee98fd5a-5bcb-494f-849e-0bf97b632c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a79780f-5c46-4141-8d69-964d74f7e858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a746edc9-73cf-4dbb-a993-19dd618bb19e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71975f79-f898-4727-877e-98e809323471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004983a4-ee8d-49c9-a045-925ab273cbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3a3514-175e-4b6d-a10b-82079583fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "94d318f5-13cc-49e3-9689-895955e58283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6141192-b303-463a-afa5-6eb66c078e42",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c55558-90ce-41a2-9c9d-a7af4977860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f04409-f916-41dc-b03c-23eb12b59cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701a909a-58f2-475d-b579-5b0da5e23d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4549c972-61a3-4a30-80b2-ce1cf93e78d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e3cee-a460-4556-b3b0-3514f03a3a44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd96f9d-bffc-48fd-bbe4-d7eea53d7bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc8ce9c-1c41-416b-8727-d2618c28a6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938ab79f-c240-438d-984d-564b5e02e81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a27eee48-2c66-4247-87b1-abccd160ccc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714548ae-2c7c-4687-9b97-665532b1ceb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75dad2f-6c8b-4cb8-b75d-e0a06237f2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8982d2-8781-48e2-9414-a9bc9265bb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5096474d-4c2b-4c51-bfa3-82ea9988fe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6578fa0f-b521-4666-91a5-626fb255533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4758c233-e184-4aaa-8ff4-9eea128de018",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402f9dc-b7a2-45d7-b90e-b89dc377e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffad888-1a8e-4f59-9d62-a92c5f5cd751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025d7c7b-cc90-4301-b6d2-9453016cb4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "304e2462-f384-4c7d-8ecb-1d66ede53d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fdc1ca-b55c-4b49-b637-55206ada7c94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19786679-5cbf-469a-8f95-218e6206778f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d02b20-120f-4cc7-8433-dfce56efd41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b5fe88-454d-40d0-a846-b4e8afd52923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "58e14f5a-c8aa-4b77-9a8e-85da52286429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7a147c-39d9-4c72-9d64-bf185bba5a5f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d8d018-0768-4f2c-83ce-eb0fa8954a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b2abb7-fb70-4429-b724-80344d5351ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07914431-a8c7-46f0-adda-f777cb00b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b594ee-b2f8-4dc9-9834-534da0df750f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a144b653-7a66-4308-bf45-b8490826b8a6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f81a98e-9cbe-4bed-99f7-1cbe0ea1dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7854d9-47e4-4df8-81b2-36c21675aaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae89ece2-ef00-41b0-87d1-5fd772340e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e269a23-eb91-41e9-9e64-833a776f0df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcf0c6e-9447-4593-a147-6a05eef0fd73",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ffa91-38a0-4515-8b10-cb5230ff7038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c3bd66-a74c-4453-a7e4-5d79c3d96cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9dff56-a3be-443e-a408-a66e05219d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa797c29-57bd-416a-833d-f646db669aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc19dc5-a589-4da6-a60f-b4b4bf658e1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa16bce-4229-4887-aa94-e6f5313f7783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c9b641-1726-48cc-ae1e-7de40dede227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f33569-66c2-404e-8b9e-0384f904aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d458ff7-366b-4848-9658-c462ee810972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0937c4-6503-4335-9dfd-21891598ac8f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7816898-09de-48b0-951e-f8dd7a947ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22512dbb-908d-4f62-a255-c60d70080123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff83af-40c3-4dfa-bae0-4bbaf1800103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d13a07-ab9a-4a42-9edb-c651c6a4de62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d166771-3d23-4e40-bd25-cdf9e8dcf6a6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a5b480-10bc-448c-90b1-aac81292ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a76f24-5e59-4fcf-98ca-f8a93fbfd370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c0c69b-4531-43b5-b3b9-8b45bf3f7f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4782067-08f5-4be6-b7a4-57482daa6e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14dbb2b-b9e4-4c90-b085-5330d006a210",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193d6ea9-ab9b-40e0-9449-72fd5166f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7a074c-b8a0-44c4-888a-5b1503c52477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88add34-2ac9-4416-94d4-a2195c9aaed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "215a34aa-624e-49cc-be82-6717a56d9ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23d7bae-57cf-4df0-adeb-3ebae24f2279",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c26d544-4485-4952-ae9d-5b44c44ca2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7990adce-54b8-4d43-9747-94add403c8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568e471b-3277-4fe6-928e-62f5551bab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa768a5f-beb6-42be-a2bc-a59cfae63295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3994c8f3-c609-4947-a4eb-3f2333bdcfd0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8233e5-5845-4ad8-ba1e-108f14074ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f032d572-bf26-4e4b-85b2-01092ab038f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b12b87-eb63-4e4a-b7b0-a17d58ad6c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3500e268-f240-4955-a9b1-508db5897fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeafb99-fd61-4bb2-87c4-21c72af712d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bda414-b856-4ab8-bce6-028b8f3288d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcf84a4-f12c-4043-afd3-7f1b94f0e46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7e5434-98cb-4ef7-a1c5-a94028b6438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50227e2d-fb6e-4dc6-b101-286860e489c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d585ea-9b77-4d15-880e-d9f80e748a16",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a775975-f8c6-44d6-9cea-12bda33305b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d999e87-e223-4dbd-aa7d-eb8f51a4b5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c637fd6-6f44-44c0-af6f-2deb39881b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4b777c-8ed7-4b36-9686-0fc2e528e592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448f4b6-51d5-4b96-aa2e-e196aab8ab7d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58531afc-3f7c-4015-8ed0-b1f9b076ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6c6f2a-cc45-4fb3-b886-47f997d6a46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d75bba-d963-4676-a85f-13d4b8f32a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6abaf0a5-4b59-4d48-8703-e11764ad6cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b175efc7-fed0-4c5c-8f03-2c17c5d8e321",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5788ee9-0345-4459-a58e-4fa02b7b03bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4c81d9-60fc-43ae-b38a-a44dee400466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e57f24-986b-47ca-8b43-4a4c42e4700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3dd4ec-0106-478c-a4eb-b2fca14d437c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd6a9a-7ea8-4ad7-9ed3-448ebff50724",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738c56da-1217-4128-adc0-189b5a6be099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa0aadd-3a85-4b8c-951b-d1df6acf8088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09197c-43bb-4eeb-9001-e55f2759bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac3f8eb-1871-4cd8-93b4-d47a130e56f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388cfbe8-9659-4e92-be29-fafc9e8e39ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d97a5c-7f35-42c2-8685-84e0296a7160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262e9a43-ded5-4b7c-a1e0-f65bd3eb5852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21514dbd-42df-4dda-8255-3e58b042d42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc643a4b-e81d-4ae5-bf72-c85c72504a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49830ea5-d9ef-4407-a073-0621422b7aaa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6617d6-1b69-4d1b-9928-5b03965671ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15bc554-c78d-4b2f-90ba-f95443e0e76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244ddf5-baab-4142-8d06-6e04617f6c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac6a7f4-cde1-435e-9b93-136146644a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98507437-6fd0-443c-bf69-9e439d43318d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bc4d2e-ed57-4f07-8da0-ec97041c7fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a361673-228b-480f-a2c6-7cf816700712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f798b71d-912a-4fbb-b8d8-3b5aa07f7af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a30d9b3-01e4-4521-88e3-bae490cafd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1bf10b-8bdd-4bae-9afa-5f7a49571dab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60abbbcc-3450-41a8-9175-0e4495926501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016d0cab-a3ad-4c63-b1bb-3145dd7332d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7507ab1-fd6e-4df9-a31a-1df193e30ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02011830-53e8-4006-ba09-ac448daf3837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1933b8fe-faf7-4477-ab0b-86560db30fe9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79fd45e-94dc-4cad-a1f9-d95a535aec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938cf3a4-95fd-4873-a181-a0345e6a62f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ef14e2-2bff-4c54-8f47-d989b7b174ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71849d22-4f20-4a49-95c0-1bcc0dcdf281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77b90e9-40d1-4db8-9065-6432c8c0cf13",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c820eeef-3f49-4383-9263-4e203607f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1df54d-39fb-4aa9-b814-5664d2d20807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673bbbff-92dd-480f-906d-66aed8e90e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b4bbfa-3e44-49a9-804c-987183d2bcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4125e8b0-1449-443a-966a-5b323a9d73e2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693772f7-e3f8-4a53-b569-eb3aa84e06c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14683cd1-b61a-4c63-9a6e-1e1e52cfa7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e965b4-f9fe-4d4b-b9b2-4469d6cd5b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f928ed-0299-4e5d-8947-73a1a91ff8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b714a63e-8caf-460b-b3d2-2f6eba52520e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdbb9ff-b564-48bf-9b43-9d87867e3c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab623e69-971c-4866-a3ab-f2f17e11203f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79bf015-9d83-4486-b1d7-5abd24ffab36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "931c335f-2c0c-443a-a3dd-1a3a0e95724b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bbfc88-dfad-4c4d-95c9-160121ba8d94",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9611a25-1f48-4391-b2e6-413e731fb338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d508a109-b99e-4bf9-b816-fa87e26016dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb8905c-a6fe-4b17-b0cd-bfbb2868b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2555aa9-70ff-410d-8196-cd58fc086a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5093b47-c68d-4058-960c-b6c95b42caf8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f0d729-681c-4f9e-b31e-b5205d0a94c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba3d3e4-2d61-4f0a-b63c-6ed7a2f3090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37264e20-6594-49b9-8b1c-e826ec000ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df964182-21cf-4a86-beb1-c00269bf9d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f7d1c7-156c-4144-934b-36875e865ed7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ccc76c-0cef-43d2-8d04-048223b8d2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf7b87e-6a31-49d2-854e-91b011e34cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b039dec1-9dd7-45a7-983a-0741fa502827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78243a93-783e-4123-8482-fc261dc8fc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0432c33-b8c4-47da-99e1-61a07f89f6e8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf20ce6-70d5-423c-b553-a9795e0036bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f652da2d-8a1d-4158-89a1-0894e296fe85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeac634-3c61-4dd7-84a6-23291c432e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ad303d-1d94-48c7-8560-0d4d5f64dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a6df20-e1cc-46dd-9404-583399c43c45",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a29938-783d-4642-809c-4cec34adeeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd74871-251d-4882-80df-8b04540b330e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf06791-a112-4036-8ea5-29a81dd2d456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e938875e-45e9-4e8e-b3c4-dbb4bb4d86c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d4e53-ccd2-4eb2-a091-c0aeab435101",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43d75c2-8c14-4396-b053-37e67294353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52427b18-0afc-44ec-b503-73898f03915a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a42f188-2e49-4507-95be-37b706f676e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a99fe24-50b2-4f13-be22-5728a4ea434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78505253-cc58-49a3-ac17-8cb2bfde19c0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc8e8f-3c42-4bdb-af98-fd1bbc0c28fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcf0952-33d2-4970-8ef7-01d90d73ae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609e37bc-a71d-4c87-99b2-13bccf62997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfced5e-5ea1-4a3b-aa25-de8c8b819de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dcf336-9d0e-4d49-b295-eb9b67aa1b00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04c9497-d761-40af-a7aa-2e1313436850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7112e6-572a-4896-ab42-d41a234a3338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887eb914-e532-42b3-8753-b4776650247e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7adeeba-c95d-473d-9032-dc6248fd2c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ec6b7d-6c70-41dd-b94f-ab69da0ccd51",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b813033-e3e9-4f5c-87d6-4db77c27256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f84f57a-f822-429f-982d-41fecd56bd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3669e3b-4733-4072-8b49-331b70dcfed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dee6a3df-8545-4403-913d-4b80c82d7ad4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cde8acb-b197-488e-94c2-5ad016284c9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc89281d-dc03-4e41-b58f-1d98c2d87d9b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f694fbf6-5aa6-405f-8152-161e8d20cb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "857a786e-49ac-4b07-949b-5d4b19d267ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030f05db-0e12-442a-bd82-553f669ac1ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c96b9b8-916f-42a3-afaa-7db3ef96ff04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f75edd9-8eeb-48ca-9ad4-c62e58ed6429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dede0e5-517e-403a-ad34-5c3465414235"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5488484-7201-4626-a040-9072095790f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca7645f-44fd-4312-ac4b-e4959b112272"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "429080bd-503d-403e-803a-85f7ec80b1f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40d12e0f-9366-4d7c-8818-85963a792a28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c80f4577-5bcc-44d0-86f1-cc462fdc12b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e2eb727-5dcd-46f5-9e02-ea648446528e"
                }
              }
            ]
          },
          {
            "id": "e859ad19-9fc0-47f5-8317-7961b6c4c5b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dde1def2-ab8a-43d5-9f95-3befd4249e4d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e2120a96-1200-4ee2-ae61-2b7e927b9d47",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0379ad71-62b5-4d8b-9d69-28fb7b8c42d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f9e217d0-5ba0-47de-855e-51b0315444af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f92a894-f6cf-40f4-af3e-b4eb63868eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005c9c93-b94a-4197-bfac-721c960ec08b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "642636a1-24a2-4b6a-be33-da26df52669b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26339ef4-8a42-4acc-8f07-bab121ffbc81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7116e06d-f0b2-4d8e-8ba5-3abb32917de8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cacc1d04-6845-4dfa-b425-3d9279b72f4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7cedd7c3-3de2-46a3-957f-f269fa5b4d46"
                    }
                  }
                ]
              },
              {
                "id": "09d711c4-1151-4701-b96f-b12b01ee37c0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee6c00fa-b740-4624-9cd1-549726b507ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "312d6065-4f35-411d-bd97-f32261be0629"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ce6c572-9319-49e7-ab84-df2a9b874df8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e085e41-d71d-4ff8-9d87-1f3fa390350f"
                    }
                  }
                ]
              },
              {
                "id": "c3df37d2-515f-48ff-9970-d11a23968892",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d608ce3c-2aa1-4e02-a8cf-ef81aaf943a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "934cd667-1231-42f0-9ee5-e5ac78ff3f5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c141c859-bd1b-4cb5-8506-1bd63789db3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0b464a8-4191-4788-b4a6-7d7fe7e80000"
                    }
                  }
                ]
              },
              {
                "id": "36b9010d-98cc-453c-ad7d-0c9e4d903927",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71b3b5b1-dad2-4c07-bb84-ede1114cc58c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59b05aa5-3cad-418b-84a6-350a26f67a84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "982aebfb-fddb-44ad-a5e3-f34cfe14a1ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c23804f9-775d-42ec-b295-324a0ce4dfc9"
                    }
                  }
                ]
              },
              {
                "id": "97afe657-c821-42b8-ad31-ba6ffe4bfa6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8fecfa5-8a17-416b-a6ea-c64a9dce9022",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b3632cb-9082-4f0a-a63b-8ab29efce698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85c2cef8-2d72-4934-854d-19771a81e3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "39cc8917-7edf-4ec3-9a72-29e656557a15"
                    }
                  }
                ]
              },
              {
                "id": "acad73a6-99a0-4c8b-a795-5035f09d720a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7bcd94-e3ca-47ca-8b85-0935089fd851",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed49921c-19dc-4629-a04d-7ecd84429b9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d6b055b-a2b3-4ae3-9ccc-d8c6a0f68e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f32056e2-4bc7-4889-8e1b-5f1d7392772a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95ed07d9-d158-4e08-844b-642cc77cd9ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b67373f3-46ac-4121-b249-27b1ae866d90"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96e2b739-69ff-4033-8568-a025d43d0a31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc6e292d-f675-48e4-875d-a24776cb5fdf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1484043-87fd-459a-a16c-b45306f41db1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "15edea02-4e38-410e-a9b8-8be3781c3994"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af77d79a-9b7e-43dd-926e-e58d2e64cc7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "533ff87c-96b2-4033-835c-1351f796d8c1"
            }
          }
        ]
      },
      {
        "id": "c2046bdd-4ada-4497-90ce-aab5a408324e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59ecb68b-c36c-4b4d-87e0-f0729abb4617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e4baecc-7ddc-4fac-abff-1f099758d461",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "754f89ce-c19d-463d-9fc8-099880382d73",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a212ced-0fc1-4d48-9e97-b6455251b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb50758c-bfe9-440d-b512-fc45984dd3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039486ff-2360-4233-8055-c5ad45602197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b2dc11-fcee-4886-923c-9db1d2248aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5024567-77af-4494-9275-765ba84a1fb9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c3781-c087-4f16-815e-3a0863d4a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6fb343-6dcb-4ca9-b423-b44192d99e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8308131f-2b6c-4d52-8d15-5685e559f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e213ff2b-4c74-43f9-87dd-b23cca12a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a15ac17-d616-41d6-a838-24bcfb9a5d32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb912d1-9bfe-4315-a9a3-9a55fc527fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823435e6-9d23-4bca-9c9e-fa2336bbfcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc06604-223c-42b6-9ccd-499d9d31a929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90489495-c147-43db-85d8-8c8c8001ba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f837a1db-5bc6-4cac-ae83-b8cb6ec0aa37",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749c4e75-0ad6-4472-978e-2433e630bda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5ae16b-63f7-489f-8002-d7d483b862cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60094f63-3a36-4056-8b4d-0901ee71d805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85fe9efa-57e2-4760-aa24-2f170b1ec495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf592be2-86c8-4ae3-99c2-5fe20a8310e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cabaea-3179-440d-80b6-8f341ede3060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1113bef6-466a-471c-8fa0-db5516564dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3054939c-5fdf-4737-94ae-7aa33697f6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a23962-aa82-48da-a855-bff5dba1b270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e301838-7109-4b73-8385-9a2be17d38e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf1bbc-3bfe-41f0-b487-8c0782fed40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fc51c2-d7e8-470f-909e-58d68c3e2db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1baf80-9daf-4ad7-af12-66171be86aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7728c9-958f-4c41-a384-65239096dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf9abce-1b1f-4dc2-bfa9-e513475c31fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b06ab29-ee12-460c-8ff6-0512ee31c54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f30f306-e308-4a30-a0db-12d499838162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f7936-e7f5-4280-ae2d-fca7afba2962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cd9236-3c6a-4133-9072-a55a55d666b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94ea39c-edba-41f9-990d-07713373ddfb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1c72b2-e170-4a21-8ed6-605f53314fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e103bda5-2066-4318-9e48-d06fe4526188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ba98aa-dbb9-4bb1-abaf-f9dfca8147e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c4fba7-9162-4118-9d43-104f8be8f589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c243d511-fc97-414d-8c03-66f0cad71359",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0840c31-23f3-40a7-8f05-df4f3fd4ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463a0047-1791-4e6b-8fc3-beb75390c404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1bd7bd-b1b1-4b1b-95a3-6f89b8a2d2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6de150-2aec-4f94-b4ba-7a2f1684b149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2cfe9e-0fcf-499c-bc0b-7feb10ea13d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25683fcb-6413-479a-b8da-97c997b20500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7286cda-5736-4006-aef3-99f0eea27cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5117cb4-c266-48b6-a242-3d40d13a2eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b04593-ebdd-49af-a9c2-1bb68bd4ea05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04b8e4b-e022-4ee9-93e6-c0c4de6defe0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638df845-e1d0-4664-b7cc-f7956a3b0c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b8ca9e-3f07-4df6-9e19-fa2eae12f2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d0fd58-3ff4-4b33-8c88-3d664c44d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16396154-b618-4866-8219-da4c11cab713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06ec2a5-0a20-4061-b842-d2f98eb2f28b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242df62e-7143-4d54-82c5-48a3a6f6e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da22f255-ddcf-49ed-9a8c-d56c10dd9653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7a6d3c-57b0-4c4c-bc8c-b42f106046ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c4736e-aafa-4301-ba19-6465675a0ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88e8347-d8d0-472c-b46d-8a0db8daca4d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc873292-759b-4c20-9699-3b6169e8e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7008a98f-179d-4728-80b7-6f13fd736bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3ef25f-689a-465b-9372-87e8ca7e8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6784556-a09c-4139-b98b-aafb2c3a862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358b97c5-cd6a-4484-af7c-a814cbc48d13",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cda89b-43f4-45a1-a54f-7e2cfb5387fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00108aa-3f34-49b1-9428-f0e5880008c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f0277-9f89-4727-9942-ea845d30df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf6bf51-33d3-4bc9-9a3f-190bb900c8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89e01b7-b99d-4d8a-9129-da6e452ef9d8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105dad54-53ed-4015-b5ef-1c9f0cd04cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa4398a-ee05-4848-bcd3-1e33cdbe0c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3db3316-0289-49e0-8d49-cd1f596e17a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a43a2a6-9f3c-4943-b9de-879fb7d999c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951e6679-3d62-4371-b922-c80c1cf5c4ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64918782-c44f-4384-81e1-f5f9bd08793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a313d3-152b-44be-b92a-8094bffbaa1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be3568-1ff2-4d98-96aa-76db0ff21415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9cf9dc-1715-481e-87fa-4925976d3490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359458b6-a2c8-428d-8e23-2c57df374424",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb96aa5-49c4-4eda-af34-e2153c7e1b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3b738c-7eb7-4882-a387-d9e7aa84780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c0b9a-eb56-4752-8787-d107d6af99ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53f60e0-4c3d-4e3c-b0e3-fc5d52ba956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e662f2-4fc2-4643-a27e-9ce71525c9c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2821c9e8-c775-4d93-8e7d-125555647cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ffa039-169a-4baf-9d90-9b10b42164e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1c9610-8741-4718-a982-5c1635590191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3ad2d1-dd31-46bd-9e8e-f1243d06e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5188a9d-e665-4a0e-9a48-a347afc69ae1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f417b2-131b-4dd9-986e-20be45f21925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92a2306-341c-4e22-8285-709222793d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01b1f1e-1dbc-495b-8341-fdf21ba9faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea54fb68-58a0-48c1-a4dd-e9f15deb127b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da25e1-2925-40ed-9686-0e4b471b6646",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e84748d-23b6-40d7-8bd6-d85c87ff9c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a60853f-5272-4e5c-86b8-6dd7f8227e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec2244c-3c94-45ad-95a9-623ce5a51d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00b512d-4c4f-41e3-a27e-3d1d37cbdc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5c808d-f601-4654-9c81-2bceb7c6262e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33014d72-3b4f-4ca6-aec9-a4e456e4b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df731718-398d-4cac-8037-7ea332327c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ab02c5-0d47-40aa-8abb-b5e996320fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0780d97d-7f4e-435f-92b6-d6da20e485c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11111f-55c8-4ce1-b6c1-f32a1d47cafd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc8394e-107f-4c93-b9c2-84bda88c277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5925207f-ea30-4624-851e-d95b6fe722bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc1e607-570f-4c60-8d34-4736c484941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6585e382-414c-4db0-9b8e-45a75c458a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81deb1a2-f7ee-409a-9d63-4efe30d6bce8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb4a8b8-f32c-49d6-be9e-ffd4f5c2e6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07c8c3e-3082-40a8-b2c1-d19e4bb0b82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45ad5dc-204f-4d02-9098-7ba7048ccd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d69e0b-3ab5-460b-90b9-d307c0ed4350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f387b7e1-8d6e-4d1f-b5ce-0ef6ccf5a422",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d87242-a025-4891-8e90-511c029534f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f13bf1a-a625-498c-996b-38a39eb0e5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3263e98d-600f-4cd0-b8e5-326e6d482579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16e018a-69de-4679-8db4-7ce1052550e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4395cf2c-058a-4630-9ddd-b45170eb6b2b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a17e2bd-e647-485a-a675-71659fe1176e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f891bd-e7a3-4c04-8176-454a14e07bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e678c9-7197-476e-a35f-7587d86644b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "904eb0d7-1103-4d76-9b7c-5e147763377e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea707ca-36b0-4905-9d17-b90cd9687ec5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2896c-6d22-476d-abca-74bd0f3219d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5060f6f-ff86-4a7f-b703-4188d300e491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c68d1-8042-4713-9894-d76b3f983da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124d8125-e36f-4b69-b2b1-139d97042692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8392e45-ef3f-4d90-b155-7fa477fbe1eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7420e0-b72f-4ac9-81ec-04b736175f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4ace39-b50e-4b9f-8633-26f5002043d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea2f85-b52d-4c1d-b58c-5410102484cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb397fd8-bc28-450d-8240-4b66c30e625f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9248497-211d-4c53-aaea-8261e9960cf4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96718dd3-1516-43cc-8198-f6956cf53a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252bb64d-d6f0-4dfb-8915-494945d96e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fe603e-e6c9-4257-9c16-4f4f75943501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e5e3bf-84a5-444e-b717-5b4169e61f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ddd5de-c948-4f1d-8aa7-af105c117eba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e936a-b2b8-43de-b808-fab1a807dce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7d5137-8402-4595-a216-524d3094416b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14818698-a3b9-4b67-b36b-8d46dea0551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "224de6d6-1bac-4918-b2f6-90e22caefaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e6fece-a406-4842-be17-525fc5202e75",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f90808-25e6-4410-8e06-ce29a40a2320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a145ad-93ff-4540-8aeb-d31f70b3657a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c8b30b-a642-4a5e-8904-e6f211d3c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b00ec59-e0f5-4575-9ab2-c36378eb9fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fe2e38-2cea-4697-b661-9ab538e17145",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78850e3b-1264-4b9a-8ebb-642b693477d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfba7239-0b0b-4a18-8b37-583e6272d86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd789d-47cb-41ea-88ef-256a924d0a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d283bd-3616-4bbc-9819-44ea2115d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c760837-aa56-4e69-8ac0-92156e0b287a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9c8b8a-f570-43d8-86e9-1c88ef79ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bcb7f4-04c4-4a0b-a3c8-0c5debca9414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493ee8f2-047b-45f9-8512-f2f2a06f5ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe535205-c9ca-40a7-be82-81648d723001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319092c8-b929-47d2-8660-54e788b9fcc9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed00d23-fa9d-40e5-ac38-d395057066f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c68dbea-f249-47ee-9dfc-fdd2cd505a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7cba46-0294-47ba-adfb-dd4fa0b4f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e71059-33cd-4704-986f-152f9011d8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d15fa-d287-4acc-8bd8-853024fd6a62",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44601aab-ebd9-4fa2-83ea-960c0d9a059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d871ca26-d50b-4221-a86b-7639bd512edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ad103b-2b9a-419a-9e51-cb40cb67e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaddde89-da10-4ab2-b053-728d840b8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868b3bb5-8501-4ed5-b69d-92881c9209fb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ac3ec2-e5d8-45b1-8191-b834257f8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985472c9-06a1-4842-bd9a-a5e6e5762ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e77c4-a819-477e-b64a-a88298eabd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e3567d-d012-429b-9666-a0c6b23c3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a1508-a972-46c0-b559-cd35134ccad7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3ab773-76e2-4411-b611-3f0973723e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6767a4ce-fc3f-4fa8-bce7-4bc07fdeea4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe5808a-ecbe-408f-bf42-9fa452484053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f937be-728a-4a71-b237-eab256f28cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db76f1-d5e4-4c69-9e78-0d2918dff3bd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b946744-ced1-4531-b320-f1cfe18f2454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f636d8-49ee-479c-8eb2-079ee8482b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaddb2ad-22d5-4576-90f5-0a48a8dd8002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f21826-b312-4277-bb01-485ee19208f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab935054-c8a8-4f6c-944a-a9f816df5094",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f17bee-b10b-46e1-bbb0-ec0401ddfb86",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420c5d2e-0284-4ab5-83e5-a6f9b3924909",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "143ad740-1132-4b03-a9e7-2d36ffa93682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a3c582-9d3d-4897-a435-24005b49414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aa8e07b-236a-4a17-8a52-6f5ace2f001a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da0273cf-da95-455e-9d28-b1a9b5251828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7301f5b1-e429-4d84-85bf-1cc562191be0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73142cf9-af91-4c5e-b669-8b4b460f7eda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eefae55e-b64e-412a-9a32-cabac016dfcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "129a2f31-fe61-4ad4-b434-15b775ef4044",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83587fcf-3286-4a11-9412-8d658b1a7bab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23c9062f-bf13-4cb9-a58a-01d071f3d07b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "797d91c9-861c-4f76-9c36-45805b44b26a"
            }
          }
        ]
      },
      {
        "id": "4e1556c0-a839-425c-8695-0efb11a89ad1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "af4958c5-5a6d-463d-b311-b58bd572c214",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e0f1612-7e77-4a23-b8b9-703ce04d787e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bdedec99-97fa-47f3-8102-16215172ebbd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d2e0ce-6afc-4bfa-9655-21150a6e7f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ca4317-5e25-4283-a8e5-85e8c087ba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08b6cf7-6691-416d-bfb3-a24f7b4a9aa6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd25868d-334d-49a1-8f15-05c0766bd03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30303ba6-a7cc-4b9b-bfc3-6f4679aad34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd01d87-dcb8-4514-ba86-9a5be69bd996",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5cd9d2-fbb5-44b7-beab-685638ac8d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b78ef9-bae1-4722-862c-2d507e78b058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39160c81-eba1-45db-b6cf-62bcf381a8b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18ed727-0de7-4620-91f0-23137db92bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bb024a-550e-4671-82b3-1bd461c6767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef927b4-086d-4f3f-a18b-fa2939178d51",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80d8d47-1467-49fb-bac4-d38fec8972ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeb3bc3-cd61-42cd-a722-d360978dbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f5d00e-a360-47bb-9fd9-272dc5d14020",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d9db43-168c-455e-863e-1e50cc5a81c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b41598c-6dec-4c7e-b0fb-7e73e476a15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020bdaa9-7e2b-4ceb-aea0-0e33d20ded6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc0cb54-67dd-4a26-983f-834611ec4167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d95f314-1857-4dc8-8f56-05b207ffb800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98733b39-0632-428f-b934-4f6cdc1f1b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4362527-a719-4e59-ad74-67fac05a485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4be314-2bfc-4b9d-94b4-d98dc40cf2ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38f3411-1e82-46f5-a913-df0c2959cacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260840e1-2d26-4074-8cbf-fae0a8fd76f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79593cc2-78f6-4de7-8382-536fd4067863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa0de69-a291-4511-9eba-ba713826effa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55299623-77b7-4cc8-965f-7a77f74a48af",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8fda21-cb7a-4fc4-8068-1573cc2e7c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82397b54-1dfe-4ea1-95e5-c5951a154f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e84588d-4934-4158-a701-c4c6f447c30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37033f39-a5ff-4713-918d-f22153a4fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66926fb2-9de4-4713-9fd0-bfa87be92084",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb1fe1b-7133-4bda-8ca3-7e88afb42bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf9c2e7-8aea-4d8f-856a-be48c44877d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c7b8ed-81a6-4eab-9715-93d3e9c35974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067c1e54-4d3e-4e43-834d-ebec8c561412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff36b3e-7e1e-4ae2-b75e-05e25f933a9f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401852a-0938-45e3-b267-de9cf562b348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd69282-b070-405c-8b9d-e834ac06ad4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff4d7ca-efed-42a5-894c-0a6639c55213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3b5c88-1820-47fc-bbb4-b2b391d31e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328a6a8-ad16-4018-83ff-d79128b2091d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3486ad-23e8-4973-9505-4ba71999a590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02996740-8e39-4594-a123-281e0408b8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb65623-94a6-4cae-8261-db3fa3927e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea75c479-b8f8-47fb-a621-f7ccfcb857d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15e9f4d-ef5b-49ed-9e53-33b232677d25",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711d938-e5b7-441a-9128-7b76ba3a9bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3b5e17-4530-49ca-ba9c-5fe4fce18ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c54f1d4-104c-40aa-a01e-b2f01879e79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eabb5f-41fb-449f-b122-d54c356f71d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b4290c-492b-4c9d-818d-18a32dbb9837",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc3090c-8613-44cc-bced-59e43b8faef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b589bd52-081e-4421-9955-e45ab3d329f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1261360-9074-4a39-b945-45c151c211d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0c5845-17a2-45b3-912f-aef8108a9def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764eed7-25f2-494d-8e40-f2a243debe58",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2362ad-f73f-444f-ba3e-d4efc667cb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f77b609-f7ed-40b5-b06f-497a507a2261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57c6389-adba-4e1c-abda-b7fd748fc4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c32d32-cec7-4dcf-a68f-d374819bd8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e26543-ff6f-4d13-8eab-20e05a323ff3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90790c0-d873-4982-bb30-21272ab4d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2daccc9-a0ca-47f8-99ff-c3cc383cd6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff978d-67a3-45ab-8e53-a74a36b19367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad27193-40ca-488b-bca1-b8f721f0a2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee57fd-711c-4b35-aa66-3996bddba0e1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a969a001-78f6-4a11-8a79-4946c1b76266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67379e7b-f196-4ec9-bda7-d5c299d79472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6b4d77-40d5-4950-9ec5-62ba7d37750e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253339bd-19f0-4e66-aba6-bec93a4ff17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a6c590-ea9a-4af5-b796-841007c0cfc5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0752d7-026b-4fe2-9c60-3aea30974213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8018d10-3dde-4ecb-9644-dd92a94ea5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9194dc-d40b-4f39-83bd-e9a158ae8c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141a7c91-63bd-43fb-9fe2-367b7765e9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d1ec4c-ddf2-4f12-86a2-b1a107b1018e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b404f8a0-bc62-40ac-bd67-032da0dfec0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf28afb-4aaa-488a-bc49-2b73fab5c673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd7f0cb-ece8-4c75-8a26-955ad5416186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d53e0c-af3f-4928-a9a0-fc91d66629b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46ed8b3-8d83-418b-afdf-670691ca46e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac54826-b6ea-44a3-9f58-c62c57e0695e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0a272e-bf72-4e55-8b44-3d973827c5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85882b56-30ba-4fac-9acd-df00bea55c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeeeb6b-69b5-4807-b292-2cee04d9727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1b2ee-87aa-4d31-bfdb-c34c0ab4e352",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c462d1-7af2-413b-b70d-1f329c006c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfc579d-f025-4854-a680-dba77b9cda91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305ac1b2-9d71-45d2-945a-6be2acd57cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea42a63e-5f1d-4aad-bc27-14b8915d6f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9e835-9e17-437a-9a5d-f55a576a20ff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dec24c-a710-4141-8844-e348f096da0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aae9ba4-a718-4e22-b98b-c3828e1bfecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b68709-ace2-4f7e-a4bf-27d6743b7013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f4df2c-3444-441b-a523-f6a36dbfc880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4f9ddf-8c7d-4bee-9a2d-5065a2f0e8e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3e6f4a-9229-4166-a6e0-0ac86441c211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8d4ecd-363b-450b-ac29-e9fc8d91df3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22feb2af-35f6-4ba6-bff9-87a2cf1e81c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd93a402-4035-4f90-94db-b31abc3af0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e7aed3-ce90-4649-a997-74d7cf201a3e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c00a75-d8c0-4016-bcfb-2bb82bdefef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ccefab9-91da-4358-98a5-652d3a9c89cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6900a0fe-51e2-4d7c-ad2f-652d329ce4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f588c43-3df0-4b42-9edd-fca78062cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b851bf-33ea-4f33-95f8-a6920805c43f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344eca45-10c2-430c-9133-d13b19e59faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9117eaf6-780f-438d-84f4-d14f7c3f3c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123b69a6-1469-4dfe-a06f-aa9eb09523c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601a1a6-6f20-470d-abf0-9ee95940b4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9b4b1c-c6dc-4bc1-b891-8ba20b4894f8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f7c72-4586-4a8b-b55d-3075930875cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e174fde-441c-4a1f-8d70-29861dc57cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeb0fbc-cbdc-45a8-a75c-afd4c51e65d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39372cd4-1741-484f-a912-904a72c41805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fac9cc-d28f-457c-881d-093c1bd091ef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666f0ef-622c-4638-891e-932992bc002e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07495286-392b-4717-9818-727f4f84da8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a68bd-acae-4502-be94-bf88d9e35a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f846c0-9d11-42df-81f1-fea403dd2f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad68a44-346a-4b4e-87fe-4285015e4f97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14e9bf2-e4f5-409c-a68f-6fc17e6735c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c6a512-0084-48b7-9e76-a13b2e71c999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75cafa0-302d-4afe-9560-a5eca4e19a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcf2227-cbaa-474c-95ad-2be0a71caf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f03bd7-1966-4a80-bc6a-e4a953fa5cc2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd60a2b-67f8-439c-936d-d44da00d5735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a932e0e2-5b38-428a-90de-477fd7c61d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f39a79-6293-47c2-bde3-d723b868739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c61c62-517a-456c-811a-bfc0bfecfc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702fc5d7-325b-4ff8-8fd5-37ee272b55c9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd135ac1-f70c-438b-ada1-255596bde499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72209fbf-7345-4dc5-bcf9-a17081828878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607e71bb-fcbc-4ae9-8a74-811db0afdcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ff6d4c-fff7-47f8-8a99-bd52c269a774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5714cad-1902-4947-aa78-c7eb7afb3946",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd1000-6c45-4f97-9273-e18c6f641919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e868309-02b1-45d1-80c2-c7ef2d6653b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6570da0-ae84-42d7-95ea-0bc106a0bc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f35ed6-5c00-46f8-bdf3-4515995889c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d20d5-7ee8-42d9-81a1-1e86385630f3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0dbc3f-a4b0-44b9-8be4-f784efed66cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23eb7003-e956-422f-9df1-76bc64735f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee941d1-baf0-4705-a2d8-08ed0d005d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c437980e-dafa-4b29-b583-29850b89ac1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ece6d-87ea-4b34-91cc-83e79e4f1e83",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967cde2d-af05-42c9-9298-821b8ddd6348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17aabaae-558a-46ae-886f-cca2a25e4d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dee0f4-64c1-4304-b693-a4f5d6e3f95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce015940-8ba4-4e9b-a044-de43ad887ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4465756-6360-4fc5-82ef-fed8b8e2d7f8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97e11b5-9661-4c95-bada-5cf06f0ff36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8275f0-0625-4986-ad54-45cf7547dfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78da8f-70ad-4e50-88b6-6ae1393b31e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff79e3a5-d0d0-466b-b6ec-bfb83c6e9d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e008bb5-c29f-47c3-b69c-0792e306b167",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a7101-be80-4fae-b6ec-f5eeb53c8478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a9acee-00a6-489e-bb33-5e911927a1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef03e8af-ab33-4a17-848a-13e64f3f584a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9808af-bb6b-4734-8723-637d776059fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2986f4e-ddb6-4acc-a04e-ca75e81acc94",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473368a6-22ae-41e2-b35e-e6aeeece89b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef58abe-b416-4f4a-81e4-ea42983a50d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df6a75-112e-4bd1-a93f-c88973ca7e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6872099f-7c6b-4313-aaed-94f87c8803d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad901b5-9047-4c65-8272-7a3b070c6b73",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937caece-a1d6-4901-8677-41981b9dd8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14faf912-e546-4be2-b70d-a07cc7b61c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62df9f0a-b855-4b35-9657-0a6dcf0f4f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08294cbf-9cd2-426c-99af-16580bd76192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a156a1a-cb70-4d36-b357-31c496631649",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e7b9a3-8ec9-4a90-b90c-6f3655051745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55daa509-bc4c-4d2d-9917-27d40ed8806f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a63caf-a4b7-4394-8e45-ce7e8f42e5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87487ac1-faba-431c-a2df-c3a3f393400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e8798-fa7d-4285-b22d-cc1569507fe3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7355749d-b154-4777-a42a-4acf85a7be3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949fbfd0-99d4-4f5c-959a-2284301d54a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecc2975-7484-41dc-b095-3ca7a9eca309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4965123c-91eb-409d-b6bc-0c868b3a5b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a5ceb-79d1-4820-8d47-c2207b1505f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7005860d-5808-407a-aef5-64e4ec19cefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d1b44c-ab59-4e85-bdfa-4b36458d694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d13bae-2370-4608-9833-ccc180d52ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb410f-9922-4f8a-97b1-5d9f93fc36be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00ea3be-93db-4148-b2c3-17a8496b5273",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58398011-90be-46eb-95ab-db57180bc009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a9d7bc-ed71-4dd3-9af5-4d0d0059838f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372c170a-db72-4336-9b4b-fd637feb93da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b3566a-a6c0-4a85-939a-798b9a0db01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cdd832-ebd7-4429-b1f1-8382ddb46d18",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67423eb6-c7ad-4d04-9d0e-3a9984d3fbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0300faaa-9a12-4fe9-a310-ba69e7ff3a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af01c81-887a-4c5e-8ad7-cd4f936f1d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f649654c-7e26-45e0-9163-700c1cb2b981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c907e2-06ce-4bfa-b594-fdd139e38679",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab34bb0-2d83-4651-a697-6a47301e7d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e372b0bb-2f58-4171-a9b2-d6b5827994b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5a5a1b-8175-478a-ac3c-278c4e9e6672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c620a076-95d7-4f66-8dd6-7d961db0fd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd0ed0d-3aca-4893-b61d-3357edb2db77",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605f7d7c-f211-471c-b2f0-4adacfa51b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5353cb-5a5b-48af-b233-111980fea169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a26cb9-406c-4b90-9e32-04773a8d85af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a480a39e-20e9-4e97-a89b-c13c50620194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d76a997-305f-4308-9146-c96b0637e06c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54e6c87-22cc-4cbf-96d4-3f14d6b3f55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc9b38e-c645-4b1e-aaa2-35661f0e8e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8d0f6-4e3c-48d7-aee6-2ca4a9adc479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9b3475-95e3-4783-aad5-894e1453fc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c57a0b1-b864-463f-884b-80bcae1c255f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d14ce4-789e-428d-8d41-fbe466801e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0199a8-6837-4d27-8324-8603a7f08128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ce7070-6923-4130-8639-0ff4031a8d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79064b30-9cd9-493c-9452-0cb7ac499a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbdadb-4244-49d2-bf1a-e4a1f6fc1d62",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f55b3ab-5813-4015-8578-1896b5f24dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b517d5b-a2bf-4ffd-b85f-111cb86eed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5fa3b9-e692-49cc-ae8c-45a45ec9c758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7237f4-a2da-4f8b-9d32-1b18427676b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b17d44-16af-4265-8606-7f8528be70eb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce62aa2-81fa-4d2e-97bc-128a3bc3ee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840a6eb5-1cf1-4d31-81a9-40efacd3c31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca12bfb1-2243-4ce0-8d77-a94e6130d186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c1d595-46f5-4b10-b226-bc9b3919fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0693ee-89bb-4522-9843-4c7d6ae849b2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73affc07-3fcc-4b3e-affb-4ed3609b9b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93aaea8-7816-4aa0-8ecd-00e3dc58672f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286ce9a-3f89-4761-90bb-07986bf7da4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97705684-18bb-4d08-a8cd-29bc34ddebad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a83c97-86a8-465b-860b-c7f431e00be6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f82ba6-5d36-480c-ba0f-9bae6cb95281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cdafae-0dcd-41f2-a0e3-c3740de6e5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b46cd91-f6cc-428c-85b4-abc70736f929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4512e5a6-4871-418c-9c8f-62b15d77f647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be2b34-a093-4258-ad48-e75b5eea0614",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02cbf4f-f0eb-4c56-938f-cc42374ad998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56747a1-5a8d-4388-b025-a3fc577688ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df406e84-14b8-47d6-a716-a086864db11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb350977-0b8d-438e-a422-ba36bec3f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d352a05-8032-4c4d-957d-f83f1e5fb161",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875eefd2-cf2c-4614-bb03-afaa3bffca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae85790-f1c2-4aa1-af36-a7e59d38e9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c5038-a702-4369-9dc9-a92c8eb80f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9788cc-4340-4eff-ba11-7137dee2fcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918089c8-a959-4015-9cbe-1accf3f2678a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0dbd8f-907f-487a-9437-2259dd05da23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1338c8d7-686b-4906-a423-5ee126866c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e43a4b8-9f5c-4e85-b0fc-7e276bfbb3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfe80b5-68b6-4031-92d5-f66706988d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0379e596-e50c-4def-9493-d293ceb2cc2b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f078ead2-1396-48c0-9994-11f3f8af5ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4479671-ea05-44c5-8d5b-7482bfaad3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d267522-2d64-4c6c-b903-bfd19a7f026a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaad28a-d6be-4abd-8cc2-19fe9ce1bf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926b7ba-cff1-4b16-9478-d8afd608e37f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf2fa1-202b-45b3-beee-43f74d3f4295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f35b8f-5530-489c-b1b1-57175b60d7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af31833a-c220-40ef-841d-29c8a1e53ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1b8669-4cf1-4517-81a6-ba6fd3586232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be79bc1-e85b-4ed0-8018-aa0e91603e31",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60589748-5480-495c-a5f0-6dcda0e4e857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4cdfcf-c5d3-4477-a18a-2ce9e1a613ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4553f5-6214-45e7-9390-1f7ba878ac39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20700462-3c8c-498b-80fe-5ce3b15c8d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df07bdad-cd9e-4ea2-be56-83c322fe2e67",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c930ee-edbc-4865-a532-9aafcc404e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82923473-65ef-46ae-8b10-bb34329ee6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f15611-78d3-4b00-85a5-50db0fb94f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe269365-c64f-4d8d-90c4-77d973c29171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2d256d-06e3-4da9-8a93-938e311fb796",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de85b89-456b-41e4-8d64-32ec2c29fd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690c56a0-facc-4a4a-9372-962f6b4e6bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8dd9e8-31f3-45d3-b244-9593896d651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341933aa-4f53-4ab6-bb1b-98b7ac762c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780c0709-34cb-417f-abfa-9c0033095874",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb60d59-4c6c-48df-a46c-83b3585dcb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120e2636-57b6-4a05-bbcd-9ac488df6f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b987e7-4d36-4bdf-a191-10f766e78b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d53689d-74b3-412c-978b-8fd9685d585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2e5ccc-31b0-411a-a51a-f2b634bbf4e4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8eeea-e203-47ae-a931-483201ffa549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12130ad9-b9ad-4982-a83e-93a3f9995678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab8621b-dfb4-48f5-b3e1-6760379b3fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49540420-3ca1-47f2-92e5-2e1a79e8b87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba29d48-f7bf-46e2-8661-f62141ffec93",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b847b3d-9133-40e3-9833-0247eaa727e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0bd736-97d9-42c5-9981-f49f8da57cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7f5d56-0c97-4bfe-ba91-2cd09f40b285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfb411c-218a-4b1f-bfcd-702382b451bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ff8462-472a-414d-a769-03f160f21134",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db59e510-db2d-4a4b-a38c-5c1f78d2c061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf1e67-32a1-4df1-874c-fe61e6ea9aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549700d3-232b-490a-8920-f570317d90ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695f4569-7fda-40fe-97dd-aa46be16f392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9e90df-3841-4f7d-86e3-de678bbb700f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e5cba9-11d7-4401-bcbe-79adc19888a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae3cfc1-32e8-4829-b945-9bb4ac416d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7b41fb-400a-4ae2-a3e1-87c6809613fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1c9523-273a-4cde-bc2d-99286d8815c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78457631-872f-420d-949b-f427fb2b8677",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e751670d-34c8-417a-97ca-663910381492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbdc8bf2-b9cf-4ae1-956f-d9fdd89e654a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c04be-39fa-42d8-b37a-7e8b0abb3582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88857599-710a-477e-8553-857f0c5ecb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b74af4-5ad9-4c8c-a440-5e256db7dbe8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a998234-1d7f-4fba-a25a-cd144e77e17e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a546db8-e512-480d-83bb-7ad88f4e91a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12436696-e7ec-4e7f-be57-937304ba7b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c5a731-debc-456d-bf78-3829341cbb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc82127-54fc-4cb5-a59b-3dd67f9535fe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b605a70-d014-4119-92e5-d662ebd20024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a4aba1-ffd2-42de-841b-3d32d7109337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95929ac-9f9d-4252-aa07-c82933d396cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ef7579-8be9-43bd-8b7e-af367ef96455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af37683-298e-4ff1-a667-67e791d3dba7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9891b9f9-6ee2-4931-8b87-a2a56b65b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a1449d-8f44-4a46-ae67-c943920bbcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0fd5fa-b811-4bf4-9029-a5704db0f35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f533be2-73f4-4027-80f6-fc12d9da4912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9927a93-b768-466c-90a8-c301e3ef1e56",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d0e1db-4e83-4a7b-b246-02de48678652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27ee71b-9437-4bcf-997a-9d9c8e4c9d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca90a62-cf23-42fd-ab22-9af23d052d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e74476-3d55-444f-b4bf-23bbafe3b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a698ab5-fd72-401d-ae2e-2e4b37a3ab24",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977fb880-a990-4ad9-8ed2-d001f40df918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f92f99-6203-4135-b50d-35e553e9125f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a2f76e-d460-4f24-881a-788b741aec2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad627ab-1b6c-4932-93e3-f1671165a3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5907d537-9811-4f45-a911-fcb197e1d24d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff2307-11d5-45b5-bb1b-eb528f930bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b33917-542a-43c1-825b-50af7689e78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c555867a-ca77-44d1-9bb4-f6b51d20457b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443520ac-5a31-452e-9849-9a232df56782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a31572-5b4f-4de4-bf0a-3b1c2b70aeb1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce4242d-94b1-4c0f-92d8-8189b3030533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3ccd8b-8a09-455f-ab46-12c86c03c341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6cafe5-c180-4d36-a2de-199062efa1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a038b8c7-dc06-4934-b719-6c9abc1cb14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226c6f5f-2b37-465e-bd96-5e311bbe272d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acee387c-bfbe-42db-8ddd-51df704c8f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda6423a-559d-499b-8488-6aeff9a6f30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6249c3e-27bd-44c1-bd5a-594ad768e83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1890af60-75a7-4c4f-9791-2bf67850a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea732892-3846-4a9a-871b-83d4fe8509cb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db1a76e-b1b8-43cf-a6ab-f244f6306669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f432de7-1a74-4903-8036-7ac9d73f6eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160de306-d5c2-46bf-820d-68ec5b526dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102bd79c-0540-4fa5-9343-de1918b2cdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f7bad9-7506-49b6-acd3-30ab162b0308",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d762fa-0098-4f05-bb84-fb51b9c45d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c18e524-715d-4e27-b740-d0b083a56b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf6120-69a7-4cf4-9280-02358386f5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16145f32-294a-45f1-b41c-445badafae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6c9345-2993-4bdb-83c5-48fbc7e9bf80",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799885a-e882-411d-8967-90d858c08217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b130497-d97f-4d23-af2c-9ee3970a541e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21023f8c-a606-46cb-987c-dc151160e64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8dce17-fe3e-48ca-96c8-827aeb59a385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4876a4-83a9-476f-bf5c-5707eb43e355",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29031ad2-357e-44d6-881b-8de1bd3e6060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913d9b10-4de7-455b-a0be-241121a287a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf6731-a929-4348-9e18-12d348de30fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e42e4d2-ab80-4035-8a67-269494038d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a8643b-1cc3-4b40-8f0c-1259c5cb3823",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa5872c-f7ca-4cb0-84f4-32feafdae785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c36eaad-04fa-4b4f-a0a5-a8d8c1a307af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b81c8ac-bc80-4ecb-bc68-c1231df70afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b209190-a22d-4963-84f8-8a5a9f82fed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259eead-7322-492b-b935-5a6ee15de69a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95603636-5825-4c59-86fa-4174918b2c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a77ff9b-d93b-45c7-ad21-1908703a0821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9252d8-8296-4b34-9b64-6f1ac066c7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c7ddf1-4431-47be-99f0-cadb141c5515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c064e0-7af2-4944-a8a1-800b0ef3fcb3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2037ba6-8f4d-4ecd-beaf-5e97cf62d14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1a01f8-94ed-4324-9a4d-33028a9a2eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6ffc3a-2411-4cd7-a121-be7631cfef13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13a354d-9063-4888-a0d4-bb8e91b0d1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aac9cc6-4eb0-47d3-acee-5a4df2871ca9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b17199d-80d6-418e-bb4a-47d0b0a13c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b55be9-7b07-4be0-a951-61640b0c4ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3429b2f-3efa-43b3-b576-a6e5d35f7601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915e00d3-73e6-42fb-87f0-81af3df942aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7d8cfa-0218-4024-87e5-d89afba7a391",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03623f2b-ff14-4dbd-86b9-2e4dc8ab3f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d60f79d-9e62-4bcd-975c-55bd8b216813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5cf090-8544-40ed-8b0b-fa8be45bc57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb1e04e-4dc9-482f-85c8-8b6c32027351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e663153f-a1e4-4c3b-887b-5c823bd102e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc7bf1f-605e-456a-bb0e-0a1c7cd1015f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd58a748-db66-4d62-8650-72d9447f7010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d09ca-73f9-4efc-af8a-d89fefd0b00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a58794-68ee-4ac6-ad3b-aa26f62fcf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea83c4b-e72d-41b1-a82b-06e987bfc174",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dccfaf-571c-45e3-9d98-3f6786a47bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c6af49-da46-4166-820e-90c808642f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1857f4-b6ee-407c-8bf7-1e6a07dff29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387e8d52-9738-4221-b851-fba4a4cd2363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c4641f-1c40-4d95-8b44-70bfa06ed0aa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfb45d9-a385-45ae-a765-f53bf0195d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253f3625-e664-4a45-81f0-70ca1f846bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e1bf66-bfcb-4669-bb21-2b1e35426978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249600b9-2b5f-42a4-91a8-f33f1760629e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cc0fa5-445f-4d14-a119-63d889de1439",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c2464-9b8e-4e46-8df3-8d3d45a27d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb9e185-a912-4f5b-84cb-326feaaff1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a4798-ff41-4eeb-be9a-993976c98abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517a8c13-77e6-4b07-93bd-e3b673ff1c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f84ad92-95e4-4f1a-88ad-88231c231d9d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4798536e-aa47-4e88-be21-cbe5743ebd63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5945405-3411-47de-977e-1b3cf4a63ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf7a62c-fa22-4941-a6d7-d1ea420b1fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49984d6c-e16d-417a-86ee-bb3cd4395eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4243d41-54b0-4685-b8c2-6750f1b6c9ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab3ecd3-fdeb-44f6-8eb7-2f435d5809ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2047f94c-c7af-4031-ae37-2ecff2b716ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb776e-7bef-414f-8f8e-518c7194d259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece4c4e0-f7ee-41c3-aed1-637771706654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b1be7e-bb13-4c2c-954e-ff79ea20d4f7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6a146d-bdc7-4168-8ca5-9e201ba014a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d511b0e-ede0-4918-9a86-32d40a2dfc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0699a0fa-8cce-4fa6-b5ee-6bdf332f71f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dbc8d9-01d8-44c9-92e5-3d2bbb28a221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15326679-7d5c-4f6d-9cb5-a61223c01b14",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa4d13-df23-498b-9e1b-64feec7904a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a6c21a-88f5-4174-bcb7-1bbe5b9b3337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a544b3-7e29-41df-bcc2-aadcc63484ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accd326a-ab3a-46eb-8c20-720a3a0bf840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e39a479-2803-479c-876e-d455f14968b6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebddf05e-88c9-4631-8f81-8f3b4d23d551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2079658b-b07f-4277-a536-30201da9bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf267d-f204-470f-a9f5-0a37ac9e622d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018e062d-6e06-4741-a7db-330a3204395e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822b012a-a1a0-47b7-9219-7fb861f4141d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53648a6d-a7dd-47fe-91d9-5d36e01f2d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d3e7fd-d126-402c-98e3-bf661c8de65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d925112-178d-426a-b1e8-455c6dd88175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2ae3f5-d260-48e7-a34e-80cc52c9ccb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb3fe17-bb35-4eab-b05a-669ea001ccf3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377fc923-ccbd-40a6-a014-5b074cff8ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5d475c-540c-4ba7-a2b1-5e2d82a2124f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697169c0-62bc-47f8-aebd-8c6524d5bc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86883f85-7453-443f-810b-e3ea51d7781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8f7cd9-53bc-4cd2-908b-426da163d463",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f1ff76-3d54-4b29-b0b6-5e658e2e9aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f62ba2-6939-4dae-8135-3f14218ffd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e72cd5-2793-4d57-afa4-ad63c8967f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70bf9a0-3f5d-4c80-9c54-f9918306c750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7805164c-b55f-4e72-aece-e88ce18dca5f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcefff2-ae79-414c-9570-ca09f713da58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccbee23-60c9-4043-9543-24d73e2d7a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601a50b-e130-46c3-ad2e-99dfe6a3dc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b21efe3-8756-4e7e-820c-cdaee59da66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae281af-a099-4291-97f0-bfd077764988",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb686a1-0af8-48e3-a01e-b95c1b1dc4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7bf10c-8279-4085-a627-dad19df37e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1169d5ab-ec4e-46a8-82ea-07f79788ef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45de4fa8-9a13-437c-8aa8-57fb5e13793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc82cce-2066-42a7-96ff-6c25d55b3b72",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcf8dbf-260a-4cce-81a9-94b5f21b198d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2098a6ad-890b-4071-b678-466a2ecbb803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2732624-84d9-4d9e-9d2e-954c50b845b0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d03633b-5c02-4c6f-af4b-33e9971a4a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed226d1-19e0-4e98-87f5-6f5e22f7e0cf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb74162d-10da-4446-a635-706c6d6a90d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6250c3-787a-48ae-bd96-2b2170e89b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bf0181-b457-4ecc-ab1e-929b2a5ca204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcd8354-50a4-4edb-9fcf-2db42ef8be92"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efee2744-2f48-47dd-aaee-86ca7b54200e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5a4551e-d22d-4581-8fed-0771475a2131"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae11b2ca-d98d-4f24-baed-8fac9ec09844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da26c628-b486-4465-8a97-ef5cc28ee3ec"
                    }
                  }
                ]
              },
              {
                "id": "0c102b83-e774-4071-945d-6979d5b30e0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da416392-ac19-43fd-9c98-1d2682e1243f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e90d9c5-dd9b-44a3-beb1-2ac12e7d5abd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "589b8f80-8e2d-4a0b-8815-3d3cc23bf83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8e1b84-25a5-4d99-8371-eafcc4541f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c6e31d5-cd8d-4a72-9726-fe7a72445294"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dadbb6e-dcc1-440b-8f66-15c9f5fde30f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d212d92a-be2c-4d89-9dfe-05d30d48c6af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2e8b51-ad9a-43f5-af51-550ba65498ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aff0c30b-12fd-463e-90f6-388122a30968"
                    }
                  }
                ]
              },
              {
                "id": "a23b225c-d874-4b42-aedd-241ed558c7e6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9ae11053-6b63-43e4-87da-7f55e2b58749",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdf5be8-7535-40c3-9f03-c8474b886912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d05da2d2-069b-414a-8549-5064165bff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50fae11-0c9e-446a-b56e-06e52db7b3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38063068-71c3-4b6f-b141-a2b3a3165546"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e4bd6b4-51b5-402b-a40f-5cf834c3b64f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f45dbbeb-9d20-4eb7-a315-40a7b00c095a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49fd99e6-3ab0-4904-9ccd-b5a0926b64de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "261e09d9-1a7a-42c9-b868-150d4b8e2157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1700c849-de50-45ed-a8dd-c8db62fbc3c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24472ef7-6d11-4039-b583-0aa4b4b1555b"
                    }
                  }
                ]
              },
              {
                "id": "083f9dba-77a3-4c5b-ba63-eba347c76737",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c1aba8-3e57-44a7-8946-fa37336246df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5fe206d7-d666-4fd1-bf0b-582d4eacc4c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846ea858-ff31-46ba-a9c7-1eb47d4f7b26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66696714-206c-4376-b3d9-596eb459ff69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83988476-11a2-4b86-8907-83ae2f5fdfba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "024067e8-501e-4976-b798-2738518b6757"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a89f34c1-6326-4c7d-b55b-4d00673670e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8b36920-6203-48f1-823c-3d60d27590fb"
            }
          }
        ]
      },
      {
        "id": "878dc063-0b31-428b-acc3-99c8c81d9b89",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dd0044d0-dc5c-4caa-85eb-a7d54665b855",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f63904a-b35c-4eec-9d2a-b2f1046a3069",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2eb57ce7-deab-483f-b084-32f6e3ebbb4a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137463b1-6b66-4ce1-b27d-2a8a0abc50d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "161db986-dad5-4b00-8809-83fdb97776b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21950a66-7448-4bfe-ad40-2c799ec9a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a453caa-5f7b-4c8e-b67d-ba4d5efbca40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d33c3ef8-a0e1-43af-80d7-fd302c56762f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86288e1e-e417-4ecc-ae36-f7a8df4c9af3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8c9ab36-f33c-4f3f-8eab-cbf486b14f7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a90a3de2-718b-47af-9dcb-d78107bfd09c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "babc912e-70c3-4c92-ab75-6ded675d9c73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d021e86-e93f-4148-a022-c9a8d9c53116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10872856-c587-4803-a69f-2611dfeb5b72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c94e83e-6a41-4966-8c7c-f007081fd4f4"
            }
          }
        ]
      },
      {
        "id": "6007a80f-35f5-408d-8205-546e9f5121d4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bff84520-ea12-4409-925b-a536afbd0ea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dadabd0-73a0-4032-b66e-a9865cfb19b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11dc5482-2cd9-4ff3-be61-15528fe46700",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fa0440-e847-4308-ab92-8728530c109e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa16f99-58c6-48f4-ad29-e64cd68da1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6884548c-a4fc-4054-8466-b5d3441964c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc779225-4b85-4235-a82e-4450fce0851f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd4f5d14-ae90-4e74-be40-0822c43f2ba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "378549d3-5c8d-4d99-9a6e-a771b4ae76f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb45279-b4bd-4aaa-a32c-fb4c63d652a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d15a95d0-7742-4956-8018-ab0843067ce2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "327005d2-f20a-4529-ad0d-747157603e9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e2fbb8c-ee94-4624-8737-14b997e49c56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fdfba02-986e-4213-9911-2c5d809c35e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "961d9af9-051c-457c-ae0d-c6d38c1b018a"
            }
          }
        ]
      },
      {
        "id": "5c57e473-a462-475e-94fd-5bd98771dfd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "86401ee1-efbf-495b-8319-c81dc950d8fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6821076b-0979-4088-93ac-14ab2fac88f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b555e61f-3693-4fc1-b577-ca8c3e33fe57",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8cfaf0-16a3-4b98-abd7-7d70c696d9ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4095dfb4-39ff-457a-933a-3b04c22ad4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9284da4-b284-489a-9910-c2dd34dd3ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d56cd4a-5e71-45d6-8992-cdafe9228a4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ef10a0e-f9e1-4ab0-aa97-cdc45baffd60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5624b562-285e-4c4c-b711-697c40862fbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7856338-3cf8-4bd9-9439-2a8c4aa1d1f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da290253-45d9-4ce2-8619-bddc468f212f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8996a2f-0a3e-4db7-ad1a-602afbb8073a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebef137d-6d14-49c8-ac07-01cff4f25db0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c202a78f-cc21-4ac4-9855-5378c67665cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7d08bde-c945-417a-9340-3c656e90c6dc"
            }
          }
        ]
      },
      {
        "id": "818ca54d-af22-4e47-b4c7-f6cf7731d8bb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ee752c6-d748-490b-aa02-bd58ea9f054a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7175417-11bb-4a26-865c-d58b83b5f12d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ffb91a11-9786-490f-a770-ec5c18d523e4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27e3428f-ad37-4e31-8cee-7ab0008a8e32",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c1dcda3-14cd-4c15-b3d5-a6cdac978ad7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 700.1468253968254,
      "responseMin": 6,
      "responseMax": 25326,
      "responseSd": 3795.0269179292213,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727397926565,
      "completed": 1727398111498
    },
    "executions": [
      {
        "id": "c0bf2963-aed1-4913-a172-9500a2b4cc00",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "deafdc0b-8fcb-45c1-8628-a378e05c1aa2",
          "httpRequestId": "a466dbb4-ebc8-4a2b-b618-c8a21fd775ad"
        },
        "item": {
          "id": "c0bf2963-aed1-4913-a172-9500a2b4cc00",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ed06f86-c041-4446-a678-20570c4bcb1f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "12576a5a-839a-4d34-b29b-3b72114d341b",
        "cursor": {
          "ref": "ca9c9362-d525-4467-ac25-76bfff5a664a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "84b37f19-6263-4e59-8837-7c7dd540c48d"
        },
        "item": {
          "id": "12576a5a-839a-4d34-b29b-3b72114d341b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "886982c9-c01f-4492-935b-396528a3065e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5a88d836-0ba1-4304-af4b-17ed3fd2cc52",
        "cursor": {
          "ref": "297f0d5d-92a4-4586-8455-6dc9f187f47a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa03251a-bb9a-4fcf-a1b1-389bbbcf7464"
        },
        "item": {
          "id": "5a88d836-0ba1-4304-af4b-17ed3fd2cc52",
          "name": "did_json"
        },
        "response": {
          "id": "163b98ed-f88c-4aff-a978-a09e45d457b5",
          "status": "OK",
          "code": 200,
          "responseTime": 263,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932ff16-2414-4b02-b02a-41532167d4c2",
        "cursor": {
          "ref": "099b4f20-c637-44b2-aa62-2bd27d03ca6b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "04d605a0-d5db-4fc9-86a7-01c56f882aef"
        },
        "item": {
          "id": "0932ff16-2414-4b02-b02a-41532167d4c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "71f928b4-7e9b-4311-bf8b-306ab2bab017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2307,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932ff16-2414-4b02-b02a-41532167d4c2",
        "cursor": {
          "ref": "099b4f20-c637-44b2-aa62-2bd27d03ca6b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "04d605a0-d5db-4fc9-86a7-01c56f882aef"
        },
        "item": {
          "id": "0932ff16-2414-4b02-b02a-41532167d4c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "71f928b4-7e9b-4311-bf8b-306ab2bab017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2307,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df6cf56-264b-4d86-8121-16f829bdc1d4",
        "cursor": {
          "ref": "d2454ede-ecb1-4ad9-ac62-a941ce089b55",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8498d8b2-5543-44b2-8a3b-8b06bbf2b1de"
        },
        "item": {
          "id": "4df6cf56-264b-4d86-8121-16f829bdc1d4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8dafdf7e-0509-498f-9eda-35236fc505e3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2438,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c29b275-4c09-4881-8636-da3d78a9a3a8",
        "cursor": {
          "ref": "9e5b2d4a-6b50-46ca-adf7-b94278561621",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3a1c4fd4-08e1-4a7d-93b9-085c986f8009"
        },
        "item": {
          "id": "0c29b275-4c09-4881-8636-da3d78a9a3a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3323ffb8-f652-49a2-9570-9a6429d40fa5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2127,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9059e8-d8b7-402a-87b7-2e71295b8a2b",
        "cursor": {
          "ref": "662a1141-eb6b-4d1f-b0bf-8a66285b4d2e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aa824324-55cd-423a-9220-97752133a196"
        },
        "item": {
          "id": "ec9059e8-d8b7-402a-87b7-2e71295b8a2b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "93512118-0797-47c9-aa55-e9118cfaf252",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa97f5c-64f7-43e9-b414-9c0d21d82cbb",
        "cursor": {
          "ref": "e69fe73d-ae10-44c0-884e-1023c5653c41",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c80ac026-f50d-42b9-a5c9-4d790b3c1b20"
        },
        "item": {
          "id": "3aa97f5c-64f7-43e9-b414-9c0d21d82cbb",
          "name": "identifiers"
        },
        "response": {
          "id": "552c9f1f-fc26-4f2b-9544-7c3be18c4fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 2490,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ced5cd-22d9-4f77-b42a-9e675f4f8a56",
        "cursor": {
          "ref": "fa2f3c47-0cd4-4358-a349-1e50251a060a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f554f52e-a831-484b-b0a3-92e08b36faac"
        },
        "item": {
          "id": "c5ced5cd-22d9-4f77-b42a-9e675f4f8a56",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f02f61d5-c256-4e71-8b1e-6d4d076b1b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db5497e-f92e-4008-88af-61f33f786e17",
        "cursor": {
          "ref": "b7273f53-c58b-4a20-967d-6e2db0ad0240",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9a6a167f-573e-459c-a0f4-39772e884e8e"
        },
        "item": {
          "id": "8db5497e-f92e-4008-88af-61f33f786e17",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ce07cae6-fbde-45ee-8af1-c8a58622f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9f004-2daa-444d-9cd5-1f7ec37a8c1c",
        "cursor": {
          "ref": "85301900-f32d-44a8-8106-88297adb2d5c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f7596870-6fa4-42e9-823b-466ddb14694e"
        },
        "item": {
          "id": "7df9f004-2daa-444d-9cd5-1f7ec37a8c1c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9e13dd75-eefb-4081-8949-3798bfd7845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d4938-c1ec-44fe-98d7-242d2650cd02",
        "cursor": {
          "ref": "fab6de1f-892a-4b45-9fd1-c24d27ae6624",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "803b5f60-2687-424e-b547-84246d23ea93"
        },
        "item": {
          "id": "b82d4938-c1ec-44fe-98d7-242d2650cd02",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c58b8d2-4c05-430b-bb51-4947ac3c673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae32cab-6eb5-41e0-a8d7-55c6c3023cb2",
        "cursor": {
          "ref": "bc093d99-fc66-4ddf-84b4-a6ffb534eb1b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6977199b-d2c9-4b23-b084-df8dd403bf73"
        },
        "item": {
          "id": "8ae32cab-6eb5-41e0-a8d7-55c6c3023cb2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e8fe3562-5124-49e0-a40a-adab481f7f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ae1b95-619d-45aa-964e-0b96bda1a156",
        "cursor": {
          "ref": "541d3f30-d9c3-4259-9daa-4edfd8aae46e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a125829-89a0-497c-8c35-27b4e1f36790"
        },
        "item": {
          "id": "31ae1b95-619d-45aa-964e-0b96bda1a156",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a6671820-ef1b-4345-b84d-4d77e8f89336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87f7ef7-9493-4807-a2f6-5bb7c9155efd",
        "cursor": {
          "ref": "59ac144f-5dc5-4a6c-9971-3344be4062a7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7631ceb6-b920-472c-9aa1-e11070d79549"
        },
        "item": {
          "id": "d87f7ef7-9493-4807-a2f6-5bb7c9155efd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6fe82eca-251a-46a1-8201-c0f9a185346e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4de37-a01a-4386-a79a-ff7afbba729d",
        "cursor": {
          "ref": "9a59766c-02f5-4dab-b752-0bb8c8b1b4a0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1ca72083-a7c8-49bf-8a50-7cd11be98466"
        },
        "item": {
          "id": "7fe4de37-a01a-4386-a79a-ff7afbba729d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "95aa326c-8ba4-439c-99db-754c10244751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f279a1c7-7bb4-4af7-8420-ec0b0ee43146",
        "cursor": {
          "ref": "71867287-91f9-418c-8709-6836fbd3fd25",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7732af51-9729-4d31-ada2-2ec3d2bde540"
        },
        "item": {
          "id": "f279a1c7-7bb4-4af7-8420-ec0b0ee43146",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96bd77c1-eb09-48bb-a855-250d02a7ffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0eb38a-6cfa-4759-9c44-4000384b16eb",
        "cursor": {
          "ref": "0c621ec9-79fc-4494-8221-82c769bd2a80",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0caf26c2-a73e-4616-bd7b-1f82fcc2a9c0"
        },
        "item": {
          "id": "1f0eb38a-6cfa-4759-9c44-4000384b16eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d03339bb-f12e-4be1-886d-8a3bbcfb3507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc34b7d-fe9c-4363-899f-26c0a5d7e91a",
        "cursor": {
          "ref": "226f9e82-39f0-426a-8622-7febb66b731f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba4bb480-c4f9-4c31-ad60-9e92fdb11924"
        },
        "item": {
          "id": "8cc34b7d-fe9c-4363-899f-26c0a5d7e91a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5010f89a-32f0-4fd2-8acc-b5358f203188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd46391b-769b-4c9a-9a79-c34636d80b66",
        "cursor": {
          "ref": "d25f29cb-15fb-4dcf-ad09-3cfee553f252",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89725bce-b423-4980-96d1-5405c7c68d0b"
        },
        "item": {
          "id": "cd46391b-769b-4c9a-9a79-c34636d80b66",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "30e553fa-fa2d-4ea8-a152-144dee30fb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac74a36-aa99-4dbe-87ee-12dc0ce223ef",
        "cursor": {
          "ref": "52072511-5d74-40cb-ab93-30f8782b30a3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3ab92ee0-8755-4981-88de-26bfe32a4dcf"
        },
        "item": {
          "id": "0ac74a36-aa99-4dbe-87ee-12dc0ce223ef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "04ced0b9-874d-4004-b394-d3dcac443e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56524427-00ec-48e1-a122-a40d80b53059",
        "cursor": {
          "ref": "aa861504-c136-4556-8e7d-b12352323a6e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7446b80f-ab9b-4a5c-a4ea-c76f74e2d47e"
        },
        "item": {
          "id": "56524427-00ec-48e1-a122-a40d80b53059",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "54ff2826-032f-4e1c-83a1-3c8b74709f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cbc56b-9279-4b5a-a632-263384e8370a",
        "cursor": {
          "ref": "c5f73a1f-64be-47ed-b2f8-2e6c65337d73",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5941dae3-76ff-4936-81e5-0bc7571acc4c"
        },
        "item": {
          "id": "c1cbc56b-9279-4b5a-a632-263384e8370a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f6e2005b-9e2d-4f2d-936d-5a26ab2fd9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d06259-7007-4cac-84c8-d73d869ff5e0",
        "cursor": {
          "ref": "b7307620-56ed-40e6-bce4-7783a399ed41",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd8d1472-d8c5-4fd9-9197-047bb3882d0f"
        },
        "item": {
          "id": "97d06259-7007-4cac-84c8-d73d869ff5e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c3d5da7-192d-4ae3-b7a2-462952caa028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a449a566-4ecd-4048-adae-9d8e627e6da6",
        "cursor": {
          "ref": "b660287a-d4c6-4df3-8718-7f06ce0a8f6d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "405d752d-94da-4ad9-8573-5b7c4331b57c"
        },
        "item": {
          "id": "a449a566-4ecd-4048-adae-9d8e627e6da6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b929572a-8222-409d-a383-b65a1884bcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b0ef37-6613-451f-a178-f19543fc4557",
        "cursor": {
          "ref": "59074e4e-dbf4-425d-8d8c-b32dcbbf61d8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a605335a-a2f2-4915-a069-7bfffd17a540"
        },
        "item": {
          "id": "b6b0ef37-6613-451f-a178-f19543fc4557",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "73feba45-693e-40d0-9935-ea646e8407a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01258e1-3af8-4cf8-b3dd-6c5d71800fa0",
        "cursor": {
          "ref": "c7402705-24fa-4421-b741-2b4bc90c293d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c8b1d142-68ee-4883-817e-1d5017ae73cf"
        },
        "item": {
          "id": "e01258e1-3af8-4cf8-b3dd-6c5d71800fa0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3c74ad47-1a3f-4a36-bb79-1b88db000230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f1b642-3b88-4d5b-abff-7d648831f534",
        "cursor": {
          "ref": "c5921b3a-df97-4b14-97eb-1a3b4183e93d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d50dac91-9ade-4681-a0a9-42aaf3e0503e"
        },
        "item": {
          "id": "48f1b642-3b88-4d5b-abff-7d648831f534",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b85817a9-1e4b-41a7-a1d6-c74022177ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbd543-6f13-4cfd-bd7a-905bd7755234",
        "cursor": {
          "ref": "a73f7a01-83dc-4b91-b3d0-1912cda4c187",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3daffa94-790a-488f-be96-44ef29532d1f"
        },
        "item": {
          "id": "10fbd543-6f13-4cfd-bd7a-905bd7755234",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f8c9f387-7f6d-49b6-9a75-33b12e143854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587d0931-b546-4cfe-9c01-78305416c016",
        "cursor": {
          "ref": "dd5dce0d-9875-40fe-8c11-2c4e5e88e648",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "328c770e-1593-4a0f-a0c9-63ea9001335a"
        },
        "item": {
          "id": "587d0931-b546-4cfe-9c01-78305416c016",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ba91724e-be58-4040-8d6c-b27de2c363c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9140196d-bb9e-4889-a603-4ab1fb7c97cf",
        "cursor": {
          "ref": "c10d99f4-162c-4f59-8be2-65773ceafd3e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ac0ee6d4-bb99-4cb9-9418-0160467ea7ce"
        },
        "item": {
          "id": "9140196d-bb9e-4889-a603-4ab1fb7c97cf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9f603c51-fb47-435d-8b87-19058d486c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c415684e-6483-4bfd-8544-d18bc7c162d6",
        "cursor": {
          "ref": "b1dd1afb-207f-401a-9d56-acf60f4c9aa8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2a2391af-2a45-4c11-8752-10174e776c67"
        },
        "item": {
          "id": "c415684e-6483-4bfd-8544-d18bc7c162d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "609fa666-8517-41ea-9804-d4643675eefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9516ef-1998-447a-84bb-c327ecf19566",
        "cursor": {
          "ref": "f264d922-162d-4474-b9fb-e51a8f906882",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5a5e93d1-03c2-473e-b0fb-be1068b07ccc"
        },
        "item": {
          "id": "1d9516ef-1998-447a-84bb-c327ecf19566",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "35c113a6-f5e7-4584-b8ef-e4b58673df3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8484ab6f-f6c4-4875-8fcc-77f67d4da483",
        "cursor": {
          "ref": "ca1dda9a-df27-4d8b-af1b-9a1bb12acfab",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a77c3326-fdd9-40ba-8b00-ef9fd9287a19"
        },
        "item": {
          "id": "8484ab6f-f6c4-4875-8fcc-77f67d4da483",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f53ecdca-3aed-4532-865d-8c0ae6193459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7458b2b-caa3-4693-ab6c-5eb7863eafa3",
        "cursor": {
          "ref": "8a56b6ae-14bd-4bb6-929e-0d42dec5bb64",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cd89cc5a-2bb6-4b52-93c8-e1d4b5232189"
        },
        "item": {
          "id": "a7458b2b-caa3-4693-ab6c-5eb7863eafa3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cd4daf80-eeed-4faf-b789-e53286cd6c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab349ec-0363-4163-8d24-cd54d941545e",
        "cursor": {
          "ref": "560a0a99-6de3-4392-b25f-ef03f79c1ebc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c23660ec-c062-471b-b6a6-e22c08fc2f17"
        },
        "item": {
          "id": "9ab349ec-0363-4163-8d24-cd54d941545e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d751bb76-07c9-4c86-95b9-10559d00bd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb05f31c-266e-4d57-8f9e-efe40d839ac7",
        "cursor": {
          "ref": "a1ab8b45-cb73-4f61-9533-9c9f70a0fae1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a40a18b1-0e47-4347-9acf-f6fd83e9479c"
        },
        "item": {
          "id": "eb05f31c-266e-4d57-8f9e-efe40d839ac7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df193743-2039-4713-96c6-2ece02ee5127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1011e67b-c45e-4e11-b129-2150484c64af",
        "cursor": {
          "ref": "10c5ca66-967c-44fd-b4a8-450e65730a8a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d96e4060-0397-4134-9033-8d34808e9038"
        },
        "item": {
          "id": "1011e67b-c45e-4e11-b129-2150484c64af",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d5ef1fe-c7b5-4f59-a1ea-7bd55691219f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9473a8a7-6da5-42f6-ae03-b57b467b53aa",
        "cursor": {
          "ref": "34d4b86a-5be8-4930-b7a0-b5c4b50e1540",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "727ec9c3-afb4-4089-972d-8b12f611cdbf"
        },
        "item": {
          "id": "9473a8a7-6da5-42f6-ae03-b57b467b53aa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4d5728a7-a9ad-4df8-895a-4d58a1223bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64839880-9fcb-45b1-9b7f-e714b43965f2",
        "cursor": {
          "ref": "f52f5f3d-13d5-4877-82fb-97c7f9c2d9d8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c779d2cb-fee1-4a70-b185-a8fa1890b615"
        },
        "item": {
          "id": "64839880-9fcb-45b1-9b7f-e714b43965f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f220cc32-e0af-44e1-9815-3e0233ae89cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b363b-4dec-4476-986a-288ffc25f4a0",
        "cursor": {
          "ref": "6a35a4ba-83bf-4c35-aca1-ee938fb0f359",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "75e08b7e-6d93-41dc-acb1-4095a51ff071"
        },
        "item": {
          "id": "176b363b-4dec-4476-986a-288ffc25f4a0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0c51241b-d891-4790-adf3-d73a188e11d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1efe97-d3fc-4de7-aaca-92558d798a3b",
        "cursor": {
          "ref": "168a6bca-91b1-453c-8468-bc5dede9a1b8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b728ae3-52f6-4b64-9f9d-8acac232413b"
        },
        "item": {
          "id": "8c1efe97-d3fc-4de7-aaca-92558d798a3b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2c244bc9-7fcb-451a-9505-4bc122932396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f00c5c-21bf-4f3d-bccc-58b1ed9adfe9",
        "cursor": {
          "ref": "5a0997a2-ce08-4386-b062-1df5c8a459d3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1e3805ee-b396-4270-bd4c-333896fff2c1"
        },
        "item": {
          "id": "a5f00c5c-21bf-4f3d-bccc-58b1ed9adfe9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "79fc0e35-3b5a-4cfc-acb5-44f310f4065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701c6e5-f82c-4382-8191-86940b0b25ce",
        "cursor": {
          "ref": "f1a506e2-9253-40b5-8e64-a2c592ddd3fc",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1837e74a-8035-437f-bb2c-d5573851e833"
        },
        "item": {
          "id": "0701c6e5-f82c-4382-8191-86940b0b25ce",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0a7fa2c0-ba4d-4e2d-a570-2b9ef35b61c1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e67f2d6-9ea5-4711-8d64-cc30d41fbe84",
        "cursor": {
          "ref": "ab4654d8-8283-40b1-a849-cd2881fe24bf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2e56b3a3-0a58-447b-b43d-d6a35d238e6f"
        },
        "item": {
          "id": "1e67f2d6-9ea5-4711-8d64-cc30d41fbe84",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "824005e4-7d9b-40a5-8767-6d63e23032b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf100b2-3698-47ac-b95e-91a18482cc9d",
        "cursor": {
          "ref": "bd2113cb-e810-45e7-8e23-ed0604698063",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d099ba95-3bf0-4c0c-9bcc-fa86ec0cc868"
        },
        "item": {
          "id": "acf100b2-3698-47ac-b95e-91a18482cc9d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "caeac10b-b5c7-47cb-a61f-cbd1146816d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99247ce1-969b-4156-a3c2-165044ddfdd0",
        "cursor": {
          "ref": "ac1112cb-5637-48c2-8602-46b4ba8da2b7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ed3703db-84a5-4c98-ad82-0ed2a5194d13"
        },
        "item": {
          "id": "99247ce1-969b-4156-a3c2-165044ddfdd0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ac84ce9a-4025-4d3b-a21d-9c325c7932e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1def8e13-108d-49af-b91c-9109d975720d",
        "cursor": {
          "ref": "4fe3a3d3-164e-42d6-9dd5-af3757524f92",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "815d5257-4512-4b3e-9449-1ea01ff3e100"
        },
        "item": {
          "id": "1def8e13-108d-49af-b91c-9109d975720d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f6de84ef-86ab-4cd8-ac86-1f53a273c046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97f0b5f-cf5c-4c67-935c-39c8c5f54307",
        "cursor": {
          "ref": "bc5251bd-26ff-4370-9d32-c54f7be74971",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c847e07-9dd3-42a3-80d8-30fe19818a88"
        },
        "item": {
          "id": "f97f0b5f-cf5c-4c67-935c-39c8c5f54307",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6c3e3dfa-453d-4e94-b9bc-8a406469af52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e4557-6bdd-4a37-aaf6-5fa7ef71c972",
        "cursor": {
          "ref": "02ff47e0-4b33-4f83-bd77-1d670d86d3d1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9ca51540-f663-48e2-9c0b-a5a37557037f"
        },
        "item": {
          "id": "fe9e4557-6bdd-4a37-aaf6-5fa7ef71c972",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5d70d2c-8945-4123-878b-98c20c63cbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea34f840-341d-485a-bef4-3fcbcbeaf3ee",
        "cursor": {
          "ref": "cce0613e-8c57-43db-bd48-d9595e21bad7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db645c77-d7c4-4448-819d-b75c65aee4f5"
        },
        "item": {
          "id": "ea34f840-341d-485a-bef4-3fcbcbeaf3ee",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d9a54a9e-ac12-4c32-af36-98a422d9c2cf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c9004-120f-4946-bb00-ad40a3407e23",
        "cursor": {
          "ref": "68475c61-d2d2-42db-8cb7-bcdad3f6557a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b3c67dae-5ee5-48bb-b8ba-0cce8654e34e"
        },
        "item": {
          "id": "8d5c9004-120f-4946-bb00-ad40a3407e23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "feb71ffe-5a37-4b12-8467-01236d10d070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d530da-df9a-4118-af7c-b38b38daa6a1",
        "cursor": {
          "ref": "0e8e36e8-3694-44f8-b773-679cfd2a763d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9691cc57-af47-4494-b89a-f430b488239a"
        },
        "item": {
          "id": "65d530da-df9a-4118-af7c-b38b38daa6a1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a613648-9bfe-4920-b398-8004ff7327a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97d5bef-59d0-4d46-ab6f-166d58ca478b",
        "cursor": {
          "ref": "a6ffe6d2-7142-44e1-add1-9ef88f1ab32c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "48b082de-66e1-4f62-ac32-16e2e28849a8"
        },
        "item": {
          "id": "e97d5bef-59d0-4d46-ab6f-166d58ca478b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "44efb256-49bc-4443-b0ed-5e5065ec406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5555bd-aacb-41b4-bd1f-d7e99267e9b4",
        "cursor": {
          "ref": "0edba85c-3b15-4c44-bced-3da4533dedfa",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "de5e1296-80bb-4cbf-af05-c1b29e68b1da"
        },
        "item": {
          "id": "bc5555bd-aacb-41b4-bd1f-d7e99267e9b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2b508a5e-9745-4aed-b68b-7ba524f282c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a0dc8-4ce5-41eb-960a-8538b3dea689",
        "cursor": {
          "ref": "58840255-3b23-4769-a8d6-14fbb0279ef8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a852b80b-a410-4f53-9ed4-23eb3a726cf3"
        },
        "item": {
          "id": "967a0dc8-4ce5-41eb-960a-8538b3dea689",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c8ab0217-1209-4179-9108-a9f7582beb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6751307f-9bcc-426f-8bff-440d673a816f",
        "cursor": {
          "ref": "ccaa5fb4-c39b-44df-abf7-d01254e9b6fb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a1ba7e7-4ca6-401a-b30a-27ff96191d07"
        },
        "item": {
          "id": "6751307f-9bcc-426f-8bff-440d673a816f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2352df7f-5d68-4eaf-ac9a-4d4c769d947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c013c60-dbc4-4f13-b2e0-de26d4b84565",
        "cursor": {
          "ref": "43bbfa8c-379a-46b5-93fe-8d7dd217062a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "70877fb1-63ae-43e0-ae7e-d957626f725a"
        },
        "item": {
          "id": "3c013c60-dbc4-4f13-b2e0-de26d4b84565",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f5b6791c-4fa9-4c57-8db8-3fc12308e4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d373a-68e1-445a-ba62-f4bde8256923",
        "cursor": {
          "ref": "4abe579e-cb9f-4fdc-aefa-41998e2a4719",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "082a0826-213c-4a07-bec7-f21957fd65de"
        },
        "item": {
          "id": "0c8d373a-68e1-445a-ba62-f4bde8256923",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b5a266ec-ca2e-43ef-8789-a113e77eb936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee534e63-ca0e-47ac-8eb3-99920fb4f8fd",
        "cursor": {
          "ref": "55d37eb5-5c54-453d-9adf-c978cbeb1fc5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5f547777-9c76-4df9-a95e-f46bf1f15e44"
        },
        "item": {
          "id": "ee534e63-ca0e-47ac-8eb3-99920fb4f8fd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e25281c4-22e1-4dc4-938b-7f7c3734762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8eeb46-1d35-4dd4-9f1c-02da69ed41df",
        "cursor": {
          "ref": "18640063-d33a-45cc-86e0-2be4108346d1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a45b9d4a-5793-43d6-a7be-c2fc88092b62"
        },
        "item": {
          "id": "4b8eeb46-1d35-4dd4-9f1c-02da69ed41df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1fd1e7c6-55b5-46e5-97e1-d8ee10b139e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4e91e6-b6e1-4d09-aaa1-89472e207f87",
        "cursor": {
          "ref": "48475e6e-ab0d-4444-b549-260080a22fe7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad7d051b-1abe-44e2-87d4-39b28b75f9b8"
        },
        "item": {
          "id": "fc4e91e6-b6e1-4d09-aaa1-89472e207f87",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36a0cd16-f96b-4ff6-b50a-5a3ba03e6c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd369bc-0ab4-44e7-b47e-6b1ec83257bb",
        "cursor": {
          "ref": "2fa6812f-29db-4db2-b2d6-20700dde4cb3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "faa00850-1c03-4029-959f-da8d8699a887"
        },
        "item": {
          "id": "0fd369bc-0ab4-44e7-b47e-6b1ec83257bb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f15315f9-309a-47f4-b9a8-505631d701cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a746edc9-73cf-4dbb-a993-19dd618bb19e",
        "cursor": {
          "ref": "5b4436b4-2847-4973-a4d5-0714d4ec5e16",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a95f5694-3997-46ba-9995-a5d3e0e18991"
        },
        "item": {
          "id": "a746edc9-73cf-4dbb-a993-19dd618bb19e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9510be92-34fa-4962-b695-f488ad3ffd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6141192-b303-463a-afa5-6eb66c078e42",
        "cursor": {
          "ref": "7689de4c-7583-47f0-9939-5c72e816f30f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2beab361-0dc6-44f7-bc7d-58a4219fd280"
        },
        "item": {
          "id": "a6141192-b303-463a-afa5-6eb66c078e42",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5d155dd0-ffba-4cc0-af28-4ff24e4a0de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e3cee-a460-4556-b3b0-3514f03a3a44",
        "cursor": {
          "ref": "a9b8b22a-b2a2-4b27-aacf-d48a775685f6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5869a9ea-541d-40ca-978f-e8bc87547b23"
        },
        "item": {
          "id": "600e3cee-a460-4556-b3b0-3514f03a3a44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dc1dae54-e52f-4c82-8f53-de8741816e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714548ae-2c7c-4687-9b97-665532b1ceb4",
        "cursor": {
          "ref": "347b066e-fd71-462f-95c5-1ccefe888bff",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "02d78b9a-313c-4cbe-91eb-429c7fd47743"
        },
        "item": {
          "id": "714548ae-2c7c-4687-9b97-665532b1ceb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "30faf875-3918-49a7-b25b-976e2f64c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4758c233-e184-4aaa-8ff4-9eea128de018",
        "cursor": {
          "ref": "a90b0202-9cfb-4bc1-9bb4-1df7c97ccca0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8677f949-7697-43c9-bd79-c83337c919ce"
        },
        "item": {
          "id": "4758c233-e184-4aaa-8ff4-9eea128de018",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7cc05ff9-be70-4bc6-85d3-f3b82c41bf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fdc1ca-b55c-4b49-b637-55206ada7c94",
        "cursor": {
          "ref": "1ef908de-ab4a-4374-b732-86ead4429a24",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ee99d15-ce36-4ba5-a1e6-1f8fc5778651"
        },
        "item": {
          "id": "83fdc1ca-b55c-4b49-b637-55206ada7c94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8b87c7cc-2704-44cb-8c58-a333e7537b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7a147c-39d9-4c72-9d64-bf185bba5a5f",
        "cursor": {
          "ref": "fa1818b8-1138-47fa-89a3-80c41b062642",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0a81332f-50e9-40ef-827f-c4b4e36121f2"
        },
        "item": {
          "id": "5d7a147c-39d9-4c72-9d64-bf185bba5a5f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "23550e12-4cef-449c-a23d-4cf0954dd6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a144b653-7a66-4308-bf45-b8490826b8a6",
        "cursor": {
          "ref": "917afbaf-ddee-45cc-b56d-132e4e167c0c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "99bad4a6-15e9-4aba-af28-908ea4957f22"
        },
        "item": {
          "id": "a144b653-7a66-4308-bf45-b8490826b8a6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "49133962-f352-435c-955e-79b6cb630acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcf0c6e-9447-4593-a147-6a05eef0fd73",
        "cursor": {
          "ref": "a8bea026-4eea-4ee2-88d0-0ff6ac6d0689",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "229dd2e3-7c45-434e-8cca-5168aee0e16c"
        },
        "item": {
          "id": "dfcf0c6e-9447-4593-a147-6a05eef0fd73",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1dcc8111-09c2-4664-bba0-f1a314ba17cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc19dc5-a589-4da6-a60f-b4b4bf658e1f",
        "cursor": {
          "ref": "aabf00a3-05b2-4e38-97cf-b5c9250393f9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6895fb30-bcf0-46cb-8e3c-19b1b5caf81f"
        },
        "item": {
          "id": "fdc19dc5-a589-4da6-a60f-b4b4bf658e1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fdcd8470-4637-4e33-9aa2-4e56c80eb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0937c4-6503-4335-9dfd-21891598ac8f",
        "cursor": {
          "ref": "44c56cd4-ce33-42a0-91ba-97662a1d2301",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b0329cf9-9c97-4e1b-954f-d2ef0fc8fcbe"
        },
        "item": {
          "id": "2d0937c4-6503-4335-9dfd-21891598ac8f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "312c1edc-7eae-4ce0-a20d-02f532e20e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d166771-3d23-4e40-bd25-cdf9e8dcf6a6",
        "cursor": {
          "ref": "86c044a6-abec-4a87-a7d4-b5c99ec646c3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "101a04f6-710e-4db7-80e6-6fbadd8b80da"
        },
        "item": {
          "id": "2d166771-3d23-4e40-bd25-cdf9e8dcf6a6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "318aacc4-2042-467d-9b35-6d3184ed3aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14dbb2b-b9e4-4c90-b085-5330d006a210",
        "cursor": {
          "ref": "ca50bc19-9dc2-487c-ae6e-de7d1f5ac2dd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f6b40f5-e753-4fe4-b177-4b22314d77be"
        },
        "item": {
          "id": "c14dbb2b-b9e4-4c90-b085-5330d006a210",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "37eccc2a-2b06-4ce2-8896-b198d1fdf9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23d7bae-57cf-4df0-adeb-3ebae24f2279",
        "cursor": {
          "ref": "9de1d6f0-4f97-4e70-a41f-4b302fa869a2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a9496fc-3b4e-48dd-b9ff-36e303a8e496"
        },
        "item": {
          "id": "a23d7bae-57cf-4df0-adeb-3ebae24f2279",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "618ac41f-ae73-478a-a181-fae755c23b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3994c8f3-c609-4947-a4eb-3f2333bdcfd0",
        "cursor": {
          "ref": "32038f4d-1339-43b1-8559-3cc9a228ea20",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ee3d2264-3e43-4c76-b6f1-895899a72f91"
        },
        "item": {
          "id": "3994c8f3-c609-4947-a4eb-3f2333bdcfd0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f31f920b-6cd9-40ac-95dc-6eb2c82a3e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeafb99-fd61-4bb2-87c4-21c72af712d0",
        "cursor": {
          "ref": "e6f5b831-0cbf-40a2-9975-c8d31bd7302b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "53ffa3df-25ff-4014-bb4c-00ae85df48e0"
        },
        "item": {
          "id": "bbeafb99-fd61-4bb2-87c4-21c72af712d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16da8039-b863-435f-ad67-43da18ed77b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d585ea-9b77-4d15-880e-d9f80e748a16",
        "cursor": {
          "ref": "570de5a9-964d-4516-bca0-a7e760fbbf5e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0c5eb3a2-be49-48e9-9f4f-6dab77924eaa"
        },
        "item": {
          "id": "61d585ea-9b77-4d15-880e-d9f80e748a16",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "690316a6-fcc7-4e6a-b8cd-d45f4102a9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448f4b6-51d5-4b96-aa2e-e196aab8ab7d",
        "cursor": {
          "ref": "4f9a50db-7c84-4a42-963e-ffe11e37b8ee",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "017de8b0-eab8-4cd7-ae42-3cfb49b2e1bf"
        },
        "item": {
          "id": "d448f4b6-51d5-4b96-aa2e-e196aab8ab7d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "026ae60e-0d5b-4d21-93cf-340864483fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b175efc7-fed0-4c5c-8f03-2c17c5d8e321",
        "cursor": {
          "ref": "10efc7b6-273f-47a8-b2ea-8865972d169d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "302e4c5a-4047-4e5d-bb10-d0633802df9d"
        },
        "item": {
          "id": "b175efc7-fed0-4c5c-8f03-2c17c5d8e321",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fa1aa411-299f-416b-9d26-0b542eb6a146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd6a9a-7ea8-4ad7-9ed3-448ebff50724",
        "cursor": {
          "ref": "b79e94fc-c7cb-410c-96e1-eb779cb54cee",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f2a6cf14-3703-46c7-8240-0af9ad6eddad"
        },
        "item": {
          "id": "11fd6a9a-7ea8-4ad7-9ed3-448ebff50724",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2385b2b6-821c-4815-b3fd-d0447872050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388cfbe8-9659-4e92-be29-fafc9e8e39ab",
        "cursor": {
          "ref": "255bd868-3cad-4876-b123-4af99305d26b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "485c0332-22ae-4679-99fe-fbc90cdb6074"
        },
        "item": {
          "id": "388cfbe8-9659-4e92-be29-fafc9e8e39ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "883bc331-3160-4036-81d8-b2c9c9f30361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49830ea5-d9ef-4407-a073-0621422b7aaa",
        "cursor": {
          "ref": "dc44b7cc-cc48-4316-a8db-f7da95c63584",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fec8b999-4be6-499e-be13-0f289c890001"
        },
        "item": {
          "id": "49830ea5-d9ef-4407-a073-0621422b7aaa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "71214998-20eb-4c53-a95f-e96f71aefe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98507437-6fd0-443c-bf69-9e439d43318d",
        "cursor": {
          "ref": "12a75889-7750-45cf-ac64-08c49e13c986",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef16c10d-bb07-477c-aa93-0096c92ffd60"
        },
        "item": {
          "id": "98507437-6fd0-443c-bf69-9e439d43318d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e9f3d769-3184-43f3-a5d0-abf7579c6845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1bf10b-8bdd-4bae-9afa-5f7a49571dab",
        "cursor": {
          "ref": "5b9e37b7-013e-49b2-9ae4-466326534866",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ed7faea-d47a-4ae8-a858-0f6147b90579"
        },
        "item": {
          "id": "db1bf10b-8bdd-4bae-9afa-5f7a49571dab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "29ef6135-77e4-4efc-b1fe-2d37c2d29e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1933b8fe-faf7-4477-ab0b-86560db30fe9",
        "cursor": {
          "ref": "280af2c9-2b53-49e0-9266-227726fd55f1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "82dd0e25-021c-4c5e-9b58-1e86bb71f1d0"
        },
        "item": {
          "id": "1933b8fe-faf7-4477-ab0b-86560db30fe9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "659be74c-fc26-4730-87a9-20c13a64b554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77b90e9-40d1-4db8-9065-6432c8c0cf13",
        "cursor": {
          "ref": "4ff0bfd1-2b09-4c08-8a5c-744e35a80875",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "41ac86c0-501d-42b2-ab93-89df5ffa9733"
        },
        "item": {
          "id": "a77b90e9-40d1-4db8-9065-6432c8c0cf13",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "713ebcd0-e3af-4bec-871f-220fe7d206b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4125e8b0-1449-443a-966a-5b323a9d73e2",
        "cursor": {
          "ref": "f66841c2-01b8-4cb0-8213-dc3b9c467718",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9340d506-fcbf-4ecf-b823-da0966cc4df1"
        },
        "item": {
          "id": "4125e8b0-1449-443a-966a-5b323a9d73e2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cabcc2bb-f13b-4425-b560-4d5ed5040a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b714a63e-8caf-460b-b3d2-2f6eba52520e",
        "cursor": {
          "ref": "fc5f9c67-cf7a-4daa-b566-e751298ed8c8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "11c98869-7212-4624-b48c-7e41108b5ef6"
        },
        "item": {
          "id": "b714a63e-8caf-460b-b3d2-2f6eba52520e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3c8f5025-7caf-4d11-8f2e-820e808fb980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bbfc88-dfad-4c4d-95c9-160121ba8d94",
        "cursor": {
          "ref": "88714875-d6eb-474e-8e06-12793de33bd5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2f9eac1d-d1b4-4da5-98ce-037242d9aebc"
        },
        "item": {
          "id": "49bbfc88-dfad-4c4d-95c9-160121ba8d94",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "923f5e48-651b-4d5d-9ff1-a7f44e226291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5093b47-c68d-4058-960c-b6c95b42caf8",
        "cursor": {
          "ref": "e32a64f9-70b0-42d4-aa3c-c803fbcfa09c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8821ae71-251d-4999-9d98-dc34ebb46cff"
        },
        "item": {
          "id": "f5093b47-c68d-4058-960c-b6c95b42caf8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "57b5eb38-a138-4499-81cc-ecf3ebe8e871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f7d1c7-156c-4144-934b-36875e865ed7",
        "cursor": {
          "ref": "4769995a-c694-49e8-a256-67d00ea6a8ae",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fb70f43e-9820-4615-afce-7b29223364d4"
        },
        "item": {
          "id": "02f7d1c7-156c-4144-934b-36875e865ed7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "356d2f83-985c-45fa-a6fe-5f2b3fcf5e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0432c33-b8c4-47da-99e1-61a07f89f6e8",
        "cursor": {
          "ref": "bc8e9656-fd5d-450b-a4c7-ba290570cbd2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "04a824b3-e1bb-4ee0-93ad-33f6c7d107b0"
        },
        "item": {
          "id": "f0432c33-b8c4-47da-99e1-61a07f89f6e8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "98111b62-12eb-4413-b7e3-6c1d115c17d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a6df20-e1cc-46dd-9404-583399c43c45",
        "cursor": {
          "ref": "ef73074c-05ef-4db9-bc5b-81e42caf02a5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "43aba3d4-c59c-4f03-9043-b841fca75df5"
        },
        "item": {
          "id": "10a6df20-e1cc-46dd-9404-583399c43c45",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5aedecac-fe6e-4df0-88db-f5191fc71e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d4e53-ccd2-4eb2-a091-c0aeab435101",
        "cursor": {
          "ref": "5e1ff0bd-2ccf-403b-bc0e-0e99f34b99e6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e2df9b09-706c-47ca-ba85-4aeb5abd1627"
        },
        "item": {
          "id": "0b4d4e53-ccd2-4eb2-a091-c0aeab435101",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9991999f-4982-42fb-bf24-c5aad3975dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78505253-cc58-49a3-ac17-8cb2bfde19c0",
        "cursor": {
          "ref": "89c943b4-6e57-416a-a056-828415b4f3e0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "518c5973-e38d-411e-a80e-cfce4f51743c"
        },
        "item": {
          "id": "78505253-cc58-49a3-ac17-8cb2bfde19c0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "02b2e07c-d323-423a-a344-cdde04869da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dcf336-9d0e-4d49-b295-eb9b67aa1b00",
        "cursor": {
          "ref": "ceca9933-e230-4a50-8b15-798e83f0a268",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ddb9d15-cf59-468b-a323-cfbf6f84398e"
        },
        "item": {
          "id": "d4dcf336-9d0e-4d49-b295-eb9b67aa1b00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "628cfec2-c44c-41fe-9028-63941429e01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ec6b7d-6c70-41dd-b94f-ab69da0ccd51",
        "cursor": {
          "ref": "22d7c2d5-eab0-49e5-96d0-7ba2357e4821",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c895b91c-c305-4fe4-bf1c-580494d0dd7a"
        },
        "item": {
          "id": "55ec6b7d-6c70-41dd-b94f-ab69da0ccd51",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76063e80-b141-41aa-afe8-9d84b89b2b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc89281d-dc03-4e41-b58f-1d98c2d87d9b",
        "cursor": {
          "ref": "84170e34-7f14-48f1-8e33-a41099e17d37",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f8f56726-752d-4f9f-b4c4-30ccbc7cab3e"
        },
        "item": {
          "id": "fc89281d-dc03-4e41-b58f-1d98c2d87d9b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "97c67655-c1b2-4145-b67c-965cc2ddab2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2120a96-1200-4ee2-ae61-2b7e927b9d47",
        "cursor": {
          "ref": "b1deb3d8-002a-4dbb-8a1a-0947985df3ad",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b217b93f-3ec4-4334-8b20-6eecbabf1ebf"
        },
        "item": {
          "id": "e2120a96-1200-4ee2-ae61-2b7e927b9d47",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8619936a-c81a-4505-b17b-c97354b52b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "642636a1-24a2-4b6a-be33-da26df52669b",
        "cursor": {
          "ref": "98e8e52a-8e9e-4a3d-b303-67bc2a44fb6c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c3e823c4-72d5-4ae4-9f55-c2709382ee60"
        },
        "item": {
          "id": "642636a1-24a2-4b6a-be33-da26df52669b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b2ccc89-f56b-4681-911f-ff9a4083f0ba",
          "status": "Created",
          "code": 201,
          "responseTime": 25294,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d711c4-1151-4701-b96f-b12b01ee37c0",
        "cursor": {
          "ref": "985f4516-6ef5-49bb-a08b-a041fc07ed34",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "76cc1388-8be4-4242-a16a-26bee9ff7765"
        },
        "item": {
          "id": "09d711c4-1151-4701-b96f-b12b01ee37c0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f65d05ca-a584-4d43-af65-328f9d4bf889",
          "status": "Created",
          "code": 201,
          "responseTime": 24530,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3df37d2-515f-48ff-9970-d11a23968892",
        "cursor": {
          "ref": "e79b4a23-6683-4de5-a3bd-5dce239524c0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fda737b-82d2-493f-b394-6bc165c53efc"
        },
        "item": {
          "id": "c3df37d2-515f-48ff-9970-d11a23968892",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "74f32ff4-a5d3-4d86-97bb-bf07b081612c",
          "status": "Created",
          "code": 201,
          "responseTime": 25326,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b9010d-98cc-453c-ad7d-0c9e4d903927",
        "cursor": {
          "ref": "55a2dbe5-e853-4964-849a-6fcee33cd32f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4579bc1b-479b-4780-96b0-01d3f0dde879"
        },
        "item": {
          "id": "36b9010d-98cc-453c-ad7d-0c9e4d903927",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "14b57a28-fd3d-4db9-a14c-b8f521b5f9dd",
          "status": "Created",
          "code": 201,
          "responseTime": 24591,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97afe657-c821-42b8-ad31-ba6ffe4bfa6f",
        "cursor": {
          "ref": "de97a566-7362-4d6b-8481-d22f9afc0805",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e4aa8f5-af8e-43da-b009-6d68b4196179"
        },
        "item": {
          "id": "97afe657-c821-42b8-ad31-ba6ffe4bfa6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "60db112b-c30b-4302-9a0d-ab56378e728c",
          "status": "Created",
          "code": 201,
          "responseTime": 24562,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-27T00:47:47Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-27T00:47:47Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "acad73a6-99a0-4c8b-a795-5035f09d720a",
        "cursor": {
          "ref": "0a604e15-f3e9-471b-8ec2-47b9cd4726ab",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "836fe8f8-d6bc-4224-bfe8-418a7c172d68"
        },
        "item": {
          "id": "acad73a6-99a0-4c8b-a795-5035f09d720a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9db9d2f6-c32c-400b-b874-5d5bde1d7e2c",
          "status": "Created",
          "code": 201,
          "responseTime": 24644,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754f89ce-c19d-463d-9fc8-099880382d73",
        "cursor": {
          "ref": "01789185-0ac2-4782-909e-5f0aa75b3a07",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9fbf969d-7692-4d16-9b54-fedf9389a862"
        },
        "item": {
          "id": "754f89ce-c19d-463d-9fc8-099880382d73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f0eef8df-c2d8-4a34-a6af-21034991eacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5024567-77af-4494-9275-765ba84a1fb9",
        "cursor": {
          "ref": "341ed8e2-7405-4c0f-a42c-7171c2103f9d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f026ae4-0d5f-40db-9365-b8536ce8fcc4"
        },
        "item": {
          "id": "e5024567-77af-4494-9275-765ba84a1fb9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e99bfece-78b3-460c-a25e-b05e31117a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a15ac17-d616-41d6-a838-24bcfb9a5d32",
        "cursor": {
          "ref": "ec9a1bdd-7e35-43ce-9edd-cdae441698fb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "814555f5-f50c-4f7d-8c96-d92e3dc25b8a"
        },
        "item": {
          "id": "0a15ac17-d616-41d6-a838-24bcfb9a5d32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7c5689d5-1a1a-4912-8c32-f9eecdba4930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f837a1db-5bc6-4cac-ae83-b8cb6ec0aa37",
        "cursor": {
          "ref": "292ac045-b30a-4603-89b5-2d6c50afc873",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6584a454-2281-4415-8932-83163aff7ff6"
        },
        "item": {
          "id": "f837a1db-5bc6-4cac-ae83-b8cb6ec0aa37",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "56c50297-32f5-4976-bbfd-4c314660e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf592be2-86c8-4ae3-99c2-5fe20a8310e5",
        "cursor": {
          "ref": "49bc08b8-1b64-445c-8bee-00d7573a4fb2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47f6af9b-2408-4fac-91be-6393f54d5438"
        },
        "item": {
          "id": "cf592be2-86c8-4ae3-99c2-5fe20a8310e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6324b8d5-58f1-4393-b0da-f495c8c1d7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e301838-7109-4b73-8385-9a2be17d38e7",
        "cursor": {
          "ref": "aefcc566-8742-434f-8a15-2a94287cae78",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "720eac0b-c4f1-43ac-bded-f8328c63b605"
        },
        "item": {
          "id": "8e301838-7109-4b73-8385-9a2be17d38e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5746c85b-fcae-454a-9a0e-83c2e37cebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf9abce-1b1f-4dc2-bfa9-e513475c31fc",
        "cursor": {
          "ref": "0c8c9558-8a25-4b5f-a394-824a7d3711ec",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f7061693-6c8e-4e31-bf0c-001cf9e29542"
        },
        "item": {
          "id": "faf9abce-1b1f-4dc2-bfa9-e513475c31fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b75a2e68-cf63-44fa-98e2-036659585718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94ea39c-edba-41f9-990d-07713373ddfb",
        "cursor": {
          "ref": "be13b6dc-26ce-40f7-a750-17fd4e183250",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3a4956ea-83fa-41c4-9301-7ca27f5193ed"
        },
        "item": {
          "id": "d94ea39c-edba-41f9-990d-07713373ddfb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3481dc30-117b-42dd-9cb1-59529089ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c243d511-fc97-414d-8c03-66f0cad71359",
        "cursor": {
          "ref": "4ec1b95a-531c-4c41-a645-79e5c29406f0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "877dd397-67bc-45d6-b4eb-ee1de8702447"
        },
        "item": {
          "id": "c243d511-fc97-414d-8c03-66f0cad71359",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b2fceadf-018d-4c15-bff4-2dec140030b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2cfe9e-0fcf-499c-bc0b-7feb10ea13d4",
        "cursor": {
          "ref": "bf800dad-973d-492f-90c8-1a971209929f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3e8cb95f-7b5c-4b83-ae0d-d0f94dbd165f"
        },
        "item": {
          "id": "eb2cfe9e-0fcf-499c-bc0b-7feb10ea13d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ada7cacc-cc8c-4d50-98d6-7fd584861056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04b8e4b-e022-4ee9-93e6-c0c4de6defe0",
        "cursor": {
          "ref": "701a89b5-a19b-4f3d-ac6c-4f0dca253758",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "383e60be-6fa1-451c-96a5-ba255976a5c4"
        },
        "item": {
          "id": "b04b8e4b-e022-4ee9-93e6-c0c4de6defe0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "881051a9-492e-4de9-af7d-432e6721f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06ec2a5-0a20-4061-b842-d2f98eb2f28b",
        "cursor": {
          "ref": "05c029d6-536f-43b0-8b32-33040a24b2e8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "246d356b-b4fd-4541-b2a3-7e54c304318d"
        },
        "item": {
          "id": "e06ec2a5-0a20-4061-b842-d2f98eb2f28b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ebb0117b-11a8-4508-9f0d-23acaa291721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88e8347-d8d0-472c-b46d-8a0db8daca4d",
        "cursor": {
          "ref": "a1168694-35c7-461c-9da6-787b6556f01b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "01629412-a832-48e2-9667-4f120351f117"
        },
        "item": {
          "id": "c88e8347-d8d0-472c-b46d-8a0db8daca4d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9013552-d926-4a5b-9a46-925ddc14bc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358b97c5-cd6a-4484-af7c-a814cbc48d13",
        "cursor": {
          "ref": "5066ea62-29bc-4c34-acb3-5c74304ad6ec",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "72861601-c56b-47d9-aebb-af99b2f237b3"
        },
        "item": {
          "id": "358b97c5-cd6a-4484-af7c-a814cbc48d13",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2735ff33-a40f-4f27-bb1a-b1b854788e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e01b7-b99d-4d8a-9129-da6e452ef9d8",
        "cursor": {
          "ref": "d15ed8e3-12f5-4a32-a1ae-57a32fef2b7c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7daf2063-13d3-47be-9a7d-7a79ba67e6c4"
        },
        "item": {
          "id": "c89e01b7-b99d-4d8a-9129-da6e452ef9d8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "588583b7-3416-4b89-81e2-4e40b5cae562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951e6679-3d62-4371-b922-c80c1cf5c4ea",
        "cursor": {
          "ref": "ca7dac51-965c-4ff4-a6d6-8df880fa2520",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b6549d5-9477-489f-a35e-33daec050f5a"
        },
        "item": {
          "id": "951e6679-3d62-4371-b922-c80c1cf5c4ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e24259ad-66d0-44b7-b294-4a78d11a4bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359458b6-a2c8-428d-8e23-2c57df374424",
        "cursor": {
          "ref": "1b0a34ab-415e-4842-bf97-300cd79d1342",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ba72ec52-7117-4468-986f-c3a6bf3bd74a"
        },
        "item": {
          "id": "359458b6-a2c8-428d-8e23-2c57df374424",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9a93eef-3b50-41bf-bd19-c1e975a7a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e662f2-4fc2-4643-a27e-9ce71525c9c3",
        "cursor": {
          "ref": "b791b54f-5b70-4a14-9c38-91cbc9db9a0c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88676065-6bd7-4144-a8b1-9ff457cbc1dd"
        },
        "item": {
          "id": "90e662f2-4fc2-4643-a27e-9ce71525c9c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55298fbe-344a-4476-8d0a-91324dd4262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5188a9d-e665-4a0e-9a48-a347afc69ae1",
        "cursor": {
          "ref": "6d5d92fd-1c4e-4b47-b172-03bc6dffa46b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "650b2641-51a9-41e6-8d2e-12a3ba770a37"
        },
        "item": {
          "id": "f5188a9d-e665-4a0e-9a48-a347afc69ae1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2359a98-50f9-48bc-9177-42e9ff9c702a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da25e1-2925-40ed-9686-0e4b471b6646",
        "cursor": {
          "ref": "0fbea9c8-03ce-40e2-a8d1-6bdffbfaebda",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "963f4a5e-edb7-45bd-bda6-a7cca9127aa7"
        },
        "item": {
          "id": "76da25e1-2925-40ed-9686-0e4b471b6646",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff7a8ade-eecb-4dbd-a7a6-a04ac2f526ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c808d-f601-4654-9c81-2bceb7c6262e",
        "cursor": {
          "ref": "1b1e106c-114d-491e-9296-e2cc6a08878a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c38a9c97-5a1e-4d43-8bbc-8c97528eea41"
        },
        "item": {
          "id": "1f5c808d-f601-4654-9c81-2bceb7c6262e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3f7cf8a-41d9-4756-a2a0-2f5d993c5e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11111f-55c8-4ce1-b6c1-f32a1d47cafd",
        "cursor": {
          "ref": "a4015d52-52cc-4426-8c4f-741bf1d0b607",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "686fb59c-b63a-4e82-b28f-20133a4d4da0"
        },
        "item": {
          "id": "db11111f-55c8-4ce1-b6c1-f32a1d47cafd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4eb479a1-d30d-47c9-b6c4-040c9b68467e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81deb1a2-f7ee-409a-9d63-4efe30d6bce8",
        "cursor": {
          "ref": "29724472-4798-4037-872d-ef1be35e7dc8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6590e48b-6faa-46f8-95ef-fca8cd3d1fee"
        },
        "item": {
          "id": "81deb1a2-f7ee-409a-9d63-4efe30d6bce8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c4509fc-5f13-46b6-9ba7-f1a11b2daf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f387b7e1-8d6e-4d1f-b5ce-0ef6ccf5a422",
        "cursor": {
          "ref": "b70cfe38-e2f7-4a6a-b6b4-bbd4c010043b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6167c9fd-eaae-4336-88bd-2c11a753f1fd"
        },
        "item": {
          "id": "f387b7e1-8d6e-4d1f-b5ce-0ef6ccf5a422",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6c0801e2-6688-48b8-96dd-37767dbfc028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4395cf2c-058a-4630-9ddd-b45170eb6b2b",
        "cursor": {
          "ref": "839bca3e-dfd6-46bb-bbf6-a52389966862",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "36448ce8-bf14-48c7-becb-d8af2e8797e0"
        },
        "item": {
          "id": "4395cf2c-058a-4630-9ddd-b45170eb6b2b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8aef80fa-e909-4b34-8c41-a3a59b0e8612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea707ca-36b0-4905-9d17-b90cd9687ec5",
        "cursor": {
          "ref": "10301e77-f0fb-4ea6-84b6-5262b198bd73",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a25ca32c-b11d-4c93-8830-3937e746cf20"
        },
        "item": {
          "id": "fea707ca-36b0-4905-9d17-b90cd9687ec5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e92ae047-40a2-48d4-82aa-4f22be6208d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8392e45-ef3f-4d90-b155-7fa477fbe1eb",
        "cursor": {
          "ref": "a3ff9ac9-f9bf-4b55-ab81-ca12c56c0445",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aaabadfa-415d-478c-9105-b053481b8808"
        },
        "item": {
          "id": "c8392e45-ef3f-4d90-b155-7fa477fbe1eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dc4274ee-7aa4-467f-bddb-10fcc716db12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9248497-211d-4c53-aaea-8261e9960cf4",
        "cursor": {
          "ref": "35bfa59a-9343-430a-84b0-d270ff899540",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a7525e35-0af8-40ea-89fa-c9611be35f60"
        },
        "item": {
          "id": "c9248497-211d-4c53-aaea-8261e9960cf4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d11ed09e-a4e7-432e-a878-745dfd07db1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ddd5de-c948-4f1d-8aa7-af105c117eba",
        "cursor": {
          "ref": "1488e24e-945b-47ae-a45c-e0fc2173786c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "25799ae9-d574-423d-9419-d345ba7abdfc"
        },
        "item": {
          "id": "99ddd5de-c948-4f1d-8aa7-af105c117eba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "044fea3f-7b24-45b5-bad1-cd6dd5c807d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e6fece-a406-4842-be17-525fc5202e75",
        "cursor": {
          "ref": "bea44f0b-3672-4f50-bb93-f06b98048034",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dd222265-54b4-40b1-b8ec-0dbe905a40d5"
        },
        "item": {
          "id": "d1e6fece-a406-4842-be17-525fc5202e75",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6483492-e639-4ed6-b03b-15f2e2795750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fe2e38-2cea-4697-b661-9ab538e17145",
        "cursor": {
          "ref": "dbd516d7-2934-43a5-acd7-da411168fe68",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b7d3f3df-5645-4bf4-be93-7472775f2632"
        },
        "item": {
          "id": "58fe2e38-2cea-4697-b661-9ab538e17145",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68b43be8-a405-42a4-9fb0-29308f559704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c760837-aa56-4e69-8ac0-92156e0b287a",
        "cursor": {
          "ref": "e0edb6f1-ec9c-477b-adbd-4f9bb83d4fa2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6ef769f9-fa77-48bf-b0cf-6a3e22da67e6"
        },
        "item": {
          "id": "9c760837-aa56-4e69-8ac0-92156e0b287a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "31c638df-6db2-4bbf-ad15-50974675920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319092c8-b929-47d2-8660-54e788b9fcc9",
        "cursor": {
          "ref": "897b87a7-ad73-4722-8984-03932e6cb192",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "01b46969-2cd1-4425-80df-f27a3139de6e"
        },
        "item": {
          "id": "319092c8-b929-47d2-8660-54e788b9fcc9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d9548d58-9734-458d-a765-7d156dbdeb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1d15fa-d287-4acc-8bd8-853024fd6a62",
        "cursor": {
          "ref": "94c93733-f8a7-465e-827e-bf79e621d6bc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fa58c6f0-f5d5-41ec-8f18-eb50d683717b"
        },
        "item": {
          "id": "4f1d15fa-d287-4acc-8bd8-853024fd6a62",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "12bdb319-574d-4fdb-b74c-633f80161343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868b3bb5-8501-4ed5-b69d-92881c9209fb",
        "cursor": {
          "ref": "1d59dd37-c697-4482-9931-6bd8d4a3d0a3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9e5e5f0c-445d-4900-bc07-9e0d99f78e6f"
        },
        "item": {
          "id": "868b3bb5-8501-4ed5-b69d-92881c9209fb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fee2b134-8293-476d-b0c4-f25c1170caf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a1508-a972-46c0-b559-cd35134ccad7",
        "cursor": {
          "ref": "ab75fd47-48d4-4ed3-9bb2-d56b5a341b33",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8b992f3b-e17a-4c0a-8eaa-db9adbc15639"
        },
        "item": {
          "id": "401a1508-a972-46c0-b559-cd35134ccad7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e12d8879-3058-4f6b-b902-caa82ac5a5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db76f1-d5e4-4c69-9e78-0d2918dff3bd",
        "cursor": {
          "ref": "37c77f7d-78db-4257-9d8e-b39b29c0fd8a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3ae8ebfd-11c5-434d-bd1b-4070caad1fdf"
        },
        "item": {
          "id": "c1db76f1-d5e4-4c69-9e78-0d2918dff3bd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ed5fa0d6-c00e-4cc3-9421-72f7b7509238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f17bee-b10b-46e1-bbb0-ec0401ddfb86",
        "cursor": {
          "ref": "ae703f7b-3d1d-4855-9a4a-3017b36a7d5c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f0501ecd-14be-458c-85c7-a3ec24ab9b8d"
        },
        "item": {
          "id": "a6f17bee-b10b-46e1-bbb0-ec0401ddfb86",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac345bda-3e98-4d9b-b329-d3210f2f076f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdedec99-97fa-47f3-8102-16215172ebbd",
        "cursor": {
          "ref": "042dbbba-7575-4bd5-983a-cb8ad2c2201e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0d3c58d5-34d9-4406-8ca3-1c67d638dfa8"
        },
        "item": {
          "id": "bdedec99-97fa-47f3-8102-16215172ebbd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4902de3-1f75-4f43-abfa-c10bfd601c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08b6cf7-6691-416d-bfb3-a24f7b4a9aa6",
        "cursor": {
          "ref": "421eb74b-2ecb-4f9a-8f25-a79b6462940a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fed5e5e6-34eb-4e18-bb3a-becc826cf976"
        },
        "item": {
          "id": "d08b6cf7-6691-416d-bfb3-a24f7b4a9aa6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "61f7c2ae-f78f-4d74-aa24-ec5a5421c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd01d87-dcb8-4514-ba86-9a5be69bd996",
        "cursor": {
          "ref": "3ce6bc1f-bbd4-4de9-bac1-f4a8d8aeb718",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03534f04-560a-41fd-80bf-f681959b7b5f"
        },
        "item": {
          "id": "3cd01d87-dcb8-4514-ba86-9a5be69bd996",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d8831ee4-f860-4c02-b295-b6928a5f0e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39160c81-eba1-45db-b6cf-62bcf381a8b3",
        "cursor": {
          "ref": "df6d839e-4aac-4aa3-8ee1-8ec5adc415fa",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dcdaed4d-ebda-4a70-841a-16ac49f2ba11"
        },
        "item": {
          "id": "39160c81-eba1-45db-b6cf-62bcf381a8b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fb15bd06-2535-4662-a3a2-7013ee20cf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef927b4-086d-4f3f-a18b-fa2939178d51",
        "cursor": {
          "ref": "daa0225b-7c23-4950-8cd3-b9e305cea4d4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5da754fb-a5c2-4151-bcb2-62223d63df88"
        },
        "item": {
          "id": "eef927b4-086d-4f3f-a18b-fa2939178d51",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "32fe074a-043c-4252-9c09-dd7ccf7d2d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5d00e-a360-47bb-9fd9-272dc5d14020",
        "cursor": {
          "ref": "d4525e25-bb72-469c-8a07-c13aea9ea333",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5bfe8ee1-939a-4969-b2ea-1a43af63cc49"
        },
        "item": {
          "id": "f3f5d00e-a360-47bb-9fd9-272dc5d14020",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "73bef547-525c-4ce3-b84f-ba8aaae1e195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020bdaa9-7e2b-4ceb-aea0-0e33d20ded6b",
        "cursor": {
          "ref": "1a2abd1f-e0c9-4a12-ad3d-850074e6cfae",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3f70e9d2-92dc-4bfb-9656-6555d922985f"
        },
        "item": {
          "id": "020bdaa9-7e2b-4ceb-aea0-0e33d20ded6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ccf984d3-5453-4c9f-8ca6-29f390cd7ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4be314-2bfc-4b9d-94b4-d98dc40cf2ee",
        "cursor": {
          "ref": "bd749dda-29b2-4acd-abb1-1576533d9acc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "97ab6384-e4b1-46d1-b1c4-b7165ce35fe6"
        },
        "item": {
          "id": "7a4be314-2bfc-4b9d-94b4-d98dc40cf2ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4d2cf0e5-06d4-4042-a2d0-d8170f6115d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55299623-77b7-4cc8-965f-7a77f74a48af",
        "cursor": {
          "ref": "effd7209-a986-429d-a604-a0a1171e9b01",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9411f906-6880-4388-820e-2b07bcb9e787"
        },
        "item": {
          "id": "55299623-77b7-4cc8-965f-7a77f74a48af",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a64a465e-53a7-4ea0-9978-6eb695656cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66926fb2-9de4-4713-9fd0-bfa87be92084",
        "cursor": {
          "ref": "cd8e7f10-7004-4985-bf6a-ed30cd38435e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7dcb9e32-7188-49ca-8b87-5e5c68d5f4a4"
        },
        "item": {
          "id": "66926fb2-9de4-4713-9fd0-bfa87be92084",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aadc952f-29fa-45fd-8eb4-f8bde73fd79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff36b3e-7e1e-4ae2-b75e-05e25f933a9f",
        "cursor": {
          "ref": "0d1d643e-197c-4cc2-bee9-60362cc72906",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "37859095-d06d-4954-b90e-811128e05149"
        },
        "item": {
          "id": "0ff36b3e-7e1e-4ae2-b75e-05e25f933a9f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "36ad015c-7a3f-4867-841a-652c4c7ad141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328a6a8-ad16-4018-83ff-d79128b2091d",
        "cursor": {
          "ref": "efad0727-acd2-41dd-9e86-2c4c6a56432f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38bfff0d-bd03-4301-8cfa-3cf4b2384763"
        },
        "item": {
          "id": "7328a6a8-ad16-4018-83ff-d79128b2091d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d443061c-22ec-4733-b03f-07671d4b00b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15e9f4d-ef5b-49ed-9e53-33b232677d25",
        "cursor": {
          "ref": "9f8dbc48-5e13-4821-9de8-aa845ecf8c14",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cbe0d9be-8e3e-4ad8-9a1f-2201d0ccd599"
        },
        "item": {
          "id": "c15e9f4d-ef5b-49ed-9e53-33b232677d25",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f70d5630-5b5f-465d-a268-87ee30c0c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b4290c-492b-4c9d-818d-18a32dbb9837",
        "cursor": {
          "ref": "d17e390a-0946-4608-b30d-1b5a3abd6bdd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b4d2ac6e-2346-4229-bad2-d21a37d21c14"
        },
        "item": {
          "id": "83b4290c-492b-4c9d-818d-18a32dbb9837",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cecd1395-ddab-4696-813a-ac37833934af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764eed7-25f2-494d-8e40-f2a243debe58",
        "cursor": {
          "ref": "814bbbfd-071f-4868-98ec-e86588047306",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "604c6e79-ac39-4acd-af56-a827b3cd701f"
        },
        "item": {
          "id": "4764eed7-25f2-494d-8e40-f2a243debe58",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b1d0f290-2eb3-4381-83c5-aa03f0fd81e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e26543-ff6f-4d13-8eab-20e05a323ff3",
        "cursor": {
          "ref": "bdea3203-c849-4fba-90de-859064be3217",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b736397a-0f54-4505-9c32-04c46ac95741"
        },
        "item": {
          "id": "e7e26543-ff6f-4d13-8eab-20e05a323ff3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a2f2d069-a47a-404d-b8ca-c8de90e96405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee57fd-711c-4b35-aa66-3996bddba0e1",
        "cursor": {
          "ref": "5b1efa99-1bea-401d-b832-324abfbac521",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b252eac5-5bdd-455d-bb75-eb14cae3f0dc"
        },
        "item": {
          "id": "45ee57fd-711c-4b35-aa66-3996bddba0e1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b239c097-871c-4d0c-a500-bd3991258d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a6c590-ea9a-4af5-b796-841007c0cfc5",
        "cursor": {
          "ref": "8d2a8e2e-59ba-432c-9f4c-babaccbc3001",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e9967f81-818a-48ce-825f-be676090a4dd"
        },
        "item": {
          "id": "f4a6c590-ea9a-4af5-b796-841007c0cfc5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9498b1e2-e1a1-4ce8-bfbb-03a42e05d414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d1ec4c-ddf2-4f12-86a2-b1a107b1018e",
        "cursor": {
          "ref": "1bdf42fc-587a-4d7a-95e3-30ee6515b826",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "67f1f7d5-0c92-4902-ab31-01c9a96e7351"
        },
        "item": {
          "id": "b6d1ec4c-ddf2-4f12-86a2-b1a107b1018e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b6a485a2-964a-4b61-ad06-1144aeed41b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46ed8b3-8d83-418b-afdf-670691ca46e6",
        "cursor": {
          "ref": "18000534-ab79-4f58-8f5b-0a0d9e0021fa",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "85aef737-a203-4a08-a56b-d2c9b5b91e64"
        },
        "item": {
          "id": "f46ed8b3-8d83-418b-afdf-670691ca46e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1416ef1f-cf42-49e5-92fd-b5849674b547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1b2ee-87aa-4d31-bfdb-c34c0ab4e352",
        "cursor": {
          "ref": "668962bf-8741-44b0-a0b8-207217fc2330",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9a0745d-bce3-4fbd-929d-f924a0a44c4a"
        },
        "item": {
          "id": "0bc1b2ee-87aa-4d31-bfdb-c34c0ab4e352",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45d7478c-da44-486d-ba41-f021a5935ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9e835-9e17-437a-9a5d-f55a576a20ff",
        "cursor": {
          "ref": "92395048-5516-4324-be9b-2e65a21a34da",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af4c992f-1d3a-49e5-a7b0-b74e4f6170fe"
        },
        "item": {
          "id": "cdc9e835-9e17-437a-9a5d-f55a576a20ff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "687cc96f-66ba-4747-8930-c79f0f68bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4f9ddf-8c7d-4bee-9a2d-5065a2f0e8e6",
        "cursor": {
          "ref": "110e5334-0b7d-4754-8b8d-cc14132f016d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "255ef87c-cb9d-40d6-8b4d-0fa0b2d5ff9d"
        },
        "item": {
          "id": "8f4f9ddf-8c7d-4bee-9a2d-5065a2f0e8e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e9a550d3-9f5b-45ce-9a83-a1d120805b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e7aed3-ce90-4649-a997-74d7cf201a3e",
        "cursor": {
          "ref": "511e202f-5c37-4e17-a955-ba228a0786e6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f2048d7f-ef52-4a5f-8371-6be8c4dbe690"
        },
        "item": {
          "id": "75e7aed3-ce90-4649-a997-74d7cf201a3e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a978e198-4c98-4f8a-92a6-e92a9b81a3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b851bf-33ea-4f33-95f8-a6920805c43f",
        "cursor": {
          "ref": "7641fb91-f668-4bb1-ab5c-29721dca1482",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7e9b9732-0a8a-443a-872e-6fc725b313c1"
        },
        "item": {
          "id": "99b851bf-33ea-4f33-95f8-a6920805c43f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "99d0fb41-1838-4453-b883-dc3b76e02790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9b4b1c-c6dc-4bc1-b891-8ba20b4894f8",
        "cursor": {
          "ref": "86f80301-1a29-4995-88a1-979a5e4c2b93",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9f0b4071-f06a-48bf-b300-32c6eb4a81a0"
        },
        "item": {
          "id": "fd9b4b1c-c6dc-4bc1-b891-8ba20b4894f8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "30dd5c34-9445-402c-ae32-3869fe9d91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fac9cc-d28f-457c-881d-093c1bd091ef",
        "cursor": {
          "ref": "f4742698-6ab1-47eb-9e02-823b8ab1232b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "28bce6a8-7c5f-4422-b688-b42e53ea1aff"
        },
        "item": {
          "id": "c1fac9cc-d28f-457c-881d-093c1bd091ef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b56610ff-a65d-4e9e-b0b5-2b1c5edcc104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad68a44-346a-4b4e-87fe-4285015e4f97",
        "cursor": {
          "ref": "b50a2c0b-7c88-4b44-8624-4f39460390b1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aef8584e-c46f-42e8-acfc-8b658c03a4e9"
        },
        "item": {
          "id": "6ad68a44-346a-4b4e-87fe-4285015e4f97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8c8e8ac7-6bf4-4538-9cf9-7e548ef6c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f03bd7-1966-4a80-bc6a-e4a953fa5cc2",
        "cursor": {
          "ref": "6cecbe00-3964-459b-ba4d-0842cebbf7a0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d5d7f3f7-301f-48c4-b6e7-118799d18d7a"
        },
        "item": {
          "id": "10f03bd7-1966-4a80-bc6a-e4a953fa5cc2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fb7cde11-2ae3-4054-a2a8-b91c255db39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702fc5d7-325b-4ff8-8fd5-37ee272b55c9",
        "cursor": {
          "ref": "250f896d-ff04-40e8-8f12-3d71eef1a39f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "61d91dfd-5d08-4c4d-8edb-94f8ac840550"
        },
        "item": {
          "id": "702fc5d7-325b-4ff8-8fd5-37ee272b55c9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3441c6e3-3001-4e1c-8dbb-3b60f5358672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5714cad-1902-4947-aa78-c7eb7afb3946",
        "cursor": {
          "ref": "6cd57752-1c2a-4bdb-80f6-73accb299db6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "81a725a0-581f-49c0-855d-d1b5de700bb0"
        },
        "item": {
          "id": "b5714cad-1902-4947-aa78-c7eb7afb3946",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "acaf162e-3c2b-4bfd-9c21-bf1d9744303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d20d5-7ee8-42d9-81a1-1e86385630f3",
        "cursor": {
          "ref": "b38d27f4-11db-49d0-9922-3682baa9b5c0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c191aba3-e970-4d75-b4e5-320049b28ca9"
        },
        "item": {
          "id": "ee4d20d5-7ee8-42d9-81a1-1e86385630f3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "907f78dc-9db2-4e01-b290-70dc1ca1073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ece6d-87ea-4b34-91cc-83e79e4f1e83",
        "cursor": {
          "ref": "156fa8e8-d613-4ffc-a12c-871abd72e9e3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ff4011c9-4dea-4086-b441-0a570f5a33d6"
        },
        "item": {
          "id": "5f9ece6d-87ea-4b34-91cc-83e79e4f1e83",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "867f8e74-14ed-4c25-94c1-40540bfd078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4465756-6360-4fc5-82ef-fed8b8e2d7f8",
        "cursor": {
          "ref": "8b7ed639-2e12-4c00-b820-2605aa015fa3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a10ebb76-b3ee-49e7-a168-07fee036c4b7"
        },
        "item": {
          "id": "b4465756-6360-4fc5-82ef-fed8b8e2d7f8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88a66f5c-bbec-4112-a645-a909d9ff4f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e008bb5-c29f-47c3-b69c-0792e306b167",
        "cursor": {
          "ref": "2ae8e7b2-84cf-4eef-b0c5-ebd172262299",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e2751cb5-da37-4eb9-885d-3d37738a6472"
        },
        "item": {
          "id": "2e008bb5-c29f-47c3-b69c-0792e306b167",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "779e8e9e-f9bb-43fd-9e8e-20a024a587f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2986f4e-ddb6-4acc-a04e-ca75e81acc94",
        "cursor": {
          "ref": "17fc6f7b-e19b-4d24-b827-86ef1fa5ada1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1ed5542f-0148-4b80-bba6-cbef37e858e7"
        },
        "item": {
          "id": "a2986f4e-ddb6-4acc-a04e-ca75e81acc94",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "abd38299-2791-40e3-9b4d-b3152cdb3654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad901b5-9047-4c65-8272-7a3b070c6b73",
        "cursor": {
          "ref": "15a91a2f-8dd0-4a0d-8c15-7e62166f29e1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "04ecec56-069d-45ac-b390-f6ce3e0aa0b5"
        },
        "item": {
          "id": "fad901b5-9047-4c65-8272-7a3b070c6b73",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5c34efe4-b25b-49c5-8fb1-9f9219b1299e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a156a1a-cb70-4d36-b357-31c496631649",
        "cursor": {
          "ref": "580bb147-3755-46b0-9c07-249066957e81",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6461b389-8d11-490f-9ef9-68b7cb174e4b"
        },
        "item": {
          "id": "3a156a1a-cb70-4d36-b357-31c496631649",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "de343c1f-0472-412b-97dd-6539130a1d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e8798-fa7d-4285-b22d-cc1569507fe3",
        "cursor": {
          "ref": "57771550-1ef6-412d-83e4-aeab91fa6155",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "66e3d376-046a-4173-8619-f2ce8cfa3ba8"
        },
        "item": {
          "id": "ed2e8798-fa7d-4285-b22d-cc1569507fe3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "984e234e-2b64-4023-9bb4-7f86fb72f14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a5ceb-79d1-4820-8d47-c2207b1505f0",
        "cursor": {
          "ref": "7498df7a-77b9-4a86-816d-1a5fe880a26e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4b3ec9b8-df43-48f5-a591-8359e9acd6f9"
        },
        "item": {
          "id": "530a5ceb-79d1-4820-8d47-c2207b1505f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1cc4081a-1034-4bf9-bfb7-7c545b9e8b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00ea3be-93db-4148-b2c3-17a8496b5273",
        "cursor": {
          "ref": "2da54ec0-bed5-43a8-ac27-b93389510b82",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "69e319bc-c260-4340-9d2d-0f6df18c7e0d"
        },
        "item": {
          "id": "b00ea3be-93db-4148-b2c3-17a8496b5273",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "91bbde58-78c1-4d23-8088-bab86fb362ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cdd832-ebd7-4429-b1f1-8382ddb46d18",
        "cursor": {
          "ref": "ac8522a6-afc5-448b-8b67-a22515192dca",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "311bfe9f-2ca9-4697-a6c9-5b57bf9b7b96"
        },
        "item": {
          "id": "49cdd832-ebd7-4429-b1f1-8382ddb46d18",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7db85962-8e21-4b4a-b21e-d445fb819174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c907e2-06ce-4bfa-b594-fdd139e38679",
        "cursor": {
          "ref": "756596d9-ed75-4ad7-a384-1da4b9c374d1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3994d465-af48-485b-939c-a30acd204a73"
        },
        "item": {
          "id": "e8c907e2-06ce-4bfa-b594-fdd139e38679",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e341416b-06ec-4138-a120-7e42cb3bd009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd0ed0d-3aca-4893-b61d-3357edb2db77",
        "cursor": {
          "ref": "0eaefb97-0b4b-43de-b892-385ab9c50ecb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dae3e4b4-e6fc-4508-bea3-73c3b25eb2ea"
        },
        "item": {
          "id": "bbd0ed0d-3aca-4893-b61d-3357edb2db77",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9b9fc27d-f3f3-4fa1-b045-b0efdb1e854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d76a997-305f-4308-9146-c96b0637e06c",
        "cursor": {
          "ref": "d9f218ac-a753-446d-b3c2-db1e58822ee1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d77ab772-c0fb-4d71-b46a-c45f91a4f427"
        },
        "item": {
          "id": "6d76a997-305f-4308-9146-c96b0637e06c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b4bc9453-9c4b-4b13-ae9d-17e127f946f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c57a0b1-b864-463f-884b-80bcae1c255f",
        "cursor": {
          "ref": "aa944a92-2a72-4cbd-a54d-d84501992ea7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "39ac5b86-f83c-4a83-804b-07308d73ff45"
        },
        "item": {
          "id": "7c57a0b1-b864-463f-884b-80bcae1c255f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f7d464f0-1b5d-41a2-9f93-739ecdc6e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbdadb-4244-49d2-bf1a-e4a1f6fc1d62",
        "cursor": {
          "ref": "0a9c347e-d833-4039-a764-e492af3f2720",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0f82786c-d6ad-4800-aceb-677f06588f55"
        },
        "item": {
          "id": "5fbbdadb-4244-49d2-bf1a-e4a1f6fc1d62",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c75c9523-124a-4d1d-ad48-cddf26b84ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b17d44-16af-4265-8606-7f8528be70eb",
        "cursor": {
          "ref": "c949ded7-a37c-40e4-a4f6-e9ede23198fc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0e4fce9b-362f-4a3f-94e7-decb40415514"
        },
        "item": {
          "id": "b9b17d44-16af-4265-8606-7f8528be70eb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d22642d0-ecd5-4f62-83ac-be22e0492e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0693ee-89bb-4522-9843-4c7d6ae849b2",
        "cursor": {
          "ref": "6e8ce44b-7496-4b54-8586-48c3a43c9264",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a7593439-8d63-48ba-bef6-4a265fd8dd61"
        },
        "item": {
          "id": "3b0693ee-89bb-4522-9843-4c7d6ae849b2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2974326c-777a-474d-bb9e-bf17b1acab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a83c97-86a8-465b-860b-c7f431e00be6",
        "cursor": {
          "ref": "50287e62-5a06-46aa-b369-735203b0990b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c9dd3000-d200-4b6b-99a3-a34f2b0e6744"
        },
        "item": {
          "id": "e7a83c97-86a8-465b-860b-c7f431e00be6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2de7c9e2-bc40-469f-afd4-1386e51d5655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be2b34-a093-4258-ad48-e75b5eea0614",
        "cursor": {
          "ref": "4a2fd84a-e337-4742-828b-49add9fb014f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "804e4e42-45cf-4f65-aa47-f3cd27d4dcf9"
        },
        "item": {
          "id": "02be2b34-a093-4258-ad48-e75b5eea0614",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b05273f9-79e5-44b6-a819-da43a31e3004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d352a05-8032-4c4d-957d-f83f1e5fb161",
        "cursor": {
          "ref": "9e7af471-44dc-4a1d-9527-412519a4ecb7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ecdc521-06cc-49c0-b3ec-ba9e1853f555"
        },
        "item": {
          "id": "8d352a05-8032-4c4d-957d-f83f1e5fb161",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e153963f-15f5-47be-898c-549217232a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918089c8-a959-4015-9cbe-1accf3f2678a",
        "cursor": {
          "ref": "bf99a528-1cb3-4663-8b7c-1443fde34109",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdec9792-0a0b-458b-ba13-8eb2023d5bea"
        },
        "item": {
          "id": "918089c8-a959-4015-9cbe-1accf3f2678a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "383a219b-23e2-4dac-84e4-7bef6e2f83f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0379e596-e50c-4def-9493-d293ceb2cc2b",
        "cursor": {
          "ref": "99c13e9c-a7c8-4609-91e5-1733ea022a26",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4fffd253-0a82-43d7-81cd-28fd6c46c130"
        },
        "item": {
          "id": "0379e596-e50c-4def-9493-d293ceb2cc2b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "767d803c-01ac-4e2d-aeb0-a747b6afc9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926b7ba-cff1-4b16-9478-d8afd608e37f",
        "cursor": {
          "ref": "a9f8322e-3ea1-4a31-8eee-7b4c6f3a1443",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b26b61a-37c7-44e1-8c4a-292858bc5c66"
        },
        "item": {
          "id": "a926b7ba-cff1-4b16-9478-d8afd608e37f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "53dba29a-08f9-41d4-8a79-24d29fc08437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be79bc1-e85b-4ed0-8018-aa0e91603e31",
        "cursor": {
          "ref": "5f170eb8-6884-420f-8add-f11b7d661b36",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5247b874-a50c-4a1a-a6eb-047ae308c2e2"
        },
        "item": {
          "id": "7be79bc1-e85b-4ed0-8018-aa0e91603e31",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c329105c-7469-4f2e-8e9b-43d3c5434b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df07bdad-cd9e-4ea2-be56-83c322fe2e67",
        "cursor": {
          "ref": "98f24ce0-1758-4ec8-ba5d-0a728709be00",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ec3e5854-6118-439f-9bd0-4f34f692ccde"
        },
        "item": {
          "id": "df07bdad-cd9e-4ea2-be56-83c322fe2e67",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2abee816-f6b8-432d-80b5-f54588171c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2d256d-06e3-4da9-8a93-938e311fb796",
        "cursor": {
          "ref": "52467661-f224-4083-9109-66bb3d24a793",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c155f7d8-360d-4128-9300-e9475a408f76"
        },
        "item": {
          "id": "7f2d256d-06e3-4da9-8a93-938e311fb796",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3af96b78-2fb7-49c9-b0c3-0d39bae06462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780c0709-34cb-417f-abfa-9c0033095874",
        "cursor": {
          "ref": "375d2a0d-e575-4187-9cbe-1488a1036648",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be573114-315d-4447-926c-5821ec57de69"
        },
        "item": {
          "id": "780c0709-34cb-417f-abfa-9c0033095874",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "058aa5ec-22db-41c2-889a-4c2b85744b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2e5ccc-31b0-411a-a51a-f2b634bbf4e4",
        "cursor": {
          "ref": "beb037b6-2715-4517-ac8e-dd7147453d9a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01a987c9-03be-454c-8e15-f07b92e8db20"
        },
        "item": {
          "id": "bf2e5ccc-31b0-411a-a51a-f2b634bbf4e4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "739ccf7b-76ea-4e34-b311-fbe70cb430ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba29d48-f7bf-46e2-8661-f62141ffec93",
        "cursor": {
          "ref": "1b88509d-bd77-4ffe-8a7d-26be9024abdd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "65e3fa9b-ed84-4a09-b4b7-b45e12fb5517"
        },
        "item": {
          "id": "eba29d48-f7bf-46e2-8661-f62141ffec93",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "168daef2-1214-44cf-9e1c-1d87b44b5806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ff8462-472a-414d-a769-03f160f21134",
        "cursor": {
          "ref": "5be315b7-3bb4-4a19-ba6e-541922b20d6f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18e6c766-2990-40ff-a83c-f8d6c4f6b9c7"
        },
        "item": {
          "id": "85ff8462-472a-414d-a769-03f160f21134",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37e11f56-5db2-4c01-a942-9a31796fd4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9e90df-3841-4f7d-86e3-de678bbb700f",
        "cursor": {
          "ref": "88a4657c-ec7c-4752-8208-3c6adaa98ed4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "28a785b9-9045-4d01-932d-2f7c522d5d93"
        },
        "item": {
          "id": "cb9e90df-3841-4f7d-86e3-de678bbb700f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8185e96b-3373-4f6e-9630-86045a0b3086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78457631-872f-420d-949b-f427fb2b8677",
        "cursor": {
          "ref": "48254abc-f158-41b1-b399-7170c305418c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b5afa8e-3865-4260-b65c-d567d570d54b"
        },
        "item": {
          "id": "78457631-872f-420d-949b-f427fb2b8677",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "08a26058-35d3-47f4-8d11-954ffca1be6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b74af4-5ad9-4c8c-a440-5e256db7dbe8",
        "cursor": {
          "ref": "5ff85fee-7942-4c5f-8d38-106a1d6327fa",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "28108ba2-6c34-4a46-8b07-426f6304b97d"
        },
        "item": {
          "id": "79b74af4-5ad9-4c8c-a440-5e256db7dbe8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1bee822b-150a-45fb-bb8f-8a59e463fe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc82127-54fc-4cb5-a59b-3dd67f9535fe",
        "cursor": {
          "ref": "eebfded0-c068-4536-815a-7c8527d379f9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5be73442-0c80-492b-9332-75255a969354"
        },
        "item": {
          "id": "8cc82127-54fc-4cb5-a59b-3dd67f9535fe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67dfa81e-bdfb-4b7c-ba11-1aad26352dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af37683-298e-4ff1-a667-67e791d3dba7",
        "cursor": {
          "ref": "2947f42a-4bb9-4dee-87aa-47e9fdd84ce9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8b6f6706-0f81-4136-8b36-48c7cf97a81f"
        },
        "item": {
          "id": "8af37683-298e-4ff1-a667-67e791d3dba7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78a612a2-b231-45c6-ba33-885881ed3a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9927a93-b768-466c-90a8-c301e3ef1e56",
        "cursor": {
          "ref": "76c60425-9432-4129-8934-d000c26abbbc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "83b73d8e-b5ae-4c31-af34-0e9412abb7a7"
        },
        "item": {
          "id": "c9927a93-b768-466c-90a8-c301e3ef1e56",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8db004b7-e50e-4117-9381-f8d3703eb90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a698ab5-fd72-401d-ae2e-2e4b37a3ab24",
        "cursor": {
          "ref": "fc823c61-4fb1-47b0-bf5b-9c42d8cdc809",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "61e09c07-57fb-4660-a992-8b4b3c37dcfd"
        },
        "item": {
          "id": "9a698ab5-fd72-401d-ae2e-2e4b37a3ab24",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c58f85d9-d943-4242-b453-1ac4b0b682e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5907d537-9811-4f45-a911-fcb197e1d24d",
        "cursor": {
          "ref": "2fd4c08f-d2cf-4adf-83dc-e34498899eb0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb11e334-8235-4c7f-a9b7-04248e42091b"
        },
        "item": {
          "id": "5907d537-9811-4f45-a911-fcb197e1d24d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9055ea4c-0aeb-413d-aaef-cfb1a35cb4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a31572-5b4f-4de4-bf0a-3b1c2b70aeb1",
        "cursor": {
          "ref": "89e721e6-5407-4ad8-8021-fcd6858a35f7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "88a49686-17a1-40d8-963f-33788109c3c8"
        },
        "item": {
          "id": "40a31572-5b4f-4de4-bf0a-3b1c2b70aeb1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "73a8954a-e3fa-45be-a509-cc724a94a78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226c6f5f-2b37-465e-bd96-5e311bbe272d",
        "cursor": {
          "ref": "15393926-5e94-4b3f-971d-eaed6db06cc6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "438e04d9-53e2-4f22-b216-459ed9be3ed5"
        },
        "item": {
          "id": "226c6f5f-2b37-465e-bd96-5e311bbe272d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "085dc4a9-fe5d-4c30-a59a-924697b02674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea732892-3846-4a9a-871b-83d4fe8509cb",
        "cursor": {
          "ref": "2bba5224-b047-4342-9281-eca9df8f738a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e7d7ba7b-e962-436f-91ac-491122286d35"
        },
        "item": {
          "id": "ea732892-3846-4a9a-871b-83d4fe8509cb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4fbf6cff-c459-4195-9f34-33edc9023915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f7bad9-7506-49b6-acd3-30ab162b0308",
        "cursor": {
          "ref": "b209200c-3697-4935-b1be-20f327b38147",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0505722e-5bdc-4a25-8496-27c17a26149b"
        },
        "item": {
          "id": "c3f7bad9-7506-49b6-acd3-30ab162b0308",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "92491861-2224-4bd6-808e-49ec3be9d129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6c9345-2993-4bdb-83c5-48fbc7e9bf80",
        "cursor": {
          "ref": "71032208-8be7-4804-85c4-7814af1da0f4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8d52eebd-039c-44ef-8fe4-b1cd8dba4022"
        },
        "item": {
          "id": "ff6c9345-2993-4bdb-83c5-48fbc7e9bf80",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bb15b6e4-c2be-45f8-adda-77d104157f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4876a4-83a9-476f-bf5c-5707eb43e355",
        "cursor": {
          "ref": "c878be90-9dd8-4bb0-b2f1-43ff22a9fe22",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b7843b90-47c6-4e8e-85fd-d662e945e622"
        },
        "item": {
          "id": "5f4876a4-83a9-476f-bf5c-5707eb43e355",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a062640b-3965-47b3-8bad-b7d832837f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a8643b-1cc3-4b40-8f0c-1259c5cb3823",
        "cursor": {
          "ref": "9a6b71bc-67c9-4080-93b0-35c4806ca026",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6795129b-0396-4522-bf1f-46824508cdc3"
        },
        "item": {
          "id": "05a8643b-1cc3-4b40-8f0c-1259c5cb3823",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1803a40-a005-4632-bf08-c320d09e9699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259eead-7322-492b-b935-5a6ee15de69a",
        "cursor": {
          "ref": "66a6d7ae-79ea-47fe-98f6-151fd4b4b4ed",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9e99fbf3-2ef0-4033-81b1-7a02e248a00b"
        },
        "item": {
          "id": "b259eead-7322-492b-b935-5a6ee15de69a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a8a83ab-cca5-4085-914c-5a6a80489aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c064e0-7af2-4944-a8a1-800b0ef3fcb3",
        "cursor": {
          "ref": "69d0ec94-cbef-44de-9963-c9cfb861b9f6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9b78c36c-36a5-4340-af23-1f104f9389a0"
        },
        "item": {
          "id": "92c064e0-7af2-4944-a8a1-800b0ef3fcb3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dbad086e-42f4-436c-910c-6642966b37e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aac9cc6-4eb0-47d3-acee-5a4df2871ca9",
        "cursor": {
          "ref": "776047aa-4132-4c2a-9fd8-552ae530122a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "20b1db5a-bc9f-49a8-9279-b95bdfe0e609"
        },
        "item": {
          "id": "0aac9cc6-4eb0-47d3-acee-5a4df2871ca9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4249d771-0bd0-4fbe-b8cf-7cde3b3ce31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7d8cfa-0218-4024-87e5-d89afba7a391",
        "cursor": {
          "ref": "b104851f-a9ea-48f1-903f-305406bd59f1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "534a6228-5e3b-4cab-bba0-c9f38b5dffed"
        },
        "item": {
          "id": "3b7d8cfa-0218-4024-87e5-d89afba7a391",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d61bf82-34d1-45ab-b681-b03b5d0e1808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e663153f-a1e4-4c3b-887b-5c823bd102e1",
        "cursor": {
          "ref": "1de26b7d-8da6-41c7-9506-d3edafccc0d6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d98fcafb-e9f3-4887-9753-3f9bc0c2afd2"
        },
        "item": {
          "id": "e663153f-a1e4-4c3b-887b-5c823bd102e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5604d170-a1f7-4a28-9107-d9acdf5a511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea83c4b-e72d-41b1-a82b-06e987bfc174",
        "cursor": {
          "ref": "12d45170-ab60-4be3-ad38-340f9445cfec",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a455e261-4a4a-41b7-9c96-58d57234723c"
        },
        "item": {
          "id": "8ea83c4b-e72d-41b1-a82b-06e987bfc174",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f9677878-3d22-45d1-b77d-53f2fe01dc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c4641f-1c40-4d95-8b44-70bfa06ed0aa",
        "cursor": {
          "ref": "e77c1a41-f6b9-433d-9980-ff29f4222b89",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a1c8a4be-e8dc-494c-9d9f-e5bd946597a7"
        },
        "item": {
          "id": "95c4641f-1c40-4d95-8b44-70bfa06ed0aa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0e14f8a-f653-433e-9a18-c8391ef132f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cc0fa5-445f-4d14-a119-63d889de1439",
        "cursor": {
          "ref": "f1026243-db84-47ab-8cef-b8912d61c872",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0a9bad6c-647c-4774-bc9b-84305c26316e"
        },
        "item": {
          "id": "f0cc0fa5-445f-4d14-a119-63d889de1439",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "93eb3d86-56d2-4d9a-a5f4-1b4c458529fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f84ad92-95e4-4f1a-88ad-88231c231d9d",
        "cursor": {
          "ref": "1bea2c7c-d63d-464d-b489-d2e7b0968760",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7698095d-609a-4145-838d-1814f2a9431a"
        },
        "item": {
          "id": "9f84ad92-95e4-4f1a-88ad-88231c231d9d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9176e36c-238f-4261-8110-d7c0ebac83cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4243d41-54b0-4685-b8c2-6750f1b6c9ba",
        "cursor": {
          "ref": "f3c48e9d-17a8-4bc2-a5a2-5c40bd776716",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e23c67ea-e807-4c4b-b71c-3f3f00bf36f2"
        },
        "item": {
          "id": "f4243d41-54b0-4685-b8c2-6750f1b6c9ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1b725fec-710a-41ad-99db-3e9fa6f90851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b1be7e-bb13-4c2c-954e-ff79ea20d4f7",
        "cursor": {
          "ref": "2a26feb7-44aa-4a7d-9232-906d0b862551",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "abe57c4e-196c-42e8-b04c-97684373f621"
        },
        "item": {
          "id": "90b1be7e-bb13-4c2c-954e-ff79ea20d4f7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e70c6b5f-0386-4adc-be72-022991e3c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15326679-7d5c-4f6d-9cb5-a61223c01b14",
        "cursor": {
          "ref": "499753df-47f7-4945-931e-ec3371d37af0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13e0d283-ab7b-48bb-90ba-6ad69cfd430d"
        },
        "item": {
          "id": "15326679-7d5c-4f6d-9cb5-a61223c01b14",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7834c3a5-5ad0-4acc-99d4-68b900ae52de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e39a479-2803-479c-876e-d455f14968b6",
        "cursor": {
          "ref": "5b92a28b-fac5-4179-a2af-c5710c85ea0e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b41abd29-f6be-4ce7-a6d5-99ebcfa31db5"
        },
        "item": {
          "id": "4e39a479-2803-479c-876e-d455f14968b6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "64b69fc3-680a-4a57-bec1-9f1388a3a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822b012a-a1a0-47b7-9219-7fb861f4141d",
        "cursor": {
          "ref": "77bc5e0c-fd14-499c-8e98-2d17eb68b60f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a94d17c7-9a92-4bd7-b941-ffbc20f722f8"
        },
        "item": {
          "id": "822b012a-a1a0-47b7-9219-7fb861f4141d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8b123e72-7d97-45f4-b39b-9357892569cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3fe17-bb35-4eab-b05a-669ea001ccf3",
        "cursor": {
          "ref": "53205b13-339e-47e1-abd5-6bea8eef4ceb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2ea82ae4-2aed-4ee7-a9fa-0d4c1a64ac42"
        },
        "item": {
          "id": "7fb3fe17-bb35-4eab-b05a-669ea001ccf3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4242ee15-b18f-446a-9c33-be9af69c5007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8f7cd9-53bc-4cd2-908b-426da163d463",
        "cursor": {
          "ref": "6bef9492-c1b2-476f-bfee-0572925e1b6f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "790b4972-bd8f-499a-9b4e-5ff9a14557bf"
        },
        "item": {
          "id": "2c8f7cd9-53bc-4cd2-908b-426da163d463",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "87125fbd-6b69-45e0-8118-c940c280fb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7805164c-b55f-4e72-aece-e88ce18dca5f",
        "cursor": {
          "ref": "ee36eb78-ca0e-4914-90fe-fdb41c76fb0d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a29fc8e-130e-4c0c-8530-5f8396968efd"
        },
        "item": {
          "id": "7805164c-b55f-4e72-aece-e88ce18dca5f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a5f43c87-0b9a-4c37-aebc-05b4659bd2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae281af-a099-4291-97f0-bfd077764988",
        "cursor": {
          "ref": "9eccb92e-a3ee-488d-8be7-ceeac0832c48",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b5d2a272-9176-424d-acff-9b484a924ffd"
        },
        "item": {
          "id": "9ae281af-a099-4291-97f0-bfd077764988",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0d3f3102-1bc4-4022-ba9b-142986e5568b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc82cce-2066-42a7-96ff-6c25d55b3b72",
        "cursor": {
          "ref": "b2646c82-d3f5-4b30-8f0a-13b658b7cf3f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8cc41f89-5b25-4d85-bd0f-aded7908897b"
        },
        "item": {
          "id": "4bc82cce-2066-42a7-96ff-6c25d55b3b72",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6ac1eac4-c044-4c62-9492-2c351e08d9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed226d1-19e0-4e98-87f5-6f5e22f7e0cf",
        "cursor": {
          "ref": "97a3a3d8-dcde-421b-af93-6e4841087165",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f3d7ab46-f798-4c07-92e5-5e0a3c8355f0"
        },
        "item": {
          "id": "6ed226d1-19e0-4e98-87f5-6f5e22f7e0cf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7d8efa86-4d19-459d-970d-56c194d661f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da416392-ac19-43fd-9c98-1d2682e1243f",
        "cursor": {
          "ref": "4550846c-3aa6-4041-81a6-44accb8339c4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a5a797e6-3dab-43d1-aaf1-ef5d4f735f34"
        },
        "item": {
          "id": "da416392-ac19-43fd-9c98-1d2682e1243f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d7839cb2-1b31-4c7a-8532-848f75ca31f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae11053-6b63-43e4-87da-7f55e2b58749",
        "cursor": {
          "ref": "159e3f4b-51d1-46fd-ab52-e820cefa3f84",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "48b33c82-5aeb-484a-a4f8-9d89fc70259d"
        },
        "item": {
          "id": "9ae11053-6b63-43e4-87da-7f55e2b58749",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bd192d07-e957-4f65-a35f-1707b96796de",
          "status": "OK",
          "code": 200,
          "responseTime": 2251,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45dbbeb-9d20-4eb7-a315-40a7b00c095a",
        "cursor": {
          "ref": "ee973a78-39a6-4ccf-9401-f4b3c9929fff",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5944f27d-3aed-4bd2-adbb-b45a7bf57543"
        },
        "item": {
          "id": "f45dbbeb-9d20-4eb7-a315-40a7b00c095a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "995be779-ed8c-456d-924f-3062ed999745",
          "status": "OK",
          "code": 200,
          "responseTime": 3703,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "083f9dba-77a3-4c5b-ba63-eba347c76737",
        "cursor": {
          "ref": "5d0395af-804b-41d7-bb57-df93cef8174a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ab49e711-9079-43e8-84ec-b20396451015"
        },
        "item": {
          "id": "083f9dba-77a3-4c5b-ba63-eba347c76737",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e0b2fdcf-77ef-4c30-beb8-4f62b5d73c25",
          "status": "OK",
          "code": 200,
          "responseTime": 3673,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb57ce7-deab-483f-b084-32f6e3ebbb4a",
        "cursor": {
          "ref": "80cc05da-e4cb-4deb-89d4-8cae2f3245e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a9882605-bd09-4680-b5ff-a90d0e3e8ff5"
        },
        "item": {
          "id": "2eb57ce7-deab-483f-b084-32f6e3ebbb4a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "666561fc-1098-4ef2-ae1f-1766877501b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb57ce7-deab-483f-b084-32f6e3ebbb4a",
        "cursor": {
          "ref": "80cc05da-e4cb-4deb-89d4-8cae2f3245e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a9882605-bd09-4680-b5ff-a90d0e3e8ff5"
        },
        "item": {
          "id": "2eb57ce7-deab-483f-b084-32f6e3ebbb4a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "666561fc-1098-4ef2-ae1f-1766877501b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dc5482-2cd9-4ff3-be61-15528fe46700",
        "cursor": {
          "ref": "26e2de5e-52e8-42ca-befa-bcbd4b3e44c2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "12f57919-6257-4bee-80ec-eb38ae195d18"
        },
        "item": {
          "id": "11dc5482-2cd9-4ff3-be61-15528fe46700",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64f286c4-7a8d-4595-b3c4-b27f634129b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555e61f-3693-4fc1-b577-ca8c3e33fe57",
        "cursor": {
          "ref": "0c2707db-d497-487c-b2f8-193e6045258b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3d1cffed-d4e9-4047-b608-e6eec464907e"
        },
        "item": {
          "id": "b555e61f-3693-4fc1-b577-ca8c3e33fe57",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6cc9c037-220b-4552-9dd9-dd4ce0ab1800",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}