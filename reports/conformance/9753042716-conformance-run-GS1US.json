{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56463cc9-d8bb-4205-bf3e-980c271c8f6c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c5d04bdf-8463-49ca-8c98-910da9d63624",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5f4847d-99af-499f-820d-e384679b8ef1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d5301df8-2cde-4e65-a617-07007117fafd"
                }
              }
            ]
          },
          {
            "id": "f85731f7-28ba-44f3-8ade-0ecf125eff30",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17625ce7-72e7-491c-9e48-ad6bcafb4a2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "521280e0-8369-4ec6-a470-66b8ddddae84"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3c313b1c-72d9-479d-9b90-b97989505135",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bfe3440c-4f76-4bb8-befb-32f7a16394a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47f1b339-3481-4a00-bf53-446db752925f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0425124-9ba2-426e-a1cd-4f1fdf2e0a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b74766c5-06b1-46dd-84b5-9f6af193a32d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31b7a755-f2c5-46d1-a956-c891386456d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "353177f2-7146-489a-aeef-7d17791124ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4dcea0e-551a-4018-89fd-b875a79b265a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc529fe3-5155-4b9b-825e-0d54a2bc04fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35a6c0b6-c5a5-4d4d-aae9-c2a519087897",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "28ea279e-bf92-42f6-b7e7-7935a263f1ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b12bf0a-a61c-4aa5-b5ef-85a729450757",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "830c7480-f58d-4c47-98ef-0acabf018e40"
            }
          }
        ]
      },
      {
        "id": "b92fa8ce-ee41-4061-a79e-bda1fcef0fd1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f6985e1f-2ba9-4a54-a03b-c77cc11ab2cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40e8def6-f37b-4b02-80cc-0c20ad1a5433",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "993dd885-bece-469c-a28c-a53f14aa90cb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466c1366-d929-4281-9017-0413c3697afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a844a72b-0607-4075-8e5e-8fe1a3d2f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655bf472-079f-4e8d-83e0-012e97099ecb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe8834-dbc0-416a-b0a5-c508621c3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b88530d5-50d4-4414-bc58-a39f99de5692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ad645d-440b-4f65-b612-80c2eef947f2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fda67d-ec0f-4dd0-9e15-9d649152725b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dee369f-6280-4514-b974-30f8e8bc73f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5231acd2-384d-410b-b9de-b6a1f23f8ca9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cecc44c6-927a-448f-83ac-157ca6ce45ff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78718ef3-287c-40d9-8437-e01c6ba734ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1df2d314-32ee-4475-a989-ffe24c711b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2febde8d-4346-4043-9509-dfcd1ef05f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04acbeaa-77ea-44ad-a2b2-129900dda44f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c8cb2aec-96cd-4de6-afd0-2cebab1ed8c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "040794d6-e864-4fea-9bc0-6a1e007755e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac7c7b36-26d2-4652-b20f-e05a1b3d2e06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fde0a341-4405-483f-9d10-d161e1b43fc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49cc961d-d793-4f4a-a548-8d814525b98e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "86650f02-224e-4411-88bc-02128fa442c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95248eff-ec4b-4273-85da-545b2aa66a1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18341f57-f40a-4086-9f59-993778d5e833"
            }
          }
        ]
      },
      {
        "id": "8834fe5a-74de-4714-9cdf-c2c7cf6e8362",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6ab30cee-f44f-4bfc-924e-8b711a08eefc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32805119-bb56-494d-8aee-a79f1c6a645a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1a678cd5-13e5-4941-b5f7-0def998f9fde",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc7750e-27f8-4bb4-af31-7e941ddb74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed7ae5f-d484-471f-a7ef-e799bffbb0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb3803-e5e0-41fc-8bb5-4b095dc60c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "604706eb-c926-427a-854d-e69317230821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72c7508-dcde-4836-8126-fc946392f0f4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5973a51c-ef79-47c9-a307-aba826f236d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc62e82a-6d13-4c9d-9f7d-67c75a1be0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603fe009-729a-42e0-888d-cbcb2d47236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ba5dc84-ffcf-4a6c-842b-9a20a00e914e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda1943-2f30-423f-ab4b-06df7402f867",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c72dbb4-93ec-4641-b437-a818b2412c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18fd865-1fe7-4b92-acdc-45eb9a635f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45ccf7-8354-4c0e-bee7-261d3e4e60ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e544a0-ce58-49e9-934a-5393fc09ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329dc055-af6a-489e-a625-ad914f043ec3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c5233-0bb4-458f-a8e7-c4a224a4009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872cbc6f-d9fa-4833-8c8d-c282d19699ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e8c8ce-0e73-4b82-bddd-af4f3adb987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2d6d39b-03e0-4e53-befb-a5fe5c26bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7802ddc-323c-4de3-b654-e647c0a0db85",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06ba8a7-7d77-4f8b-9280-bee6b3a1b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5949d4-43ad-4599-bc2d-6d98b152f66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf389490-df9c-418e-bc01-8e7d86c8b757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f4364d7-92a6-473b-b328-c48ca3f0277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3029a4-6675-407e-b972-fbf4bcd22ba0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c109618-7463-4a03-8fc2-466470089da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ac73f-cdd0-4cf3-8785-ce2815f4da1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21082929-4bca-4609-a54e-8b393aab43e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "734f2f05-6927-4394-ba2f-ac094d5039a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272828a-b5b3-40f5-9af1-d44242d20d6e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cc7757-8dc7-4221-bd65-d2da2253d0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55189930-a1e3-4a46-9f95-e31ee90c4f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9c67d4-0f26-4735-9ea0-d26e52d06baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877e2f8d-decf-4d65-a8f0-700ce28338a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07611e55-faf3-4645-978c-610b208777f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04394f4-ed2b-4136-b6a9-a6af33aa1ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561e843e-ab9b-4a36-8171-373da14851ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2094f3f-f4c3-42a3-b8b9-94edd8cd5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e2d0523-66e4-4ae8-935b-07bd0337f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de9911b-7cb5-4891-83c2-5724621daafb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0221b04d-210f-4cbb-83a1-7452a8dd3a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f73ccb-ab83-4d2b-b404-6c90c81c833d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0c7c7-4c01-46bc-bb95-543909d928ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9b03df6-245c-4c30-8c3b-224884218500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad55e39-b811-4d2f-a8ea-cdd285bbc85d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3efee74-68be-474f-a707-0fe1fe14ebc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56612301-5e49-4b6f-9fa2-209532a8a0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5af3d2-d02f-478a-a95d-f781a544acdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36328e9f-c28c-4046-adf5-ac60c2cd68f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053e0d29-c714-4481-944e-a8a4e6590f47",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3bf85a-f4c0-412d-8625-2984f90056dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b273f4d-9313-4c0b-af63-62d5ce2b5439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3bc3ba-ffc6-4013-a49a-95ea5f02d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42f3a1e8-af21-4923-906a-c56d553b5d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7217c0-f02f-4930-8dae-6a42ca2b8f09",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5848a921-61fa-4c30-b279-560afba63bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4abe51b-988c-4f70-b0b1-78bfe3912dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2effe258-b877-4a58-8d4b-99d7f9ddbcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79298ec7-0488-4f34-a374-8395f5db363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99c6922-8bf9-44b5-b56a-79b864367a1f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eed1bf-6b55-42f3-9f0d-f19e8a53c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947c978c-2832-4cf7-b5f7-2ab2c1cd69fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c3ee3d-5d00-4024-a153-3e41509d576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03da9b75-56cc-4f12-b8cc-f4c2abac972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a228f459-77a8-43cb-accc-96200923f586",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4a0134-0773-4022-8770-ebcbc3311eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e098a2-dbb3-4cb8-a4d2-7818ba45b00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23524b60-8f61-43df-9616-66874e1892e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25e6247-187b-4547-934c-1b2c49e16d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafcc4e-e451-4d7e-9732-401ded665d67",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ff8da-7237-4787-bde1-c57523c7ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db172731-b6d4-4b1e-8324-bd07df03b980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f9212-3264-469d-af6a-e9a031c78050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "450223b4-76d7-4c62-a088-f6fc754319a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1988316b-ddda-44cc-a2a7-afbfc9d9b92a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b4ceb6-e078-4e6d-8c07-2c59d05cee6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bde2b1-f5aa-433e-a2aa-549d1ce3f2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9c84be-12c4-4792-8264-6fc89157b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b19adf8b-e699-4d58-a40f-ac38c6eb57ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2622b2db-1e62-4294-ac75-2baa3db9cc36",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a36b3-125e-4176-9681-7d28b7ac5c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7351da11-d37f-43e3-a3b5-be3210548597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c5160-087d-47a1-9acc-5604b8916d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64451900-fdcb-46da-a235-bf7d181d3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bfd60d-5246-441f-9a80-f6f80feb1a20",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f486bb3e-66fa-4227-a462-cb92a7c21926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518ed5d2-8cfb-4917-9008-661aeb22cc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e350f60-8646-4cf3-a18b-3862c9f7170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6902e2-cc8b-48df-8337-a50516979908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002e57e8-b391-4ac1-bb49-c9b5cd9ec95a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e567e3-7ca1-45de-98fc-3c08468a4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f655c0-0b00-4f91-a8fa-2a9bfe2a69dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64bb5fb-6a7e-4821-80d7-684e8fd7f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c98312f-8d15-43e8-bda8-8125165a8bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2966013-9e42-4860-83a0-a7c57be3d4b6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4993e917-0b80-4315-8549-de3121cbdfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63755cb3-ccd3-4115-9ee6-c03664f51e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f581789-f3e0-4e33-af8b-f805d61d781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "048f3203-9d96-4a77-8bd7-4bfd597558d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f98c597-c911-4bca-9337-9290bc465e4f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923c7a0b-4f5f-426f-a663-d09bc68bfe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795b6c63-e8c1-476d-9324-021b3c5e50c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775a35f-b04f-4402-a94f-bf73103f95f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0130a2b1-a0cb-4d15-8d50-fc8cfd767998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a61974-8f55-42b5-a3c4-d30fc0be8006",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c6e97d-e319-4c43-919a-453244d83fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9902370d-af7d-4e63-a991-e14551544585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf3fb5f-8aab-40e8-afbd-9839e1713ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4eb38cf-ec1a-4cdd-9cf6-6a89489c38e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca2a0be-568d-4d77-aa1e-e7c8724466c8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f273b7-723b-4a17-9273-abaff7c94f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c86eb1a-0b15-4f11-b978-970cd7a63af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c4535b-c9f7-4dc1-bb2b-4e197e833106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb2248d-18e7-483e-9fec-df99c37cd5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cdbb52-5425-435e-8685-94dfeecb36ba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5cecef-2115-4033-88ae-d341384a8a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb81a8a-ab6d-4109-9eef-fae92baa08e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac72faa1-eb09-41d5-af78-16aca485be7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e3e16b-1e33-4291-802d-de65245455f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76360dc7-f80e-47b4-a941-17e243e4dd18",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb5e34-1032-4870-b6f8-d62517b91be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd3760a-810a-4f0e-a23d-94781d5c3bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463726c2-89cf-4228-a536-533a479a1020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02dd3db-0f2b-4b63-8936-52e73e4f6864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954480c4-ce4d-47de-9788-e615a80bbe83",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a585f95-cb9d-450b-af80-e85e180f72f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81888bdd-8971-4c2c-b2c2-d8865c84a674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a137298-62ec-49c2-adcf-e0c2a6ffb051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2ce9dd-8592-4ac7-84fb-9ec310f2c55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d5cae-b0c7-4cb3-a445-f1b80d9ed28e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9077668-0df6-44b9-99ee-59fb816e250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d03b511-3236-467d-abc5-de7d2431a70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc17c76c-6eca-42a5-9116-6d9f89c24075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d2ac99-4624-41c1-9d37-1bdc1553578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdd185d-cde6-4e40-97ba-56ec84da8c7b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb7565f-3443-4421-bb04-9f71de2b22da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d31926-df4e-46fe-a64b-1029142d9258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862fe617-df24-4052-a970-faad09caf945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4056a17d-f13a-4195-8664-27c13345ba11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff7f12c-32b9-4eff-bc6d-993c63fb4983",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c568e-ea52-4a4a-92a9-12cf1bb22d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19050d62-9305-4edc-8092-88376ca0ac0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c49f30-4bf4-479c-b237-98b0b0e0bb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fce5b8-c752-4c21-a3ad-9d6b2fead2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709d8a5b-f988-4fd2-8e8e-47bcd969689d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca453034-90ac-4824-bb85-3c16a0a5c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1d182e-8e33-4bd1-aa74-f1738a0cdd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2f2104-998d-48e1-a9ea-7b708ac6c7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "121110a6-a7e4-4805-81df-2639bea6c85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ba5942-d050-4d8d-adf8-c7d7c1db1d1b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fa4b6-649a-4885-9316-f7d877588697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebef2a3b-0567-41fe-8c2a-e1a496730660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1345f8-7b05-4e92-96f0-0aabb78568ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34747fd6-37a0-4511-a169-031990998b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e6e84-8370-41bf-bda7-b7f67480f1be",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00535fcc-a5e6-4204-bd85-79b6e61fa62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f901c8ec-3b12-4c0f-9abf-c749f1fc7115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31427ec-0b87-446b-9feb-f257104b1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bdc5ed-58bd-4bbb-b9b8-060edb615581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc2f2c-1596-4dfe-89a8-5b3af4fd3c48",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56697a50-b79f-46ed-babb-de26e3639a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8909dd1-d6fd-403b-9270-81944a5cb9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43be5c9-dcd4-411c-b076-571c847410b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e188ab7e-a090-4a32-accf-ab861058a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb240457-4277-453a-b9f5-fbac1c8af01f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96b61d4-4da2-4c6b-ad16-e82fac5cb2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5af399-9a17-4769-87c5-a45c6b1ae01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8526c37c-e7be-4856-9ff3-ef868637957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "798f84c2-6075-41f5-9141-96f6637bb4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3813ad3-789c-4bef-9af2-3adf25cbf08c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9949570-a1de-4989-95bb-a84e167511c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7455dc4e-2300-498b-a0d1-c33315c5232a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7a141b-6fc6-4980-8d40-9926489f9e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e37f5073-1598-4c40-a861-183e92c249ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a5b8f4-5c2c-4034-97c3-2c3ecd894c67",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2177efdb-69d9-45dc-9e10-607a7a58597a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22820071-ea88-476d-bd3d-b9925a7598aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e452dc-67a7-4693-8ba3-d748af916f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee921f4b-d4d7-4cb4-a0ee-09ea038f1613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aef1b0-b937-4ef2-a73b-67e5375c80ef",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c8ad55-55ce-4023-a645-d284767725e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0492eeb-f0cd-412e-85ef-9880a00d81a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d198f8-f17a-4f06-ba5f-0444e78d055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19700fb4-5341-4f05-9ddc-a190788ff2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bda678-dc01-408b-8505-f32b2e6e168f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577898bb-2cc8-40b7-a0ec-b8fafb8bd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4c230f-3767-452d-92d4-449239914a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcee7d5-7ccc-4549-a521-f655b84825b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bba5d44-bb0a-4cfb-89a1-6dfd2a8b838d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f82aa9-267c-4cbb-9cc8-6f0179877847",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbf67f6-ce84-49cf-ab32-8a6476ac7f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bcb242-62ac-4681-8f66-b2afec2b6d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6644b0d-d004-4a66-a4f0-221680adb170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "534f9518-63f9-4163-ac39-cea2906bbe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed111072-5976-430a-b87a-3f16eab4e4ba",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc93812-edc4-4bf8-9b69-bc4cc3ef58cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e398b047-0e5f-4a89-b685-513a3b309997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647f0117-ca68-4e57-83e5-51b8daa321e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "356f8317-0830-429e-9201-8d75a31fde18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1d5800-6bf8-4584-9bee-03f95ef0103b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86b0c16-f02b-4dbe-8aa1-76334df917a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f3986d-15c3-4693-b172-5608a30bc4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b000287f-781f-44ad-b1f1-3709d1315cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a17c266-1009-4502-946d-ccf955d11174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a659e27d-1434-4d0a-a9d8-d350af7d04d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5836c3f-014b-4a7f-bd70-bf914ddf5070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b29dfa1-41de-4a26-a7ae-bdae7fc3d6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c58018-9ea5-4049-b2bb-4a919012b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc53be5-ca87-4301-b9dd-79083fef43f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154e6001-c740-4452-a4f0-e8518021c354",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08915f30-695c-44ed-b363-7918f1dd2d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f497db72-a3b8-44cd-8752-d9ac9ca2ada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfd9404-e761-4c69-9c22-71b66cb44bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0608f36-39a3-45b0-8eef-2206ab02d722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4648a274-cb58-4d87-a059-2e3b8edb6b9b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3ede7-dba4-40a1-b5b1-932cb2592934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba084c00-a3a8-4dec-ad48-4ca9b63ff9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229a918f-2375-46d4-92cb-68a079dd0bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37964e8-3751-44a8-a726-192568162c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b12a48-5a07-4c0d-87ac-fae0243edd91",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672112d3-06ce-4117-9ae6-8f216b686220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59861b4-b364-44c0-a99b-bb000e19b463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506f8d49-e8e2-4484-aa8e-92b582ba9282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fb8da5-764a-4214-99cc-f59d08bfd9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8522b-ec9e-46fa-bc0b-8dcfaf251cfa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d9c8de-f502-4554-a0a4-545d96df96a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859da7c8-6360-426b-bfc2-fc948baef5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080d3496-b065-402d-b491-3877458c0e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9669c60-fcd7-4ae2-93af-1f49fdb86804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a3cb24-dcd7-488e-a1d9-88065e4af37d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ed1877-6b6d-4e71-8f7e-9dbb5d64681e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baad57f-12ab-42cb-9226-6c6dc6a43491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e6dcc3-7e64-4a0e-848b-01f35a90bc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b53262-f067-4508-a47b-66d4d3d59def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c140ef-63c3-403a-acf3-10430ba206a1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3698e7-2078-44f9-9a6a-bbc915fff01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bc80a8-4c52-4c2a-b52d-34159a54095b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84416fdb-1250-4844-9e3f-86a666500a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "788f1ae7-de83-4d43-a1d3-df32e5b996ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fa4117-8cb0-43cb-8a2e-3f640731b0bf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a22e393-1a1e-4243-b5ce-930e5e894cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d53fce-4205-40ee-a323-13b3732915f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bab09c-3146-4389-a3b1-ab86e31a67ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef34f89-0436-4bbe-93ec-c2265d359e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a2a787-7124-4667-9d74-9705afeb41f2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993b228b-0c1f-4900-8fee-561b92d12e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946de36d-7252-4baf-a4c6-294197d0c8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfad444-99bf-4cc6-90f6-c6a95f48823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "506a8ea8-9847-40f0-8273-2dc548db9572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f3905-3fea-429b-a1e4-64ec7bbac8b0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d8efdb-4d83-4ce6-89ab-19526f49da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813fed75-52d0-4725-a6bf-7f747c255b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6889cb-9f8a-4b5d-a92a-4b7f7c686f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26956a09-e491-459a-b8be-cfd43b5dbc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a29d640-86c8-467b-bd0d-8db7eacb133c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ae0009-ae9a-4113-9e8d-9a60d0a450b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f7b3fc-9ed8-4914-b037-9d047e01d7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb5b800-1211-4a50-bdf0-f5b479609f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f55e3da-1cd3-487a-8e50-d65eb7952558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c609ef2-e258-4f89-bb4b-264147f02bde",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57fd0e4-6c56-4c34-bc44-adfbf87687b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc53e6d-27ff-4ef5-8442-71f2d4f08714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34711f1-8f47-4817-be47-3e48b10085f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a939a0b-87b7-4587-9820-534d046ea90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4846af-c941-4a1f-a757-28d3335bfd7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ac4fa-414b-43f5-9d9a-bb15e94c6a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe940ef-36d9-4b1f-ad0d-f6064410b311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b529e821-5478-49c9-8040-ed175a36ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8512de-e464-4436-923c-8efdfdaa1332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871043c7-ca0d-421d-9256-38930a270fef",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3171726-3f7b-4122-9faa-685b5d701860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfb574f-0343-409f-88d5-4133f492d5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9073f36c-b0b7-431b-9b70-15ee2a1aa688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffa3eb1-6d4e-432c-bf6e-39cebdc02b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999ad775-ab54-4e78-bda0-ff924207a048",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60214de3-8193-4141-bc33-73e51b1cfbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d24e3b-8bea-4d5a-9c1a-f94b783a4703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f636a1-9dd9-480e-a5df-e69b69389ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1747833b-a61f-4b2a-9367-6cb59dd693bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43139290-e595-4dd6-b62a-ee416eabe144",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f36ef5-d5dd-4b3c-9d49-2d0e2d9e893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d36a6e7-4432-4848-bb76-7e4bee8960e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfb1472-2408-4d32-8144-5d8365e0849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53ba52f-6931-428a-bdc5-80c65ba47b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51e315a-7ca5-4e46-9419-2c481f7dd7fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381f3707-bfb6-4551-85d1-0993bcaf58c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaa7954-5b59-4111-adb6-88a99a6d945f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501003e1-7971-4f47-8c3e-4dad8cbf20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac729ea-b77f-4c17-883e-21d3e50a5de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ef05d4-8607-429e-ab0f-c4a4d7076652",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db986ae-266e-4e6c-b2cb-c04f0fb49f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346586f4-477b-42bd-aac9-d8d07de52d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e058f91-5a5d-4c4d-8576-f39ffb4bec40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73e3629-b2b3-45a0-8480-99e3d7600361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4035b364-c48c-4296-adca-da37e72c25f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f497e2e-6265-43d2-88e6-5a6460088d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410a857c-76b5-4497-b997-a3bae260ed0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b120df-0cc7-44ac-9d26-21cba0dc18a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea7f884-758c-4dbf-972d-fb37e1b28c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5621272-c037-499b-a699-f7277bd88272",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72a3a5-e91c-4473-9c00-e339588943ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a75876-080d-4028-9eb6-9ebc99d6910a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7088b5-40b8-4468-b6e9-bf4475df8959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b429fc61-4f6e-4eb5-a6f3-17f4641e1436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61632b67-561b-4d02-94e0-baba7406dd7a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82b451a-3f6c-460a-bf80-734ffdfb3cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06feabd7-d090-4ce7-9918-716899589a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f03dc8b-7a5d-4fb2-9948-7a096522936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ec28c8-60c7-4a5b-9ccc-eae6dd77658b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a76b0-c3db-4c88-bcae-ab55694c2cb2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06248b3-5262-4b61-a40a-8986cf3110f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0024339-44ff-4d27-b8ee-580bec26ac0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ea9b5f-00d1-4e46-ae19-1c8de9d404a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cee979a-c38f-4fae-a41a-8dac93d14a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3405d6-d120-4557-9f6f-44bc0663fa35",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b5703c-2988-4b86-987e-301599820b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99773cf-7745-4f76-b96e-22647223d38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d3efa-6acc-4e6f-ac6e-06d44f00677b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b386afb7-5322-4716-bd67-91dd4e430746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db015f2-25de-4573-a4c8-ac2ad7638322",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ac2319-1ccc-4eea-8e67-7e3fa479b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27f5c5c-1a60-4619-96ee-6df4e536be26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a38fb8-83b2-4cb1-bcb7-b1b3f27266d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6325ee-acd2-4bfe-a1ac-d6bb1c9ed50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c94760-2ee8-45c3-adba-9642dbfbe3ce",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9dc8cb-9d93-4430-bbf4-16ee631ad9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc9dfd6-7122-4964-956b-05db0ec80423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97155e9a-c5bb-43a6-b006-9aada2678961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc2ba88-8e13-4b38-b0d6-1625c58e0a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff734de9-9124-4a80-ae1b-4d794aff998f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c93f32-8292-419a-aae3-57e061b56472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ad3337-bb10-4597-85d4-434c51cd3564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b175caf8-242f-449e-9ac2-c664753e6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6667ecc-b99f-46a2-8f7f-257e83e36f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed7593f-2b75-4ee2-b507-e6ce475a8163",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb8446-5154-45c7-b130-ba5304a1adb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd1d299-9156-4ca1-a319-9096a06e7a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717de1a5-fb61-41aa-8787-17841871633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d00692b-be31-4901-aea4-0e38080e8037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab172e34-7f8c-4f36-8124-7a12fafbade7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55adbf3e-6008-4fd8-bb49-7d2cdf09b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c3d237-435e-44e2-b243-ecc6acc98ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73821174-8051-4658-a6aa-bcc5149cf5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1efc8eb-1cb5-4195-a0de-1cdf9e6c9af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff75eff5-225c-45ce-973e-5daa3300dfd9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be36f31-4647-4701-bef5-cb22fb764187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f746e3-0df7-4d2a-8d7d-981f43a741a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65193d0-ac09-4a4c-8b78-0348572b4599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abeb2e40-a222-4a50-98f4-1261fb45aa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6e7ff2-cd71-40ff-b7b2-aa08490df1b4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2938948-4fcd-4054-96ea-33ecfd4064d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a204ca3a-3693-4c7b-a4fa-989b87913e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc7eeab-4caa-4e53-8e3a-1ab569567e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8a05a9-bdaf-45b3-9661-a1b5a19a6233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d315606-0471-4ba1-bbc8-d7b914c1e30b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b26f1b-2d90-4fae-9774-03285321c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae8031e-8e67-4001-9533-ddaca8e9a55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f9ab44-f6d8-4249-a761-72f1db0d9bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "390b2105-eb55-4304-8cb6-0cf00b138c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b3f7a-028d-40fa-9bcb-ffc9c3e2da93",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc2e906-feb8-4888-b0b9-2731d2e93944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d41de5-e8b5-42bc-b63d-3d73bbf3f4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797019f1-aeef-45d1-b0f1-e380db1bb4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8ac981-bf58-40bc-a4a8-463835107bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21a03f3-2b6b-4064-9706-749f5f0d8bcf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229b7705-267a-48db-acf6-dc97258a9a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6758cae1-e970-4c55-a53c-ec271f2111a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72efaadd-fff9-4113-a900-c73f5c007e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71849abd-6cfb-4f3b-b66a-0436d307a66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c0e0ff-48de-4c8d-95b7-05706268775d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b673c20d-8312-4c26-9d8d-4df913048130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee25df0a-3d6a-43fe-8deb-303794b1fe7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18460040-b9c6-42c2-a4d5-0bab6bbf1f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa83166e-f085-4a51-9417-a25ec178e28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c76e09-45fc-4a11-9b9b-a7539d6b4a17",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10bbb22-0472-4989-901a-ffd838c67074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb0cb4b-d9d5-45cc-a31a-889cff9b9429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350c04d-6542-4e42-a678-7e100144c79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a03cd25-9def-4bce-b273-fe55ce32a7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107cc4ef-6047-4f8d-afd7-d01c5337f0cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d704be-6b5d-489d-a66d-050773b7a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae2935f-2075-4142-9cbf-972fd3942569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa553eb7-ff2e-4a0b-a40f-2486d4c8ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "561f4111-b5bd-46c4-b569-3fd0b4892925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6d2f5e-73fd-4bc6-8afd-8cfd077af2f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab52261e-d9af-4522-8692-ec789b8f6925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7b06bd-684b-4302-8ddb-74acc7976867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b85440-d0e2-4ce4-9bba-de388eacbb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba62effa-066c-4a40-b948-cc66dfe6bde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d88dc2-c166-40bd-b7de-9d45c4bda18d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba03e5-408a-49bb-a223-8b17e028fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6623e847-b2f0-4228-9b5a-7aea7b1537ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75b876d-8a49-491f-b268-bacd00558492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18bd1514-3996-4d0a-821c-89ee18faeefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb27952c-87c8-46e7-9e61-6b903394c853",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ce60a1-ad68-4f90-bc5e-d6df04a1f65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d57f95-a429-4990-b9b8-dbbf09e76e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b36bb-621d-4421-81d6-2bf064ebde59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11c5a7ee-62fc-4818-bd8f-2fc0fbc9d74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5725f57-4481-4382-aa4c-46d971d856e8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2924b08-532e-4f3d-a870-ff09db80be3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d49f77-a9ae-44ec-9a09-e41bccf081c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929398b3-254c-4377-8654-ada883eb2d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12a4dc4-8ed7-4a73-98ba-6c5c171f798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50742152-342a-4dde-860a-602c959cfd97",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393e71a5-8665-40db-ae6e-7e69dc1587ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc24901-b852-4e11-a7fd-36818b53f0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77737c12-c80d-4040-9dd2-7d050eaf2390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cade489f-e49b-4414-be21-fdf7376fd844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245c3940-9d2e-4f3d-a3c9-fec8149f3936",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592d2419-f7df-4aa3-ade7-90fee94c6647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b82c68a-c95f-4f7c-980c-1fcdf006b7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fffdaeb-54b3-4e44-a805-610988280f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0111b178-3076-4275-bbe7-f622834f9cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d4ec6-51c2-4a78-9ba0-648098c800e9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abd7ae5-6760-4127-a424-9c2a050fe1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33499cce-a2dc-42fc-ad33-ff2a371060d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d5c32-c5c6-45e4-b4f6-75b95e74b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f84838-bbc3-4eee-8eaa-6b1f4d318e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e6fbc3-f9b1-49cf-bb0c-ab359d36cdd1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44245cd7-fc58-4715-a366-f2c67fe26b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5453831e-a05d-4838-b68a-d9b62bae0146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e813c62-3f0c-44d6-8b9c-8d15927b863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f26a03e9-13b6-4939-9894-8992511417d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eb5863-a037-43d9-993d-9a5673de080a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c9b06-703e-4c0b-9857-8691ddd7a358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74762d49-e480-4f9d-8e58-0c5429895e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc8cb83-2aca-4a7d-9823-9fb8dddf6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77511bed-de7a-40c2-9105-56615db02ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7129890-dc9f-4fb2-8dec-26a373937097",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5816a-ecc2-407a-8e2c-cbddb9dcaf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d8a036-c07a-494b-ad92-962213ca0437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e410d51c-0cc4-4844-b7ea-c4471e9a4feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1451ccd1-a459-43c6-afbf-e783a5644010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e665760e-8669-4d0d-b7f1-a262b3d15eb2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83217ebc-ea98-4deb-8f0a-9f5181e94da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239ff26a-9289-464b-9a1a-4a1c9cd68aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe85100-ce7a-4935-bccc-81fffc387021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16fcf308-c71c-405c-80dc-84d48e03656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f723aa9-eaf9-4c04-97ee-02f0b2c20251",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f795eea-2dbc-420e-9c47-fb9187a3e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eae4db-a84b-41f9-97a8-99332d92158d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6eea15-10a0-4231-97a0-ecf8968f0aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "115aef3d-1d7c-48df-835a-65ae69c6bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f12d275-b82f-48f4-af30-a58bc6a2acd1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4e2a7-031d-49bb-93ff-ff14ab9d544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8237cb3-6c60-4bf3-bf6d-9e1146a19d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5705c0ce-d7b5-4953-8f78-63880ba02705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "113f60b2-51f8-4820-8c51-fceba4ef4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec42b840-c08a-4d8e-9876-c3303be1ccf8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da93b560-30ac-4332-8a0b-10de7ee8c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cc9e93-3460-4b34-beb3-e74ca566004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ecd98a-d6a5-40f7-abe3-b8fa072cc660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d22e81f1-499d-4f54-b405-caaee3ffb407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c283d5f3-0be5-42c3-9b45-bdd35f97fd35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb9eec-282a-497b-bb30-77a9cbbb0ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd23ceb8-9219-463c-b468-2e5ba196946e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef339ab3-9159-4a93-be30-917353fe19b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dfde6b-cf96-4109-8c01-e6817886d3f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf0857b1-972d-41bc-8b63-613e5a3fee3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ee94204-f89a-41d5-9d45-99c41793cb36",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9170cf7-5d64-4a77-8988-72cb78d6700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a7cfedf-967c-4d88-84d6-83ceee8ea186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28610a4-de1e-42aa-9ee7-fed3c7286918",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2018048f-6c60-4125-bf70-3f12e0237d96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5bf8315-ce6e-4bc8-a3f7-62fc28520c0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b03860d3-6021-4835-91ee-9f4f363a4158"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d7187d7-4dc3-4802-8bdc-b8ca9e2d8f46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25387755-00a5-430f-80f4-9313e0e270ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7c4268a-6fa1-40a1-afee-86245e878569",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c04ca580-fcfd-4a62-b0ca-5a6c388aed24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "411c5a3e-bd50-4898-945d-07f4ec225460",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa2f8088-4772-49f8-ae1b-b530fc8fa260"
                }
              }
            ]
          },
          {
            "id": "8cb8923e-943d-4757-a093-2ad91436d289",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7dfcbd11-9d3b-4fad-ba37-94ea0afed218",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6983a242-f994-41bc-b0ab-b4b602c3e495",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e52ddc-9bec-4680-9fc9-2e6e21fc17bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e3d45e3-7707-4098-8973-004da23eba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757ec6a4-23dd-4d51-929d-df66d347e657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116fe8c1-9886-46d0-a940-aae411fd6a5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e242e06-4e22-4eb6-9b9f-424cbb7b5454",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c103c65d-a891-4d48-a97e-eba3d5cf269d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5579c82-18a5-42b5-992e-b6a3e778a0f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feefc0e6-d9c1-4aab-b785-02a94b3f1028",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b979fa3-650a-435b-932d-d77b9a1250af"
                    }
                  }
                ]
              },
              {
                "id": "8c47ba44-34ca-40bf-b4f2-371d1a4b6123",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f610518-2b9d-4d76-a174-fb3a28af409d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "859e01a6-d68b-49ae-87ff-067f3489a643"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e3044b6-4575-408e-8264-9308152ad748",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8509469-a4e8-462c-8ad1-03e9b3774f8a"
                    }
                  }
                ]
              },
              {
                "id": "6c7878ff-fb95-40e7-97be-91c25cabe6ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd3accff-af83-492f-aaa4-f7ed506cdacb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee1fed1d-5ba9-4558-8a3a-ab4b8af84bda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e25c78e-974d-4b3f-9478-a31d9b752e2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5c14a19-b2f9-43e2-92f0-6220a8863c66"
                    }
                  }
                ]
              },
              {
                "id": "6e4731cb-141c-40d4-bfa9-2254836ac9db",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5e2961-2c67-4e3f-b490-b8679aab704b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "092ef8ff-841d-4ab0-8bf4-e7e07e516715"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d3952a3-b8ed-4d25-9024-f215c9395559",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5fdb8b21-6431-4b13-ad14-292111fdd61b"
                    }
                  }
                ]
              },
              {
                "id": "219bd107-dbd6-4cbf-bd58-9bc76789ae66",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b912e14d-2604-4064-97e3-a73cec10f2d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2118978f-3b55-4f1d-a17c-483ec860f0f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24155cb0-bd8a-4dd6-bde9-f5bcb4e0ed9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dce9a4d4-1733-4cd1-b8e5-93c5dc331b48"
                    }
                  }
                ]
              },
              {
                "id": "30ad1177-b4cd-4688-adcc-a6bf428d7765",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6914f3-f6d4-4860-80f6-e437a4abc0ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "806e7c34-b7c8-44d2-93d1-28296abd6fca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "381386e1-6f47-4ba1-ac39-8b910da8a765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a4622fe-adbd-4ac7-b9d5-dfb765cd01a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3917e6ff-ec0d-4432-9df0-65f5772306c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10819d1f-98d2-40d7-9baa-568e7633e66c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26949cf9-8bb1-4bae-8ba4-d12a5ab4e673",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cffbf011-499d-4cf5-894c-fc5fadee5910"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7a693ad-d2f0-4093-bca9-b393a6a344e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2bd442d-2f1c-4344-84fe-1ad90b0ca6cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4ddc4b0-a981-4100-a403-b1caf6407979",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f57c645e-ea53-4a1b-96b5-6903caa3c09a"
            }
          }
        ]
      },
      {
        "id": "2006c9ac-0704-4181-9e59-0313fbbfc423",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8a86e6ed-0a19-4e9d-9120-68de90e7b19a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d729f5f-df50-46a7-aca9-7dfcefbdf8f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "907a228e-299a-4b13-832e-b8d3457c60d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b5d56-9d27-4514-ba05-1355305c3b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea5f478-914b-4920-9e32-961ace35981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd43f431-7d51-4a47-9d35-38b0e006a869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bbe291-1e4d-4525-935b-effbef5b7b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659c4698-8f89-43d8-a344-7277265c1cb9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ffb3c-36a4-4f24-8108-5d47859c1c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f68fc0-5bfb-4d1f-915b-ac4e91c827d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8818f71-8d62-4efb-84e4-aea822b92f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4ee836-9c91-4f0e-8be0-37305b9f2033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad369597-e7a0-404d-a097-23fb4d4f09ca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e44a3ad-e455-4252-b590-a097349f1e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506ff900-df36-4812-a0cb-ee920223d12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dadea2-a393-45c2-b499-eb01a1dc1fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "649fa4ba-4c5a-45b0-a84b-284c23809b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc2b86b-8206-438f-94ce-7914184c05cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bddc23-9824-4906-91ce-792106fcde84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f30b2f3-9232-4ff9-8115-d5030be8950b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9667b6-468f-43f2-adf1-59b06b56c3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0560d5bc-1a19-4bf8-b027-5ff5e2232547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192478c0-dd9f-4c51-bb61-bee1447c2b53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833563ac-239e-4858-8cb5-6cd91b2be39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc48cbf-9398-4fb0-9d76-90aca89d951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c672281-d4f3-42ad-96bb-8408b65145b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "308fd0fd-ee13-452b-9689-48c8e1aa676d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a513fc94-028e-4ab5-847c-17966254a0f6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7102689d-7b98-4870-83d6-8f3ea9f4221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2149af24-f14a-409d-8313-2245eba24b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3ab77-0ddd-41bf-85b3-b2705473d529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd737d7-6c23-4815-8630-8131ae5651fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4535c126-8401-46de-bdef-8bb26a37c2e7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242c8277-25f9-4198-bdc5-53e8af193ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fd89ba-a336-40d0-baa4-490652f5d2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27aa30a-ef52-4072-9353-ec9aa5c0773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a402341e-b726-422c-a76f-2f0285332fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dfd401-016a-445f-83db-0d4f01f74636",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1602964e-018b-4f7b-9ae1-8cfed577c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f855af03-8d92-4121-85b3-6054f875f4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc9378-630b-4672-817f-81874c0bbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e530111c-ff72-4728-bbaa-b9f432d28bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad12368-34b8-42ec-b247-031fe017e09d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb71a25-53e6-44bc-9d25-81013709586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace90d9a-3b06-4a72-ae2e-700e5f522672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35daa304-6934-477c-aecc-b95f47708ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5e3b26-63ee-4098-a1cc-2a9942e95297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a8c8a4-6849-424f-9649-32ebe2c2e493",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff44b42e-2aa7-4a8f-b8bf-6d72b74f3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cab0d02-17bd-41ed-b38e-043fafa33b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9234af64-8297-41b1-8353-9dd81b65bcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88a9ebe-424c-4e7e-855a-b1ef77305bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4524d42-5789-4635-98e0-5b4fc9415ea2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d93e68-3c96-41e2-8ac8-f5c194a02759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2965d66-03cb-4e63-a515-32af1ba50c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730b4e5d-fbbd-42af-a777-c65bdaa4e98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3132cc3a-2386-415c-93ea-c834d36a95e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb29dd10-26c0-4217-8f5b-b40db32e562a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef72c9b-acea-4ae9-ba65-cd9fb7058582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28037f1-5ade-49be-a7dc-b36a172848a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66059c8-5551-4efd-94e2-f33e52c35a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bad92ec6-e5d3-477a-9d41-26d37376efc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2c477c-05ca-41cf-b25b-5dd33dbf2dea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbd889b-f5db-41f4-8a66-6afa8e57ba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9f9a82-44a9-438f-affb-56f1337b7258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276493f6-d0af-4019-b264-ef70a1fa16d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de484e7e-144f-4113-8bc5-bf60f20d690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd5eb97-a0d6-4459-b4ab-446937b314a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f25b063-9d77-4698-81af-eaa1cd633c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6856425f-29c2-4a53-8c25-9350a2b1e900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cd7b08-cbaf-47cc-b068-e1971f57f7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6b19b1-b0f9-414e-adf2-d2854d9011e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfeebc2-a58e-4085-a404-412b83d285c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c989bec7-7036-4b9b-865c-8f3f1c611dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de3a3c2-ae11-44ef-9c60-c082e0ae3677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf43aef-9da1-420a-b446-a5265f6e8e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44189c36-6764-499b-b74b-333fcc8f6a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ca2c8d-1274-407d-baa9-38256bc134f2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfd043e-58ec-4f03-9bac-dae3f39b3149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245b3556-13b4-4888-8646-bc707a8c420b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be0edc-fccd-4800-b329-c35374affcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c59800-6b97-40f4-bf5c-06bcd7010f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08004703-629f-4c5f-a7d8-3d4fe841d1f4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a1f60b-633d-460f-984b-87d2a2b2ef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20947d2a-5830-4bdb-a7b5-6d0510526bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da697619-fed3-4447-8d59-84507c9c1346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20968d80-b710-43f4-a999-6c4877437f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27b8120-7259-40ba-8aa2-a8ff71fa82d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68c075c-07dc-4517-a340-444a5a07a261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767ec72b-8e07-41fc-a9e9-af06f1768eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b019ef-f2a6-4256-9258-f647f3e44a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f46488-65ce-4fea-b8dd-a1c5a26390a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1805d11-b01a-4836-950f-24a5503c0423",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9ce63-ac7e-428d-a39b-d6a715db4cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4222a14-0a7e-4917-8aae-f8501b59840a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d9b31f-36fc-4cd3-a2b9-6190533c1a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e74e6c-8a9d-434b-a14c-f5f3a88cb20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8233dda-a323-4d0c-9120-2c56054e8f2f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f527a49-491d-4dd1-a7d5-ee05bb764374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b204f827-4bdb-4197-b697-992ed16e2935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3edfdc-c01d-4727-b278-40c00691794c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4ddc2a-0f84-4c68-9539-6247b37ca65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc2e54c-34c8-490e-818d-71cf5d28b819",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de63f92-f3c9-462c-8f1a-cd8ccb60d6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8f0882-7be8-4bcc-89d2-be19c298ff8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec05c8d-73b9-4ad7-80c3-5249f167ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203af6af-e3a7-4172-88bb-d860b023f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52322d3e-e4a8-4240-b30c-696abd7f5698",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6828f3e9-0b50-4609-a2e6-44a4f0293b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4932e261-28f3-47e4-bce3-b4178bcd2dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3e7d5f-a5c9-4906-ab22-a6fdb6ff5631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52675758-518a-42fe-92f1-cc8f56517ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70cfd95-e2ef-42a8-9042-62b98f439b28",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404c4776-0000-4c1e-8eec-e58561ebd501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae62e660-12a4-48cb-89c7-f61e3cd5bddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa67e2b-0a95-4a18-a6e6-9ee1a8b571b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef3f73f-7919-4579-b40b-af2fb66bf9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7fa287-fb82-4992-b425-9f66f8c7d7c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2249f7a0-3be8-4284-a299-a93be750e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20d169c-f438-4db9-9053-325182556b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bd82c3-4b62-42c7-940f-e7488441b237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5324eb24-63b8-4856-bab5-491e493cdba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9898a1c-193e-4867-b992-4a2560a4324e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf210608-2776-4b1a-bd94-21bca9985e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34b9e58-7c63-4c3a-8beb-780f0e646708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff95145-ccc8-435b-9316-799e97bdbc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1078694e-3100-4053-93d2-986588fcad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ce03f9-cc43-4424-a026-9ba67429e6c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbbef1a-0324-4922-9c4a-f252aeb9d910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f002d9-0c8c-4c5a-b113-3a2e37007359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3102d3d-4fff-4acf-97af-2ab9690c6f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd396073-6bdd-4940-a936-cfcd18922986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08fad29-8e5b-4b1b-a971-ba7f955ce750",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f58f766-bc85-44e2-9a27-d7a68be7a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41275039-7d5e-4da2-b6db-91c491569dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2107143a-dffc-4220-8c21-fc25016c7b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e63e7f4-5a0a-420a-9434-a442f0281c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf1ec4a-6b57-4cdd-b5dc-a5280d2a80c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44c7197-551f-431a-a9d5-9c630371622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9052ea7b-410e-4911-bb1b-1ac78b65eb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc4a71e-3080-443e-bb3b-30c02bc3a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6a5834-1ed0-4ad6-bf8f-c0eb83460698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aeb5a5-d6d3-4a92-b4ce-dbd841dae9ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848d735d-aa0a-420f-9054-d57f59203c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40d8495-8e09-4142-8275-32a35f8b6d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a45e2-7102-4674-ad1c-f24e0044ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03190c79-bedb-4d4e-8bc9-36bc8c6991fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53db1cfb-9eb9-4d74-ac37-6dc5d6725198",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1b5ca6-a164-4842-bd59-1cf2488802da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb022619-c084-4437-8e96-ccfc64e8757f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318852a5-7b02-4bcb-b82f-8e952fb90aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4be74d2-c6d8-4af1-88b8-38877335a620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9eb22d-601a-4acd-bd0c-cd4f8348926d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45acf039-1126-47ca-b346-9cf6db3c0420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aef6c8b-3b54-4cf4-8dfe-1f40dacbccb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99587215-dc79-4c2d-af0f-77bf5a0c6375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7981963d-6e1b-46f0-a41e-4f288b873b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45595a6-c5ec-4f0a-8699-dcdacb3372e5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c3dd7-90d2-4b07-b15b-b56bf0fdd0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6da9d88-779f-4e55-b0cb-352d16f0c6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea58a91-1d79-479c-baff-4896389df241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a48a5e-117a-41b5-a49b-b4f6f8a08d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b637b0-635a-493a-9c48-466a63f4696f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771083d5-7c8a-45a3-97ef-4e23dff6b043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fc3461-1be1-4734-a4ee-266ad3c0ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b55d34-8f9b-4e07-a4f5-f84f3da21626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79eb92e-81ba-4894-bcca-29b40f309825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc8a3b7-9131-4e83-827f-cfc1ae8fedcd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e308d14-2d64-4561-a000-06eabee89429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9b599b-3bca-4825-b194-824be4bd4643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ec07c9-664b-497c-966e-69cf82c5024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2728dd5c-c88d-4f92-bfe7-b7ef64131c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95f75cf-d97c-4bd9-8a7f-f4b183b96bec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fdd061-25df-4dae-9dd3-a65e582ecb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a5556d-5401-4a03-8952-8250ce9f9480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808b4206-2acc-4606-9acb-5a3f9bee65f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b111cdc-0a4a-4d04-bfee-513c2d169058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f3520c-dabd-4fee-831f-98361f7f96b6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1454b9d8-9b89-4820-9b73-996277576c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3e9753-fa67-461e-8d92-3351d2c1c0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25799ca7-7374-4717-934d-5996e067abf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "672af7ac-c315-4d24-ba4d-c9a9745723a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32487a4c-7cfc-464b-8813-d57c8d4c86e7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2611a59e-7f05-4194-9179-b17d3c12dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8988bf7-4e9b-450f-b552-5864139db902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7437a8-2601-45f9-883b-1e6c01fb17b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230746d7-3876-4de4-b4d0-37ce318a48d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17af74ac-a849-42da-b75f-1f2bec406cac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdcd4986-eaee-485b-b158-27690523e288",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552aa60e-2c0a-4e50-b3a6-b9953e037131",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "182412fd-5562-42b0-978b-f3fa4e9c3f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385e8f15-4458-4fa7-bba8-fcaed06ddfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ed79b96-9b58-49af-861b-659e6bb6dbbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f40b75-cdf3-4027-8c5b-170181f485f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b23bdf5-db08-45ff-a464-27ea6ebd08e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c733cc3f-6abb-4259-9185-e76d87f872ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57fb5737-bb9f-40c1-a0a5-3684445abd13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36006291-3366-48f4-9a98-8b321560d91c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de014273-3afb-4dcd-8152-cc3517c908e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b51ef80-ce7f-42d2-86be-1bcdbebf69b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22119169-c1ec-4668-89f9-0bcbd0bed6be"
            }
          }
        ]
      },
      {
        "id": "5cd7c6bd-7510-4d9f-8ac8-d04c33792848",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dacf008d-49bd-4d41-b59f-7c1eeef8c2de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31d18dbf-f629-414e-83ad-f8ca2dc4c64b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc804743-6ae9-407f-902f-7a8f0d272237",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb2baf0-1c4e-41ef-8730-3d388efc03bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388837de-f907-4279-a37a-0b2d11ce27f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274f336d-6f64-49d2-b2ea-e39845eed2d1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa231f5-42d3-4262-8853-20b057b3fc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12588cf0-706f-4da3-aa3b-1d760b0c610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90929a-9f1b-4fa1-8f09-3c86e90ac1d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022b918-bb8e-42d9-a1f5-d6ab8873eec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aae360f-53b9-40b3-befa-9045ffbfad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f09d074-94ba-4098-91e2-aac99ff0cc19",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b02ec-ab5d-476b-bf40-25878e350f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a823d8-de30-4a0f-92fe-08ba3053d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9369af1-adf1-4ac7-b0d9-811afa519d12",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac22037-6fae-43f6-86e4-d409814e26c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a70cb2-ced6-4301-a270-e1326abe960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7776b7b-8675-469d-8508-1f09376ade81",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a805131-542c-4ad0-9cf3-3c6316bcc53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537ba714-2b68-4af1-ae6e-bcfb92e7280d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3c50ed-b199-4c65-9a48-b34084b35904",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71186c3-c8c5-4146-b35e-83659dbc2fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee581e93-6733-4910-9075-054ff6e93e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33074f0d-9c07-4e06-ba24-4721e834be9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e26863-e880-4fce-b3e7-bb3887670b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8ea045-6a06-4cbb-be6d-e3417850b888",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4fc68e-ce42-4a67-ad5d-752868085c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9b244e-3c1d-494e-84da-d091484f5f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac249280-7558-4a60-bbd6-9f8da87c4162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe32eb35-b745-43c6-a34d-7cb6bb057944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b761017c-e95f-434f-9202-afb05a64d950",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e381e2-1176-4ff0-973e-c7e2fdbf22a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240ea445-b77c-46a4-b1a6-62c0381afc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e460d6e-62af-4d36-84ef-0c91841abbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aac9143-47ae-436c-afe3-fb38c8b4af74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e4253f-0065-448e-b613-1566d0cd68e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4682ae2-ad74-4034-b888-785c1ae92627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67de07d3-fadd-41fb-8654-dd668d6147e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4438eb2c-071c-4121-899f-6b4e4430ec58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8815211d-75cd-414c-90cf-20225b7224c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c95a6d1-5f40-40e8-aaca-6d553ae7a913",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61509160-eb98-46bf-b32e-8f6c0ce084f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8591c8-47cf-4370-8019-8a3884299d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09580b-6107-4c82-811d-7fd7cd81e9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc3c066-107f-4bbe-955a-8bcaa721649e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec515d0-ae2b-4f8f-8740-16cce2c9c138",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db417862-d28f-4154-bc14-d33ae59dfa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7922d966-b029-4bc0-b172-f1de8c755c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1712fc4c-061a-4ba0-8604-2d85b44d8260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9f32fe-3874-4f57-b589-3780ca365fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13b55b-ceb9-4bff-92ee-2e60a5ea28b7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e50059-50e4-4e1d-b0ce-598635558dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0638ac52-8350-4df4-8b03-025c6e97ee47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e0483-c069-4bec-bda9-4efa35e65faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a827365-8f0f-4df0-b992-7ff525dd4eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3f12e0-b4e3-44f0-8338-5e929ac40c43",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419cc622-2c92-4f8f-bc52-33133f204755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31acb06b-846d-42ef-bf71-07275e1daab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73fe16d-c6c6-4fe1-9554-5b15e9208cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996d4702-add8-4e27-bbd3-8f9223f0b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3061c2e-d861-4bf7-9c87-b9a34daf83c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c76a2d-879b-41ce-af4c-800efcbcac83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689da9ad-611f-48ef-9642-a2853198da4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea6fcc6-1a2a-4b75-8236-442ca8dc9166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83525462-ff94-4bfa-9bb3-afd5502d9a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4887356-a5d5-4b5e-9ff0-d09d3556f7f7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f25060a-7c68-4af2-82a5-f5a00778fe45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1c31c4-8beb-442b-a057-62cf7d299d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21739272-c119-494f-b049-57c67031b7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346a4f94-5250-47c7-afba-62feca1ff465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db2203f-5830-42c3-816b-979bbe546d36",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cfd93b-51d4-447b-9a73-209e6a7eefa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699ee199-ffd2-440e-8e96-bb529548ca0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1d37b1-9d0b-42fd-9f11-7245b50a6f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cc42a1-567f-4872-a562-abcff521698c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54851af-051d-4e1c-bad7-525af06c0663",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e3605c-4356-4a38-8d80-cf81b8fd5cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e79c15-adab-4894-8fa7-12866050c8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f8c17f-5ece-420b-aab9-bd84ee5bc9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec888d80-45b1-44a0-96e9-329ec744994b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a007639-f064-4c7e-819a-1a5201059011",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c67ea-8568-4d02-b2cf-e8f4ed866163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee8aea4-7f34-4725-adfc-6ee44e8f0563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d257561b-375b-4393-aef9-59e7b7c0f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02ff4a8-48db-466e-b396-f9f257751360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbdec88-c896-4e72-9317-990d1319e53e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9654bee-84f1-4366-823f-a49c2206b1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4de4cce-6556-436f-a773-5fabe9759184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7358410c-7b2d-4050-aa15-fa2e5fb54886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f32ffd-6b99-4702-90e4-628269cd2b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a689d6b-7cea-435c-bf41-2cf6aa0d1b36",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43729c0d-e625-42db-a5ed-b73edbfbaad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b009c5-8e40-40fa-91e8-9ddaf7c6386c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed81c28-5cd0-4499-9a85-94071108b8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c110f2-521c-42d4-9d82-729bb1243a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4cb5fd-b2eb-4adc-b4b9-2f5363d04df4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bcf0c9-42e1-4553-83aa-9ae6f47089ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2e869a-8651-4c73-9120-4da8c55e9f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc33ed4-b75a-4dae-9b4c-b32e6c897f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cf0688-9340-4c1d-b7bf-068f99d55d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61cb68e-6ce6-4682-a4e8-44ce6869eedb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6bc85e-1bf7-40f5-96db-a20c841976b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05993e4-f6b1-44c9-bc05-cac8edc8c511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae54aef-254b-4c7c-9618-3f6998470d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502700bb-ee59-4597-aa2c-f7a5bbb2f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf94c9f-2ae0-4b57-a43a-d63f4421c831",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4f6396-7d52-4e87-8f23-77223c5ac405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5a5aee-01da-49ac-9268-36db3a298a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed08d5-f0c8-4660-b047-d3165bddff8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f436967-84ea-4818-9e62-9cd815a3a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc90fb7-b483-4d57-b6b9-eee8a8004f1e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d911d0-78cb-47a1-a92c-bd41600b9bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16edb46-4319-4271-b709-7768c4c14605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0235fc65-0d70-4797-a20f-d06c149a67ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3b5f1e-1991-4ff2-bf39-f41b1dd11aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeb0bb3-949c-4fe5-9c55-aa16232065cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b137416-e988-4ed8-ba31-6e62d2695ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e86718b-075f-4b34-a475-74bde6377e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ce542a-0159-4154-89c3-7e5d531e50ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5216fc0-5b3b-4a45-a944-d67faa3534cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74b467-870a-404a-b50a-f61a241be552",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e79722-32be-4f0b-806e-f466785a34df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7219aad-3b29-48f7-bef8-7c464aa38134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957adad9-10a8-4f23-8b52-7178390820cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d16d3cf-32f2-48db-b724-d89f48d8d9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e0ffc3-f98c-4271-8652-8b51b0c66b19",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30811ad1-f08f-46a3-82b7-2c9b4d18203d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e37b5d-b763-40e0-853c-742315f45f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b323214-eece-43fa-ade3-90c6927a0473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dee6ab-d2d9-415e-9bf2-a5e969402e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f266c545-1433-4f7a-af6d-c9454f31bae6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b0d0fd-c08a-4fe4-bf25-cce1f4ba47ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c047a12-11c9-4613-914b-376b6e5a6f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b53d37-05d7-4e92-8a9e-86edfe73434f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f3df0-ddc5-4104-8a07-0caee5a5097c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae616c-739d-4d5d-8914-852af91a350e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a3b91a-a083-43bc-bb93-041a261f5c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b6b1dd-d407-4dfc-9331-27ba8de154e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e49f1b-9272-402a-b934-a3fa63a0994f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47810fa7-eb93-4437-a886-5fe457b94d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169502a6-2b5c-46d0-aa6a-98ef8e38a4ba",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e94e24-8a6d-4554-8ad3-45832ccb5d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1132dd5e-7fad-4440-874c-b2ff96f6ed63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbade326-6dc0-417b-81ed-06e2c490f9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c19ef6-f72c-4a6b-96c7-6f3bd1c1ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f4d6b-8abc-426a-9d6f-2b05f5187c1f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e882a91-c038-4973-a021-47e38b07148d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a26c69-402c-421c-b4bd-f4c1be882f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38af572-2a1d-4557-a85f-0a4f4b0d672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824b4576-0045-4995-be96-410979f2808d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353164d0-776d-4ba6-a3e4-bdd566bf596e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac371a5-191c-428f-aa52-18f9ab69d37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5768b4c-fdbd-4b8b-b0cd-4bd7e2a95196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e5bb4-b355-46a5-a768-096602d6df6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5def8e14-6675-4640-9c3e-076ace1b3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53008e6-4b2a-4b01-b64b-1df40b8e126d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7dd228-e368-4e93-9ed7-d82d7328ab36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e2dffb-2c46-4df7-bc1f-5f38e5b6d1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465bb0c7-271c-4828-84f1-3ad961e7f59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47bcc83-3164-4041-8773-27a3de4b10e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7d7b82-4742-4091-b2a2-2ea94fed8b4d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f0d31-0871-46fb-a528-bd174992703e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d48375-65db-47f0-a113-5bdf437b4a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73d62c8-c830-4c0a-873b-57447f88e3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cf0e19-5bdd-464f-b70a-11794a5b8ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724ab49e-f082-4446-b44a-6256823d001b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2b63a-00fb-418f-85fc-a1f59eb84a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c9e44a-4a1e-4a6c-a314-566ef2f983c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655fdf0f-1f10-4e76-84d1-de0ab62c988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e906b0-1f16-46d9-9229-fe2d8b9e6e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065f845d-cad0-41dd-9d43-631241089939",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590657b4-d050-4ba4-966e-0e88873d888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899bb1eb-4f86-4847-b37a-89c0f4cdc380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97443ee-8271-4c67-aa0f-47fa953dcb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f0ef41-6bac-4ca6-abd3-d0a1bc0c84b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc6db3c-0436-4a15-b1f4-bb2fc228cc5a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24158953-f896-403f-8bbf-b9ab8f199f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97562a71-c5bf-41fb-b7c6-dd4214b17bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbda1ff-69a4-45e4-9a11-d88fe9dff01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d656542c-99ce-4fb9-86ba-8cd4390adbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11174ed-452e-4f93-b430-3933cb22cb9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4486d2-cd73-4dd2-9904-41ac8557cdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963a0887-8ccf-4c97-a88a-4a4be9e9f57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b245178-f2a5-48d2-b324-07dd59ca9a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c900721c-17ee-457c-ae5e-7fcf67d47f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d026f1-5eca-4af9-bf84-641e17ebf9d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e95b1be-c2c7-49df-ba3d-cdf9ae1e3d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f029da-fe86-42de-8ad8-7684116ebee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed4f3b1-8dca-43f0-be9e-dbafd91f6a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d19e106-736a-4c87-87fb-2ae6723728fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee2db6-abcd-4e3a-9eab-d904e019116c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6653b202-7771-48a2-a562-592b5d0ed880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de760db7-d301-4bfc-bdb1-0f32a14ff396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33174ef8-0afc-438d-b2e7-dc0d1135c26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb2acd6-8507-40eb-868d-0c00c5fd3595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b19476-df17-4c95-a17a-d5f36d1a21cc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bed5c8-9895-4db5-aaec-93373aa8eb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ad2f9d-d597-469e-8678-951b434206dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119387f2-57df-4cb8-8529-1ec44e1b0046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c7e05e-242c-4cf0-bde3-af85da9cc253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6b5cc-9973-49cc-821a-c18157148dda",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58206fb-da6a-471d-9afa-2e814dfb1c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa24a63-9dc4-424e-a75e-2bbc1cf15dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd2f09f-c585-4df5-b977-309d8f99fff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1238770-e834-4a0c-96c8-e550893aa28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2328a893-aa35-4a2f-a6cf-ec1323d2976b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863edea5-4f99-4a64-8bfa-655805d56ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f004523-cfd8-46db-856c-ca39f5e61b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f075d6-c716-4172-b2da-f28ca58ae6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dc9510-a835-4910-9668-08456053372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6332ac84-e361-4783-8e08-831646be7c72",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a350a1ec-fcc3-431c-a758-690b74013336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5305c1a6-1f8a-4f39-afd2-b5418e95de5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c8a81f-1d93-46c5-b7ac-765d13b03aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed48b1c-c539-42dd-a23a-3d2bbbabec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5fb38c-1b30-4d57-b5c7-2ea69938f851",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e6e78-60b3-4c1e-a431-1beab429dc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c70ae8a-b818-47dd-9614-784c55b17b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a3cbc-4087-429e-9dd7-a448ca944941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a4d56f-6ecb-481b-8f3f-66a66b569e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8951419b-662a-4778-90f3-ecd9ffb46cfe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d866a4-08ac-4f66-bd7a-c188f0e540ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198920aa-9fce-4452-9aee-530198f07f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f68bec4-ff6f-4ffe-a0bc-864c6e89bd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ffc434-c1fb-4d19-970a-864ce5452adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b0557-bdfa-46c0-b3b5-3e4d6048383c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce17bab-becb-4860-b910-7b07b7d3f45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b27b33-ddc8-4ac7-871e-ae7e3e92d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761ad00d-63ef-4d1e-bb9f-37b4363ea309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac099e8-71aa-4d63-b617-384d90f19689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88713a90-99dd-4edd-9cd0-35a00fa45411",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc19b203-28cb-47b3-ab84-1f6d76e17c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dc8a11-bb85-43d5-a98d-99cde10215ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca66baa5-93e6-4fee-9862-46b1f65a19a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cda6c68-f2b7-4329-881d-b05eef1b6b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d56871-bf34-4382-97b5-6dfa0561bf87",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988af7c6-014f-43ca-bd48-29352d53ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dca2a9-944e-4b92-99ae-27798062010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d895c25-277b-4d40-89bd-a71bef3174b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eb6266-5523-44de-a8e5-063f23091860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e027bd-819f-4faf-b8cf-be98c41fef74",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c95bed-6111-4c90-879e-b8c704927dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad9320f-d32f-438d-b3f0-aa502a6f47ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7267dabc-5699-4f15-a329-a5ddb1746ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d969a24d-5908-4113-94bc-f7b98d6713ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3a846c-265e-4bf5-85c4-9b795d058379",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62a3f94-2de8-480e-ac41-a692d7ec2495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627b5337-fca5-4a53-aa6f-35be3fd573bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57442e2f-412a-423a-a383-bf5001278b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13979ef7-7244-499c-8d1f-73f41669bf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb2a1ca-a858-4b8a-b9c7-8b63d38c89bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13364ed3-1dca-475c-ac1a-e040c3c3d073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e4c7c-60f0-4bb6-a77a-12037850d6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90934b75-7758-40cd-bd6a-99249c0c3ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53616e55-fb81-44e1-9d13-6480302d0f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89276466-2f72-4d1b-9e87-c9043950d77b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd10253-6967-4845-8249-b4e602933b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7c5245-71ea-41c0-aa3a-cf4a49f8a4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04ff07f-9aeb-4a0c-bb32-76013a78265a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad8b27b-d82f-415c-a126-eccb86936fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce73b5ae-7a51-4f81-a4e5-bef0d0d5b737",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286a9884-413f-4504-accf-8061441ae9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9438f5e5-f31d-465f-832d-2121ab6cb0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cfaccc-e523-450a-9bcd-5d25136519e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddb27e2-a138-44bf-b7e9-47d5f7f52e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86671f48-5138-4a81-aa40-ee896454ae1d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e910b55a-2623-453d-8f85-236c6fb9d0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ca7668-1db5-47b7-8132-a59582e851f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d27855-385b-47e0-af9b-6b874fde525a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e24d1b-71c9-4117-9e79-2c49e179eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4441a24a-d2e4-4a0c-9e5b-7f44bbc33a12",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac670b-d756-463f-bd56-15f71c5b75a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec527cda-3692-4973-ba87-965c6dee2a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136b26e3-6ea4-4041-b599-2153e179fb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962de04b-497d-480e-b49b-70943d5b38a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b963834-fab0-4e97-99eb-953afa3259af",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d6a8bd-6d75-4575-afee-18f98ed10c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60678eb0-3b68-4afd-bfb4-8c8ad88a796b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c779e94b-64b5-4951-8ecd-0f8f95e34903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3554388e-80b3-4712-8280-0b56098ed911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806b3919-96fb-48ba-8dc7-dc0915fb92aa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64e4b18-846f-4e67-81ac-9ae1ba2daed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4889f69-3c96-479a-8201-0600d21e8d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00494854-f154-4ab4-8caf-d9c3e7c905e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2400c59-485f-4f1c-8e8d-dfbd37e24f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ede23e-fa2a-4f1a-b2e1-9ed85dc32230",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf373f9-b400-4ed5-bab5-0a0f53eb82ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3532319-9069-4a42-a944-8d9f254dcf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb74b594-549f-40cc-a972-ae7e626c6030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec909127-b8b9-4bc6-8919-4e91d6765351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4e3835-67ae-44b2-b180-a6cbad157ff9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f77e39-cba7-4697-8fcf-a67fc2381700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0856bd15-ff2f-4460-8b6c-0b6536e3e013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd359aa-5f85-4f89-9ea0-a2341e220468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fa9003-ff97-4076-8a47-ad439377a110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59fb4d7-c6d4-4665-81a7-66db6f9ef530",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e4519-add9-4a52-bdde-0afc5bd1940a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364bcb12-bb50-4b04-a2d7-beb2b8665593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2156893-bea8-4349-9fb2-c01e9ece301e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3387b587-33da-4f6c-a8ab-09e14c993766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b095b2c-1496-4a67-bae2-32ec854ee625",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f1c56-9a55-45bb-b2a0-320927c77812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8977ca-9d14-4263-ba0d-7583e3b7a861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2038b3cd-6bab-49de-a1fd-5a08df83080a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f44fe3-d3de-4fdb-b44f-84c4934759e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b89820-714b-4b49-81b8-506e3bdfe58a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f57d3f8-bc15-45ac-a8f8-e00eadb983da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f3c3b0-b649-424d-a2b5-9febc3d698ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e341e-1a7b-4cf2-9f8a-1abfb30f6c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e09aa25-6621-431e-92ea-66833cc02075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94d82b9-6c72-456b-8e1f-0db547a04867",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac407454-712a-4c15-b67a-3e340ac7b827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1dcd55-dea4-4592-9c5c-189ce7849191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ff5a30-3a09-4585-ae80-7d8aee0bb960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cacb19-8730-4c0c-b699-9ae95548740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bf4d4d-7ae7-453b-ae5c-1611e33bb64b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893dace6-38da-4ca5-bee6-de60dc7acdca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac2ed7c-bb63-4a0d-8c23-1d75bd493040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d33a993-407a-46cd-8860-d18e5d33554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcb7a31-df51-491b-ad05-106ca141267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbae0c21-8279-43d4-9597-0bb1af981ac7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617b566f-3639-4984-a7df-96565481a376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c0d35f-2b4d-4f3f-92d4-9d1d841daa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745d380e-9c83-4988-a479-8a51556a838e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f543e6-aee0-49f6-98b2-f63d24f1d800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0282f434-794e-4a12-bc50-36cc6734170d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a887bba3-15ed-4feb-84a7-f9457bd79e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296df0ee-ab0f-4c68-99e3-332dee0a1480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bfcbc1-a970-487f-8c70-fea0b2477097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a993c585-db7e-4c32-a637-236351add0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce4ea2a-9e87-4ff0-99d0-1035353309b4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03927ecc-3239-426a-90ad-65dc87660282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589deb34-9c06-4893-ab63-9aa24a62af64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a06ec7f-caad-4bd1-8af5-5694dd5b0cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae8a95d-0326-4d7e-b95b-fe953f8eeb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7266b6-1aa1-4bba-9892-d24d11072584",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d8b50e-c143-43ac-bf44-6e59b3148a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cf730d-7107-468d-8754-14ae95ca95f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e681ebc-18e0-4a69-82cb-d4ed426dc659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c81291-793c-4c03-80f9-9e07343435f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acfd555-8833-4480-9d3e-ef81cfac3609",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21086ab2-0925-4d56-ab79-fcf46b3141f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c764b29f-2218-469f-9e5a-65af66f19e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56864a8-e3ad-4dfa-99ba-11ba0e0b47b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dc70d8-cc5b-4a17-8594-223671137f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abeea3d-8c1c-4190-a838-23c400a7beab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2075f42-83de-4df2-89a9-9400e53e79c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c891131b-2eaa-41ae-a113-70186defc788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b7983-1979-4121-be0d-a6bde2812276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a94b3dd-88d0-44c8-aace-fab0f5f5d8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f0a88d-7bec-457b-a027-e3b1c0aa7bfd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ffd9ca-6241-4394-9acf-ad0486a9b7fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06d36f9-9035-4fa5-8e7b-a3ce8ab11e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a432e86-da06-4c94-a3ea-e00a4e375c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7051da-7ffb-471a-b068-7168cd5083c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7101cef-bac2-4d3a-841b-fdd01f19512d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3201c205-c5af-44b5-9fcc-931045fd62a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee17d6f-fa56-471d-a241-0ed6c2f03f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be0121-bbdd-4943-b2f6-52b077727598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9156af93-b519-47d4-8a54-98ed7e4985db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77e892f-6169-4a8a-bd66-dcc94faab615",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3692e73-6eee-4e14-8837-67a831e8fb51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7035f042-7bd3-42fc-b69b-37bde3cf7415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d5bbd-98b0-444b-b2d9-2b85264a9b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5498ef-141d-46de-9fc3-b278dd9022c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3900983e-3657-4942-aed2-7dc7da7c4bdb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de745405-9be2-49ff-bccf-a4dbdebc1201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36817c3-fc10-41c7-a119-da2faa2f1d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65aee9a-ae9d-4c76-a364-b6be4a85f2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe94fc2-168e-49e2-a035-5c1253ec5492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a122ba5-e401-411e-9898-bd11aa1ba01e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f43b1-70f8-4f12-8010-d808df434bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f426862-eaf1-40bb-ba7b-bd115dee462a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2352d91c-2249-4e8e-96b8-a733ab42fbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c77ff4-a70d-461c-9c06-b1e772b38605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e555e3-58af-47f8-afc1-9ca5913e3c3a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149b77ec-ed34-476a-82b5-1d4723858516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6e9472-4f14-43e3-a1c8-1bf486fba7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346b9d84-d1cc-44d9-a620-c9e92f97f0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7e9de0-3fb2-48a2-afa2-75b9061b3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de9470-967b-457f-b423-58b07614b729",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ecc80c-6333-4669-a581-8e59e5f32df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864c19f9-7dfb-472b-a405-add2feb55406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfde075e-c1b0-4b21-bfbb-991f49b75639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9060d5-fb25-46d8-a7b2-e4b553873d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f0ea5-bb6f-467a-87f2-15502a9f972f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51def049-3dac-45db-b6cf-56630f61cca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a2bd9e-1125-48fa-9e24-751215a40889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d858d2ba-e932-4145-9ddc-4cb3feaad9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c10f3c-e39f-4499-a6ed-cd4572956f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fac7f7-f028-454f-bf54-3821b80c5f3a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a59c2d0-b57d-4bb0-8856-e675c8b3d905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7e64ac-d2e7-43f9-8545-ac7f58535f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b012cbc-9a6e-422e-b55a-75a800e153d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a109bd1c-e2fc-4201-bc0a-236f7aebf1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb32dcf-df11-4ea4-b510-892a8ca98c69",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d3b183-03d8-4c27-b157-73da783e481e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690758de-00f9-46f4-bd2b-2e3a399cbe8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7924fcc9-4389-4864-82cd-0e3d6fd19766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9512f3-bb9f-4c34-96ac-f2893fb2deae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7d1b81-ec31-4a0e-ab23-875ea7a50b50",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253a9868-739b-4c1c-86a2-5f79424caaa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b902423f-57c7-4a0f-bdab-506222b93607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c190de43-6fbc-4503-986f-4024346c0cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23752463-d615-48e6-add7-e5099c2f209d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80576907-717a-4a89-abef-e005f6d50b0d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27598e-32ea-4ed1-9f88-25cafa77fc85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbd5f79-8778-49a7-8d7b-197a08a7181f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5fc8bb-fefe-4a1b-928d-be9b58d328e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e035ac7f-58fc-4b0b-b7c8-e7136c412ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cfbccc-d5d3-400e-8b60-6e6e2fabc4d1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a4b8dc-5c79-4ec5-b197-5570191ee240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49cb501-7e16-460c-a628-0118ee169560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f869ec16-15d3-42c9-bb6e-ec95175f5dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c694b06-fc7c-4811-82b0-b1c5ff8947bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d36be-52d2-466f-ac2c-d388c1c7a1df",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0ea1b6-dd36-4b4f-94ca-b59c9453a9a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4413f8-7604-42d5-a48d-d1c1bad88c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b92eaf-c1aa-4894-bd6e-afaa6d25d071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dfcee9-0128-4a27-a847-5b06ad3f6bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81614e76-58f1-41c1-aea8-ac2ffe269dc6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb2cd7e-15fa-484f-9f65-3a6f1881c075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2a2fe5-02e2-4add-a514-207043eca4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e2ae2a-afb8-4a5c-97a9-bc2677911f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b533e3-39ef-4645-80bb-16f6b04db222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da03a263-cc6a-422d-ace0-8b7879f05ae4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3883770-250f-4099-b85b-fd525c17c065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758f5036-4aeb-4023-a9c7-87fac3d5980e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ed9f96-7b87-46e5-afb4-fbea1e8430d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d65868-38a6-4042-87a5-f0edf66cf882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8958f5b-f382-470a-8f7a-760b5fdd5f83",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe5c43-206d-4c1a-beef-f1f09003a26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "562029e0-6cf6-48b5-b3dc-ce8f1a00194d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb628e-95c1-4ab1-9737-5e953bd0c75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4619c71-8510-4d98-bc6c-88152937ebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ffd9d-af93-4a6c-be3d-5270d23d9d2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb21189-badb-49ec-bdad-28b6e0d0c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2670efed-51cb-4a4f-bb98-daef067e66a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23582e5-7305-4129-8baf-db032e9f550f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d771b82-e195-4ff5-94a4-909176442d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a3983b-4061-4d64-8da1-ecbabdc722f7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976edc35-89f9-45db-a22a-fef56e237f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5644fefb-c265-4a7c-9163-9a631b592ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4679fbe3-4303-43ef-b451-5709c8368cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01020952-3c65-4e69-a147-0ee7c4e43588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ff454c-393b-4351-b5b8-a6faea0684a5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534480b-c581-4900-824f-1927ffe6c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0c0b57-2a7a-4040-b0e7-faa1b73e4c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fe6310-c13e-4d56-b94a-dbd02651b46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a45528b-5582-4903-a961-dd2746b47c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecc2f25-0b4f-4809-9472-111080a2d642",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94357f8b-c0e5-41d4-b9c3-10cc06130c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb57109-1aec-4146-9100-2a6be31419b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e178563-8481-42c8-8f5c-47bec6b0b668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f9f310-37bf-46ea-a7f5-995449e82585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3c5369-8200-4c1b-8549-913c5e060f8c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc45df3-f312-44b7-afd7-2046a46fcb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdee6c1b-aec0-4383-bbb3-f6080c79886c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b6dbf6-401f-4999-8276-9be79cb977a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65014651-925a-45eb-aad6-95a75acd947e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512efc8e-b254-482c-b830-37e9001b5bfe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec91408-3e18-4f76-bdfa-d7611e5dede5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a752f18-a884-475c-bd13-d339e400ba89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21526ace-4d21-496e-a9e7-46c64df18b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae7138d-4808-40fb-b9ae-7a24f75dda44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2642f9-80df-4ada-8926-093f9765dcd1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbbba1d-f435-403b-a257-31227cb88500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd38b3c8-c846-4db3-8f61-34146b0d98a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3250e235-674b-4e1a-a998-2eaa4ee10d4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7881ad4-a5a3-4a4e-b948-ec5b04590609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bb8e37-9ac0-4448-87a4-8316b7af7501",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5849cd-3b5d-4abb-9247-c0b209ee5899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb27c3a-a2a7-46a1-95c7-342744f85b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44739599-6f61-45e3-ab6a-edeae1adb7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea049728-b45f-48f5-b209-083dcaa5b3d5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44db12b0-fbe7-45e3-9c3f-0b00fbc24ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b95af5cb-7622-47fa-b7bd-8640cab826da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34219f69-9a7b-4d86-aa75-b32fea0c81f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff84d509-ec2a-4e31-b7d2-536be5b62329"
                    }
                  }
                ]
              },
              {
                "id": "4da48a03-f670-4b09-810c-787757925e28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6191bb47-c947-4283-a2b7-b3bd346be0fa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3cab60-8548-48f6-ab4b-246e25b13051",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c494574-592b-46ff-98c7-b4abcd71dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f541fe6-5326-4a3d-9b42-147381eaad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8823b4c-c136-4b86-9a72-f8f0df7901de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f00bc780-a4cf-4686-9630-84fa7b3a79dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "862cf4f3-aa90-4d17-a9a6-459693d981d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52c47881-7ec9-4728-82f7-8d52fabb1f9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cd7e7db-761a-4574-ac9e-d400abb23b50"
                    }
                  }
                ]
              },
              {
                "id": "5b0c0004-6072-4992-a179-07c89415df0d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7b2a065a-e8f7-40a7-aff1-0e98ac8a88ec",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bf0765-390c-46c1-b339-4396a1ab46ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5cbae698-1063-489a-8b06-58170198fb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd9912b-0f1e-4b65-9a04-b4fb6bb2f528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dd1e0f-3ec3-40cc-a428-d61700c1ab6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6ba76307-b14f-4318-aab3-05114ab08bcb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "868cabff-4c39-44a0-937b-172895aefe3b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58decf7a-edcc-4350-acbe-9da233cf4d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58324c08-9f12-4c2b-b0d0-3827f4e2f64b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9c0810f-47c7-493a-b843-e03e8476b1f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ef8c204-19e4-4899-b986-274bc90f1af1"
                    }
                  }
                ]
              },
              {
                "id": "3476842b-9310-4b05-a36f-c16fa7f3c4b7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a428a5b3-def3-4950-a957-c090009d5bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57def2cd-c0dd-4f13-aea8-2d91a15f8e5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d25625b9-5545-4059-ab74-d12f7154aa6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b31fb73-6b64-4eda-bd8e-c7c883d54c57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f157c0-c36d-4172-84c1-0c4f2debfae7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d83fdfe-d0ea-433a-bcfc-9c5d3a457b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31c76d3f-22fe-4236-b156-9f5ce5f91635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc257a98-db95-4f44-8750-5f174b0230c3"
            }
          }
        ]
      },
      {
        "id": "bd86d423-fcff-4cef-b0ad-83306f44b99c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "81f9dbc6-cbc9-490a-834e-380e2388234d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1e7724b-c74d-430f-86ae-766b3fddfb75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c994043-1e83-4dd7-a535-636ca54ab4da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888e2465-f8fb-41ea-99d6-fc0d0d442232",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "301841ff-f3e7-4af3-a2b4-b21aa14d8f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8a1271-2e01-4488-bd7a-54ca238aaa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2598eff6-bd9e-46a1-9618-20615533f613"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9db6287f-65dd-4960-a02f-e2968aa64a8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06b5dfb5-55a1-4a9f-9583-3c0e7b94f671"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfba7e33-2c58-451e-b23a-df1c65a38aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "822c1d07-9e1c-47c4-87ce-e6af9ba1ca51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "874effcb-28d8-485a-ac30-c8fc50125922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bd09272f-0f30-4faf-9980-77bbdaccd7cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dd3fba9-2df6-4c1d-bcc8-ee05a9619d94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "104894b9-95b9-4652-90a5-8db789ee9ae6"
            }
          }
        ]
      },
      {
        "id": "f1cbe89b-9743-43d9-a714-33404171294b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4870cff-88cd-4e09-a5c7-4ea7e60a3ea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39a51a95-af13-4d3e-8028-6e2a572ceac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84baa489-3ec9-4c7e-8f5a-72695caf5d38",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d9f600-a041-4df8-9c07-90e1a1b50d36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a818a244-9f74-4945-8e49-0f4f76c0045c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05caef65-24c6-4a0c-b376-1b58709b7a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0cac675-b2b9-4cba-9155-b197512f17c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ebb9de-80b8-4f97-8cdf-97016b6cacf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "561a358c-88af-4eba-a18f-a51e95a02053"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6613346d-c190-4838-a167-1c227b6826ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef9ea340-f25d-4a79-87ca-f34b74a9e1f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b21d47e-8347-4c10-b4d7-43a004c304d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc3a4416-6214-4d98-8869-dc8eb65986ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1615c08-7940-4c78-ba47-165464e2f062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1c15161-e7db-4be2-b827-2dafa76e700c"
            }
          }
        ]
      },
      {
        "id": "c9e13005-ea4f-4dc0-a9ec-2fa73c07b37e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2291557c-cf68-4a9c-b733-687acb55b423",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d7d35f8-d08f-4b27-9610-400eb76a6797",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd39ab0d-0318-44c0-b4b7-1857fb9c3f08",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd25f31-0d8f-4a44-9005-47e47a02f1d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "619d0be2-2318-4473-8e78-cd026fd1f0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a9ce49-eeb8-45c9-949d-0542294ea681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8398b0d2-4aff-4a54-93e4-3a14716f44bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08bc9b8a-098e-469c-acef-e080d814f56d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f878b88f-0e77-4e02-b2b0-698decf937e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fcdca09-0375-4699-9754-9548a9d882c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02912058-e679-46d0-b2aa-06940c0644f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6394fca3-9e3c-47de-b46b-6683a860a39a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aced93c1-2a40-48f2-98fb-2a6741cb7c69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ca17667-e1b4-4ac7-b8f8-cc156fdac126",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "537aafff-7c3f-4879-8098-594b642bed6f"
            }
          }
        ]
      },
      {
        "id": "50a9242a-903b-45e1-a235-fecb14b1322b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e1b5466-6d21-44e2-99ef-d51569f95f40",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eeb0597-3d12-455c-b113-696cb8d1df78",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cb283f00-dfc5-4269-8bac-11e923106577",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68370f82-9d60-40d5-9bf2-3379f57ae477",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc89d710-3ad4-4922-8dbf-6a3f413a401a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.2579365079365,
      "responseMin": 12,
      "responseMax": 9676,
      "responseSd": 644.2987150867286,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719880718997,
      "completed": 1719880754560
    },
    "executions": [
      {
        "id": "c5d04bdf-8463-49ca-8c98-910da9d63624",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "14310d65-2da8-4260-9db3-602d0fb6ed01",
          "httpRequestId": "7510659b-0a7c-498c-a45a-66638a30bbad"
        },
        "item": {
          "id": "c5d04bdf-8463-49ca-8c98-910da9d63624",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e43dc475-ddab-4d6c-b594-4b618843f0b0",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "f85731f7-28ba-44f3-8ade-0ecf125eff30",
        "cursor": {
          "ref": "05a28ab1-2209-4ea9-8022-f49ab7bda59e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fbcbf60f-27bb-4309-8090-8cf325205ead"
        },
        "item": {
          "id": "f85731f7-28ba-44f3-8ade-0ecf125eff30",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "477a41bb-c23e-4b21-a55d-b0bffd64621e",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "47f1b339-3481-4a00-bf53-446db752925f",
        "cursor": {
          "ref": "0245ad3a-ed8d-485e-88d2-0f8aecc19cec",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b9bac8bf-fb2f-4f3f-9c8c-df7144bba8f8"
        },
        "item": {
          "id": "47f1b339-3481-4a00-bf53-446db752925f",
          "name": "did_json"
        },
        "response": {
          "id": "f7d3dd24-9ed8-4930-b19d-863cc0eeeec9",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993dd885-bece-469c-a28c-a53f14aa90cb",
        "cursor": {
          "ref": "629d0c36-0e98-41d7-af64-4d6dfb566d07",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "accd9a18-7a08-44d1-a028-1ff38e8deb8f"
        },
        "item": {
          "id": "993dd885-bece-469c-a28c-a53f14aa90cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "883991b2-b74c-4927-8ee6-ea4e05f68f7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 448,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993dd885-bece-469c-a28c-a53f14aa90cb",
        "cursor": {
          "ref": "629d0c36-0e98-41d7-af64-4d6dfb566d07",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "accd9a18-7a08-44d1-a028-1ff38e8deb8f"
        },
        "item": {
          "id": "993dd885-bece-469c-a28c-a53f14aa90cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "883991b2-b74c-4927-8ee6-ea4e05f68f7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 448,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655bf472-079f-4e8d-83e0-012e97099ecb",
        "cursor": {
          "ref": "6ae515f5-e8c9-4e24-9dc8-cf3986ff99a4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b55cfedb-4cd7-4253-8073-a7e2396ad633"
        },
        "item": {
          "id": "655bf472-079f-4e8d-83e0-012e97099ecb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f44c5c41-a9a1-4b39-aac8-1f85297454f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ad645d-440b-4f65-b612-80c2eef947f2",
        "cursor": {
          "ref": "70b11703-3945-4a54-9f23-b303b8cf5fb6",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a0779b48-1a9a-4963-81f9-8bf3b137825d"
        },
        "item": {
          "id": "91ad645d-440b-4f65-b612-80c2eef947f2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8ba76775-0594-427e-9528-bccb5b3d5119",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecc44c6-927a-448f-83ac-157ca6ce45ff",
        "cursor": {
          "ref": "679d9d68-9194-4acc-8d6a-905565c98fbb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90d35db4-009b-4f15-bfe6-ace00617c975"
        },
        "item": {
          "id": "cecc44c6-927a-448f-83ac-157ca6ce45ff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eee0cd16-007e-4fff-9cc8-3241447771e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040794d6-e864-4fea-9bc0-6a1e007755e6",
        "cursor": {
          "ref": "e6d1adbc-eac7-4282-9c6a-960d0174aac3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f29c34e-cbe4-410d-9589-958b11b2f2ec"
        },
        "item": {
          "id": "040794d6-e864-4fea-9bc0-6a1e007755e6",
          "name": "identifiers"
        },
        "response": {
          "id": "01bb3a11-6b0b-4231-b807-a0bfba7b23a8",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a678cd5-13e5-4941-b5f7-0def998f9fde",
        "cursor": {
          "ref": "08cfd43f-993d-480a-954b-3fdfd6f6f7d8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "17b2ff98-415b-4d4c-bc1b-9d39756ad8d9"
        },
        "item": {
          "id": "1a678cd5-13e5-4941-b5f7-0def998f9fde",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "146fd06d-c2d1-41ac-bc76-46a39b28bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72c7508-dcde-4836-8126-fc946392f0f4",
        "cursor": {
          "ref": "6fc71906-4a79-4026-86d9-b925a4cede29",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85525f0d-6913-400f-8665-1ea55cb0941a"
        },
        "item": {
          "id": "b72c7508-dcde-4836-8126-fc946392f0f4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b0a1585e-509a-4fc3-ab63-b43776482edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda1943-2f30-423f-ab4b-06df7402f867",
        "cursor": {
          "ref": "f92aac23-e9c6-4315-bfeb-fe8277886b4f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5633a15f-fdb5-44cc-942d-304405748b43"
        },
        "item": {
          "id": "ccda1943-2f30-423f-ab4b-06df7402f867",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fed73d2e-e374-4b8c-a13b-8468bd5a0692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329dc055-af6a-489e-a625-ad914f043ec3",
        "cursor": {
          "ref": "64c8e5de-79d1-43db-8217-9f83532d23c6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5764582f-9db3-4f0a-bf70-5c1b6619d2a0"
        },
        "item": {
          "id": "329dc055-af6a-489e-a625-ad914f043ec3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61f688df-f0ac-466a-a7de-46e816c71e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7802ddc-323c-4de3-b654-e647c0a0db85",
        "cursor": {
          "ref": "f193dee9-15fb-48b4-9df4-b2f6adcd07f9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "94181bbf-05c1-40ba-b807-db3921ee7aa4"
        },
        "item": {
          "id": "b7802ddc-323c-4de3-b654-e647c0a0db85",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "838bc21d-732d-46a1-b881-323a5b34113b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3029a4-6675-407e-b972-fbf4bcd22ba0",
        "cursor": {
          "ref": "33d018cc-555e-486e-9f39-2cdcfc2fdf31",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cbe80644-905f-444f-9120-10f6968ae9c2"
        },
        "item": {
          "id": "ef3029a4-6675-407e-b972-fbf4bcd22ba0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c078a289-7e6c-498f-9a57-2a926b9758d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272828a-b5b3-40f5-9af1-d44242d20d6e",
        "cursor": {
          "ref": "81989b72-0e4a-4aaf-9519-e021710a4571",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7efe1dac-8b54-4d78-9fea-29122170cb68"
        },
        "item": {
          "id": "7272828a-b5b3-40f5-9af1-d44242d20d6e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "458791e4-fe2d-4044-8059-a6cf9b2ccacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07611e55-faf3-4645-978c-610b208777f1",
        "cursor": {
          "ref": "187e1b18-a84d-4e97-9e77-1c6c3baaeb8b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "03f8a2dd-b8ff-4456-a1ab-0f48c80cc154"
        },
        "item": {
          "id": "07611e55-faf3-4645-978c-610b208777f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c932f29d-8180-4831-97af-bf13c032d177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de9911b-7cb5-4891-83c2-5724621daafb",
        "cursor": {
          "ref": "3213d358-3f46-4777-8af3-aed926c4bac1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "84f0cabd-255e-4ebf-93b4-5be272f483fe"
        },
        "item": {
          "id": "8de9911b-7cb5-4891-83c2-5724621daafb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b82899f1-53ee-4682-abe0-babb04af6347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad55e39-b811-4d2f-a8ea-cdd285bbc85d",
        "cursor": {
          "ref": "4bd5a240-9bdc-40bd-8568-2faebffffeb7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d6a39aa4-3513-49b9-bd22-a4585a0c84c7"
        },
        "item": {
          "id": "4ad55e39-b811-4d2f-a8ea-cdd285bbc85d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6196df3a-a7b3-4cea-af11-7fc994ff5034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053e0d29-c714-4481-944e-a8a4e6590f47",
        "cursor": {
          "ref": "d3cf1b1f-8300-41b8-949f-f54b4acacad9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0fb60b8-0f44-4ef8-9b6d-4455776edcd2"
        },
        "item": {
          "id": "053e0d29-c714-4481-944e-a8a4e6590f47",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e979077e-3891-4450-b72c-bb3b08b6de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7217c0-f02f-4930-8dae-6a42ca2b8f09",
        "cursor": {
          "ref": "8d82e8ee-822b-425c-ba06-3cccd9701144",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "896f81ca-0660-4d66-ba2d-837fa6b09c5a"
        },
        "item": {
          "id": "ef7217c0-f02f-4930-8dae-6a42ca2b8f09",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b95b0b6-8246-40d4-8935-458d0e1b6fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c6922-8bf9-44b5-b56a-79b864367a1f",
        "cursor": {
          "ref": "6313cfd9-1a6a-42b3-9a1d-6167fb6241f8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "37caaa5e-77c4-400d-b4f2-add7d4d0dc50"
        },
        "item": {
          "id": "c99c6922-8bf9-44b5-b56a-79b864367a1f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e906f91b-5928-4a8a-a2ae-2d5b42c64273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a228f459-77a8-43cb-accc-96200923f586",
        "cursor": {
          "ref": "2506d69e-b2ac-4d47-9044-b17c43d6fa8f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8a652fae-6d6b-4c69-a173-ed46d66e2169"
        },
        "item": {
          "id": "a228f459-77a8-43cb-accc-96200923f586",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3bd3c71d-ff31-4d48-b4ba-fb970f23f435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafcc4e-e451-4d7e-9732-401ded665d67",
        "cursor": {
          "ref": "07a51d00-84aa-41e6-b267-677a5ebf67b5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ce390d4-9b57-4d1c-95a7-daad406dafd9"
        },
        "item": {
          "id": "6eafcc4e-e451-4d7e-9732-401ded665d67",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aa451677-84d9-4153-b6c1-230a2607dc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1988316b-ddda-44cc-a2a7-afbfc9d9b92a",
        "cursor": {
          "ref": "d033a587-650c-41f7-a467-d2a7d6fdf617",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb2cbdb0-a626-4357-873f-9ab4e49cc317"
        },
        "item": {
          "id": "1988316b-ddda-44cc-a2a7-afbfc9d9b92a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90a70016-559b-4c0f-a8df-da4eb67ca810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2622b2db-1e62-4294-ac75-2baa3db9cc36",
        "cursor": {
          "ref": "128293f9-82e9-4bd6-832d-ae3b7dc753e1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "083752c4-3a90-4a30-9c84-5a67c20587d5"
        },
        "item": {
          "id": "2622b2db-1e62-4294-ac75-2baa3db9cc36",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9bbeddd3-9d28-48bc-9da4-ee568a9154ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bfd60d-5246-441f-9a80-f6f80feb1a20",
        "cursor": {
          "ref": "fb55fcf3-744e-4354-845f-03271c1adcab",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db14a7f5-a20b-4b10-911f-69e9d5f8dca3"
        },
        "item": {
          "id": "c9bfd60d-5246-441f-9a80-f6f80feb1a20",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "36d41c1d-b8ff-4f41-b961-8c58e5427048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002e57e8-b391-4ac1-bb49-c9b5cd9ec95a",
        "cursor": {
          "ref": "1e45e14c-ba1c-4d52-b7e8-4e6b813a3454",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9f2d2b1f-9c8d-4770-b04e-e665394f22a1"
        },
        "item": {
          "id": "002e57e8-b391-4ac1-bb49-c9b5cd9ec95a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64403f1a-f621-4643-b943-0f3d964c08bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2966013-9e42-4860-83a0-a7c57be3d4b6",
        "cursor": {
          "ref": "6d0a9c36-e4f3-4a52-af0b-fbfe785e4389",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "38d16975-c9f0-4c9d-9bc4-86d197b30520"
        },
        "item": {
          "id": "f2966013-9e42-4860-83a0-a7c57be3d4b6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4c72da26-76d9-4120-9e25-1479a8c166f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f98c597-c911-4bca-9337-9290bc465e4f",
        "cursor": {
          "ref": "f440a78e-00a4-492f-beb2-845167558c60",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "124e4f81-8dda-4a66-9fbc-dd5e84df9e14"
        },
        "item": {
          "id": "3f98c597-c911-4bca-9337-9290bc465e4f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bb106d8c-2318-4634-97e1-e75369afd601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a61974-8f55-42b5-a3c4-d30fc0be8006",
        "cursor": {
          "ref": "30076295-4aef-4302-81ef-52c8add5f275",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d72f9a9-e1c6-407c-ab96-ffa61162ff48"
        },
        "item": {
          "id": "71a61974-8f55-42b5-a3c4-d30fc0be8006",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb0fcf85-858f-4092-ad5b-661d43cdaf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca2a0be-568d-4d77-aa1e-e7c8724466c8",
        "cursor": {
          "ref": "6672380d-00e7-48ea-9ae6-c5ff10cd6e91",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e100bf66-b634-46e1-a4b8-470f0f6fd277"
        },
        "item": {
          "id": "2ca2a0be-568d-4d77-aa1e-e7c8724466c8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "205317f0-b684-482f-a6b4-d1baab5f46e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cdbb52-5425-435e-8685-94dfeecb36ba",
        "cursor": {
          "ref": "50c5002a-ce7a-4a8b-b409-32433bfa9dc0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "204d2e1d-4508-414a-a02e-15947c1b1dff"
        },
        "item": {
          "id": "59cdbb52-5425-435e-8685-94dfeecb36ba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a41ecb7b-97d4-4bf7-9ecf-6902583429c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76360dc7-f80e-47b4-a941-17e243e4dd18",
        "cursor": {
          "ref": "8ec1be80-2eb5-4ebf-9613-4b0f79918ec8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "05e537a4-652f-43ed-a4da-c5874e80bb38"
        },
        "item": {
          "id": "76360dc7-f80e-47b4-a941-17e243e4dd18",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "36148658-5121-479d-b511-6f86173d6df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954480c4-ce4d-47de-9788-e615a80bbe83",
        "cursor": {
          "ref": "1a2fe80f-ab75-48d5-aea2-6da41351f877",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "107baab7-3204-47c6-98b7-f991870aecc7"
        },
        "item": {
          "id": "954480c4-ce4d-47de-9788-e615a80bbe83",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "37185daa-6d6b-46a3-8347-8c2389e225ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d5cae-b0c7-4cb3-a445-f1b80d9ed28e",
        "cursor": {
          "ref": "b8088dd0-9b85-470a-8ed5-662eee85beb3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "08f95c1c-7dff-4b86-a37e-6e2f66062685"
        },
        "item": {
          "id": "067d5cae-b0c7-4cb3-a445-f1b80d9ed28e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f1bcb8d5-6818-4a60-a0c3-def3e96c3daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdd185d-cde6-4e40-97ba-56ec84da8c7b",
        "cursor": {
          "ref": "d7ee7ffc-9711-4cdf-bcf3-231ecf6e3246",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8e689164-9f7a-451f-a927-8193b3738688"
        },
        "item": {
          "id": "8cdd185d-cde6-4e40-97ba-56ec84da8c7b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "576a788c-fa9a-4edd-9b44-863e7917c74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff7f12c-32b9-4eff-bc6d-993c63fb4983",
        "cursor": {
          "ref": "0e18fe5c-7584-4202-961b-b0462dca879d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59131457-142d-4802-9504-71ac6f76ed0c"
        },
        "item": {
          "id": "aff7f12c-32b9-4eff-bc6d-993c63fb4983",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6364ff1-a5ee-47c0-a76c-ad3ecc5875c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709d8a5b-f988-4fd2-8e8e-47bcd969689d",
        "cursor": {
          "ref": "918334b6-78f1-43b8-8e6d-6138f02af2b5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a3ccf1f0-8a3d-4490-8673-426b40b6313a"
        },
        "item": {
          "id": "709d8a5b-f988-4fd2-8e8e-47bcd969689d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0c44ad07-dc5b-4977-9896-ede551b38bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ba5942-d050-4d8d-adf8-c7d7c1db1d1b",
        "cursor": {
          "ref": "dfe5a3e3-47f2-47ab-b023-6373aafb60b8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af0ba03f-0fb0-4c70-964a-107443581d78"
        },
        "item": {
          "id": "b3ba5942-d050-4d8d-adf8-c7d7c1db1d1b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dc3eb892-874a-4794-b1db-89ced8ed9b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e6e84-8370-41bf-bda7-b7f67480f1be",
        "cursor": {
          "ref": "60caec0e-e1cd-4467-bfe1-77dce51252af",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "41b59e30-9df7-4323-8b2c-1343288eb5e2"
        },
        "item": {
          "id": "280e6e84-8370-41bf-bda7-b7f67480f1be",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "656ee5d3-b875-4f4e-ab5e-39d008bad938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fc2f2c-1596-4dfe-89a8-5b3af4fd3c48",
        "cursor": {
          "ref": "89a0c161-213f-449b-bb49-df98f3155fa7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed395fe5-85c1-4c29-8ceb-3ec927b210da"
        },
        "item": {
          "id": "51fc2f2c-1596-4dfe-89a8-5b3af4fd3c48",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a758d4bc-9abe-4824-bf13-f25d0bfedd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb240457-4277-453a-b9f5-fbac1c8af01f",
        "cursor": {
          "ref": "91a6e046-7586-4b0b-a563-1accc9960815",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "992e69d4-f6fe-40ed-a7a4-687830987fa7"
        },
        "item": {
          "id": "cb240457-4277-453a-b9f5-fbac1c8af01f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2f7e72de-c9b1-49b6-b554-fe38f8f8fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3813ad3-789c-4bef-9af2-3adf25cbf08c",
        "cursor": {
          "ref": "0d38f36a-f814-4efb-8b5d-2ebfd1486a4a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b2331c05-9caa-4a82-aebb-c51f47616e50"
        },
        "item": {
          "id": "d3813ad3-789c-4bef-9af2-3adf25cbf08c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9cf9df56-aef7-4bb7-a6d6-dada41269b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a5b8f4-5c2c-4034-97c3-2c3ecd894c67",
        "cursor": {
          "ref": "c8243c23-3a33-40e8-8651-dc7e7a3fad9a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "715e7144-6e35-45a6-a9dd-83082146ce91"
        },
        "item": {
          "id": "72a5b8f4-5c2c-4034-97c3-2c3ecd894c67",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5cffb165-4756-4f39-8e5d-ff6ebfb4a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aef1b0-b937-4ef2-a73b-67e5375c80ef",
        "cursor": {
          "ref": "4f8d8d73-e709-4165-9d2e-f38cd9e79f05",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1d891dd2-4bf3-4249-bba4-3e35b82ae32f"
        },
        "item": {
          "id": "e7aef1b0-b937-4ef2-a73b-67e5375c80ef",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d2b625c5-203c-44a9-bf49-3bd6d8aafe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bda678-dc01-408b-8505-f32b2e6e168f",
        "cursor": {
          "ref": "39315586-4d7d-4aa2-b88c-6a11bd120237",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8e00b36d-c3fc-450f-874e-94aa7c0cfb79"
        },
        "item": {
          "id": "08bda678-dc01-408b-8505-f32b2e6e168f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e365823b-9374-4bac-a224-fd5aaa01343f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f82aa9-267c-4cbb-9cc8-6f0179877847",
        "cursor": {
          "ref": "2d3fd966-601d-4152-921d-786f2c117aa6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7f4ebec0-9030-4e0e-92e7-e9e07eeb08d8"
        },
        "item": {
          "id": "36f82aa9-267c-4cbb-9cc8-6f0179877847",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86e21a2c-7859-4cda-b207-21fd9de35d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed111072-5976-430a-b87a-3f16eab4e4ba",
        "cursor": {
          "ref": "e10b37e4-f67f-43ee-9912-c572566767dd",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8979e873-83ea-4e08-94b0-9830982747f6"
        },
        "item": {
          "id": "ed111072-5976-430a-b87a-3f16eab4e4ba",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a7670c41-c61c-4ab0-b696-0603517e0add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d5800-6bf8-4584-9bee-03f95ef0103b",
        "cursor": {
          "ref": "3416f48a-c30e-4912-87ad-3bf3141de846",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "af0cc54b-c35b-47c3-92e1-feb2cc96514a"
        },
        "item": {
          "id": "ff1d5800-6bf8-4584-9bee-03f95ef0103b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8424a781-484e-42f7-a234-a9c3cf708e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a659e27d-1434-4d0a-a9d8-d350af7d04d9",
        "cursor": {
          "ref": "4ac8d4e4-856a-4984-8be5-59f29062d59b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ba756ce-2dbb-45d9-992b-6dad325a1578"
        },
        "item": {
          "id": "a659e27d-1434-4d0a-a9d8-d350af7d04d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "826e96b2-c188-4a79-be94-2772104e1993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154e6001-c740-4452-a4f0-e8518021c354",
        "cursor": {
          "ref": "c96a80a4-02fc-4f44-aced-7d6ee0470224",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "81c14973-5649-489e-b27d-3c23829be232"
        },
        "item": {
          "id": "154e6001-c740-4452-a4f0-e8518021c354",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02ce17c0-2dac-48c9-9406-baccd9a92791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4648a274-cb58-4d87-a059-2e3b8edb6b9b",
        "cursor": {
          "ref": "4ef83c4c-8873-47e4-a576-bb8ce5f24df8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "363c5501-5f5c-49c5-9457-6bd67e468e28"
        },
        "item": {
          "id": "4648a274-cb58-4d87-a059-2e3b8edb6b9b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2629d489-2d03-4897-8ed8-eaafdb4e6789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b12a48-5a07-4c0d-87ac-fae0243edd91",
        "cursor": {
          "ref": "643a1a58-1433-4649-9805-2e17a132cc31",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "62626be0-54ba-4703-8556-8eb8b23038b0"
        },
        "item": {
          "id": "37b12a48-5a07-4c0d-87ac-fae0243edd91",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f3210554-fb40-496e-b987-092b7f245e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8522b-ec9e-46fa-bc0b-8dcfaf251cfa",
        "cursor": {
          "ref": "36a6eee2-a4e8-4b7d-92ee-d5dbfea413da",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6458555f-20b0-4ca6-8119-ade8fb954581"
        },
        "item": {
          "id": "c6c8522b-ec9e-46fa-bc0b-8dcfaf251cfa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bf43c5fa-5d8c-4826-85d9-965502ee5fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a3cb24-dcd7-488e-a1d9-88065e4af37d",
        "cursor": {
          "ref": "b1127f52-7c05-4c1c-a4cb-1cd2c48b713b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "23abd4c3-e2cc-4cc2-9202-0dbd4c18d907"
        },
        "item": {
          "id": "87a3cb24-dcd7-488e-a1d9-88065e4af37d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6b0a5fb0-3c79-46c1-b617-7f59c9d4bb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c140ef-63c3-403a-acf3-10430ba206a1",
        "cursor": {
          "ref": "611454c3-ba57-4123-9fa6-45b8adfbed43",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fb0ef2c6-03ab-450a-9681-0b557c169fdc"
        },
        "item": {
          "id": "45c140ef-63c3-403a-acf3-10430ba206a1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "333744e3-c44a-4f6c-bbc0-e3c81068e1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fa4117-8cb0-43cb-8a2e-3f640731b0bf",
        "cursor": {
          "ref": "4bf95a79-808b-4b3f-a90d-c38209a217ad",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb6b3726-e362-4eec-917e-32f9a060e993"
        },
        "item": {
          "id": "05fa4117-8cb0-43cb-8a2e-3f640731b0bf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ab817c0b-2711-467d-8719-4f85efd874ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a2a787-7124-4667-9d74-9705afeb41f2",
        "cursor": {
          "ref": "6c516139-4e3f-475d-a7df-d0a7656ee3e8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7db9028b-2312-4391-8de3-6e8ce16289a0"
        },
        "item": {
          "id": "81a2a787-7124-4667-9d74-9705afeb41f2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8b2bde8-2402-4c53-bcf2-c4b56346f0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f3905-3fea-429b-a1e4-64ec7bbac8b0",
        "cursor": {
          "ref": "7d0477cd-fe18-46ae-92bf-e446db84b3b5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c9ce7335-199f-4184-a986-6d653af98654"
        },
        "item": {
          "id": "868f3905-3fea-429b-a1e4-64ec7bbac8b0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f2140534-1d56-4815-a6d9-401d7418e595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a29d640-86c8-467b-bd0d-8db7eacb133c",
        "cursor": {
          "ref": "5e55400c-6e71-46f2-b9e4-4c4fe2646131",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "45503a70-9873-4fd5-aeb2-18ee92ae5094"
        },
        "item": {
          "id": "9a29d640-86c8-467b-bd0d-8db7eacb133c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f5eefaf-9d69-4aae-a1a5-8848e9605757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c609ef2-e258-4f89-bb4b-264147f02bde",
        "cursor": {
          "ref": "50de072c-fae2-433b-9045-f787cf42b278",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8833a408-bf6e-4a72-b5c1-0a9503024938"
        },
        "item": {
          "id": "2c609ef2-e258-4f89-bb4b-264147f02bde",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e17d2ec-0488-4ec6-baac-4a4a2d92f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4846af-c941-4a1f-a757-28d3335bfd7d",
        "cursor": {
          "ref": "3260c602-7ed7-4f69-bbcd-3c64a436f08a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1f155148-a17e-4f31-9697-7cb31faa3481"
        },
        "item": {
          "id": "7b4846af-c941-4a1f-a757-28d3335bfd7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "16d0fa3c-c167-43f9-89a2-4cea8eefecca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871043c7-ca0d-421d-9256-38930a270fef",
        "cursor": {
          "ref": "4a33b753-c5ac-4ea4-ac23-abc0d53cdd14",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cc520ebf-741d-4ad7-8eb5-1cb560f8c6b2"
        },
        "item": {
          "id": "871043c7-ca0d-421d-9256-38930a270fef",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1dfed1eb-88e9-40bc-989c-49dd2e33543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999ad775-ab54-4e78-bda0-ff924207a048",
        "cursor": {
          "ref": "0375736b-c452-4041-8143-e6e84b3939a1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d105d74b-a825-4267-a0a6-ff3ded0d2043"
        },
        "item": {
          "id": "999ad775-ab54-4e78-bda0-ff924207a048",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c63074c5-04ae-4a73-b676-9006fcc4069a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43139290-e595-4dd6-b62a-ee416eabe144",
        "cursor": {
          "ref": "2758aae2-f849-4975-99fa-3633883f020c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b8f3cf27-bffd-47d5-9f64-0b3e0b81bc06"
        },
        "item": {
          "id": "43139290-e595-4dd6-b62a-ee416eabe144",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31ef32e0-b090-4a8d-bb45-d101ec6aeca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51e315a-7ca5-4e46-9419-2c481f7dd7fd",
        "cursor": {
          "ref": "2421bf6a-2a33-4f76-9adc-cab8d8fbed83",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f89200f6-02dd-4cff-8083-b42ab429db2c"
        },
        "item": {
          "id": "f51e315a-7ca5-4e46-9419-2c481f7dd7fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8eda4545-01ae-4eab-a63b-47d9419cc075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ef05d4-8607-429e-ab0f-c4a4d7076652",
        "cursor": {
          "ref": "5aa2c1d9-69a9-433a-94c2-6641cdf8b5c4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a04edd59-a612-45d6-a19e-e945ff22b4d2"
        },
        "item": {
          "id": "19ef05d4-8607-429e-ab0f-c4a4d7076652",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "618d181a-bd02-4eb3-807a-64b492010931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4035b364-c48c-4296-adca-da37e72c25f2",
        "cursor": {
          "ref": "fc6e67b2-ceea-4cfb-9526-daec4386a4c0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd4c3ed2-8019-42da-8195-21401fccf0a7"
        },
        "item": {
          "id": "4035b364-c48c-4296-adca-da37e72c25f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9781bde6-fdb0-4930-a280-f8fd0ca8f8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5621272-c037-499b-a699-f7277bd88272",
        "cursor": {
          "ref": "8b84bbe4-4a1b-4cea-ac8c-92996c798503",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0318be33-98e8-47d1-b3e5-a49bc5638b3e"
        },
        "item": {
          "id": "f5621272-c037-499b-a699-f7277bd88272",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0c901167-f058-4d3d-8591-cbff2e2455a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61632b67-561b-4d02-94e0-baba7406dd7a",
        "cursor": {
          "ref": "1fd9d70a-5582-4d27-8c3b-6530687c71fd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "82652da2-3708-4e25-932a-f46bc4833e06"
        },
        "item": {
          "id": "61632b67-561b-4d02-94e0-baba7406dd7a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "43785ac7-5e62-41a9-9669-657c9fb57c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a76b0-c3db-4c88-bcae-ab55694c2cb2",
        "cursor": {
          "ref": "d683ecbd-5dad-422c-abfa-628500bc18e0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "64cd86ea-7006-4829-be8a-df9af75bd20d"
        },
        "item": {
          "id": "641a76b0-c3db-4c88-bcae-ab55694c2cb2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ac2b8144-a3ce-4eba-8284-b6cfdcf6f0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3405d6-d120-4557-9f6f-44bc0663fa35",
        "cursor": {
          "ref": "73d26ee8-d5ec-4561-8b2e-53050a2321f0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2899d621-91ec-4295-98e8-a27d6e20de9e"
        },
        "item": {
          "id": "6d3405d6-d120-4557-9f6f-44bc0663fa35",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "287e0bbc-5651-4219-8cef-1b188f489207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db015f2-25de-4573-a4c8-ac2ad7638322",
        "cursor": {
          "ref": "397087a0-a994-49b9-b111-8d8e5a8452f6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "553bc63b-6180-4058-9419-23bcdeb3cf10"
        },
        "item": {
          "id": "1db015f2-25de-4573-a4c8-ac2ad7638322",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ff389380-7f22-43e2-9ad1-3015e4b4ffec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c94760-2ee8-45c3-adba-9642dbfbe3ce",
        "cursor": {
          "ref": "6a310af3-cf41-48cc-9450-fb02e6fcd89d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1cce2207-8ff0-43f2-9f9d-dff998386926"
        },
        "item": {
          "id": "b7c94760-2ee8-45c3-adba-9642dbfbe3ce",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1920339f-44e5-45ad-8a8c-8bf51feab274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff734de9-9124-4a80-ae1b-4d794aff998f",
        "cursor": {
          "ref": "1033f4c7-5082-4ef8-ba30-384abeb6b2d7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "72b6b74d-971c-45a2-9a8b-242a3dae6250"
        },
        "item": {
          "id": "ff734de9-9124-4a80-ae1b-4d794aff998f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa2e457c-4662-4b08-80bd-f278fe4e8ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed7593f-2b75-4ee2-b507-e6ce475a8163",
        "cursor": {
          "ref": "0e7c447e-76e9-4e9a-8d9d-7764e88dab2c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "503b4e5f-ac15-4f42-97a3-b6631b43fa47"
        },
        "item": {
          "id": "0ed7593f-2b75-4ee2-b507-e6ce475a8163",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7addd925-c820-476b-865e-ad1a7631b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab172e34-7f8c-4f36-8124-7a12fafbade7",
        "cursor": {
          "ref": "ce06d7f3-880d-489b-a318-e7ce42e9ff8c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4e24a8ae-19f5-4ada-bc98-8269b9bf752b"
        },
        "item": {
          "id": "ab172e34-7f8c-4f36-8124-7a12fafbade7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "53e7717e-21dd-4747-96de-f03a9aaba073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff75eff5-225c-45ce-973e-5daa3300dfd9",
        "cursor": {
          "ref": "5ce5413f-6d99-457f-a6bb-7d6b937cc49d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1f12e9af-e964-47dc-a9ab-391316babfbb"
        },
        "item": {
          "id": "ff75eff5-225c-45ce-973e-5daa3300dfd9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "39d9f5ad-73af-486f-90d9-2fc215097c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6e7ff2-cd71-40ff-b7b2-aa08490df1b4",
        "cursor": {
          "ref": "c319b09d-eb6c-4f11-a0aa-5bc54199ff03",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e1bef0b5-6547-4999-b29e-214d6f291ea2"
        },
        "item": {
          "id": "dd6e7ff2-cd71-40ff-b7b2-aa08490df1b4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9dc588d4-b6c2-47d0-9ce1-70322ff9e095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d315606-0471-4ba1-bbc8-d7b914c1e30b",
        "cursor": {
          "ref": "da542326-15d9-49eb-9606-2a02b8ed19a9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bb845072-319a-4914-8ce5-1519c200c4f9"
        },
        "item": {
          "id": "1d315606-0471-4ba1-bbc8-d7b914c1e30b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "151050a2-d5cd-49ed-b8a0-b12e52914838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b3f7a-028d-40fa-9bcb-ffc9c3e2da93",
        "cursor": {
          "ref": "38fa24de-f24e-4a2e-a4ec-62854edf584b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6580660e-7748-4207-94a8-7930c2a3abf0"
        },
        "item": {
          "id": "176b3f7a-028d-40fa-9bcb-ffc9c3e2da93",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c2f7af2e-802a-42c9-8425-e61f41814c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21a03f3-2b6b-4064-9706-749f5f0d8bcf",
        "cursor": {
          "ref": "46135ae4-44c9-4919-ae71-77dac9612523",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "59e5c4b1-512b-48ac-9491-a3b0102d0a64"
        },
        "item": {
          "id": "c21a03f3-2b6b-4064-9706-749f5f0d8bcf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3d370b49-e633-43e1-90c9-53b45ee7f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c0e0ff-48de-4c8d-95b7-05706268775d",
        "cursor": {
          "ref": "f8e9d1fd-d910-4623-bbd2-8a408720a083",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b62203b3-c80c-4dce-9228-2413cbca1223"
        },
        "item": {
          "id": "a4c0e0ff-48de-4c8d-95b7-05706268775d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "218ed03d-001f-4293-889f-446b5db62d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c76e09-45fc-4a11-9b9b-a7539d6b4a17",
        "cursor": {
          "ref": "c7fe4e5d-fdef-4f7b-ae15-9fb4d693d361",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8b8c90d6-55bf-4ce9-8144-51f611d688ac"
        },
        "item": {
          "id": "79c76e09-45fc-4a11-9b9b-a7539d6b4a17",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "83e743ce-ad1d-4251-8ed4-27b06c4962ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107cc4ef-6047-4f8d-afd7-d01c5337f0cc",
        "cursor": {
          "ref": "117dbd99-3da0-4849-9d90-dd7de97562d5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5fb01d03-c624-4402-906c-d2ac0932c81f"
        },
        "item": {
          "id": "107cc4ef-6047-4f8d-afd7-d01c5337f0cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e134f43-1f65-4bd0-9ace-8ca0c5b1943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6d2f5e-73fd-4bc6-8afd-8cfd077af2f9",
        "cursor": {
          "ref": "c0c873ab-8e22-4f15-9122-efe4e700963e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9cbe2ae5-5200-4c7e-be91-584c9452ec58"
        },
        "item": {
          "id": "fd6d2f5e-73fd-4bc6-8afd-8cfd077af2f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22492826-a98f-49ae-9922-f4c1a0929c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d88dc2-c166-40bd-b7de-9d45c4bda18d",
        "cursor": {
          "ref": "68edd61d-b202-4d71-a5fd-269eb9f1ecdb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d14ca92b-05b5-4a03-bfa2-f0b59903d58f"
        },
        "item": {
          "id": "16d88dc2-c166-40bd-b7de-9d45c4bda18d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0504c73c-7fea-4dfb-ab9e-4a983a47b07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb27952c-87c8-46e7-9e61-6b903394c853",
        "cursor": {
          "ref": "3e6adc3a-3230-482c-a851-607d5727aa1f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a978e73c-61c1-4e51-ab06-277b1eb9c3b4"
        },
        "item": {
          "id": "eb27952c-87c8-46e7-9e61-6b903394c853",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd897886-fb5e-4cc7-8596-8c91d860e251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5725f57-4481-4382-aa4c-46d971d856e8",
        "cursor": {
          "ref": "8b252c26-9bf4-4335-b014-6dcf0515bd9b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0fc37cd2-995e-4442-ac80-3ccf2efe54a5"
        },
        "item": {
          "id": "b5725f57-4481-4382-aa4c-46d971d856e8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7ed12e94-82fb-431a-8e6a-5ead71e028e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50742152-342a-4dde-860a-602c959cfd97",
        "cursor": {
          "ref": "69000318-4cf6-413c-87a9-564c23b95063",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "94112f49-1cff-45f6-863c-35527744a416"
        },
        "item": {
          "id": "50742152-342a-4dde-860a-602c959cfd97",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3aab56e0-96e8-44db-b95f-a6dd55371129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245c3940-9d2e-4f3d-a3c9-fec8149f3936",
        "cursor": {
          "ref": "257440eb-7046-42fc-9e4f-dd9e529f67e5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cebd645f-c1c3-4cfa-81c6-8802336d1884"
        },
        "item": {
          "id": "245c3940-9d2e-4f3d-a3c9-fec8149f3936",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "159bc3e1-4ec6-491f-a04b-f032341c7d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d4ec6-51c2-4a78-9ba0-648098c800e9",
        "cursor": {
          "ref": "223ea6cd-0e33-4325-bce8-eea004a98d69",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7c4eb8a4-960f-408a-b5af-809a06df3785"
        },
        "item": {
          "id": "bf8d4ec6-51c2-4a78-9ba0-648098c800e9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e2e293bb-ff1e-4897-a598-3d5c9747e447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e6fbc3-f9b1-49cf-bb0c-ab359d36cdd1",
        "cursor": {
          "ref": "526320a6-af70-4171-b903-8afa4ab340fd",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bf92a23-e2b9-4f36-b0a1-776a619a96f7"
        },
        "item": {
          "id": "f5e6fbc3-f9b1-49cf-bb0c-ab359d36cdd1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ba33f55-1f4f-4bd3-b8b4-f27aa72841b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eb5863-a037-43d9-993d-9a5673de080a",
        "cursor": {
          "ref": "9611e63c-6dc2-4cac-b966-134df7464447",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "165e7d12-16b3-4aef-8a58-1e79d3ee3899"
        },
        "item": {
          "id": "08eb5863-a037-43d9-993d-9a5673de080a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b61a7676-ffdb-4b99-8f9a-facc2aa6e979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7129890-dc9f-4fb2-8dec-26a373937097",
        "cursor": {
          "ref": "20a9977d-6f66-47c6-a9a3-1e58a04141f4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c826c244-a638-427d-8fb2-46d6d9ee1818"
        },
        "item": {
          "id": "d7129890-dc9f-4fb2-8dec-26a373937097",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01982d92-8a1b-4c4e-9fc6-2dd361c1bbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e665760e-8669-4d0d-b7f1-a262b3d15eb2",
        "cursor": {
          "ref": "8cc32a97-de13-4800-b984-75fa37d26a46",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2f3afdbc-d1c5-4c9f-aa6b-69df054537d4"
        },
        "item": {
          "id": "e665760e-8669-4d0d-b7f1-a262b3d15eb2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4a0e1203-d2c4-433c-a49e-6707dad7ab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f723aa9-eaf9-4c04-97ee-02f0b2c20251",
        "cursor": {
          "ref": "39e60107-1db6-4eb3-be7f-741353a2f918",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "27de014c-00cd-4646-9fae-307e5fe8d282"
        },
        "item": {
          "id": "6f723aa9-eaf9-4c04-97ee-02f0b2c20251",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7edbc2c7-ac3d-49d8-87e2-fcea6334094a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f12d275-b82f-48f4-af30-a58bc6a2acd1",
        "cursor": {
          "ref": "1d1552ae-de73-4993-b6d3-10f10a4d5f8d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4411aa3b-e33a-432b-b950-7a1454a0553d"
        },
        "item": {
          "id": "6f12d275-b82f-48f4-af30-a58bc6a2acd1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d8c8feb-979d-47c3-a08f-61be41c3258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec42b840-c08a-4d8e-9876-c3303be1ccf8",
        "cursor": {
          "ref": "abfbd0ca-f0fc-413b-8824-e6eb3275345b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "df4321a7-0780-4019-9efe-60d9c6d46e13"
        },
        "item": {
          "id": "ec42b840-c08a-4d8e-9876-c3303be1ccf8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c4caac11-e6fa-4cd4-aecc-bfab6b09b6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c283d5f3-0be5-42c3-9b45-bdd35f97fd35",
        "cursor": {
          "ref": "2d3008c3-f2c7-4124-9f56-117ee73cd307",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8a2a46bc-ee25-42bd-887a-af79490f205b"
        },
        "item": {
          "id": "c283d5f3-0be5-42c3-9b45-bdd35f97fd35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "521000ab-7737-4130-875e-af6523e9bde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee94204-f89a-41d5-9d45-99c41793cb36",
        "cursor": {
          "ref": "144cf08b-da72-4b99-8963-82403a05a864",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d014858d-eed6-4454-87eb-8e9482c49fa3"
        },
        "item": {
          "id": "5ee94204-f89a-41d5-9d45-99c41793cb36",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2d68dacb-8f23-445d-9bbe-02326fc5e704",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983a242-f994-41bc-b0ab-b4b602c3e495",
        "cursor": {
          "ref": "eec7bd07-4907-4778-8ce6-2cf7aff25fb1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "28d88958-ceb3-47ce-8d91-6ac47a469b54"
        },
        "item": {
          "id": "6983a242-f994-41bc-b0ab-b4b602c3e495",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3c213bd9-dce1-4d59-9069-f54b54e09aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4e242e06-4e22-4eb6-9b9f-424cbb7b5454",
        "cursor": {
          "ref": "4ab32b9f-a781-4d0d-9bb8-4e85f0e2359e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ef6e8b03-83bd-4202-a979-9463fb1f9891"
        },
        "item": {
          "id": "4e242e06-4e22-4eb6-9b9f-424cbb7b5454",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2b77263-285b-4b58-aed4-ce478f09a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8c47ba44-34ca-40bf-b4f2-371d1a4b6123",
        "cursor": {
          "ref": "fc47138e-b31f-4646-a803-e5275a5c666e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f2db1787-d7e7-401a-af46-dd9bfeefad5c"
        },
        "item": {
          "id": "8c47ba44-34ca-40bf-b4f2-371d1a4b6123",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "31ab617c-dcbe-4c83-a85d-9f2d07b9eb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6c7878ff-fb95-40e7-97be-91c25cabe6ef",
        "cursor": {
          "ref": "1003ed66-762f-4270-a131-98f5917b9166",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c426c7a4-b8a7-4039-9277-149d634364b4"
        },
        "item": {
          "id": "6c7878ff-fb95-40e7-97be-91c25cabe6ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b16d6c6d-b84f-44fc-b2e9-e26a978f126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6e4731cb-141c-40d4-bfa9-2254836ac9db",
        "cursor": {
          "ref": "8f056c04-ffb7-4cd1-ae97-1637af4f2931",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "102fb66c-7ac1-46ec-90ef-f2fdf5ad756f"
        },
        "item": {
          "id": "6e4731cb-141c-40d4-bfa9-2254836ac9db",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "926595c3-1ecf-42e6-bcff-1ad3826bc134",
          "status": "Created",
          "code": 201,
          "responseTime": 9676,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "219bd107-dbd6-4cbf-bd58-9bc76789ae66",
        "cursor": {
          "ref": "61948830-36c7-4589-a38e-26faaf232e2a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7bf05304-6225-4556-99cc-79b2af27e980"
        },
        "item": {
          "id": "219bd107-dbd6-4cbf-bd58-9bc76789ae66",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8fd1d274-53e4-4422-a14d-d3b3929e8bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "30ad1177-b4cd-4688-adcc-a6bf428d7765",
        "cursor": {
          "ref": "18df7a39-dae7-478e-8cb0-b5b23b29ec66",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dab5a2db-b93a-4a33-8fb5-d1a682af17ea"
        },
        "item": {
          "id": "30ad1177-b4cd-4688-adcc-a6bf428d7765",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f184d8fa-0ed9-4c04-ba6f-fe6acd1a8c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "907a228e-299a-4b13-832e-b8d3457c60d2",
        "cursor": {
          "ref": "0c34dedf-a1c5-438e-ba24-3a89e3c70129",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1ac119ff-6df7-4133-aa0b-1dfc337726db"
        },
        "item": {
          "id": "907a228e-299a-4b13-832e-b8d3457c60d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d4506bbb-ce91-4d1b-86d3-d320ad56b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659c4698-8f89-43d8-a344-7277265c1cb9",
        "cursor": {
          "ref": "732f210a-d206-4111-872f-fff829764ac2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86e9a259-d476-4099-8347-bfe43d839e71"
        },
        "item": {
          "id": "659c4698-8f89-43d8-a344-7277265c1cb9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dbab4b6c-5d01-49a1-bd1c-f2e99b339cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad369597-e7a0-404d-a097-23fb4d4f09ca",
        "cursor": {
          "ref": "af4c523b-764b-4b7e-a9a6-c55bbf4388c0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d6cde47-8686-43ef-97a5-86453f4747d6"
        },
        "item": {
          "id": "ad369597-e7a0-404d-a097-23fb4d4f09ca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46b6b013-5f07-4d30-a9bb-66d27cfbe865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc2b86b-8206-438f-94ce-7914184c05cb",
        "cursor": {
          "ref": "6a6c20d4-6f74-4c20-9b80-cc8d907b1b98",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3346add6-106f-4b99-b47e-ebc9f2f2bdd7"
        },
        "item": {
          "id": "cdc2b86b-8206-438f-94ce-7914184c05cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c589e97d-8269-4442-bd51-33b8c6ce40ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192478c0-dd9f-4c51-bb61-bee1447c2b53",
        "cursor": {
          "ref": "9f53d078-6a90-4ec1-909e-25a990b4f145",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "13f83cdb-9cca-4f7d-878e-c5df0a982444"
        },
        "item": {
          "id": "192478c0-dd9f-4c51-bb61-bee1447c2b53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19ba995d-45a4-4466-94f3-456596086049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a513fc94-028e-4ab5-847c-17966254a0f6",
        "cursor": {
          "ref": "f89f40d6-f9ee-4baf-a580-483e499f9d0b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c4bf6d04-7e85-4c27-966b-6cea2d65896e"
        },
        "item": {
          "id": "a513fc94-028e-4ab5-847c-17966254a0f6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "df1a4a9f-925c-4d0d-b7df-aa75272ed5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4535c126-8401-46de-bdef-8bb26a37c2e7",
        "cursor": {
          "ref": "3b8e2268-cac4-47e1-aa6d-4cf6f542181f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6655d9fd-c41f-41fc-b5e1-90f3edc86bcd"
        },
        "item": {
          "id": "4535c126-8401-46de-bdef-8bb26a37c2e7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20ba0d78-53f0-46c9-a3f1-630f4db1355b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfd401-016a-445f-83db-0d4f01f74636",
        "cursor": {
          "ref": "348fe351-528e-4cb1-9d92-60aa7aec0078",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5ea9841c-6e97-40fc-b848-ee662b1312b3"
        },
        "item": {
          "id": "16dfd401-016a-445f-83db-0d4f01f74636",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f1b202d-9068-493c-ade1-f7caa4d1cb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad12368-34b8-42ec-b247-031fe017e09d",
        "cursor": {
          "ref": "c9e13f7d-c4ef-4088-949f-af6129025e76",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b4ebbab4-afb1-4b4b-96fd-9f2187f64382"
        },
        "item": {
          "id": "0ad12368-34b8-42ec-b247-031fe017e09d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8a9ad640-ec61-40b2-9dd7-400dc5794fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a8c8a4-6849-424f-9649-32ebe2c2e493",
        "cursor": {
          "ref": "65f31d2b-8e6b-45d1-bbf0-0cc9d7f1b7db",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11e3dafe-900f-438f-9950-e22e3c51bcfb"
        },
        "item": {
          "id": "85a8c8a4-6849-424f-9649-32ebe2c2e493",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "283a1481-8d0b-4c58-9ecd-996e3fd7e01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4524d42-5789-4635-98e0-5b4fc9415ea2",
        "cursor": {
          "ref": "cf6136ac-d92c-4b6d-964d-4b05b83b647e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6ff1c937-e9b6-4c4d-b493-532001895ddc"
        },
        "item": {
          "id": "a4524d42-5789-4635-98e0-5b4fc9415ea2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4655bb7b-8f05-4be5-9340-5234fb73307c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb29dd10-26c0-4217-8f5b-b40db32e562a",
        "cursor": {
          "ref": "971f6c78-fe0b-4e02-9474-3dbd0a15f715",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "525faf7d-25ec-4bb8-b0a9-812c5311ebec"
        },
        "item": {
          "id": "bb29dd10-26c0-4217-8f5b-b40db32e562a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "286fac24-1aa0-4620-bbab-a224aed04d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2c477c-05ca-41cf-b25b-5dd33dbf2dea",
        "cursor": {
          "ref": "0d8c7a45-59bf-435e-9452-a272e7083a37",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cd937f46-2e96-49ff-9893-e794a32c244f"
        },
        "item": {
          "id": "4a2c477c-05ca-41cf-b25b-5dd33dbf2dea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "00f52cde-d257-489e-b65c-d9403c7f65f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd5eb97-a0d6-4459-b4ab-446937b314a6",
        "cursor": {
          "ref": "e5ea6628-f1b9-4ef4-8132-aacc4e1223b7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d4106d5e-df0e-4cb2-822f-05f1d5b55795"
        },
        "item": {
          "id": "4fd5eb97-a0d6-4459-b4ab-446937b314a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f2abf768-9a7f-4ad6-b688-37e4938296f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfeebc2-a58e-4085-a404-412b83d285c9",
        "cursor": {
          "ref": "a487064a-976c-46d2-8270-083e2dc7cf6d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9a2c9f42-f977-4a5a-9fe3-edfdb65844f9"
        },
        "item": {
          "id": "adfeebc2-a58e-4085-a404-412b83d285c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2660165-b1c1-4320-9203-cf47eb72610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ca2c8d-1274-407d-baa9-38256bc134f2",
        "cursor": {
          "ref": "6d2bf814-278e-47df-b6c9-17363d4065ba",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "950d0a54-cee6-4420-aa33-5cb4e4e7f545"
        },
        "item": {
          "id": "28ca2c8d-1274-407d-baa9-38256bc134f2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba7bca58-9375-412e-821a-7198ca0df98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08004703-629f-4c5f-a7d8-3d4fe841d1f4",
        "cursor": {
          "ref": "c65f2ba6-72e1-4d7c-994a-55b76bb31936",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e486459f-02a6-47c5-9e39-a143fc553074"
        },
        "item": {
          "id": "08004703-629f-4c5f-a7d8-3d4fe841d1f4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fe1bd5f-4e38-41ef-a572-5387489f8fed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c27b8120-7259-40ba-8aa2-a8ff71fa82d4",
        "cursor": {
          "ref": "a06c3a3e-8d37-46f6-877f-aec0e8a9d692",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a139f11c-2a20-4498-800a-0eef6112273e"
        },
        "item": {
          "id": "c27b8120-7259-40ba-8aa2-a8ff71fa82d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7956510b-9d6a-4526-9e02-fe9556752d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1805d11-b01a-4836-950f-24a5503c0423",
        "cursor": {
          "ref": "db10f8bb-677f-4672-be1d-79e4b4fca7d4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "109b8695-bf91-4bab-b45a-5053939240ca"
        },
        "item": {
          "id": "b1805d11-b01a-4836-950f-24a5503c0423",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1adb254a-98d0-4ad5-9716-075a717d067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8233dda-a323-4d0c-9120-2c56054e8f2f",
        "cursor": {
          "ref": "48bfb5f8-a7b9-4b16-b56b-7d9fb368ff8d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9c9b4ac5-82d1-40ea-a2fc-c65df45140c1"
        },
        "item": {
          "id": "e8233dda-a323-4d0c-9120-2c56054e8f2f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ab67868-15b6-417b-bcaf-59c394f19c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2e54c-34c8-490e-818d-71cf5d28b819",
        "cursor": {
          "ref": "41cf6176-3e94-425e-a083-216c05cc411c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a3fad232-1215-491c-a204-baac825857dc"
        },
        "item": {
          "id": "1cc2e54c-34c8-490e-818d-71cf5d28b819",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f038ad2c-df2e-4c1a-8650-c761723a8bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52322d3e-e4a8-4240-b30c-696abd7f5698",
        "cursor": {
          "ref": "58b8feb1-e65f-4c95-8cfe-09d1f7547b12",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "996d342b-8ac3-4570-a0da-8d4a769084b5"
        },
        "item": {
          "id": "52322d3e-e4a8-4240-b30c-696abd7f5698",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4f07858b-2d8d-422f-921d-2a3d6718c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70cfd95-e2ef-42a8-9042-62b98f439b28",
        "cursor": {
          "ref": "a58c0d20-cd45-412b-b4b6-e21a72198e55",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d09f3584-5c8f-4ed7-b967-95eb0ee8f14e"
        },
        "item": {
          "id": "e70cfd95-e2ef-42a8-9042-62b98f439b28",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e0de815-4be7-4de4-8421-021ef028c2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7fa287-fb82-4992-b425-9f66f8c7d7c7",
        "cursor": {
          "ref": "f065f515-2faa-4ba0-af84-f65888a56ca5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8b3e590-82e0-4494-9978-028ac35ed118"
        },
        "item": {
          "id": "ee7fa287-fb82-4992-b425-9f66f8c7d7c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f4ee5b2d-b8d5-4edb-9fef-28de29144f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9898a1c-193e-4867-b992-4a2560a4324e",
        "cursor": {
          "ref": "85beb52a-1e27-4e6f-bcd2-9bdbf414ac5f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a9c69681-50aa-4d29-aca3-5b4cd5d5298b"
        },
        "item": {
          "id": "d9898a1c-193e-4867-b992-4a2560a4324e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a72fd3d7-7e47-445b-9aea-8680bdd6bafa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c1ce03f9-cc43-4424-a026-9ba67429e6c9",
        "cursor": {
          "ref": "776f9dc7-eee6-4fda-9c32-300a122e1db0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5ca68076-4694-4126-8b78-12c16f4f5039"
        },
        "item": {
          "id": "c1ce03f9-cc43-4424-a026-9ba67429e6c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "550c1d9d-dcdf-4ccd-8679-9bf54238a0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08fad29-8e5b-4b1b-a971-ba7f955ce750",
        "cursor": {
          "ref": "b6b56a8a-fc75-457a-ac93-28f0cc869383",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5498affd-f73d-45f2-942b-5821f658f86c"
        },
        "item": {
          "id": "c08fad29-8e5b-4b1b-a971-ba7f955ce750",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "21b364a5-61d3-4885-af64-249ebdb8f6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf1ec4a-6b57-4cdd-b5dc-a5280d2a80c1",
        "cursor": {
          "ref": "072ec7f9-b2b4-4e1b-b95b-24cb9d912673",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "521a4cd8-e3ed-4e00-aa7f-cc58f0e64e21"
        },
        "item": {
          "id": "1bf1ec4a-6b57-4cdd-b5dc-a5280d2a80c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8860b2a7-5163-4271-9967-6be8a26a021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aeb5a5-d6d3-4a92-b4ce-dbd841dae9ba",
        "cursor": {
          "ref": "714c54a4-dbd6-4bdd-8b08-d29eefd7008b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1091f65c-8ae2-460b-826f-c711c1d576d9"
        },
        "item": {
          "id": "25aeb5a5-d6d3-4a92-b4ce-dbd841dae9ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "96a98ab9-fbaa-4d2f-b63e-becf184fbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53db1cfb-9eb9-4d74-ac37-6dc5d6725198",
        "cursor": {
          "ref": "55b32bd6-c79a-4ab9-b4f8-00da27ed70c1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fae4e78f-013a-4f5f-8742-fdf299e6ccc2"
        },
        "item": {
          "id": "53db1cfb-9eb9-4d74-ac37-6dc5d6725198",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19277da9-da27-40d3-add4-678ea2e6c23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9eb22d-601a-4acd-bd0c-cd4f8348926d",
        "cursor": {
          "ref": "1248950f-6216-4e56-a751-a7709b81f382",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0417e878-2703-4d94-815d-cf633583a052"
        },
        "item": {
          "id": "5f9eb22d-601a-4acd-bd0c-cd4f8348926d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d9bdc3c4-a9c1-40cc-a1c8-9dab02ba30d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45595a6-c5ec-4f0a-8699-dcdacb3372e5",
        "cursor": {
          "ref": "81660ae9-a985-46a4-96e8-7e013efc65d1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b6c921a2-a309-46cd-ae0a-0cd5778d6cec"
        },
        "item": {
          "id": "a45595a6-c5ec-4f0a-8699-dcdacb3372e5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e1f1e083-ca32-4d1a-a34e-0a3bd4feac05",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "29b637b0-635a-493a-9c48-466a63f4696f",
        "cursor": {
          "ref": "b04fa87b-48b8-4032-b2f6-7f471a1fa47a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "38f6f771-e7d1-48b0-93b3-8c018e6f797d"
        },
        "item": {
          "id": "29b637b0-635a-493a-9c48-466a63f4696f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5c39c4a1-449c-4497-aa65-201a0f4b646f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0bc8a3b7-9131-4e83-827f-cfc1ae8fedcd",
        "cursor": {
          "ref": "caa2e046-8041-478d-9168-52e69b7b2147",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c18d3da-9ab2-4e04-b0dc-fd080d2125bc"
        },
        "item": {
          "id": "0bc8a3b7-9131-4e83-827f-cfc1ae8fedcd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5316eb82-0e8a-43a3-b81c-e163815f4c69",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f95f75cf-d97c-4bd9-8a7f-f4b183b96bec",
        "cursor": {
          "ref": "35d2a644-6ea4-4c7f-b726-a4ef5b92e606",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e338730f-f05a-457e-8f22-771c72516b30"
        },
        "item": {
          "id": "f95f75cf-d97c-4bd9-8a7f-f4b183b96bec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39fe974f-3f3a-45be-bcf4-549fca3f4e98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "38f3520c-dabd-4fee-831f-98361f7f96b6",
        "cursor": {
          "ref": "333aff50-284d-4459-a041-24719216315b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fec75b91-745c-4313-a162-14bfb20c6d45"
        },
        "item": {
          "id": "38f3520c-dabd-4fee-831f-98361f7f96b6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a1f54611-aaaa-40d0-9ff8-48e2041e9755",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "32487a4c-7cfc-464b-8813-d57c8d4c86e7",
        "cursor": {
          "ref": "9dccfd67-10ab-488c-ae40-e71266838d2c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d77fc721-fa05-4036-8641-b3b661992d5c"
        },
        "item": {
          "id": "32487a4c-7cfc-464b-8813-d57c8d4c86e7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fb734d06-94e7-40af-a179-25c5c60b0952",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fdcd4986-eaee-485b-b158-27690523e288",
        "cursor": {
          "ref": "77cdb491-33e1-46ae-86f8-232d065806e3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9e88ce5c-a066-426a-ab64-f6663b7f7c62"
        },
        "item": {
          "id": "fdcd4986-eaee-485b-b158-27690523e288",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd925013-dbcc-43af-bdbd-f9318a890b51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc804743-6ae9-407f-902f-7a8f0d272237",
        "cursor": {
          "ref": "91e1618a-0c77-4460-87ca-9f85c52a4151",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3761ef19-6397-484e-8dff-9be23c639b00"
        },
        "item": {
          "id": "bc804743-6ae9-407f-902f-7a8f0d272237",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3cfbbb89-900f-452f-b3d6-3c51b5e68957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f336d-6f64-49d2-b2ea-e39845eed2d1",
        "cursor": {
          "ref": "062ff355-54a0-46dc-b601-8c80fb60d868",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "84f02984-49e8-487a-a50d-ceb20815d4bf"
        },
        "item": {
          "id": "274f336d-6f64-49d2-b2ea-e39845eed2d1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f75592da-98d1-4c4b-8d77-990114bfb895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90929a-9f1b-4fa1-8f09-3c86e90ac1d6",
        "cursor": {
          "ref": "7b45c0e0-c971-4780-b220-8a7642bbebe7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a4bd8315-6c37-411b-a5e3-5650973cb0cd"
        },
        "item": {
          "id": "af90929a-9f1b-4fa1-8f09-3c86e90ac1d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "11b3165c-8cb9-4b25-9765-177ea9d8dca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f09d074-94ba-4098-91e2-aac99ff0cc19",
        "cursor": {
          "ref": "90beb908-02fe-4273-b0c4-cb4056c6bfe1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bf43d126-480a-493f-b173-eba286781327"
        },
        "item": {
          "id": "9f09d074-94ba-4098-91e2-aac99ff0cc19",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b15da8e9-49da-4b87-913b-bbb6f609b32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9369af1-adf1-4ac7-b0d9-811afa519d12",
        "cursor": {
          "ref": "2d8b60a1-a302-4d8e-8be3-3c57c5aaabd0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bf88a102-16fa-4949-9fed-63bc47f69079"
        },
        "item": {
          "id": "a9369af1-adf1-4ac7-b0d9-811afa519d12",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "63a2f975-e528-4b8f-be42-4a4c7571d51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7776b7b-8675-469d-8508-1f09376ade81",
        "cursor": {
          "ref": "7ccd7ea5-7f3c-429c-b247-be2e80d4df1e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a04e1dab-40eb-46d6-bd75-0cd43e5e646b"
        },
        "item": {
          "id": "a7776b7b-8675-469d-8508-1f09376ade81",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4f66b2b9-22e9-40be-8d3f-7aa93f4d302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3c50ed-b199-4c65-9a48-b34084b35904",
        "cursor": {
          "ref": "0904d284-a96b-4039-92e1-53151982c9f8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d2ba3b0-41cb-44ef-a006-028ece9dad27"
        },
        "item": {
          "id": "bf3c50ed-b199-4c65-9a48-b34084b35904",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dcd9b02c-2f01-4c5d-819c-fa2a59a3d2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8ea045-6a06-4cbb-be6d-e3417850b888",
        "cursor": {
          "ref": "c2c10344-c3f1-4e12-8906-2148e3b7cb73",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b3ca329-e161-4c54-8ece-eec0c5179d06"
        },
        "item": {
          "id": "ea8ea045-6a06-4cbb-be6d-e3417850b888",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e3292d04-569a-4d24-b176-613a401b750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b761017c-e95f-434f-9202-afb05a64d950",
        "cursor": {
          "ref": "c7efc576-c7f8-4220-bbe8-81d516bf51ed",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b6c6ae8f-b3da-4f11-b3a8-baaee390dc93"
        },
        "item": {
          "id": "b761017c-e95f-434f-9202-afb05a64d950",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "94abeb51-9fe5-4425-ad46-76d5e3a82550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e4253f-0065-448e-b613-1566d0cd68e8",
        "cursor": {
          "ref": "c1dc77a4-a135-49af-877e-3f93a3a88e3c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "984e8ac3-02af-44ed-b745-100c9a2f2777"
        },
        "item": {
          "id": "61e4253f-0065-448e-b613-1566d0cd68e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "837cd033-5158-4368-810e-6312c04c1ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c95a6d1-5f40-40e8-aaca-6d553ae7a913",
        "cursor": {
          "ref": "de4e2628-0701-40e1-8f60-d21596ebb6b1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1f61ea46-25e0-4d91-a81c-6dc775102d6c"
        },
        "item": {
          "id": "2c95a6d1-5f40-40e8-aaca-6d553ae7a913",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "55aa9aa7-cbb4-4c94-8d9a-7d8821c7f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec515d0-ae2b-4f8f-8740-16cce2c9c138",
        "cursor": {
          "ref": "fc057cf9-f0cb-49e6-879c-0b8a16148ce9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cf092a2f-4fea-420e-9a9e-6f9df9a32f55"
        },
        "item": {
          "id": "cec515d0-ae2b-4f8f-8740-16cce2c9c138",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e0dc4c8b-16c4-48e8-a7a9-9cc1e7783a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13b55b-ceb9-4bff-92ee-2e60a5ea28b7",
        "cursor": {
          "ref": "0b87bbfd-1e32-41f1-afe3-fc21abecabed",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0a4ae9c-5e96-4f8f-8fc2-5a20cbd680be"
        },
        "item": {
          "id": "4d13b55b-ceb9-4bff-92ee-2e60a5ea28b7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "99f60715-78c2-484d-be43-e5db1b394441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3f12e0-b4e3-44f0-8338-5e929ac40c43",
        "cursor": {
          "ref": "98f8c4c5-d08a-4050-b5e9-012ec1055139",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4def86e0-16e6-4bed-a99a-b063f2e5078f"
        },
        "item": {
          "id": "9d3f12e0-b4e3-44f0-8338-5e929ac40c43",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "47cb3ce4-2206-4b3a-a3a5-6c89127ed65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3061c2e-d861-4bf7-9c87-b9a34daf83c1",
        "cursor": {
          "ref": "da96c7f3-5116-4f2b-823f-7dace25fa982",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7858d310-cc37-48c7-a134-1d413d58b8b4"
        },
        "item": {
          "id": "f3061c2e-d861-4bf7-9c87-b9a34daf83c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e8e3c1f8-1b72-46cd-a5bf-7b6e8b628f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4887356-a5d5-4b5e-9ff0-d09d3556f7f7",
        "cursor": {
          "ref": "3be41944-faae-481e-a4af-7d96f0b34d50",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "31b18e74-e916-4122-ad32-c470f5fcd42a"
        },
        "item": {
          "id": "c4887356-a5d5-4b5e-9ff0-d09d3556f7f7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4ddd37d9-b287-4cf3-8af7-cb48b4084ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db2203f-5830-42c3-816b-979bbe546d36",
        "cursor": {
          "ref": "421b7dbc-887a-4fe6-a9c4-27710dcb32a6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e71ff54-5cb6-488b-8d00-8d6894cd2938"
        },
        "item": {
          "id": "3db2203f-5830-42c3-816b-979bbe546d36",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76c30fb9-1d6c-4c00-ba7e-dbd493c9d4db",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a54851af-051d-4e1c-bad7-525af06c0663",
        "cursor": {
          "ref": "5395a0d3-21e7-4d44-b24f-fc1a181d7341",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "23287bee-3e34-4924-9272-b0bad7b0f7e7"
        },
        "item": {
          "id": "a54851af-051d-4e1c-bad7-525af06c0663",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a4511dd-d64b-4098-8882-40d528035901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a007639-f064-4c7e-819a-1a5201059011",
        "cursor": {
          "ref": "35a2b7c6-6625-41c6-968f-6e60b4c1ca58",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "223d644b-b8b1-4127-bd8f-8f9fd10cc5d3"
        },
        "item": {
          "id": "5a007639-f064-4c7e-819a-1a5201059011",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e953bacd-bdad-48d8-be99-ca76f2e8466c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbdec88-c896-4e72-9317-990d1319e53e",
        "cursor": {
          "ref": "27f9c5c1-b79a-431a-a4bc-9e65be0dbf74",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9246899-4871-4fb0-9861-b40587fbab6e"
        },
        "item": {
          "id": "9fbdec88-c896-4e72-9317-990d1319e53e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9eeb7aac-6e06-4122-9064-82b7ea56adb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a689d6b-7cea-435c-bf41-2cf6aa0d1b36",
        "cursor": {
          "ref": "0a419b46-a874-4ccc-b450-dc8f098d3341",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bfa7fb19-c101-4ea0-8f5e-bed9224b0027"
        },
        "item": {
          "id": "7a689d6b-7cea-435c-bf41-2cf6aa0d1b36",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "48d91455-ffd1-4ea7-b5d6-b7fc9bcd473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4cb5fd-b2eb-4adc-b4b9-2f5363d04df4",
        "cursor": {
          "ref": "8d5f3510-4d49-4136-8609-356b03ead90a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2c3a0e2d-21ce-4bf5-a090-7e3167e460b3"
        },
        "item": {
          "id": "5a4cb5fd-b2eb-4adc-b4b9-2f5363d04df4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f29b8f05-86fc-49e6-bf13-44b2fa674449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61cb68e-6ce6-4682-a4e8-44ce6869eedb",
        "cursor": {
          "ref": "fac076a1-7bdd-4ec1-8308-673856bdbee8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2a54ae84-cfbd-430c-9e39-93fcc3ea06c5"
        },
        "item": {
          "id": "e61cb68e-6ce6-4682-a4e8-44ce6869eedb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "521669d9-1d42-49af-9fc5-87d1f7b3b40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf94c9f-2ae0-4b57-a43a-d63f4421c831",
        "cursor": {
          "ref": "1c9707b9-6440-474e-a755-20c1187efd34",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "07e520f0-368f-46dd-bfc3-29d207884466"
        },
        "item": {
          "id": "edf94c9f-2ae0-4b57-a43a-d63f4421c831",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e5d097fc-6222-4940-b128-a8c27bcd322a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc90fb7-b483-4d57-b6b9-eee8a8004f1e",
        "cursor": {
          "ref": "63a0ca2a-ebef-48cb-a832-1e4e1719623b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4b697b60-0e1b-4288-b350-348676986821"
        },
        "item": {
          "id": "5dc90fb7-b483-4d57-b6b9-eee8a8004f1e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1baa2f90-eb11-4319-85b8-0ae5ced2a1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeb0bb3-949c-4fe5-9c55-aa16232065cf",
        "cursor": {
          "ref": "8395bb47-adf2-4b6d-9021-91e9d2e4127f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4ea645cc-82ce-48f0-a135-04b2acaf4679"
        },
        "item": {
          "id": "9aeb0bb3-949c-4fe5-9c55-aa16232065cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e8ee22ef-aad7-44da-9405-5a1ca06dc2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74b467-870a-404a-b50a-f61a241be552",
        "cursor": {
          "ref": "f2e20070-0f4c-40a2-befa-123ef7911739",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b21261e4-3b6d-48d0-8936-be5b90e5663e"
        },
        "item": {
          "id": "0e74b467-870a-404a-b50a-f61a241be552",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "018c0a4b-d55c-49bc-a1da-c0b074f9a0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e0ffc3-f98c-4271-8652-8b51b0c66b19",
        "cursor": {
          "ref": "22732506-dea8-42a9-8bdd-89911a5cd8db",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "af109822-4a30-4246-acb9-4179cca93a22"
        },
        "item": {
          "id": "01e0ffc3-f98c-4271-8652-8b51b0c66b19",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "85b76c8b-5098-4e05-8038-979e8a0b1d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f266c545-1433-4f7a-af6d-c9454f31bae6",
        "cursor": {
          "ref": "3215851d-b7ea-4fb0-9d2d-1cbfff49ec10",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5412c167-1456-490f-baa7-b032f411e16d"
        },
        "item": {
          "id": "f266c545-1433-4f7a-af6d-c9454f31bae6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3f038de1-3660-45e0-a8bd-a8619ea12b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae616c-739d-4d5d-8914-852af91a350e",
        "cursor": {
          "ref": "bc1559d4-67f7-4ab1-b140-4e3ede59958e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c507caf5-0811-4bc7-b241-675e32cdf0f1"
        },
        "item": {
          "id": "6eae616c-739d-4d5d-8914-852af91a350e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cd297266-adc3-4e36-a44f-3fa464f279f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169502a6-2b5c-46d0-aa6a-98ef8e38a4ba",
        "cursor": {
          "ref": "a696c2c5-7348-4cc8-80f2-76b05d788b47",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "425857f9-1cd9-408d-a0b4-d940c4a4f418"
        },
        "item": {
          "id": "169502a6-2b5c-46d0-aa6a-98ef8e38a4ba",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da535b75-a7f4-423b-9b2d-b6737e8ad7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f4d6b-8abc-426a-9d6f-2b05f5187c1f",
        "cursor": {
          "ref": "eaaa2202-3139-47ea-b5ad-bded8ad40ffe",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6100d4d6-09a3-44dc-9ee8-8141cb5aea5c"
        },
        "item": {
          "id": "b39f4d6b-8abc-426a-9d6f-2b05f5187c1f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cdd1a479-3623-4b3a-9b13-e00600c236e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353164d0-776d-4ba6-a3e4-bdd566bf596e",
        "cursor": {
          "ref": "b0330f1f-499d-45b3-b055-505026ea3162",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16f56868-1f31-4af4-966d-5f873a7dbcc5"
        },
        "item": {
          "id": "353164d0-776d-4ba6-a3e4-bdd566bf596e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "60e21ea2-970e-45d0-a1d2-3fd5c8060db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53008e6-4b2a-4b01-b64b-1df40b8e126d",
        "cursor": {
          "ref": "a8edfdfd-8d84-4bf0-a046-ecbade0bfe4d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b332643d-fec0-4648-94a6-9898778c9716"
        },
        "item": {
          "id": "c53008e6-4b2a-4b01-b64b-1df40b8e126d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b8aa811-63c1-4b51-a574-0223ca654028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7d7b82-4742-4091-b2a2-2ea94fed8b4d",
        "cursor": {
          "ref": "2e766f7c-ceda-4046-9beb-b41497058e2f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5e49ecae-5712-4d62-838d-d20174a00b1f"
        },
        "item": {
          "id": "cf7d7b82-4742-4091-b2a2-2ea94fed8b4d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "369a925d-d721-4309-be33-cb79901daeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724ab49e-f082-4446-b44a-6256823d001b",
        "cursor": {
          "ref": "0690451a-407b-4fd6-a692-92afa1e24417",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9c624ccd-6c8b-4106-8c89-8cddda5a0793"
        },
        "item": {
          "id": "724ab49e-f082-4446-b44a-6256823d001b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "952c2f2f-1856-4e72-b0cb-c95e4eab1a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065f845d-cad0-41dd-9d43-631241089939",
        "cursor": {
          "ref": "1efb6430-cd86-4945-94b1-dd15e29bb399",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "89cdd3d9-9ad2-4d2f-9679-94b64f341650"
        },
        "item": {
          "id": "065f845d-cad0-41dd-9d43-631241089939",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a2607306-796c-4193-b2ba-fea94f3e370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc6db3c-0436-4a15-b1f4-bb2fc228cc5a",
        "cursor": {
          "ref": "927eb2b3-9773-4be8-897d-200320f38b14",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "045484d0-6e7f-4af7-a521-5df02c027ca4"
        },
        "item": {
          "id": "2bc6db3c-0436-4a15-b1f4-bb2fc228cc5a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b2ba6625-4c8e-4594-bf59-39ea66ea963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11174ed-452e-4f93-b430-3933cb22cb9e",
        "cursor": {
          "ref": "84bad9ec-1df6-4884-b0f1-5b61a88c70fe",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a0ebaf5f-20fb-4be2-a5a3-85fef4e23108"
        },
        "item": {
          "id": "a11174ed-452e-4f93-b430-3933cb22cb9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "11721920-b536-4e4d-b61b-a0acaf4994a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d026f1-5eca-4af9-bf84-641e17ebf9d2",
        "cursor": {
          "ref": "0291e3eb-b43d-4d1a-b98f-265a8763a247",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fb355a02-a926-4da7-8a9e-e8c437bfa703"
        },
        "item": {
          "id": "36d026f1-5eca-4af9-bf84-641e17ebf9d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b9975b6-9c91-4f8f-b78b-b8a4a2714ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee2db6-abcd-4e3a-9eab-d904e019116c",
        "cursor": {
          "ref": "8c8870dd-3486-4bcf-a558-2302a78a3f1a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ecee89eb-9c96-4848-b453-40bd93559d4b"
        },
        "item": {
          "id": "b4ee2db6-abcd-4e3a-9eab-d904e019116c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bcb208f2-ec16-4749-86e2-5a273bde108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b19476-df17-4c95-a17a-d5f36d1a21cc",
        "cursor": {
          "ref": "e8fa548d-087c-42ba-a68f-7c16dbc08177",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "611369f2-a9a5-49ba-8e09-6f62094c465d"
        },
        "item": {
          "id": "a5b19476-df17-4c95-a17a-d5f36d1a21cc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fa109662-889b-4e9f-a7a4-2b2d6e531f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6b5cc-9973-49cc-821a-c18157148dda",
        "cursor": {
          "ref": "e4eb9409-81ab-48e7-bc7e-a49620119ddf",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec83af9f-7bd7-4bf5-8b92-217c68136219"
        },
        "item": {
          "id": "30a6b5cc-9973-49cc-821a-c18157148dda",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "17197619-d6c5-406a-8daa-41ad72d34c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2328a893-aa35-4a2f-a6cf-ec1323d2976b",
        "cursor": {
          "ref": "aecdf5f4-a7ac-4f91-9f39-09134b23457d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8521489d-a787-4476-982b-7bb366e33a8b"
        },
        "item": {
          "id": "2328a893-aa35-4a2f-a6cf-ec1323d2976b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60182b7b-cd0c-4008-8423-7814d59a8c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6332ac84-e361-4783-8e08-831646be7c72",
        "cursor": {
          "ref": "e9d05566-44ec-4f09-b44e-bb35717a3a6e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a28112d9-5dac-42db-bfc2-5978319656f9"
        },
        "item": {
          "id": "6332ac84-e361-4783-8e08-831646be7c72",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a4e7d16-369d-485b-89ba-ef17a74aaf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5fb38c-1b30-4d57-b5c7-2ea69938f851",
        "cursor": {
          "ref": "89a6cad0-47f7-47b1-8722-6f01344b94b6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "242c341e-7eb7-47d9-9bdf-13ac94bb074a"
        },
        "item": {
          "id": "2d5fb38c-1b30-4d57-b5c7-2ea69938f851",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d75573d8-d601-4755-bc74-5cfbb305ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951419b-662a-4778-90f3-ecd9ffb46cfe",
        "cursor": {
          "ref": "fb1f5d9d-86f7-47a8-b219-4dc4b0b11923",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6d62a9cc-6ee5-4fe3-9854-aff4d2711eca"
        },
        "item": {
          "id": "8951419b-662a-4778-90f3-ecd9ffb46cfe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d32109a7-f076-4c75-acfb-f216a2ba0419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b0557-bdfa-46c0-b3b5-3e4d6048383c",
        "cursor": {
          "ref": "c43b634a-6993-41bb-b0e2-2a2f0ff2fd7f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8c1bdb70-bda3-45ac-aab9-1598cef526fe"
        },
        "item": {
          "id": "ed6b0557-bdfa-46c0-b3b5-3e4d6048383c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "360111ac-07ba-4496-b577-596571c47c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88713a90-99dd-4edd-9cd0-35a00fa45411",
        "cursor": {
          "ref": "43f2ab03-3c1d-4019-8e93-12e9e1eef1c9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ed31898-947c-4186-a185-f62d22b942e0"
        },
        "item": {
          "id": "88713a90-99dd-4edd-9cd0-35a00fa45411",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49bb1946-2e8b-499d-aed4-77f43c610989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d56871-bf34-4382-97b5-6dfa0561bf87",
        "cursor": {
          "ref": "8a4d7535-0ee3-4733-af12-5d899a0cf55f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e21139de-8243-4032-8627-7c8675b142a4"
        },
        "item": {
          "id": "17d56871-bf34-4382-97b5-6dfa0561bf87",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d7118693-198e-4c78-a92b-3f3211fa4b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e027bd-819f-4faf-b8cf-be98c41fef74",
        "cursor": {
          "ref": "d0bdce94-4413-411b-b3dd-db253fdef664",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc27e801-8fb8-4700-8b69-96042635c711"
        },
        "item": {
          "id": "92e027bd-819f-4faf-b8cf-be98c41fef74",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c8438d09-2522-454c-aad6-880f7a32df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3a846c-265e-4bf5-85c4-9b795d058379",
        "cursor": {
          "ref": "f31f5462-5af5-4f91-b0d0-9c916de0d178",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fbf53157-124f-4935-894b-4a5fafbeea45"
        },
        "item": {
          "id": "9a3a846c-265e-4bf5-85c4-9b795d058379",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d0e5cbc3-40e7-4116-bbc3-02d203d84b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb2a1ca-a858-4b8a-b9c7-8b63d38c89bd",
        "cursor": {
          "ref": "de35acb2-3181-4065-96be-ae0ed6373452",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "450c0f90-8826-4c23-8e23-3571369746fe"
        },
        "item": {
          "id": "2bb2a1ca-a858-4b8a-b9c7-8b63d38c89bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cd4f067d-6dda-4c09-8b80-da705e1eba8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89276466-2f72-4d1b-9e87-c9043950d77b",
        "cursor": {
          "ref": "78864229-56bd-4899-9cec-56f34dad6c8a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "03ecce8f-7587-423d-b80a-e929aa1ab7c0"
        },
        "item": {
          "id": "89276466-2f72-4d1b-9e87-c9043950d77b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8b59e15f-4a2c-4258-8bee-d7e1b8af9b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73b5ae-7a51-4f81-a4e5-bef0d0d5b737",
        "cursor": {
          "ref": "f7c08aac-5a8e-4eeb-b81c-45f6e9fecea8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd05b350-2df5-4d6f-b876-1ade0bf3b59c"
        },
        "item": {
          "id": "ce73b5ae-7a51-4f81-a4e5-bef0d0d5b737",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9e03edcb-b9cb-4ee4-9b22-1357292d0c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86671f48-5138-4a81-aa40-ee896454ae1d",
        "cursor": {
          "ref": "28a0b05a-fae9-4e61-8f4e-8624bc6c4fa5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e71182bc-6eb6-4a0e-aabc-fd8e652db151"
        },
        "item": {
          "id": "86671f48-5138-4a81-aa40-ee896454ae1d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e26bfe06-3b56-4b26-aa79-3edd3f55e406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4441a24a-d2e4-4a0c-9e5b-7f44bbc33a12",
        "cursor": {
          "ref": "48bea3cd-ff55-4cdc-9a85-4216f4351745",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "30348089-2971-48e6-9063-8de1fd4a7af7"
        },
        "item": {
          "id": "4441a24a-d2e4-4a0c-9e5b-7f44bbc33a12",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "58475a7e-d89b-42de-98ae-5d1eed89beb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b963834-fab0-4e97-99eb-953afa3259af",
        "cursor": {
          "ref": "8f1b75c4-09be-48fa-a00b-9a50f68c1d7a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "34733925-56ba-4464-9686-4805485ff370"
        },
        "item": {
          "id": "8b963834-fab0-4e97-99eb-953afa3259af",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6601dd56-096e-434e-8373-2fcf0042bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806b3919-96fb-48ba-8dc7-dc0915fb92aa",
        "cursor": {
          "ref": "066aa092-f300-4b16-ae40-54c78c9dcd67",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "64e0ce35-63bf-4ba3-a098-a84b862b84ea"
        },
        "item": {
          "id": "806b3919-96fb-48ba-8dc7-dc0915fb92aa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d31772de-ff18-4efe-a5cb-fdd45621fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ede23e-fa2a-4f1a-b2e1-9ed85dc32230",
        "cursor": {
          "ref": "475244fc-cff2-4890-a277-f400794c2e2c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a654d05c-fbc8-45d4-a2a2-2a1a7bd38c50"
        },
        "item": {
          "id": "f3ede23e-fa2a-4f1a-b2e1-9ed85dc32230",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c2a4c5b-5467-4455-9ef3-3a7eba1d2513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4e3835-67ae-44b2-b180-a6cbad157ff9",
        "cursor": {
          "ref": "4d048554-ccd3-4e9f-ab8e-9bf83525f781",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "499fe079-361b-485f-b32a-c30b8bef65aa"
        },
        "item": {
          "id": "cf4e3835-67ae-44b2-b180-a6cbad157ff9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "967348f3-f2e3-42a8-a09b-3177c60e3a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59fb4d7-c6d4-4665-81a7-66db6f9ef530",
        "cursor": {
          "ref": "bdbee91c-80a1-44d5-83df-056118cebfb4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b1bed0bc-8fae-4705-a2a0-332e5604b56e"
        },
        "item": {
          "id": "e59fb4d7-c6d4-4665-81a7-66db6f9ef530",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "573866d9-0d87-406a-a17b-f832b16b33fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b095b2c-1496-4a67-bae2-32ec854ee625",
        "cursor": {
          "ref": "243d0e53-4210-4dce-90db-ff08d3544659",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce55021a-b7d9-4028-baeb-509ef8d4ffc2"
        },
        "item": {
          "id": "6b095b2c-1496-4a67-bae2-32ec854ee625",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "371cc6db-a12f-4543-8cd9-a4bd65b285fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b89820-714b-4b49-81b8-506e3bdfe58a",
        "cursor": {
          "ref": "b5488f47-7db6-42f1-b5ad-e0a400c764ab",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b0fa406c-164c-43f1-bcd5-033599681261"
        },
        "item": {
          "id": "f4b89820-714b-4b49-81b8-506e3bdfe58a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7022d079-4b27-485c-ab7a-41f85f169de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d82b9-6c72-456b-8e1f-0db547a04867",
        "cursor": {
          "ref": "196be366-b8d3-46e0-9a88-909c6e41100d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "044c3522-22bc-48eb-8082-95da8be389c1"
        },
        "item": {
          "id": "b94d82b9-6c72-456b-8e1f-0db547a04867",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "83f7d92e-33c8-47d1-bb42-24926fb1faae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bf4d4d-7ae7-453b-ae5c-1611e33bb64b",
        "cursor": {
          "ref": "e6bd09bf-2577-4677-86a0-bf55db3a4e6c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bd98ce0d-9fcf-4b21-babf-880bc1068d1c"
        },
        "item": {
          "id": "53bf4d4d-7ae7-453b-ae5c-1611e33bb64b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4ff3d29e-7bcf-472a-b0d4-16b3678eeca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbae0c21-8279-43d4-9597-0bb1af981ac7",
        "cursor": {
          "ref": "593451de-983c-452c-8149-c1a03586d4f4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "883d4702-8fe7-4e11-98b0-32b9f3b2a54b"
        },
        "item": {
          "id": "bbae0c21-8279-43d4-9597-0bb1af981ac7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "abb15a41-335e-49b6-9e04-b6d3a62e3183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0282f434-794e-4a12-bc50-36cc6734170d",
        "cursor": {
          "ref": "b608ebad-f3ef-424b-bbb8-13043db9295d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e59c7c4a-03fd-47ad-92c5-e35fbd3583bb"
        },
        "item": {
          "id": "0282f434-794e-4a12-bc50-36cc6734170d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "396cb9a1-e356-4edc-9d78-282b4fbb29e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce4ea2a-9e87-4ff0-99d0-1035353309b4",
        "cursor": {
          "ref": "fcd84a06-7104-4d7a-981e-1c726f6f522f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "726326a3-31f2-4c1d-ad90-d050ef6623ba"
        },
        "item": {
          "id": "cce4ea2a-9e87-4ff0-99d0-1035353309b4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e95fe3ac-900a-4ca6-9c0b-73c96170a066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7266b6-1aa1-4bba-9892-d24d11072584",
        "cursor": {
          "ref": "36e45e5d-2f75-468d-867c-1c76aaf15270",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3b7592f-e0f4-4306-9608-ac9a2675cbe3"
        },
        "item": {
          "id": "af7266b6-1aa1-4bba-9892-d24d11072584",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fcab14ba-8430-4919-b39a-899d566854a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acfd555-8833-4480-9d3e-ef81cfac3609",
        "cursor": {
          "ref": "80759945-b823-4f0f-95cc-8e3e8582a9df",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7da056dc-0e32-4f71-b5ae-06dfcb4d8eb6"
        },
        "item": {
          "id": "1acfd555-8833-4480-9d3e-ef81cfac3609",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe4e6776-c3a1-4214-b240-cbf721097a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abeea3d-8c1c-4190-a838-23c400a7beab",
        "cursor": {
          "ref": "7c345475-21b0-45d6-b285-b5f0834c882b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "74a2cdfb-b29f-4d66-8a37-3fbeb7c5a751"
        },
        "item": {
          "id": "9abeea3d-8c1c-4190-a838-23c400a7beab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "be6323d7-62b2-47b8-949f-de879983fd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f0a88d-7bec-457b-a027-e3b1c0aa7bfd",
        "cursor": {
          "ref": "6e118af4-a52c-4347-96dd-50b8191e0131",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dea489de-ba2c-4aec-8377-2b7d14b47631"
        },
        "item": {
          "id": "f3f0a88d-7bec-457b-a027-e3b1c0aa7bfd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "80a186e4-8b76-4085-b03b-ca616c922059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7101cef-bac2-4d3a-841b-fdd01f19512d",
        "cursor": {
          "ref": "bb6fea06-3790-4b8a-bc79-f77ebbb23bd7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9eaa84f2-2f42-4fa3-b74f-fb8c7901d998"
        },
        "item": {
          "id": "d7101cef-bac2-4d3a-841b-fdd01f19512d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c211f40d-af1f-49c1-9a2d-4bc38ad2cf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e892f-6169-4a8a-bd66-dcc94faab615",
        "cursor": {
          "ref": "4580cda0-f601-4e56-88fc-0ea509c6809d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4ff8e645-8918-4dc2-96fa-dfbc98700477"
        },
        "item": {
          "id": "b77e892f-6169-4a8a-bd66-dcc94faab615",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a249e27-b552-4c05-aeb2-ab9b2283f858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3900983e-3657-4942-aed2-7dc7da7c4bdb",
        "cursor": {
          "ref": "a3462fff-31a3-4796-bf9c-3f5c0542c510",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "69cea2b3-06bc-42eb-bbd1-9cb77756ce7c"
        },
        "item": {
          "id": "3900983e-3657-4942-aed2-7dc7da7c4bdb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d4b2a0ec-0068-44b7-a1dc-a9efd38c0826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a122ba5-e401-411e-9898-bd11aa1ba01e",
        "cursor": {
          "ref": "f8d524a9-23d5-457c-bad9-9cfd76b76b2c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4aa7cdef-77be-4aaf-9fe2-40b0b4e4ae77"
        },
        "item": {
          "id": "6a122ba5-e401-411e-9898-bd11aa1ba01e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "497bbeaa-89dc-427f-bbc3-3a84d33f5aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e555e3-58af-47f8-afc1-9ca5913e3c3a",
        "cursor": {
          "ref": "0e30894c-00f6-411a-adc1-e8979676c714",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "72c5c2ca-8eb7-438d-80f7-81fc707d38a4"
        },
        "item": {
          "id": "39e555e3-58af-47f8-afc1-9ca5913e3c3a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "73b87ad1-6dc9-47eb-8877-e4ed1089a678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de9470-967b-457f-b423-58b07614b729",
        "cursor": {
          "ref": "34c830c8-acce-4aed-89d0-818cd3df1ea0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "22f9ed18-3e72-4a94-bc6c-8be91273c3cc"
        },
        "item": {
          "id": "37de9470-967b-457f-b423-58b07614b729",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b0314320-6e0d-4e2c-93ae-5da458924d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f0ea5-bb6f-467a-87f2-15502a9f972f",
        "cursor": {
          "ref": "3f20b41d-83c9-4227-aabb-ed04c442cdf0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "92ba171b-ff89-4025-a586-3fe8beefff31"
        },
        "item": {
          "id": "cd9f0ea5-bb6f-467a-87f2-15502a9f972f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "96dd5c38-ca37-4d66-9be3-7ae70582f988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fac7f7-f028-454f-bf54-3821b80c5f3a",
        "cursor": {
          "ref": "3e06e129-b3df-4edb-9aff-e73bdc838c7b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0ef9df7d-33e7-47a2-918f-455de657572f"
        },
        "item": {
          "id": "01fac7f7-f028-454f-bf54-3821b80c5f3a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8f794a6d-c44f-445a-8cd6-004827d10b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb32dcf-df11-4ea4-b510-892a8ca98c69",
        "cursor": {
          "ref": "0163dfd3-f586-4f96-9806-3509be6f6a69",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "28c73e23-1a41-43d8-ab3b-d9acb6cf433c"
        },
        "item": {
          "id": "abb32dcf-df11-4ea4-b510-892a8ca98c69",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a89797cc-ff58-4f84-8354-3b924aef2233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7d1b81-ec31-4a0e-ab23-875ea7a50b50",
        "cursor": {
          "ref": "38046122-f936-47dc-ac57-b8edb93be351",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa2fa83d-41ec-490c-a8b7-c158c4022e68"
        },
        "item": {
          "id": "df7d1b81-ec31-4a0e-ab23-875ea7a50b50",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6f58ef7f-7151-422d-abb5-1ea836999486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80576907-717a-4a89-abef-e005f6d50b0d",
        "cursor": {
          "ref": "1b66a96b-434c-4ada-9c6c-c8622eb012ef",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1c83dd0f-3f0d-416d-99b2-025dfc4a90d9"
        },
        "item": {
          "id": "80576907-717a-4a89-abef-e005f6d50b0d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bbe444da-dbd1-49bf-826c-041918c01cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cfbccc-d5d3-400e-8b60-6e6e2fabc4d1",
        "cursor": {
          "ref": "ca76e47c-04e2-4ec4-8e4b-65b5affff610",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "84b0a7f6-34f6-4d05-bea8-fdb04422b5b5"
        },
        "item": {
          "id": "96cfbccc-d5d3-400e-8b60-6e6e2fabc4d1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4facd854-0409-4001-844f-9428406d09d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d36be-52d2-466f-ac2c-d388c1c7a1df",
        "cursor": {
          "ref": "c43ef0b8-1d72-46eb-81da-8e9c21d392eb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2bd2be25-a0f1-4ba0-9e1b-5ccc3b00506e"
        },
        "item": {
          "id": "977d36be-52d2-466f-ac2c-d388c1c7a1df",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "637ad568-8db9-4207-91fa-2565106d3f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81614e76-58f1-41c1-aea8-ac2ffe269dc6",
        "cursor": {
          "ref": "99723ebf-b705-4aec-a80c-445ef6ea3fee",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d81d437c-b243-41a2-8986-f63c9623815d"
        },
        "item": {
          "id": "81614e76-58f1-41c1-aea8-ac2ffe269dc6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9861909c-2afe-41ee-a7b7-0d381a58ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da03a263-cc6a-422d-ace0-8b7879f05ae4",
        "cursor": {
          "ref": "4137b1e4-1b71-4078-8a5e-159560e237b4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "080532a1-254d-41dd-949d-137b2cf0cdd5"
        },
        "item": {
          "id": "da03a263-cc6a-422d-ace0-8b7879f05ae4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7d349e79-6a22-4e49-b8be-dabc7c534ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8958f5b-f382-470a-8f7a-760b5fdd5f83",
        "cursor": {
          "ref": "3ebf8006-5326-4e59-8ce0-f52aa2ef6c63",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5e61d317-bed2-48b9-863a-31e6c1a85a23"
        },
        "item": {
          "id": "b8958f5b-f382-470a-8f7a-760b5fdd5f83",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c4c0733d-ee0e-47d0-a3f1-dda26a2fe9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ffd9d-af93-4a6c-be3d-5270d23d9d2c",
        "cursor": {
          "ref": "1b3d344c-0dfd-4c0a-974f-078e2a06ee69",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "67b59f6a-9b2e-4a06-bcfb-60da2f45bcaf"
        },
        "item": {
          "id": "ba8ffd9d-af93-4a6c-be3d-5270d23d9d2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7b58b1b6-25c5-48e6-aac4-fd6063430463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a3983b-4061-4d64-8da1-ecbabdc722f7",
        "cursor": {
          "ref": "f62bc248-b3a5-4847-b234-cb47f2c23aa7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "be48cdda-f3fd-43f0-9620-c6a5d8815e88"
        },
        "item": {
          "id": "b3a3983b-4061-4d64-8da1-ecbabdc722f7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b40fdb82-28d1-456c-9dad-4f2cee6d7f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ff454c-393b-4351-b5b8-a6faea0684a5",
        "cursor": {
          "ref": "122fa9b0-f97d-4937-bc85-4033242f78d5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3af0b4aa-e9f6-47a4-ac5a-0274e0e20f92"
        },
        "item": {
          "id": "a6ff454c-393b-4351-b5b8-a6faea0684a5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6e05893-c38a-409d-bdfa-4a43e3590df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecc2f25-0b4f-4809-9472-111080a2d642",
        "cursor": {
          "ref": "50b3e007-5dae-41fd-bb70-4545561ba5a9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9a86ad2d-b3c2-46b7-aad7-28bf52efe4e6"
        },
        "item": {
          "id": "aecc2f25-0b4f-4809-9472-111080a2d642",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb994f08-2976-4ab3-89a4-5f28a0941af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3c5369-8200-4c1b-8549-913c5e060f8c",
        "cursor": {
          "ref": "8b472701-ebb1-49a4-9ffe-e009b8d13d44",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28799f8e-20d3-4067-bc75-817d471f5abe"
        },
        "item": {
          "id": "7b3c5369-8200-4c1b-8549-913c5e060f8c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e59210fa-cae9-46ec-bec0-0d18f26557bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512efc8e-b254-482c-b830-37e9001b5bfe",
        "cursor": {
          "ref": "67ae4bd4-eaec-4d8a-b2de-8981a54db4e8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ce30ff2-898d-4898-be05-d8cde51601e7"
        },
        "item": {
          "id": "512efc8e-b254-482c-b830-37e9001b5bfe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d278ed87-5a33-4aea-949b-67c1a134f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2642f9-80df-4ada-8926-093f9765dcd1",
        "cursor": {
          "ref": "bf045fec-ec08-4894-b556-38b767ad4e82",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29c2d342-3609-49b6-b4f8-6531b4fe0b32"
        },
        "item": {
          "id": "bc2642f9-80df-4ada-8926-093f9765dcd1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3ba8f491-80ac-49a0-adb2-7077d59b352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bb8e37-9ac0-4448-87a4-8316b7af7501",
        "cursor": {
          "ref": "07dff7dc-c8b8-4ff8-82e9-d938621bd7fa",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2731c592-5ba4-4d2a-820a-e7a999ffb0da"
        },
        "item": {
          "id": "a0bb8e37-9ac0-4448-87a4-8316b7af7501",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a341520c-c317-4edb-90df-8b55a02384e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6191bb47-c947-4283-a2b7-b3bd346be0fa",
        "cursor": {
          "ref": "d6850cc3-cc70-40eb-bfac-819214b1b07d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc86ba20-dd02-4f91-b12e-51ce0f5ecb65"
        },
        "item": {
          "id": "6191bb47-c947-4283-a2b7-b3bd346be0fa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f6e9da55-fb60-4216-bc92-dbecde3514eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2a065a-e8f7-40a7-aff1-0e98ac8a88ec",
        "cursor": {
          "ref": "a857c2a2-dc92-4347-90d6-b697f9ffcef1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d916ff9-cef4-42a5-8aed-b36ac72b6f51"
        },
        "item": {
          "id": "7b2a065a-e8f7-40a7-aff1-0e98ac8a88ec",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c13048b4-3dd1-4243-a3c6-9d2496f98300",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "868cabff-4c39-44a0-937b-172895aefe3b",
        "cursor": {
          "ref": "6cf6283c-a5c6-4aaf-9910-0848961fe2ef",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d57e2e05-618c-49ea-b0f0-a105d365dea1"
        },
        "item": {
          "id": "868cabff-4c39-44a0-937b-172895aefe3b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "946e22cb-3f77-46b7-b4bf-2e9dd8adfdc7",
          "status": "OK",
          "code": 200,
          "responseTime": 2878,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3476842b-9310-4b05-a36f-c16fa7f3c4b7",
        "cursor": {
          "ref": "9f2c76af-912b-4900-b121-6764acf4fb86",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d77e6fbb-5195-4b14-aef3-1c71bba62591"
        },
        "item": {
          "id": "3476842b-9310-4b05-a36f-c16fa7f3c4b7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "852c46d9-6178-4f03-b97c-8cf59bd08d8c",
          "status": "OK",
          "code": 200,
          "responseTime": 1850,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c994043-1e83-4dd7-a535-636ca54ab4da",
        "cursor": {
          "ref": "ff1e87eb-2b20-498e-971d-fdd131e0da3c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bebc5976-2254-41c9-9a01-22fb5a0f78fa"
        },
        "item": {
          "id": "7c994043-1e83-4dd7-a535-636ca54ab4da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47b8cc6f-97d0-4b27-acd2-baa51453d219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c994043-1e83-4dd7-a535-636ca54ab4da",
        "cursor": {
          "ref": "ff1e87eb-2b20-498e-971d-fdd131e0da3c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bebc5976-2254-41c9-9a01-22fb5a0f78fa"
        },
        "item": {
          "id": "7c994043-1e83-4dd7-a535-636ca54ab4da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47b8cc6f-97d0-4b27-acd2-baa51453d219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84baa489-3ec9-4c7e-8f5a-72695caf5d38",
        "cursor": {
          "ref": "2becd309-3cf7-4d57-8340-d7bd914e6a0b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26e0ecf5-9312-4d00-9c6d-2707d725e7c1"
        },
        "item": {
          "id": "84baa489-3ec9-4c7e-8f5a-72695caf5d38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58793cb0-3de1-493a-8745-b747f0f29ed8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd39ab0d-0318-44c0-b4b7-1857fb9c3f08",
        "cursor": {
          "ref": "b3bc282e-b022-4265-b830-cf57e1f47792",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ffdf068-e578-43e9-ba01-0c12a870b669"
        },
        "item": {
          "id": "dd39ab0d-0318-44c0-b4b7-1857fb9c3f08",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fb91fd46-43ed-433f-a89d-4acd9f8974e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}