{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1772836a-b673-483c-93a5-b69fe417fde4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cf576f56-5a10-4d17-8b06-67e33925f914",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d9c27cd-80d7-4357-9e0c-bf3a27a26916",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e005d3e-9a79-4217-b1f7-70f4ab2369ee"
                }
              }
            ]
          },
          {
            "id": "02730f87-8756-4727-a680-f5129f2f3057",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6603e606-ac88-4642-a9e1-e969ddb9aeef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c142bcb-761a-4a54-8b5c-f026f3ee4f14"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6846430f-9b6f-422b-aeee-1068e514cd1f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d4d0c896-1fc6-4262-b0e4-99fb952f54ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2c0c48b-1bc3-4479-bec5-68a8c6e3108d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bd383d-fcb1-4b0f-ad4b-713b14db23c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90ae4718-37c0-42b1-8691-919b9b074658"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f79d4243-5b60-4f26-83c1-cddcffe2e0b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "703ec363-3541-41aa-a067-14a3f45d946e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32cabe03-e003-4980-9729-c2f993748544",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "171183f2-4596-4b39-9f2e-e64d4a42aef7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "209edb8a-916c-44c5-825a-f0633d2abcfd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9ca9240c-4fdf-490e-9fec-9b9af86044bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dfef241-ac5d-43d1-9caa-92bc1156fa94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39e27b75-07ce-4376-bd8d-07fec58dcb09"
            }
          }
        ]
      },
      {
        "id": "b6991a9c-57bc-4a0a-b145-860c23226d16",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2580d709-e26e-4630-929d-ed6adbc7a0f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eab83a1f-ebff-4604-bd92-0f0661103a8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "289d3991-554b-41ef-9a03-af81818bdae3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a3c667-bea6-42c8-9cac-62536adda859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2890018c-6549-434c-81de-0d22e3ff9f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d33088-1a14-4305-922a-6d57f90a1e85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0f59b4-af5f-46fd-afae-de0c55722981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d548990-0a0f-4bfb-ac1a-897eae68ca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252ae241-b67b-4352-94e5-648c40d45ec7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a25c26-9273-460d-8e2d-49c0c950d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cda9f275-b07a-46ed-acf3-12be110ec3e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1cfc5a9a-6ce6-4aae-acbd-b11820cd656f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e59718a-cf3a-49f9-965a-0822b76fbdea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd18dcc-7e4a-4c66-bae1-993db56fbe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2020dc4e-a817-4ef2-b50f-3a8e29f3c98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fc0079-ac1d-40c0-92d8-a99df76315dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaf397d-40a5-46e3-8c56-904ab67c9af8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15cc0875-f0de-433d-a8c2-e2113a436363",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d8f20b9-159f-43e6-8692-722bb1457617",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dca54cb-785b-4064-83cf-c60d9d542e83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "454dbbbe-761e-4626-9c26-9596af039b1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "901e52bc-1a3c-4bc9-9c2d-3a538db223f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cb4f9af0-4783-491c-80d0-4a8c76f53f8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ca71d48-4b84-4dd2-b962-f993047464ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c8d7418-8554-4bec-8ca5-58f11a30bd31"
            }
          }
        ]
      },
      {
        "id": "7460b22d-7f9e-4a1b-8367-40f07fb4a6bc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "40ee644d-f312-4ab1-86d8-68e53f7fbc1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ca461fb-ac30-4170-b5ea-57829c51d964",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "862817fd-16cc-479f-967a-b1a95e0fb10e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed29cfd-9481-4288-9dae-a77430f547d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8dc005-a209-482f-8168-19f8ea81c6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ca0fd6-d8ec-4375-9076-36485e71bf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86dda1ac-05fc-4dee-afb8-184498a29532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8532814-9803-4f66-98b4-1db346f85c53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3fc76a-e62e-4703-8d34-0fbcd379f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a1c1a1-3e54-498f-b42c-f147f0e38210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b0c0b-c627-4b7c-9a7c-8325f3a19094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e85d83b-34ca-4c5a-bc8e-100fc5c22f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae19699-b741-4c76-9aef-2d35cbbd233b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fabe7c8-77a5-4423-ab87-6e7b59d74035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cea0f0-5297-48b0-a74e-e9c019e81f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbc2451-9308-412d-98c6-5fe9f14d7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fc68ae4-db73-4aab-bc86-627d0cf0312f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7b1ba1-c227-4bb9-89df-58ca35bce36c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d1ab4f-4595-4bab-8bbb-0d4de1f82ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a173254-ff1f-4ec2-a531-eb8a840a86f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570e87f1-287a-4dde-b25b-0e59ea60e925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c8ca53b-3dc6-4525-8b31-b0b6742fe512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f37b67f-7f02-40c9-810c-fc353b541219",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5145db66-c1ad-42ac-88ea-467aeca1a690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e279e1-5099-412b-95f6-001fb6c5fae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39f7271-5258-4223-9dff-2517f06df5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e1c57f6-59c0-4128-9ff4-60fa16c4577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9bca07-61a4-43b5-b0e0-84b9964170de",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edac287-8109-4baa-bd77-6dee2a2ca934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398d6286-acd2-487f-b986-b0e54dc76f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2059fc50-3e13-4063-bea6-9bd296211ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd7e1c3c-145c-46c3-8d26-c5bcedb8dc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b30d489-b1af-47ab-92fa-c8284d010d48",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29761058-0b88-4591-a816-1c5cc4286a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdff86a-f71d-443e-9255-cdb8811da0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae58a5be-0da2-4e74-8065-f9e247e51ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d8de558-0d50-4387-a418-61545ebfefb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c393128c-5526-4b1d-b417-b9417b1db3d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9470dafc-91c9-46b2-adf4-82b92a5c51a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e956a241-1183-44b3-9490-5d04f5071f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9941aed8-1464-4b21-b599-7722e797a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0fede85-10d4-486f-bdf8-3912b2107332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e6f13b-3b51-463c-9bce-4392fd35fba4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d6525b-d8a7-405f-bf0b-990247d3063f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b78afa-84a7-449a-9c06-9050d4b4abf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8650aede-bca7-4ea4-88ad-77232bc64195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2da573f8-f1b3-4b85-9469-34f0745fbdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7855118-8689-49bb-ae5e-01ec55c45bbb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed086af-8bb3-49a0-a80d-3472eae36feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e18dfc-26a8-4e9a-bb48-4b7b6eb63269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0de094-18e8-4f14-85de-087a95b26dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dabc0cff-a772-4cdc-8a81-a3571de44609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e5afa0-95c6-4598-bec7-ca53b31a817b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c423fc14-6bd0-4726-9e45-94004514be83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e154fbf-2570-4ee9-9695-6913a25751e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede219ed-a3b9-4192-8078-7cbf5bf57702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "851248e9-fdbf-46fb-ac40-26cafadfc2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc86d93-cf4d-4b65-beaa-3b6c200b5163",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb9e81d-13ed-46cd-af91-eafbe6d7a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9dd360-ce29-4b7b-9cca-74f62c4cea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d96e888-2196-4a6c-b1e1-d3716241ef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4890371d-1b93-4006-b53b-b33fddcf212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40045d2-1d86-4d16-a0ea-fb8eda688ffe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc542a74-115a-440f-8ad2-8705188265ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4bd9fa-ce66-4740-a9ff-f0c0790eb006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dd5202-5dd6-418b-a304-9f1f4bb764ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72d7b89d-96c6-434b-b8f7-8834d3fcb641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f4d145-5044-4b4f-891e-5d354d366711",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fae8c0c-968d-4fcd-8070-39c11b34425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a068ed1-14ef-421a-b57f-c52d9d6241e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc8d72d-8247-4fa4-8411-d2f7b867d5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35e8ac3f-9bf0-4b99-957c-cfba8b9015b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d843e56d-411b-407b-a59c-eb1e66835a05",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00ab8f4-08d4-439b-8a46-212fed30a833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d056cb0-fbab-4fd1-94a5-29bbb90f0a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8cac60-75a8-4b44-8236-9365dc4c4442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d4cf507-9c05-432d-badc-c674b25426e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52454b9f-c6f4-4098-9e3f-2f18f2467332",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeb4036-936e-44d7-8976-35e6f6a1c138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dd4424-1eaf-4ecb-9b1b-708ca55d853d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61d3379-91d9-4376-ac69-b3739d9e19da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c59ab323-ac0c-467e-8a82-0381e26a78e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0def629-3a55-4788-a9f8-5259fed6ee82",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc4baf-7f56-4331-97e6-9d317972dde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830ee611-16aa-4a30-a618-ede63177e7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3118defa-0942-43f1-829d-d49562d51854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f0edfb6-d6e0-4f48-8abd-00a24c424fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac7a14-5917-4a3c-b4cb-77857cf5a6fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5130f6ba-962e-464c-9907-fae7c776d181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4dc4a8-8a5f-4d4e-b45b-aac96c8237f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad216294-c25b-41f0-ab01-36406590054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68321e45-7f99-4292-bd3c-56682021713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb95128-c050-4423-93a6-fdf49202d13d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a2717f-8ebb-4d7c-88eb-4463d2834885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1599bd00-f679-4805-9fa3-56a736db6795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ad5a60-dc8e-4c02-9a3a-8cd287b4bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc33215-e903-45a6-a058-8f060ea893aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922cbc7a-7629-4fa2-872b-305faacf4009",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a116a339-0d3c-45de-8543-f63827145a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6f159-5d05-404f-a1aa-69b9c0fa4700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d1d270-bea1-4aa2-8343-ec43973a29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc91717b-2180-423e-b8bf-3761ddf1ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c9b7bc-3b4d-49cd-8a79-ea6f842c184d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6bb010-23a4-4d30-a5da-1a0ee5fba165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9aae90-31f7-4bc4-bcca-77cf960ef036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9714039-e273-4b8b-bfb8-3f8c4f3ff933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5421b0f7-02f3-460a-88b9-469c500fa6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3a45a8-5ef9-49e2-a41c-d20aa4b8b205",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af422e0a-57ee-4abc-8acf-a4528920723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcf319e-fc01-4104-ae12-8dd340f09f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f161020f-b207-4eba-ac43-0feaa7d4f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f24ff4a-09ed-43e8-b0d3-640e67c59333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e0301a-dd30-4d11-a4f7-46f57f8da0df",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18f9398-92cd-4d2b-a6e9-a2bcb69778e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35b4776-a773-4dd7-a3d9-d435bbe659b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daba2b52-4c50-428b-b695-cef474d291ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cae11050-2d6e-4255-bfd8-583fa480fa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af625a32-6c6d-4cc0-8160-4e1266916013",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9309ad8b-fecc-4c2a-80d3-12a5134320d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb21203-ad95-4aa9-967c-be1bf49522c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b1410-2f4c-4710-8e85-9d6649bda21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "14cfc9e7-c87d-4f19-945f-25e06977b5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed50777-2457-4151-b620-7c37a750e4df",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7440f51a-6380-4eb0-a13a-6c2190ad96f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342cda54-05b7-4a74-b164-89453806851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29499f8-4676-4271-98f7-50e676b5e7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c531f9f5-fa4a-49cd-8d2d-518dc5abbd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c25d448-e699-4178-b396-ec48086c98e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aa88f6-727c-40e0-a1e9-3a03078c6f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da0d96b-8bc3-46a1-9d0c-813ef59509a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9219888-2a52-40ef-8a77-4ee445adbbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d9489a-7f1c-49d6-a43d-43882a14ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31bdd7b-9f10-45a4-aecc-3ac5bc91d146",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4d497c-8e12-467d-880f-ef3cb3d63a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d5f190-7a23-48fb-87ad-15ce2d8506d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68771ae-1fc1-4fa3-994e-1817f6b72bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76be26e-2887-4c42-b52c-942ccffc71ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d34ce-6120-4f9f-a975-aced21a99d29",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6674f8f4-a1ab-4691-8774-e1ad3a77ba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff191aac-2661-4b77-aa4f-6422ce23a51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e511702-f64b-4d84-ac73-b7757de927d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48290c04-fc10-4844-a8e4-1dcd93be304e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e403ca15-c0ea-436b-bf01-d01008abd763",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ce44cd-92eb-4239-b062-86d117c8d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29e4861-639a-4a1e-891c-c2db86a387bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed2f393-3d9d-4c7a-8732-0d9b809a2cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7215373-8f9a-4e72-836d-0eef3089ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ece82-ede9-4560-bbe2-172c93d20e37",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f28fbe-cedf-466f-a6d3-ca1e3927b634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68da4e07-16f0-4126-b701-54cbf534ced1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a85ff-cfe8-47df-b6b8-a2bd244b7f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfe7c14-738b-49cf-bf73-001f2157a0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b6631-ffdc-4474-8151-723488aa164e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110d914c-684d-4ff8-9570-7a712d6603d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cabc931-5c9a-44b8-a375-7648fe6cc758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3d5c68-d542-4cda-9a15-0d167188e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91026979-4275-4fe3-bb27-7fb0dbdf8886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706cecac-9410-4b13-aa20-497e74ceda88",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bab9ef-33e8-45a8-996c-1d0423b4d21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2325ad-4d55-4b7f-a10e-f33fa8e8abd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b275f2-1d2c-47dd-8c61-b47566f76468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae19f5cf-4ed5-4dce-a801-e7d87b06f757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ff04f2-e745-4ef0-af18-6bc54b46f262",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98c7841-a9d8-4c5f-8225-259a02b7067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af4d9c1-3b9e-4f7a-bc47-c246219ddef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdbb0f4-5cac-45ba-8495-2c5b38115976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd94aa18-f177-440d-a689-f19548030840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02276c81-52f2-4c6d-bde9-35049eb7052e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0714c8e-7780-472d-83c2-b8ac33d3d5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772c4201-4cf1-4dcc-b248-41ec84c6d738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39206346-5800-44bf-998e-73588e37708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "370c637b-da56-4e7a-ac3d-c815d7d02b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3afe8b-e7f9-4f56-9621-076c345407fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a72184-93e4-42a9-84c6-abf34e61ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f263e7-778d-45c4-88a1-a7457ef292bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51462181-de7d-4b0a-bee4-fae76ac2323f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "453908d9-5708-42ee-b49c-9b398d16fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cae349-a130-422f-aab7-4b8c91a272b3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d5d9f0-bd95-4a16-b321-8dbeddee633a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "758a7e29-0a30-47df-aa5b-204050bfaff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8a47f3-4e94-4d17-b8b8-52a3e25befe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bf78db-a48c-48b9-9e4d-34a8b4e60869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54071f6b-f70f-4f3c-9f46-8649d73fa24e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2671db-e63d-4a42-9c4f-55a674116106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aac2064-ed21-499e-b7f1-f522b08ed7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62dffc8-7f57-4963-85e9-9b39722dff30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae81da6-5ee3-4cdd-84b5-7cb8b61908b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c23823-c1f8-4940-b4b2-40188b74de94",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8708ac9f-4d8b-4138-9e40-2e247c217ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e8c811-963f-4262-a487-1f92f249fbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55286ed9-d8cc-49fb-8354-b77065f6449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fc474e-3323-4088-b680-b166708c271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a0af78-6029-47e3-89e4-8f56b9e6aeef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b29faab-2cc1-48df-9702-921215c51f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ddef57-83a3-494f-b392-eea40b1f457b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52f16eb-6c10-4704-9b14-84e42692521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7eeca189-1500-4736-ada3-c25841133c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1499057d-0376-45c6-8d4f-431a25b31937",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2396041-436d-485a-b4bb-19dcf0c63952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4655f51-84ef-4084-9897-300f7816f795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d1ffae-e14a-4a69-ad91-8fcfc1ede5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63f4bfda-8457-4af9-820c-c0b43c219e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368bd643-b994-4266-8646-f8cd44d5ea79",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703112f8-5541-46a7-928f-2e7ce4d50ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b51aec-ed79-40b8-9c02-2483b747fdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860bd9cb-d3ea-40f9-9a53-c2ba3fe26ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7be85e8-5930-4cc9-861a-3993c4921958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cc461f-15b6-4a77-8cb1-29201aad3296",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac92430-0227-4692-b263-cf5bf9d809ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f77b25-19a5-4430-a5f2-dc480c7f8520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f7658c-2e68-440b-bcce-340665147530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e536992-82d5-4dca-9fe3-689d0dd5b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd0afc4-e687-43c2-a734-6bb728b62f49",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c979af-b7d0-4eb6-a020-88f008a5fc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6f438f-c391-4253-a1ca-f8a40fa5dcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa703526-dfb0-48e8-9910-ce3323a3cf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c16445-5d24-4cd2-8927-1faaa15566cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a0d252-b307-4110-bcd7-ad31281f56f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af4c2b2-3fd9-4ad9-9707-15e45abafd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d5b0ac-f7af-443a-9207-b2cd9fe36cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00589ef3-c547-42d3-bf46-d0b2c86dcb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58755143-ce20-4159-b367-8fe42a274bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec44f0a-7aaa-48f4-8280-990f7cc7ced4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a5ceda-ef04-4496-95f6-dadd72fab256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4cafe3-03cc-4de7-b479-37868d5623a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeed50c-a696-402a-9373-86744d944787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcae7b1c-e0af-4a3b-b2bc-e811b797f628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a458b0af-f27b-473f-b971-f4c57427ae82",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731c0db7-3335-4be9-9491-3cb8a50ef2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0809a7d-a6b5-430c-9caa-135e1dfe273b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e65d949-d237-47f5-97c2-6ddd71dcb57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfc66c4-da76-41a4-9fab-b5dcdcd12243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc919126-faf2-4371-81d1-1d52fc260217",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92948dc-7a7a-4a96-93cb-a90b49c2cab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a124f06-6d09-4401-9aa8-e799bfb58744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab017c8-5381-40ca-bd2f-ca97d1c2dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9e8860-f16a-4e16-bf33-92032ab1cb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60aa253-951d-4891-9737-8b14c67d55b6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07900996-c663-465e-bcf8-cfac82a9e311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f2b27-4981-447a-93c7-4474371d0781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dce2da3-cff1-40a0-b533-75eea99a20ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bad0e9-3e3f-4ab6-b9c1-824d590a2337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7700f30e-59ac-4fbd-8c5e-553e2e0c4cee",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2650a-ab8d-4169-a6fe-20bddad67778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72809fbc-3ac7-4d92-85df-e08dbcf09c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31913b97-1d45-44b2-ab7e-32b6dfcf42c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "218c9f5e-73e7-470c-81b3-71a7d207f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571e9a2e-1169-4e47-b9bc-10ad5974d8a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd59fde-cfb0-4b25-8559-5b5bbb6f977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99811673-4974-4a56-a4b3-675a7a046ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f226f584-9b98-4871-84e4-3161abf6fe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaec14ae-fa24-46ce-a7aa-ff8cf3e1ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2522205-a6b8-4a60-9010-b3e7c593590f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fff6e0-55e6-4785-9185-f882babfea6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a75e217-e6dd-4cbf-8077-e41f3f95b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd56216-c740-4cd6-aace-8306305a6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f73868-46c2-4005-b9be-9cac8de835ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bdba0d-2308-4d02-9956-741c52cf3c9b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa1c906-d2b3-4bcb-81dc-8e4e006662bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a054af5-d291-4b7b-a4be-c84fb031e525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01888ba7-3965-4851-bb7f-9441b0ff9ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf316f3-9c4d-48a9-9f4c-c79d0a061742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895a11ae-14c4-4a52-b643-08e8e9b16ca7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02a3416-5f19-4997-861e-2a193b2279fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf69277-bbb9-4e6f-8a61-99cc63486402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa8561-f877-4c9c-91ec-2d281a0bf848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2132c30e-b975-46e3-9b12-1e996438c319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8881494d-c399-4758-bed0-8897b1581e98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e608f1-928b-4728-81ba-c4e18fa8ceb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ada957b-abb1-4c70-a30c-d0b27ef64e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e02579d-1982-4fc8-b309-63acea7cb4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dba5a6f-76bb-4600-890d-7fde930d3072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6601a6c0-3f9b-4561-a592-93bf9a653ad5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1748221-a105-4116-a7d7-092a4a47f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81965128-d030-47ff-ac03-108d0b4af1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd6fedb-d9b9-4de3-a782-39aa978bc027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07451995-43cd-47be-a620-5d29d8cb68d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb437d2-6ce1-441a-8039-3dc7e8ae93a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9fbc9a-c321-43c7-b054-90d88d42ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440a58f4-1089-49f1-9355-3bd465ffadd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358fce4d-a7f1-40ed-b20b-08062b6c5483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1520a42b-d572-40e7-8192-cdd0ca2c193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf331d80-50b5-4bb6-a832-774afda41035",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645762f-2401-49f1-8c93-a123cdd75a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ae9a6-5e5a-4607-9662-4c8e625964a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ce77e-6050-45b4-a472-9a0fdcd96951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9fd8f0-0ab2-43e3-b26c-3cb56c093440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60032e6f-c500-4fac-b309-f99ac495e273",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4e267e-2fc9-47b7-8713-a4f0db65ed09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e53988-5881-4966-8270-fbee4f377562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a213745f-e459-41a6-90fa-e7356458418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25fc56cc-4fbd-4de5-96bd-8a9ac6040ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51024b04-ca03-469b-afac-c06a3f83e155",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e935cb1-b04a-4317-aab9-c812130312a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f88a48d-45de-434c-b937-2c15b6e576bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0fa9a1-5405-41b4-9099-6c335b75732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "677128a7-2f33-428c-9b04-a96c81dd392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5945b5af-fd6a-4302-89e4-f8a966f0783a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7f2ccb-b1b9-4236-9e5b-9f90080e227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9104aa-229b-46b4-a198-8fdf48d1a62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cf5ee5-f1c6-4edc-9b9f-feb1f8e79798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d613c43-1700-4303-be82-be61e32aec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3aa49e-529f-4a1b-b330-b1f333afca7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5449f0-51a8-4041-bb53-e0fd568ca006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c40fab-9196-4c0c-a36d-c3b7c35be6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab0e011-5753-4f0c-a291-ce280e09c518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f507557-9553-4278-9988-a94b2da3fbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2522a26c-fbcb-4836-b7c1-abfd2e2d8e0f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4fb56c-f775-4434-b4f2-b06c1be9c909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f54626-04b3-4d4d-bce1-df68b3629fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c984229-0899-4515-94e0-2b8222dead53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a212800c-48e9-48c5-8eec-34eeca1914d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2636327-2525-4d2a-b28c-d6741f9267ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3dc97c-829f-40c4-b43a-65a094f824f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103e8505-7956-4639-9fc2-32f780b281c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103f942-3da5-460b-8ffd-bcb4b73c27bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8052122f-8b8a-4b52-a683-efba4a4b2209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe295a03-cd4b-473a-ab16-80e9fbe3baee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474033b4-6519-49f2-8182-d22a1261f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746ab81c-8f59-4356-99ab-a24ef76c53ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7511a3-78f7-4cf4-ba22-31284f83495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0010236d-16d5-4610-90c7-5f9346a906b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda1bf31-71b4-4b44-8e8f-c99e19826a87",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf025710-c095-417b-834a-dc8be580a35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f0f3f6-7ec6-49bd-b5d6-2b848312fd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb96813e-6975-444d-92ae-6d34ddffe2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "762ac090-6815-4616-bdc9-30120c920687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ffccc-84d1-49aa-b1f8-a8179a8e8392",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c1dc45-c15f-442f-9e8a-bfa701647ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7e76c8-50a9-4552-abb4-f39f80ad8d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ccd5d5-9646-468b-880a-340477e8a4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11dac422-00a1-4bdb-bb3d-7478d09837ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1080bc-f68a-4845-bbff-a5cbcdcec02f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953c4577-8ebb-4b01-a7ee-1ee64344ba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6311c832-2c22-489f-95b1-0a80bddd4902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48473f58-c3d1-4d94-932d-a7e99b3c3594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae63532b-a6d0-4c7c-8798-e7871ce0963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81a5555-1fd8-4933-bbb3-92906d2e7463",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59556023-08a3-4dfb-9f0b-7d275bed9001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd189c1-cf4a-4561-b728-df18dc0d40f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83767bd1-f69e-40c1-9051-4bb710494a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0e36f6-0f39-4824-befe-afc323787d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9859e009-e119-4123-afde-e72ea99e41bf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148292f3-1d94-4bc1-9bc2-07405da6aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250729fa-4a0e-416c-a802-6d58b34add87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff50f996-d12a-496b-99b6-faea0622c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0071e6e-aab3-4679-9582-bf987025e1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c79030-4763-40c7-9190-a4044ef1572c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4a5d3b-7d50-4688-ab60-864e622b35b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777ba6de-8ba9-42af-8a53-109e30cacf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc69e08-c515-40e2-b6a5-c6cee9a691d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "582dff4c-c953-470a-a288-88c85722a393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39754c0-eb09-4aa5-a9eb-9062907c584e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14e2675-2e29-4343-9c38-910d913df882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e0ce87-89ca-425d-b118-6fbe116acdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7abbb2-510b-4063-9b36-984d61bf07fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac172dec-e2d8-4757-a962-d6b5aa1d035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1a2494-ba2e-4319-9394-19565cb6355f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad4f42f-e48d-4698-a1e5-3d1c74c3941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3201587f-3a7c-43c9-a98b-998b371408e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa3208-ec86-4ce2-9651-bda8e1a9dea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24bd928c-9be3-48d6-8a14-3f37e66ac4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6004c9-ce88-4a0d-92b3-33f11e9e37b4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9a40fb-79b1-4682-8eda-701da129b1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb715fae-9f31-465d-818d-b7cc71a21833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6777c-0d38-43a0-ac43-be7f6e11266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a99bdc-98b2-44c6-8f33-b7c8850067e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ba39f-adb3-41d6-9ea3-268b437d1e84",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da36d935-1e9b-47ee-8179-529d8a167b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1041e7-66e9-412d-b1f5-cd49010dc491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9323fd17-9287-44e3-a7f5-892c0c8735c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9770e031-5f05-4228-8854-cc6a5dfe28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e76db-20fc-4ebb-8dfe-192613b0be6b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0344b8c7-ed97-4066-b000-73e158f3c18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a5d21b-862d-4c11-a818-22b216fba2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8407ac36-496c-4339-aa69-8a25da1c424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "226f9a2c-246b-4a86-9c54-1f9d490316dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ac4e9-33e2-4e94-a632-1e0b0e2fc642",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb01b1b-f3e2-438d-958c-7ebdf7a55462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd5f682-c2f2-4bd5-8f10-860ebe07a59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edb9686-b4b8-458b-995d-e60b7456fc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ee864e-4611-41ba-bd23-0062502e3d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bd3395-93dd-4fb2-b379-c9366a93281b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d5755b-1ad6-4e34-a845-e437b9529762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6e210b-f543-48ab-83e6-b3211a4a5341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ce2e7-85b6-40a5-bdeb-1957d3e68b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfc9036-797d-4853-885a-9eecb02fb642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849f9311-75c5-485a-8206-b48af51bc122",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2503de-0cd8-4b91-9a9d-7b8899f5bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab1354a-a573-47d1-bd20-c4247ffab1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0473a8f1-a742-499e-8601-f80f58173d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bba265-628d-406e-9290-5a60f1952fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66b10a-7908-4478-9ff3-66e7a81d5397",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b789e090-f4b9-4ef7-b0af-d451865f7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccc9eb2-dfe0-476f-bf2f-089188fc9727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c7ed4-fd28-4896-9dbf-03ae6242a3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7951f5fe-9a1d-4c26-96f7-da928b3c04d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ef1d7f-7499-4449-b0ce-00223d5ddf55",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9295cd87-ec5b-4c86-829d-8d2cecce3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b593b01-4c12-42e5-8fa3-a65acd11e2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b81b3d-66e0-443e-86d5-0a2b2f68c03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48e25764-4ff1-46e3-a73f-e46c16779a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b275b637-0790-460c-9702-725ad92c501f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306237f8-8cce-4d1a-b4a1-721ed3a8cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683ae763-2e80-48af-8ca3-9817ee2bf7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d1773-34d3-4f59-b7b7-c22d73622dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43dde545-8acc-4344-9633-1257501b1bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ebc630-cfd7-498c-8fb5-df835fff5af7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05701ae0-513c-4967-83c6-77eba2fead81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f858b4-3d31-4743-b781-865c7e98e02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4fdf9f-b871-4fa3-9318-d3662038fd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc7a3cb-4735-43f8-b743-7936a9ba5098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658d40ce-a007-469d-b447-2a0c8caa6d47",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76903534-d532-451f-81c1-9b4d0987ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8968f5e0-a6c4-4122-81d4-587f9c2e11e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f822804-ca5d-4d20-9fd1-4e1052a01812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fbd93f-5c68-4275-8430-892e1ca5f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ddd419-863c-4ac1-95f0-be944e417997",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08061d-876d-4b15-b268-e3dc8da08c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a5d235-e1b2-4821-ae91-c87b4b18192e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195143da-8da8-4252-9855-40fa0c643318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61cef57a-7251-4e36-819a-9aca65d7538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792a371c-adad-4a17-b7b7-a7d328ee413c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611e5783-3205-4a35-880f-693be991c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e013c5e-d85b-4d55-859f-b3547b5c492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de10f8d-782f-45b2-9950-ef45610d4200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf31e302-9cf9-44c1-8433-bf405e9eb972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd8bb66-f072-41b9-9e08-3aaff974915e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3276d424-f2e4-45b1-bfbd-2e8718f600e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd39407b-05f4-4e69-bf61-8679125f0ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3213cfc4-bdda-420a-be4f-0fc5a1ee5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd7e07d-8115-4b9d-8c3f-ac1603909b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da374fa-f1e9-4d75-ad5a-9a4314b088ba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ccb3bb-5ded-4f77-bd46-b961be58629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dc7932-cd29-40b6-a1a3-a970ed4c2fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a496ea-fde8-45bf-8e34-17a76d176510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b9cdb1-2cb5-4a9f-bcc0-0e7d8e426910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a37f5e-094c-450e-96df-d725b44a80b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2779854-1817-4ee0-ae64-e0452c751acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4dc3da-22be-4e22-b6ca-16249990d1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed03648-fdfa-425d-bb81-9dc090c363db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9d2195-2250-43fa-846b-a51d94381cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eacb9d-dd0d-48fd-b1c9-d2840ff25e32",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a2996-581c-4de3-8eea-cb76aaeb9274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de713e57-6fb6-4add-a289-33e0fd042a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb94bc0-221d-4e90-97d8-1678fa573216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0872cd33-3636-432d-a1e7-452c7e783a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5299de46-bb81-45b3-aa39-b698bf7ac635",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f33b2-b896-4284-9d16-0087f04a50fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739a07d6-ecec-4694-a761-e5bad4b94dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05825a02-2a03-4708-872a-d9a65062cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c87eac-5419-4ff9-bbeb-6a996b745ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fff716-e84d-45cf-8476-7526ccfb9e77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a51bb0-90cd-4978-9eed-4910222c0d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b53ed5a-017a-4344-8b1a-df1aa535d233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3074aa62-b14f-44ed-96ac-c1460e14acc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9d6646-bbc9-4c0c-afda-fbba0cd77f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4132e04c-aaf8-4520-a246-6cdcc7622ee1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acb153b-468a-4d12-8c24-da13e5a47b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c9e88c4-0567-4483-814c-511add88738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa67805-717f-4650-aa20-e54e3ae9132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41b0ac3-8294-4c47-8259-69fe6ab87b82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39b439a9-e9f1-4690-bd8c-e7d9fef3d46a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c821191-af30-44c7-923a-35487fe23814",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f2f752-1a4f-4486-8623-a4df285347b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f6d96b5-709a-41d4-bf06-d6b39b1025cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debd40e7-f7d5-4e72-af0d-77f525b13116",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5675afa7-7ad4-46c5-85bc-5502607917eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d806c19-0b62-4d3d-9be4-802335afbf18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c728c98-437b-45a9-9f0d-7d9a77bbdeb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35344a08-1655-425e-bf4e-a2eae8c418bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae4c7397-5e4e-4f0d-a145-51cdcd0f47da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0244379-c81b-43bd-947d-2f0b9710a0d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bf350e8-7922-4df3-9eb9-e399bc92f3b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0429f4a4-e945-43d0-bbfc-26ab3a15b3e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc0647c1-5f4a-4be4-ae77-188058f3a704"
                }
              }
            ]
          },
          {
            "id": "10575e42-b18b-4a98-ba9f-8edd472223cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef8d7115-7e3e-47cd-9a30-5b6aa8d3b34a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2fab3b7f-82b4-447f-9edc-c6c9600d9abf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce659752-1b0e-419a-93f1-24d69a4b542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21e0e274-15f0-48b4-a948-73e1a07280ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec52c65-c26b-48a5-b838-3262c2b4df48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b092bb-2da5-4c8f-9ace-ea980c035b7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ceafaf42-6c61-4202-9062-b221a547c9a7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b664d166-1be7-42ad-8c29-badee53b112e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "535492a2-69c5-44cf-8781-bbfbe412db07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8fc2011-4f3a-4efb-80fa-b1eec29484d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37605b40-8b42-4dda-88d4-3244b209361b"
                    }
                  }
                ]
              },
              {
                "id": "944a215d-34aa-47a2-ba6c-8150d93131a8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b0605b-984f-48e1-8a2e-9c7a72643cfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e0dc9d6-ae05-4d4f-a49f-113e1cccc73f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97aaf777-8739-474a-9dbe-85d43c6a65dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12165fe2-287a-48a4-8a24-4df32bbea44d"
                    }
                  }
                ]
              },
              {
                "id": "23d192a7-0bdf-4ea3-b840-45ae52c0e091",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d0f043-ef4c-42eb-8ffb-543ccfdff57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5639dcbf-7ec1-4174-8015-947392d39921"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8476b248-e8e8-40b3-b20d-47651575dc12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9660a06-c936-4699-b83b-b523252a12b6"
                    }
                  }
                ]
              },
              {
                "id": "696f9a26-5fb0-4197-86f3-621fbf29a76e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c102b9-ba7e-4519-a1c9-0835dde80bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cd31a6e-314c-4d19-97ef-53aad6d723e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90307e3c-0ec5-4876-b882-bad91c10cbdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "96631da2-7e66-4210-a86e-bc7d0e4e2e44"
                    }
                  }
                ]
              },
              {
                "id": "262ba7d9-76ca-4535-b193-e8c985bf1ba3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00117b4b-25cf-4b27-8da8-b13eb9d92714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b76f8ab4-4614-47bb-83f4-839315a9a9e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a27e4dd8-c2a6-43be-b624-533aa8f8680f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ac9f56a-c96c-4edd-827a-d657999fc8c8"
                    }
                  }
                ]
              },
              {
                "id": "64cea834-0de9-4b03-9dbe-7f6d075b896d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d35d58a4-1062-4228-8913-dd73a81f4abd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e244e12-49ea-4b12-ac49-3f4bd6fd3d5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61bd7031-53fe-429d-845f-63c2396d81ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65e96663-3a18-4e0b-8cb0-6ea991c3d6de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14a875ec-52d6-40d8-b2c2-62fd66530016",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a74aeea5-8eca-4c23-9bb9-c9dc0d6e7d10"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98500c96-b954-4f59-ade5-f436524b61f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4c0dd91-26de-489b-a6fe-827cd14687b4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1113fee-073b-46c7-9fbf-314215ff9ecc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "86c4b5a9-de89-4450-8ae1-3f5fc52be74c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8edcb8dd-ff90-42b3-a910-5fba287c18fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd1da31d-eabf-4153-ae54-e7a7bbaeffef"
            }
          }
        ]
      },
      {
        "id": "a0ccac81-5483-448a-8241-8024c68c9466",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aa54d3ec-c710-49c6-89b4-df2545b5bf76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fce3d94-6fcd-4d18-a82a-65d2d13e25c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74a25af5-1088-4000-b1d3-fde19077dab4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173ab4d0-0eba-4544-94ff-7450072d90ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60f22db-bc94-4433-81e7-4272909b559c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd950cb-4459-4a0b-a6b0-e748ee11a18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "876d0316-5baa-499e-9f27-4e911072f9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195b99c5-2aa6-4a9c-9c05-699f6e2df1e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c748c4-8782-41fb-91a8-4c9e9f5ab9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70eee26f-9916-46cf-b671-f2791a0b65b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca58f64-e2ab-4dc1-8163-df6c52949e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64a7ad7-e5e6-451b-8d2a-41eca4105c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405729af-4700-4c1a-b97b-25f038b7ddb2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c4bf84-6748-4532-92b9-b4135ac63abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c01ff6-3bf1-47d8-8e7d-9eaed0433491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52bd7ba-6355-4b5c-baf2-03f819e99aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7217e8c4-77df-401e-b022-8b57cc37420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeaf174-1568-4444-966b-b5c8276110f2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7072f25-7234-4181-929c-16fc74994270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1007a9-f980-4a4f-817e-3a84efe8a854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0873f1c5-cd31-4aed-931a-c49e42191630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e34ae7-00fb-4a3d-b13b-2746c4493d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3074fb-2c7f-4e86-b31e-9142c7cddcce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff247189-d9ed-44c2-bb9d-e83d37c9df1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4ebb08-56a0-49a8-b37f-a8c4198121cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d3be4-f37b-4927-a2f5-0d16df2a43a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "549ad9a4-f962-41a2-97f4-7cc7d848b766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be960a6-8572-4425-a613-0dbcceefe782",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec50231-896f-49a2-a78c-5fecbc235312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd41ea6-23fa-46e0-9bae-0a014f1516de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddccffe1-67e0-4269-84fb-35000e1ac770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d94ecee-cd65-4f34-abfa-be13c5232a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7495428f-88bd-4afb-8826-68c254eed00b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe2db91-6bfb-4abc-badb-9bdc05a2448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2192e7e6-2cd1-4e07-993a-cd605f426a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e336ef7-9881-4980-bd86-a3c0114fe3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa3ab64-6c48-4e24-92e5-2053e8126a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c38987c-4b26-4f99-a3d7-4afd798406da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c61576-d3b3-4180-b38e-ed1401cf9691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ec9ef2-df34-45b7-993c-efb159edef9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00220c3-357f-4839-b623-9805e434f736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bede1997-60bc-40b6-aa4f-acdf004675b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb34bba-00e9-4f5e-af71-e6418fe3d1f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f165ba19-ff2f-4bbf-89e9-eb39725639e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ea90dc-0553-4b81-8fe0-c4edeff39bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258df7e-f471-43eb-b39c-dcea534dc77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae510be5-d0b9-4a50-8941-e4d32d3119a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321c23cc-28e3-4430-af8c-31503d7b9168",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278c4993-cd27-4171-9f2c-0bb3957c3b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe54053-65e9-4550-9947-efedaf2f6c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979e327-4b3d-45a8-a399-8b4c0964cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb18cd0-e202-4d8c-b74d-48928e862f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d8ecc0-edcb-4909-aed8-052479c6296a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12409777-cfc9-437c-ac4f-6a11dacd9f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d9886a-13ab-49ad-98b8-e360b1e9c706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531d081b-cfdd-4bb4-9ba4-ce75e7809e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "970db0c3-c5a5-4e29-9954-20a3dd7780d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ed2911-bd4c-4b2c-a05e-9fd292d698da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6418f7e1-6788-463f-a219-a61a6fd985c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1303ce4-6a3c-4862-9561-26ef71d5a372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e09166-8137-488b-879c-05c2e5f5a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f3c569-9a92-4dfc-9a6e-95b540dffead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdbdd6c-4e7b-4437-8b2e-fb2181cb3a58",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c814d32c-10c3-401a-ab5e-4f0f70c6622b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fa1138-bfae-4e6a-a049-ddc6512402de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a10456-f5eb-4546-974e-71e9155676de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b59d51-83c8-4c30-9836-5e6d3d47c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d2f56d-38ea-46d1-86ef-b509c8b737e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f218b080-2fe2-411f-9772-ec96255944f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9cbdcd-c051-4caa-aa5b-a68d9f2e2353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c69fd-11a4-45d0-80f8-bea8f1a616de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "946baeaa-f095-44f7-9600-069c47f725ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7a747-6cf5-4db1-a34a-7091f2f45ccf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5390c5-754b-4073-9354-9139e2523237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba3cf7e-bf8c-4042-a7ac-8d98b3b2adc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96b90e-4b14-447b-bb75-9def66da5049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "703aaa5c-1493-443a-8035-94c06561fb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2813cb04-a6f6-4ef3-9a80-e61f2c9b588b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28baed82-a2e4-47c2-94a4-37e4e7b064a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18bce1a-8d30-4ef4-86eb-8ce6378454e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6950675a-45b8-425b-b9c0-952fe243da4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "589c6d72-0129-41ae-a2be-5f9ac3a62378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1034a1ad-b41b-468b-90f2-8b649585ab9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5980012b-90fb-4754-8d44-8bebb5c222f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563d1a56-f333-4759-b406-94392fc86ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a5a988-fcb6-4279-adf6-e60d03bc77c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db74bf9e-1de6-4bc7-8073-58459382995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3958af1-01e7-4aad-9a41-0956d94d710c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e17842-ca3f-48d8-830b-9ffbc39f8ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9942e5e4-ef0e-4d00-9e66-3b2d7f8d59c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef312c6-5ac4-4ca2-a9ee-b10233810838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0981c690-ac2d-4b4d-9544-7880c6b4b235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aec387b-59f7-42d1-8bb2-fbe72849c287",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c76ee19-b2a2-48d8-834f-23fc608db240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85692809-2c89-4810-a122-6f1a9bed7871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33867f83-6f50-44be-b61d-dd6683854d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6384d8e-1c7d-44b4-b360-61d491b9157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f98cc00-f6ee-4ab4-b820-38c374697268",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f5c584-a027-4902-afdc-213ddcd56d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a34177-93de-45fb-bd91-ee980ebbdb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0749195-c24d-43f6-b634-ac3557108dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845f804a-73ab-4958-8553-c2695c325b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04e9803-d71e-4594-9dfa-2a6501fa4d7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29240acb-d22b-4ffa-8950-d69427f2034c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdfed98-a659-4308-a252-bf331bcda54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e361b3e-ea34-49d4-b620-cbb73961d088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05987e39-2765-4362-a32e-fb0a7f22267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6369d9f0-f1c2-4a63-8f26-e655c17b0d24",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408bed3a-9c5f-4961-ba9f-b7cb96b4d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc12b75-2abb-482d-b1ac-f938841eff3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b335a9c1-00f7-46a3-8324-e6cb087d8e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edafe202-bd30-4aa8-a90f-fc5ff0de6612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de66824-82a6-43ca-a77f-9e7b67d1d73f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b70cf5b-ac8d-405a-8c3f-15e43f6cd7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d91f384-01be-47cd-8925-a88943bd9d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc48273-1d85-4790-b2a6-17e424cd5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d859192-0b16-45ad-b5ab-e02689d68a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065e3be-5db6-4f56-a4b8-1e249231a84c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70536e4f-61c0-4145-88f4-5edd192af596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a735d9-cdf1-47ad-863c-fc87d4a08b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51834ef-1b7e-4b30-8151-f3666375fb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54477506-bd17-469a-a490-d9ee22d7a6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f7eeda-cbc6-4522-a5ad-27821ab9f267",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adc0e1a-70d1-4210-864c-f2af9ad9d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcf817d-cc3c-4cb9-8a7c-76e43ffab2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5281ccb-f98d-44f5-9bc5-cceb100de181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1797508-7826-4bd1-861a-fe274af7e3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0940f1-f57e-43d7-82dc-755a05ac967d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841bcfa7-bb6e-42d7-a9c9-47058bb36442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5da323e-9d72-4e15-8630-6e16f8b04a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8f7d18-b28e-4a71-aa76-3d8539e03a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a57efa-bb1e-4d1b-bdfd-1b71645e3dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3770f14-9af4-4341-b657-deb524fe0a46",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61deaef0-a1d4-4921-8b30-f2445134328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403ab0dd-3347-4698-849c-62a58b83f536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e263950e-e04e-4572-919a-6745afe12996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "547633f4-45d4-4956-8980-93c3a3f70a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcac707d-0dff-46dc-9c05-48660a0c0967",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24423d0e-0f3e-4b8c-af9c-0360c9dce842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3230a56-6075-45fe-9725-cbf94da0ed1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44afda8-51c7-4e8e-b763-4df0f4ec8263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c50f4fa-d079-4847-a0f5-40398d91a803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78892356-b7e6-46ee-9db5-d3cff640adff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa24d068-06aa-44e8-8303-4f8d9376ba41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ebae5-c8cd-46a2-a39d-fd55df342fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8842d-b67e-4fd5-9895-e538dc0f8580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3fb569-4ca8-4d04-81ac-ef3b0423000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f58f03-6f86-4343-9f98-6df8c3082d82",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27f062d-e0c8-4014-a475-a4430cfc2503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2b37a6-d39d-42f2-bf1f-37947e7dc02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd11d474-9a07-47bf-aaea-f7106a3453af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4efa35c2-b6d7-48c0-9b33-0cddae897213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599c36f7-df8a-404e-b682-a927b15be814",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755d8cfb-d8c9-478f-a70e-b0ec5a487835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ac26a4-a417-4a9b-9de8-48ec2af26eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0499ecf-d64c-4913-a524-7504b224b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d72372b-93da-4754-97da-e9f1c761b76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c59a410-20b3-45e5-8d83-4eb07fdd8996",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ef3f7-9afe-4777-beac-34738891a213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c245c8c-5860-4c53-9796-782eda2b296f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ccbd0-ffca-435a-9768-2baac9f55d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55382a7d-308c-4681-b9cb-70ebe5fb9d7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa08d247-685e-4b68-96cb-94be9024b332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12bdb496-7b19-427e-ac0e-98ef4e48b9ac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79370e-57a5-42f1-8d9b-b09b69f75e2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e621772-46d4-444d-8127-eb1bacf66bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9e7e4-af58-450d-883f-9987fd738743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58286880-bfaf-4e94-a44d-c18fb94f08b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c5d5fd-901f-4d63-a717-80652fa45629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21ebd011-a369-4ab5-b29e-60ccceec13e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "420af61b-6d14-4bd2-b5b0-f19c5340c97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c582504b-9cdd-48e5-80ab-d6a2f067b6b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2ae72c0-dd26-4804-84cf-f6a6834f1ab1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94130aab-f68b-4d03-ba63-9c12680e3dce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee3175df-84c8-4504-8830-1cceff8bee1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a66de5ef-8f5a-4189-8068-a6ba99e8fa23"
            }
          }
        ]
      },
      {
        "id": "fb79ca95-dcfd-4332-a5ee-a863455a4ede",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c8805576-399e-40dc-a624-99880e3a240e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e92cf585-a28d-418b-b18f-6cf1d9f6f9ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ff27649-a41c-423e-a2a2-f5cad9a836f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51e98a8-4a6e-4692-aad3-f003b449e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10afef4-0f0d-4641-8a56-c55f59375c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7560aba0-e04b-4553-ab51-29c1e3c05184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7433ec-be75-4d8c-b893-80cd77d449fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6a9251-3a4b-4d3a-b0a7-1c9d3782ab00",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4becdf7a-fe47-4ddd-9123-652ebdef86fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346d7dc6-98dc-4abe-bf2c-751d305d4e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1013b5-cddc-4b4a-8468-8f86ccb5f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d891dd6-f964-48b9-8b89-3478c019ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e5c8e5-8467-4d6f-be71-dbb0c8aebfce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e484d6a9-39f8-40a1-a27a-844d894afb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8657d6ed-7ba8-4f71-8fc2-6d64dbf98bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14d22cd-87f0-4900-a214-87e592139843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd447d3-ef54-4838-96ee-708472932fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd8f9ae-e59f-4acf-a375-ae6eb070197a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7ec64c-e463-4b12-b45c-669f46819912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308baff6-2769-4cd9-a9ee-244964e01e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bfbf03-521c-475d-a770-df5cc10d406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8afdcb1-fb63-42f7-906e-a8d2e54d14d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336db19c-3f35-4bc7-ae49-8f4f7fbab4fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d56db9-0f8e-4759-ad44-6a2422c844da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e36afcf-b033-4918-9625-8ed5671a7fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4360e53e-26dd-47ca-9589-2e80a01d2747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "013a6095-a35b-49b4-a74d-0ae49f8e0ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155d8d3-0f5f-4a7e-aa89-7499a2c45a9e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b133122-a9f0-475c-8265-7ac7c28006c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025ec574-fa7c-4a35-b610-0162e3f003d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e268e537-fa09-4be8-b736-cc5b0a61f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "693f8e43-29e7-4678-b1c0-8896c9b647fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32607d1f-58d5-44fc-a2f2-3150fae9206d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36660f6e-9041-4e37-8609-33a16f9c00d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d47686-c73d-4e7e-b1c6-4cdce792ca0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bdc8f2-31b9-40ea-adae-e0ad7be2c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b7cfb6-5405-4d40-b3b3-ab6130d0e063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26226d-e6d6-4369-8eec-26e4efe2b524",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791d6ba4-0f21-4a7f-81ef-911886136c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9b4c94-b418-4791-a161-f9f535b33b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80735ac5-930b-4321-bfb2-97dced22d014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1803b0-042f-4d43-9962-8e1de823d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f86a9a-4f0f-4b2e-97c6-2b3ecd55c901",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1778f54-b1f2-4aba-93a9-fcf845aa4f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089e3677-66f5-44c6-aca8-9c1bc140637f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de082cbe-7b0e-4a5f-b3ab-47ce81de948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ad996e-3edb-40bd-8772-a10bd2206b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a69817-2bb1-4dce-8e0f-306ac9500e7a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad38be5-00c2-4c00-b16b-0a11919cabcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49446189-ca85-4fae-a5ee-a17a2b01bdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c92ef6-7c3a-4ddb-b713-78a5552e3dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d917f1de-3549-4814-bb7c-860e1294e925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70bf352-3a54-4370-b409-11a4fbe55f58",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50ed68f-c4b1-4c99-b7d3-db7b8b57a578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2844b8ed-30fb-4121-bf0f-00726e69e370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6c5d1b-d807-49ad-b203-1baca14cefd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21b3ab65-1b44-46cc-8326-745a056804de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729d9e68-bf80-471b-8bdd-5ca1fd74640a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770726c9-af93-4210-be57-d88e4d6d14d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198ed818-d6ba-4ed9-806f-243135907e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6d5480-986e-4ed3-bc3c-625e5a9b57c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "510db924-c20c-4e0f-9261-73f987dba159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e592da-e6dc-4968-9392-dca2c18b58a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce2fd3-4cac-4778-96ea-e337bfbf129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff67874-ed75-44f1-8f1f-5fe79b128340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab118da-5c3e-4f8e-baac-d83c302b104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f802a78-e2cc-4406-a680-69ffd355168b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37b6db8-dc1a-4b36-8011-9de5227297cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3edf25-0200-4d19-8211-84c771de0b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bc0333-79d0-48fd-b70b-c7d33583ff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc8e8e-7dff-45ee-a263-cf75cb6c32ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f5b01f-35e4-4bbe-9c25-9e916d86415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6aab10-47ae-4600-bd01-ea26e2d68449",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034f3f39-0fa4-4893-8f2f-d8424b737da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4e5db9-eb1a-4087-a77e-98c812d6fdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27669d2e-f5ed-46e2-87e6-6854f868a49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b325d8-b44e-48b9-a094-f973f9c2eeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1108e2f-760a-4907-b718-13d194af4310",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0138d953-d249-4db6-a3f5-e298a9e90103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200a9b5a-405c-4bf0-b072-f45ad7d1e3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd49f7d6-7fb2-4ae9-a253-e855331d1c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1ab6eb-8290-415d-bc82-6ff31cf04fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f611500d-bf4d-4200-85fb-9706576c9b9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65130a8-de18-413d-ba6f-e2e94a239bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8303a069-212a-4b6c-a1e1-5af2db3fc6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a8372a-16cd-4881-85bb-c278e46ebb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6b0cca-1dae-4e66-a5c8-205d4eb2a0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931cc5c2-b97b-41a6-a703-e813bc8acfa9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f36568-5987-49d0-86be-6226c8fc6b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e821c0f5-da76-47c2-898a-f406767bfaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db414b6-50f8-4176-962d-530d33c466dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40c2b0e-5faa-4d73-917f-59376de19c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d98e39-10f3-4610-89b9-6577627d2eac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2b815-e8ad-424d-846a-40030c0463e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fcbc8f-8753-48cd-bfc8-9a4fce7cdbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595b88da-944f-4cf4-84d5-8cc33a1e4670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77a5911-1dda-4333-85eb-d4427b5a5da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edab0d86-227e-4d24-b89c-629b44a6838e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b990e3b9-ff5f-4097-b195-acfd19da3b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7cc7b9-8d13-4d27-9c0e-e1af01dad3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36177380-b6fe-440b-afd5-ea2abdb7abe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3ff528-38d3-48b5-954c-2ea515667dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f939154b-8bc2-4ae6-be3b-d7805ffb377d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88dd7cd-839d-4c7a-81f3-34af57b98a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e16a72d-cd78-40cf-980b-0dbe34a2a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e9a65-0e59-4699-af96-ec0a2efa188c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8528b7-0cdb-4bc0-ae61-9e90e6174219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2004b5d3-0c94-4e5d-b008-9e50a638738b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6bc9e5-65e5-4e82-be5f-8b04a251fbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dae5ef-6481-4a7b-85f4-7133c778dfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461ad3c-4fac-44d3-bfad-ce0d9b6dd644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "765ec8be-e5ee-4cd5-ba18-2dcebfbe97f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d78f8-6437-4c6b-b429-e01d78f5d597",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c89261-0467-4a63-afb4-a27d7a97c054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21113888-711c-47e8-8e30-9ac91cad1b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd9b799-df68-421a-ae13-b1dbbc5e06d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c5836e-0052-41b9-b20b-52b6afb477ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf01ee4-1bba-4014-90ff-4f703414023a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d902765-982c-496d-ba89-11c6e9627d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6659a57f-bd1b-4b32-b235-dd9d147f12ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f944e475-e3dd-48d2-b73f-0b3ce193c44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "029c6c8d-f6ec-4a80-a149-5f683d268fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec029c-59a7-4061-a6c3-9c240d54ec21",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b77340-1585-476a-9e26-d2e523aa4912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1c8c1a-4ae3-43e3-a4a8-2aa4c2981ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d85800-8305-439e-b879-1d295048a459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5aab6d-499f-4c4a-a45a-e6121e637926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b903cbe3-816a-4a88-b4d9-d5c9489cca6a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cdc8d0-4e3d-4b1b-99c5-61edf9e4f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78232ad8-0782-4b56-8d9a-1a59a27acaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc750a34-4571-4ece-8a25-df9515fc857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb3b261-ea41-4483-b950-f55cf90cf6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0af212e-4fa2-486d-ac6c-095f7941759b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e7f58d-4efe-41e9-92c3-ce8515cf29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ae109c-f6fc-4c87-9293-b5801f3cb8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf2cd57-0485-4737-911f-159402b97d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcccf7d-591c-4f4f-9a9c-cc51e8b5eb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6541dd5e-e77d-42ed-9a97-9e6c73c7721c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb29886-7820-49e1-8aa0-b94c451659b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726da618-3b24-461b-ae3a-d94483195549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9bb87b-05d5-4514-ac9a-a77db5ca6e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33928b05-01cd-4a6b-8442-c77127ac0110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82c4250-0194-4902-96e9-0dd2b3968c92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0f191-a751-479c-9a0c-c90b78149c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc30425-641d-425b-99c4-10384ecc7a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5f288c-cc20-4724-a8ba-7550288fdd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b005e0a2-395e-4470-be10-9c7b42eb0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ae8515-479e-4f01-9fa9-70ab4e1145c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7719ccfc-25e2-4a34-94f7-64e54f42106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47371c88-93f4-414b-9541-4c3cd8e3e853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a51acb-94e8-47c3-8133-5a741609f010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9285426d-24fb-4b29-b582-891d493c66e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf9d39d-d8f1-4d41-bbbb-48aea7171602",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c66b426-e5c8-482a-8758-856376b2dd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd57cc8-a751-4e68-ad3c-ecf7b9e84ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b80b45-cf78-4221-a3a3-b417bb5d67a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd99e450-90fb-4f39-9de5-823a8e3bb49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fdc577-a559-4455-a5d9-4500037aa1f7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14fd464-c410-4cb5-87af-53580cc2bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1235a75-c0cb-4781-ab0f-e5d8256076db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51f962-8a92-4ecc-9b13-d1d87d1b8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4cc191-3521-4558-b98a-a3b83683301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8293b4e-fdb6-4652-9fb0-9dc53f04f848",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe75ab9b-0336-4416-9f27-b8d8e3f15eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e089a32-5b3b-40ae-8b47-67ccaad05677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f23002f-cbed-4fa3-908d-99571ccf664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ba0dcd-7a0d-4cc5-a9dc-00383c736f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c4c23b-2b72-4db3-bdea-12793432180a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33acfc2-0c23-40fb-acf8-75567b16b67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e405f55-c0a3-4a76-a020-b301264a8d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012186da-63d2-49d2-8dbc-72816e1907af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfacbc1-cf6e-4104-b27c-61e855dbab15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd29e56-77b1-47d1-89c4-a8291f2bb41f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a1db53-b088-4030-af10-c61466a77882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc960893-7636-4f75-ab6c-2067f06ff9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b658a7c9-f544-45d3-b52a-aaa6ab49c497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bde0573-4638-4484-89bd-728ea8bce750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a5aee4-5bb6-4916-bee6-d934e7181a15",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b728491-7d4f-4630-b7d6-d9cfb5df994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c028043-83c7-4ca4-8769-935ab9abddbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3ad74d-0cee-46fa-8462-4827e7711f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "499deb8b-b7d7-4567-9016-2fbcf44faae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f75393b-0a2f-4945-b05b-b0d9d387b9c2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b69b961-7633-426c-8d95-2f3c8a37820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860cd6f9-67e6-4ac5-9474-05aaf573668e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006ef9f6-aba5-4c04-8418-4258371ae8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0414b84a-fa64-4cda-af91-a64ee5f4f817"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2a5380e-2a98-47ba-b022-3dfdbe6d3cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3bf5c78-83c0-45eb-ad44-bfab0e958b83",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eabe72b-6cae-47f4-9eaf-ab8752b93ef0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66577314-8b31-4e71-b5f5-2a2901fffb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a885dec3-2930-4801-918c-9f2134f57b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "861cb336-2fca-4fcf-bd61-17c70529fb95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3f9a6b1-26e3-4b1a-9ac9-5e168198a657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632469c4-84fa-4ef7-992d-5d566f7772bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a32dd8-3b32-4fd8-ae29-6e4d182ec5e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7664f957-1e77-4cdd-9085-37552203ab56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15096a77-7825-4593-b5ed-ba1b222b4c5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d599996-91ae-436b-b03f-a2e56428938b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e508ce00-d144-45b2-87ed-67943c876de5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0d97078-a5a1-428f-8c92-ca1a26fb3934"
            }
          }
        ]
      },
      {
        "id": "2a5b6f4e-bcaf-4c7b-9faf-653a52d4bf26",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b7e2a58-fa3e-4363-91df-68e7d0e77fac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb5e0c5d-0997-4aa2-90ef-8ce6dfc5abce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd5c7f1a-ff0c-4df7-aa6e-07d4fd4636ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcb1d83-0bed-4edc-b805-4b438620b1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737d219c-da94-4783-9fcc-6505bea00d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367413c1-be0b-4fef-a27d-a7425fb5d690",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40b6843-b2c7-451e-8859-7dd761494e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0142a86-2ab8-4189-9b9a-5facbfcecd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb48e7-d401-4f33-86ae-e84e9be3feee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8550aa31-7eab-4136-8de7-30853fd65cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faa0987-e093-4958-b0a2-b64aeb2d0dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2bab25-34bb-4c51-bfa1-67ddaa212d71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3901e87a-b9cf-4e98-8015-ffbbc9b104fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5c1c94-2aae-44fe-81a3-0f77619ca1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aa0ab0-bde8-4e60-a7f0-08c0943ac422",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5858b6a-dda6-4754-a216-d2541e2dc74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78832d2a-3fc5-439e-9a4f-5bf58121a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73b5d6d-c0dc-4356-94d2-4102eb2d74d4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5184e787-7b6a-4648-9f83-4c2582a0acfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b677eac-fbb5-4b36-9b45-efe9f6d50beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4b940f-e9e4-4da4-b537-8ba223826b60",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9b3673-1d8e-4df3-939c-ad40f66ac3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dee944-34bb-4b40-bb5c-8df41edb4c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c851be7-18e5-486c-b48a-9c565e4d8a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb89e13-e316-4e79-93c9-273076e6d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eb539e-0ca2-497a-a50b-0fbe3e33e340",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8ed060-e820-464d-9bfa-2ce53df69e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b664b0-4c61-4137-8de0-2bf153251834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00aa229-179c-4338-99c4-75d1d8e66b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de5335e-3e1c-466c-b054-13946ae6d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cf5447-d20a-4cf4-8260-5c8a93514042",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69637247-3121-4031-9784-ca5df6a5cbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ec35c3-3bf0-4b86-a8b7-995dfdf11aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1573b3cc-85df-475d-930d-423a40bdff1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88caa705-e1f5-47bc-a9c5-a9221fc3431c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b9874-8eaf-433a-b5d7-b62a962e1b40",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6aa481-1d68-4c8c-818d-7ed922cbfe1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c974d05a-92a3-435e-a7dc-54fd6653b560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec9e765-6027-4819-a9fe-a88d7fc6863b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2123c327-518e-45e4-a0c3-95a1af847c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94daac-9b3b-4459-b7b4-f38023924506",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c624086-3eed-409b-b475-9c87000b0098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91b41bd-532e-4ce4-9a1d-f09ab08f0727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e61410-f3b0-4a61-8b46-b89322cf9dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef259cca-ea22-4b2a-9d05-5399bca16bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ea9c72-165b-4f95-a380-a6d21e748c31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928987c8-02bc-49f9-a502-a192c7ba6089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639a756c-b18b-4122-833f-576378bbe88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16502ec-7709-41ce-8c24-59920f4d2fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc161f9d-bae2-4ce5-80c7-12aaf8e95422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a604499-72f3-4fec-90a2-c1581d77274c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92f749-7141-4041-a11c-af817f4581e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8136d2-bc3d-4c0b-be52-4e3861ee7bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6916221e-34ab-4f29-8902-f11ddcf8aaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d2f5fe-6236-42e7-859e-fdb0ac4031b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272d021b-514a-4842-a9bd-c1e6778c3b3b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc1b34f-77ce-4ffc-9e4d-b255411d4d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e3ebeb-96a9-46cc-81c4-36a5c18e2a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0136fa86-f358-48d7-a4cd-28190db200d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064a0aee-8bac-4933-9d8c-60ffd58031aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b670196d-ba6c-42e8-9dec-e8e50ff0b151",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4ef589-49e6-4793-b8a1-58fd4aebb44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794d282a-b9c3-4424-a2b6-1c89ee353167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da633e5-8878-4949-b2ec-17d35bf8074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2bb0ac-d21c-4f4f-96f4-2152e3f860f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306e64ec-f774-4a31-a269-6ed059dc108e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a5d37-6103-4bdf-a02f-2707694a1036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7739b07f-c529-42e4-a3ee-807bf8c46dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e664eec-cac4-4836-8845-b37dd58b7ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e42e16-a705-45b5-a44c-b9f4188c7121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13a0946-674d-4964-9f58-ddcc4cf6400a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f06a771-53bd-4679-8f6a-6fab3bd34082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46540287-ce5a-4e55-b1d7-6f1e16904ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f7412-6f56-4ea4-9f01-c0eb13806911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec219117-7423-4ebf-a0f5-002bf92ea0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8322a8c-846e-4789-9b87-f026510bf30b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee0a326-1763-4118-8986-49264d89bcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4bee81-f7b5-4ebc-bfd1-1a2d0f81ce2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a99d703-02d2-452f-80b9-528d2d73d5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dde493-69c8-4513-8e05-140bb681f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d759fe13-1c1a-466a-9e94-170c3140c243",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e81589-2bd8-42c2-9963-eb1c46867d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9150b7-4c71-422a-b2b0-fc4a24141ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f33a390-df81-4c92-9717-85bf20d018e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63fcd9c-64cd-4c37-a5ec-90bd6af42147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84359ae3-e3eb-4984-8ef6-380f99b6f22b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b074d735-5f4c-45e1-a5cb-f81e804334a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ad9dd2-b709-4f56-b681-7301e21e7d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8abba9e-7c52-44ab-ac77-973e0c6f94e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ce121a-2b7e-40f5-8f1b-966ee18048b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9595bd6f-ba00-4771-9881-e695e73bf609",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b4877c-4c63-4727-9ad4-5f5154161ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc7c82c-4f9a-4605-b74e-15a8e3def2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19244553-48b4-49f1-a0fd-f33bad669177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1757ad9c-4040-45e8-80bf-ece1a5b067d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5936b4a3-643a-4052-b056-4e55e31eebcd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df513a59-6576-4caa-bcf4-bd3edbd3e956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547d3374-3f21-4d18-8a94-150ef760666a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753ab6b-382a-4828-80c9-1af3b00732e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f861773-933c-4079-bdce-cfe8a215f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb5ed47-354b-4917-9e88-5bc70c6ac79d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49596208-fb34-4b95-a4ae-953808761fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fd3fd6-17e3-4198-8961-34b5cc253028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f7cbbc-69a6-4437-8ba6-4e685692b95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cbfc58-2bd5-4ee3-b6d5-c71070d513b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37518c09-8800-4fa5-950c-96caa1eb3f99",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf01c3f-8990-428c-82a7-c4515c0661f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa312140-35f0-4be4-9215-7c3c0c05393c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e936dad7-58ea-4f68-8037-ee337a03bfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf7a45a-1317-49c9-9409-ea190059f92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fffecde-40ba-41d9-a4be-502abd43dc92",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ad3d7d-ca01-49f0-a73a-f5a2b4845a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6437b8ce-af4a-4979-b78b-3ed31eebf1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc456a4f-15dd-4603-9324-7e53fa4a0baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9dc563-231f-4796-86f3-26dca9f15bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4fd8ce-28e8-4083-a96f-9699b3606e97",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656e696b-c55c-4b89-a36b-37f326c4e118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fffa777-eee3-4924-8c4f-9071583b51f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491a250-1c24-4468-a50b-c22a60037a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5ab9ce-1571-4c63-8d8f-ed51a3f74e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cedf32c-ffa1-4ce3-830c-20802023c101",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce46747e-673d-40c0-9438-e7b5cf99dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0f5a15-0930-4a40-bec0-6abbf29d64f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5dce6b-d0a3-42d7-9b4d-842b05d7f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92351bb3-8ee7-4928-998a-c2603e4365a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e03cd7-fa95-4b8b-a4cb-8cfcc6044418",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be841e6a-cab5-4e1f-9423-cff1528a4dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e564614-50f3-4b2b-9f2f-df4fb252172c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50023222-dc38-4d57-a622-f1f1e29b5a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef344c3-2168-4068-9c51-d5ccb8c80f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a5841-de1b-4167-ae19-6f541e681688",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d61cb29-21d8-4f94-b7d2-87f29d543cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc73e6f3-a71d-4688-bed5-44315ff19ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc91490-2621-4559-8228-ebd128f1a806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c925c4f-274e-42d0-9c8c-2abe7afe597c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa281feb-2ac8-4645-be32-941321999399",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06531a2-fde4-4a3c-a6ac-bacf92e25b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffa7045-989d-4a45-98c4-89d74adc1329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f81fae-9395-4358-869f-a2a0e6fabfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78fc541-d465-4202-b3ac-c7b74926819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d1bb40-5677-4b63-99cc-11204cfd69ed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6fed2f-c559-4401-bff7-635b50cdce3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8b8183-50d2-4f8b-ac5a-01f539f43d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123939ad-4b80-4f2b-b0b8-5d2a3c8f96f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0f8ae6-45c4-41c6-b3ac-041c30745292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5b092a-c1f9-4933-91cf-d8fc3b62d64e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4978c919-1d90-4e4f-8367-eb67de109dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f620694d-ea1a-4cbe-a3b6-a278890d777e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3aaeaa-5573-4170-a50d-8bd3c42ffacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09cdbd1-efcc-41b7-9d1b-c4383f2c16c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d046e9-60b7-413b-978f-692199b40068",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d61bae-4b0b-4b61-8101-2781536f7e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b2c794-3286-4dba-ac2e-b7c097082a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91da6bb-ec81-4359-835e-150b1a8bdec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c250e9d7-018c-42f8-b576-fd772aa57d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a991bfbe-b3c5-4d8a-8de2-13cd0eed1121",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd379a16-c142-4640-b924-e3193d977d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02073fb3-318e-4f00-97b1-cffc4ec3a0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db18c1-5e73-4d3a-a1e5-38afac9a36cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c1c692-aea7-47cb-abee-d8f6c7a4f030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fc402e-f469-4068-82ba-206a052dab5d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4616f485-96ae-43f4-aaa9-eb477a81d72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ecab06-3c50-441c-9127-350f32d8a8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b572cd-1ff5-41f0-abb5-d9a8d1b58d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94e01ba-145a-444c-88d5-a561d26ce7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38286452-80be-4826-83d5-4ffa4ff77ebc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e406e7f5-ff6d-4403-9e9b-54cb325fdf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be34a1e-684a-4e55-a8a8-3e9b83dead70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af503d-9de4-442c-8cbf-559153f9a964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3b9329-7507-461c-8d3e-4429abcee87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c385da-119e-4ffd-bcb5-0a69bf09f888",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5442e99-c0e3-4a7f-ba5d-741e9b4f33a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59244b4-0d65-48ec-b2a9-88410c1fc02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fba253-8d3f-4376-90c6-0b10494c2dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692c7aea-4e2f-43ba-a3ca-315d311f4389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9040e573-672c-4afe-8404-b6f3c26c8c71",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ecfcf-1c38-46b3-a561-983a0176e3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a218a0c5-fdda-41a7-a41c-879207327617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbce973-8b65-406c-9c9a-018306bcbbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9f142b-d8a8-487e-98db-eec100e8becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594333f-d125-4a65-8ed1-fe270ad0d66e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e516d1f5-b685-4f6c-a763-bb25204be7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b21284-b625-408b-85c6-ed2d5623d0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fed76da-a8a6-4bfd-9fdd-f8a9eb6195fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e89a08c-3164-4715-8a60-f5e938defc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc641ed-e469-44eb-8fef-89546dc71b9a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfd3ee9-8c80-482d-bd2c-678def6927d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c89da9a-d25a-44c2-b9d6-e65334e2004e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcc61cc-38da-4d41-919e-9e8fc3d44ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f331f6d-7b21-4d56-8fc5-7d3801ce6f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c76973b-82ba-483c-ae9a-3acbdd87ab97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7489fd-fb90-4651-b6b3-0a2001e1e026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65b90fe-4d1e-40b7-9dba-cbcd727071c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1881845-8670-4627-9018-c3b5fb2f2ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbddbb52-0e8b-4c36-b4dd-a9219e24d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bddbed-a57f-4004-a216-b1351d2c0544",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91e03f8-2662-435a-adfd-ecfd228a6389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee40966-3bc0-4447-b634-bec099ed1797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50b121c-e565-4a20-a867-080a00b9838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec01930-31b7-4374-ad87-32a579cb6ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defcb15e-dfb3-4f9a-82d3-b9d72e228201",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d03b2f-d61a-402a-b881-738f3c7afda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903148dd-37c4-43fe-965b-35b0f72caca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd94738-2611-44bb-a362-ac44c60a8165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d101d94-7497-4c9a-9c5b-33f7723de74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d558eed9-a563-47de-8861-70030a85815e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fa0077-613f-4f47-bc09-bef85bbaa799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8952ef7d-f34b-486e-887e-e2a1eb936e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75593334-dee4-4fef-82f4-73efe1985fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c2e9e9-c7e2-4cd1-9fdd-18e07fc51393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa7a563-04cd-492b-b311-e28ec9fbac53",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0c018-bfbf-473f-b941-8c782f4ac98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb55f68-d45e-48d4-9ae5-579cfba17a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ad853-b3ce-471b-a7a9-38282263d5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c62c8c1-1e07-4d2c-a311-79d26c851e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ce6f1-7884-4516-bb69-735769dd17f5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9b94f9-8663-41ae-964b-5862372edb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc01fff-7f6e-4179-a826-d80b2eca7f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e878cc0d-95f8-42ef-8fcb-fa507cda170a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de936af9-d242-4bbb-bf0f-8d522e910c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba541cb-1853-4e5b-a638-c41292ffb8d0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251d8f96-6e7a-4cba-b7f9-f719f99e6a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6dd27a-2828-41e7-8674-b68943b7b895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0363a1a-674c-4e13-81fe-e8dcbff8dd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe2b2a0-c2f6-4be8-a6a8-82763e969885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f92e24b-dec7-4eeb-8eda-9be7d388ace0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bb2a26-d41a-4f45-9208-102ef02cedc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a26e575-d41b-47cf-9ca0-02eea58b9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0e743-2095-4328-8ecd-3a43a80065fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef3fb18-5d83-4b03-9f35-010e436d02b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d66882-ffad-48b2-8efe-651c00b71248",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c6f0e2-ba18-4bae-8400-23142db7aa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fc5d62-30f0-4dc5-9eb2-51ef160980b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a568a1a-753e-4350-9b9d-4ceac2bccbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6936631a-d9f3-4a96-aa8b-8a032c354020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59568a5-7ae7-4882-8c06-e6e9c5dbe9a6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7993657e-0a3b-42df-ac27-1fcd1050370d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b650a56-79b3-4b87-8478-0029c7819eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bf0600-3009-4e90-8c76-094b6a0deca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87736d6f-8276-4216-a722-74d76da768e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba275cd-280e-44ad-b587-4e7fa79e4f6c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6e0e30-bc0a-4bc6-918f-e7bd94f0fcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c379659-0842-41bd-b2aa-92c16b167b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a4bb65-7239-41ab-b505-6af0e9c3ee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67e82a6-0ef6-46b3-8d29-1d0592a432b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f24f8ea-7ed6-47b3-8d40-37f0e748bc4b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a539889-765c-4751-a8e2-e083b930264c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8878c903-79fa-42db-beb4-874743d16759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80b803-007b-42d6-8efe-35baae423a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe11c4-dedb-4ae4-a84e-6fba4a8bfbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32386315-4f44-4a83-861c-86c50d81b12f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92785bd-8670-4c01-88ca-44173878a4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c0848f-fdc3-4273-abec-39c452054f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39f9f06-5ee0-47b1-91ca-b3f401823ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333da78d-5f0b-41bc-9148-c57b1cde727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca79a18e-5cac-42b0-8953-a3c75cbecfec",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c755b-d259-4633-b651-9f8142f7e081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9c864e-cd4c-42b7-b748-1973c297bd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c33181-a6f1-4472-b157-aa1edf152eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b214f40-2ff5-45c7-9283-9e6c13a4283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6224aa1-45d2-4c2f-acf4-350858fb5cb9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97291a29-447d-43e2-b489-8f2f58ecb588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b39706-d06c-453a-bf23-ba10f16c5974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb0589a-61a6-489b-853a-f898089a7660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1632ef2d-28fa-4099-982f-349928adb928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b63d86d-4b5c-45f6-9c0c-8a7b8495eb49",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c87a4ea-b064-4001-9188-85ff918e7a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88c589c-8b48-44fd-8ce2-954db138fb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bffcbc-edd8-4ca3-9c01-4616d881541c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913eb897-077b-49e3-a878-a61b9138a135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df304da0-fb19-4546-a812-23d8bcb39591",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25832979-5c8d-42e5-9eab-71a9f232d74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d8d0fd-5e4f-4968-b05a-ef86b8b7a160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3085a74-7695-437d-ac58-22622a7fd72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b01463-ac1f-4a7a-9a3e-1f7cc783cca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52674c1e-e9b1-4d69-8038-cacc060c9a78",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c4f09e-8e1e-4f17-8ede-597da044b483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d06053-6d2a-4ff0-ba0a-ef20d727f5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cd47c8-a92d-4e80-bbe1-d245ffbdce2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2872ccfc-bfc0-4d3b-89da-1cb4798f864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30aab10-cb42-4074-833d-60713c1e5eff",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60cba6b-7b4d-4a6e-95fe-65a2be6f9f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a3a21e-fb7e-4679-973e-ae8b93dc543d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16611796-69f3-447b-87ac-3c08fd02b8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443d0d0e-7429-41b0-9a9d-b053debde2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ddba29-20be-41dc-af12-8fe4277374b6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272099c5-fb49-4222-9673-c6f980729e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a28b060-4d4f-4391-ad88-2393a340ead4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198e570d-1d9e-485d-b5cb-93439ec820de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edda735-fe7c-4565-941d-4633da72fc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027c0814-a75a-4281-9208-f8795fa7edb9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4202150f-e251-4d87-bed7-8ff7a4277aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f8b263-9c0d-4c53-a902-fee831fc2b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf88225-027f-44ca-8962-b2e74a6680c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9e040d-e930-4123-865c-384774cd8ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c94afc-98b6-4a32-9403-4ae3aefb6917",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8979aa9-a82a-40c4-932f-0e0673c40859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c6d36f-a20c-40cf-a4f9-2500c79a127d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa8dfd6-0918-4844-9a1a-701edd5dba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4f5896-496c-4061-883d-35905a553a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4542dc-d3f4-47ec-bf83-4e76065e7ac4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a92781-fe5a-4999-8cac-e0af18ff70e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c67223-2636-49d5-b271-8efc3b9f34d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d0db6-5ed3-429d-a576-b89dce182861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c462b81-e120-4668-8f84-a4c525d071de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f7801-459f-444e-babf-ecf34de2dd87",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1580c7b-9f35-4b4b-8c48-ba99f5a1e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be305a7d-887e-49fe-b8be-33b9ddfe0d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b68de7-5626-4703-9e7b-edea806a9335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3367aa69-9404-4938-b2c2-f8a15f07e69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69216d5-a4ad-4a73-8074-d8fc50c96048",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b672b1e-f427-4b61-a5bc-047f6bc1119f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb329a6-b54f-4f6e-8c62-21e197caf21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051ab32-99a3-49b3-aace-6948e3a8be40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b7ac09-13fe-48c3-83cc-4b8379143e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a4c274-7097-4864-b89e-69d20c0fe818",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f968ce-ea64-4465-9589-c60698cbacfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e3ca6d-41c0-46fb-8529-be21ba2ece34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80bc37-326c-408b-bae5-1d3baec8798c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615abff3-35e9-4040-89d1-f39868f984ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9383c6f-ab37-4f31-ac0a-c16324e3387d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45da5f66-c215-479d-98fb-903dc7dd035f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d46fb3-d31b-466a-a8e2-e48b4f92c0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ca6876-93fa-4896-b1b6-8488ea4b870a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5e87b8-5594-4bb0-a708-9f0a85405fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365a748c-8537-4a2f-9261-450cfbadb820",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de956e40-ea8c-4a8f-b682-90c35e6258a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6918172-9c81-4063-a2fe-4218f86f8808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beeb860-2a2b-45ab-ab82-eba400cd972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d55110-05e0-49cf-a4a5-f7ff0b1513e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f514fab-7ead-4b81-a0d1-c77bcd34c67c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26e7062-5b85-412c-bce0-c26f21f5fff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fb8e52-0942-45d1-968f-ad79e80b3342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba613b5-4fb8-4268-9f94-9e7964d12fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d71ada-b17a-4297-8401-0970f1da1fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5d1484-fbee-4be5-be0a-4d6f6c976417",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c00968-aa17-4696-83c5-326e691939d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66dea245-78ae-4bb6-8ca5-8fec2201ef1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff83a8-0e22-4e4f-86a8-a6f23b46b550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5b022d-1c70-4584-b897-f85566c31b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9975f079-676d-41b3-9c56-34ad213a3080",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274ee34-5c2a-4b1c-a601-0a9ecaf1ea43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fcb5b6-7a42-429b-9d2a-0126dcfae35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269caa95-203d-4683-b7fb-bafb309fe9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729746cc-b776-457b-b773-cc7df84e3df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f72d0c0-c301-4c3c-93de-55f173a0087e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81a1660-8712-4e06-a208-d0a6fb6fb6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bbb2e0-ef07-47b4-992d-86d31054f6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b909a951-1a25-489d-8d12-5a23504b0a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ab03e7-1dab-4be8-9796-d5647b967e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43118da1-1df5-4c07-92a5-d84f1b2129cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cfe0a9-eaad-41e6-8ddb-672c01aab59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ce9e6c-2c22-49b5-825c-93ed8ab4d72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d899569-708e-4c5c-bb08-7971dbdac7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f91eb37-1699-40dc-b399-62f34d002d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e02b752-cd54-45a6-90cd-2f999d1a50fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d198048a-0d19-43ea-8889-751915dedf64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbaa452f-cc39-4fcb-a02c-e55eba847f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5748400a-cdc0-4638-97b7-9f51d75af03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375cacdc-4e37-4ca8-98b1-f9a5682f78a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd74a34-43dc-4c7f-95f0-dab95639a6e9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c5865-05c7-47ae-9cfd-fd37667a6af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb788d9-3138-4231-8ce5-6c6a6ac916df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb415f5e-7093-493c-88c0-d6bf4f4832fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf09a106-d11f-4f90-8d92-4655d8498579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957db1b6-1e7b-4587-b964-79ea2d07f38d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b115aa-3cbb-4360-94ce-7231aa8b246a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cab9201-cabb-4b7d-a716-c4279f49c177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11883b61-32ed-4e3e-a80f-61449d3f44a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29d3348-5eb3-4633-b05a-23fbb41ef76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6433a826-e151-430e-9e1c-8ee54abbbaf3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660ba61-b928-460e-9e3c-99c12f5bcedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc3d0f4-877d-4f30-b83a-6547ed3b8c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5187a7af-9211-493f-9df5-0c873e0f8c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a575f0df-278a-4280-9550-8a180718820d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa6b8f3-830c-48e7-935d-dbec3c2f6fa8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e54e8f7-ee29-47b7-a106-7a6730d9ee25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2962aba4-7422-4875-8d06-feea6c45d59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe011b66-9902-498b-8f9a-aa2bb48e3649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177e5a8c-b7ec-4fd6-9341-2dbd720e91df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d62aaa-8a00-4b3c-a09b-3a8b173f7993",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b855fe29-6265-4b19-8e32-7703f4c8d5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd91fff-0c5d-4713-b60b-5e2e2fe28e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54deceb8-23f4-4f89-accf-2a32f0d5e077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6456d3c2-b252-4c2e-9233-2b18d2af73b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e5c1a0-da74-43dc-8642-3baaa8f91f2c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3253ee78-b587-4c8c-a2ca-e34fc184c126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c12c69f-0275-4ed7-8d8a-aa8f0426332f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8deeb8-162b-4a6a-9700-337ac5a89ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60e853a-4741-4fab-b6ed-dd240ad8436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ccaf2c-f382-40d7-ae42-1a7d662efaee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f11e6-9874-448f-a489-f1af5a6ffaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e924b8-58e5-4cc6-9a82-92f5186e3d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd43058-b6d5-4d74-b028-4eaca22275ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e933f6-6095-43af-a8c6-7975ae12ef2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965165e2-7c71-4283-bebb-109e4a0de1cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f1d218-87b7-4158-874e-a9f3493863f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6f8784-6f88-44d0-b388-325e73f6e59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b38ff2-30b0-4c6e-96b2-5330b77c9e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca82b774-d115-4e75-b257-49fd7af4f87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc22e7e3-216c-46a3-b895-2168ab8b1ae5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3690908f-2e95-49b2-b826-d3b5f48c465e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab16660a-85f2-4656-885d-a352cae6b8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050204f3-0dff-48ac-b638-5a24fca6d58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71288793-f0f2-426e-b0ff-1fb1e9ef98b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d678cf8-146f-4cb4-a515-8b7bc0112355",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc89f9-063e-4ac4-a0a8-83ec048eb65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a1dddd-cefb-41ca-8d32-28e559cb2d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc446c1a-856f-4202-ae17-d0125196ff48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dddf04-1165-4e96-ae1a-b66920f19851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc2f9d-37fa-47d9-b1da-46e3e756d1a8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3364ceb2-bc42-4222-b385-db18b197a73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67731896-0b7b-4def-b5d1-d0236505ef59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34549d80-16bc-4406-912c-57a9bc246410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfca5692-5957-494b-8e54-d128663caa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4320668-513f-4cfd-abe3-ad908f94fa94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfff001-a192-4eba-8bf6-b15b471e7d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c00694-d10d-4653-8741-dd96c1bcfae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bf7c3e-05ca-4cc6-9535-dc6508ce7372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbba57f-f473-4008-97bc-24e5d261e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9da6a8a-e065-404b-abc2-cae97ec8ce98",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234f7485-4ee6-4d6d-8134-7589f5cd4262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346085e3-29c4-4929-b307-c65224364d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e04235c-8b6b-4e92-9e16-2f3898e0667f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5655bd4d-d388-4c76-b877-1694a26c24c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f07fba-7e39-42ad-99b0-39a55ee1c8da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc34033-fac4-4014-9dfa-9111db2e6a37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff431edf-81b1-4a8a-b5d1-f227e7ee39b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bda4ee-ba05-4d55-be9d-0494008faa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40e74e7-34bf-4b65-93e0-419011826e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6acb8f-0941-4305-b66d-677be2684398",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a46352-a96d-4c29-8a6e-7c597ec606bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e55315a-0109-48a9-bc86-d85541b7791c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9501171-0ba6-460b-aaf7-73ce66351daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c242f6-21b5-4ba4-8fca-3cdb3ac4b9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af0a302-fa3c-45e8-bbaf-d20704a9028b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a282318-bae9-4d32-a235-1b5826cecc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a2a2d1-0acd-4902-ae14-ebb0037fafae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44904eff-f4c2-4331-919c-5330e8efb482",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e09900a-f3c3-4979-b015-bbfa15eea77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81070fa1-c793-4522-acea-9a682fbf469b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb42c4fa-510f-4c21-bbf9-b9117605bae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6daea37c-9c16-4d22-9697-3be9204e2986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9d7423-1592-43f3-8cba-3ad73fb642cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dd9801-47c2-4b74-8fd3-39292a92f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d72028a-8eb0-4ce0-a0cb-c708508f4502",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc70abed-28c0-4346-804a-e83bbe7e995e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dffad4f-a3c1-47c0-adbd-a6765b27425f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831df894-cecf-442b-bc8c-8558f28f1a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c40f7f1-fba6-4389-9a8e-f34ee9e59a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae2a22-ca88-4913-ad5a-94fc8e9aa80a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5245319b-b7b7-4e3a-9497-e17a7e3a0ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99392706-bb8a-4051-8945-b32baf5798d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f79937-52f1-4cc0-92c2-70a64abb40a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca2f897-7ac0-45e1-89b2-e7b1f116d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44996769-e317-4b01-bdef-dc3fa87009c9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4653ba-510c-4a5d-8747-5e9df7c7cf50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b6b444-bbb1-4a8f-8564-7f0eefd6700e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc8fc37-f30b-455a-b88c-71a0b142031b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c2d97a-1438-48c8-af71-ccd4ddcc9f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01daaf48-0473-41dc-9543-8e5ba64cd5b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0be5294-d9d7-42ba-82ae-1432911ab9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adcebf7a-0a4a-4ce7-8452-5718fe216e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f07397b-90f9-4680-a2b9-03e901121253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07291a19-cd93-4f2c-8c5d-3abbb03221ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292650c-83ff-4de8-815d-3bdc4323b7e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e8348b-27c3-4f97-9442-a57fe6e9ecb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1684ec-90f6-463b-8687-71411160cca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de728a58-a046-460c-89ce-642064194d42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b500ae4b-fa62-448a-a360-d0d88501b700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1438a7fc-b18f-41dd-9488-e7e3f21fd9fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7bb547-d639-4872-9879-71509721f47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b825ecdd-4b68-4d3b-b684-2d13a06d201d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a0692e-18e6-4be5-ab18-ea4d577bbd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26296dfc-b268-47e8-85b6-ef1aa7075ad5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80931d46-24c4-4aa5-8f98-7a8262383884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df4f7f60-37cb-4361-8925-d655f1f97c0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0263015d-b136-4916-a172-b0d503bd9f2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e87c30b7-3187-4717-8321-a72d480fee57"
                    }
                  }
                ]
              },
              {
                "id": "39762e32-d2fe-407b-8867-f3565f635805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39b10071-5635-4b83-8663-ea7f20589e50",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7cb487-bde9-4b02-af38-830cf3819f71",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5af63737-10dc-4b1d-9953-50fa31338e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97da5db-42bd-403d-a9c5-e77890aab67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "448fe48c-6263-4acd-8726-6d37d2e9e7b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0b97bc8-236d-4946-93c7-8f0c3b764815",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9474e126-6389-4da4-b098-a972f749e84b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08d9caa9-ae2b-4959-a168-6d84ca7e85fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a007cd2-fbcd-4864-8030-296caff25043"
                    }
                  }
                ]
              },
              {
                "id": "0f19511b-bd81-4a51-a15b-053be52fb39c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1a2febc2-5a88-44bb-9eca-a99ae0cd3540",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf68415-292c-4892-84cc-6ab37a3aa75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8c5de2b5-7a40-45de-870b-017a6ee078b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20482aa-1564-46e4-b7d5-52d5f23ea5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8571a677-bb38-4c58-a82f-3a97dac00657"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f704165a-cf87-4843-b850-20f0710104d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "305df744-c300-498a-acba-80b69c4dbc15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91173715-38f0-4f9e-99ee-c1272dafe88d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "810b1eba-222f-4a42-a693-05e3f475920b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42c81e24-c275-4d4a-b0d7-4460886baa8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce22636-6a6c-4792-8a59-a09121a7abaf"
                    }
                  }
                ]
              },
              {
                "id": "9d543f11-3eb2-46ee-b380-6434ca17f4f5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a06e5d0-ac67-4618-a009-59de7f1722e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b06ac48c-bc65-42c6-b3eb-40b34d48f6ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17eecaf2-8f68-42ff-b45d-85513fcf2e60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df36ebfd-8373-49d2-8ba8-45c89d7c8e52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9935eb50-ab84-4f54-9683-89b58e7dd962",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41e7b18e-2bef-47dc-bf28-ecea74a4d4d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ad1c21-925b-4e03-a31c-bca6bfa62058",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85771c84-a8f3-4d14-9d4d-ef899f12aa4d"
            }
          }
        ]
      },
      {
        "id": "6b98ced4-25f4-4267-a94e-294e7d84a0d3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5d47e321-0e19-4155-b373-ee3d3100c7fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce516953-129a-4da2-b69f-e1204fbfbcf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "059bf4e1-10de-4f7a-9680-1d6e87b01884",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4362e2-7fbf-4a55-bc81-9fb0598c495f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c6cb007-3e18-4553-bee2-3a5f2e056055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b466eaf1-1288-43b5-9136-c530edd53a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e2adc68-cd2f-4ea5-b745-a39861525d9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a4c17e-bebe-4187-8301-0faf13e8337b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "128df8f1-edaa-4379-9038-507c0bc73943"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ac7bde4-224f-47d5-916a-d801cc67b5d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c672b46e-7c95-4e6f-a347-f606ea658d34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cac7032e-dd1f-4acc-b778-c820ecf55484",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "82e3658a-92b8-4844-9e18-a7ab819d4a20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e473b09b-2db9-4303-a230-560cf3745b46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01a43b9c-6159-4a63-ba5d-1571ce8ecf9e"
            }
          }
        ]
      },
      {
        "id": "14578d8d-41f3-4652-b6e4-0fd6db2ea949",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4938eb1d-7438-41ca-aaea-81dced2e458c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78875b7a-50ca-4468-82c0-33e8baf9eae3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "380b2631-0ff8-4863-8c17-bdb740e35514",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bcb6d4-2e79-4aee-ac93-6dd782b18469",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4839685-25fc-4ad9-a5da-aa9ea66dcc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa1f18-12fb-4b05-9115-636aa0df7c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89849994-ff2e-4562-a56f-3efec725d8aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04e0bd59-373d-4d51-9331-b6e53ff11f13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ed6e04f-99c2-40e0-b355-8419af07b8b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c3f982f-1d2b-4b3c-9b26-409d02da0f04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa97355d-0978-4d84-9f2e-337886cb0091"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f298d57-2380-4324-a315-f456a5a28f97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94d2f27e-ea60-4929-aaba-adfde22c1155"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd87ebdf-3fa5-4c52-a189-be69b98c4274",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd671914-6d47-4958-904c-698015a22ec4"
            }
          }
        ]
      },
      {
        "id": "dc60a695-4ccc-4274-8492-ba393ef307e8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6cb25ddc-b140-4554-b968-ce4187377139",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e68874f-9129-4c4d-a721-59cfc7077131",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c90e65cd-d3f2-4e89-b886-e7bed52db335",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9538f193-072c-4805-8750-f23f15524bdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20736977-f6b2-43c6-8fc7-960624963c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f24558f-c973-4268-aa91-3db06a18277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26043b63-1777-4ca2-9a21-2fde7d278d39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f13bd46d-4566-46c0-9f07-4b7bd96c28ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dafb967e-e467-43f2-8b3d-2b7a184a7d15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0bcdf89-1854-4acf-8462-4dc87093fec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f66eac7-36ba-40c5-a0f6-5052551a0cb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ec39467-d6f8-447b-aa31-1e87204a4f60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3efbc20-a080-488a-b95b-c7ef8659d5ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a493b4e-f693-43fc-8db0-d239d326d18d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eda7be56-5d4f-4c8b-9ba6-d2bfd1ba9f6e"
            }
          }
        ]
      },
      {
        "id": "34dc8fcd-7884-4097-a054-6138391a2726",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0551040-7893-491d-8323-812c72da0d76",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b85d859-2874-45b4-b59a-2fb4c86695a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "40eb488a-2984-4810-ae2f-3675b37548b1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44866c87-efbc-43d6-89a3-ce82a7da1f51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb328927-72ab-4965-a3c0-21e1a462f22f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 280.1087719298247,
      "responseMin": 22,
      "responseMax": 9201,
      "responseSd": 1114.637641737975,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698539759553,
      "completed": 1698539851638
    },
    "executions": [
      {
        "id": "cf576f56-5a10-4d17-8b06-67e33925f914",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "36b389bc-e915-4227-a478-8b75b1355d20",
          "httpRequestId": "cd0783eb-5c43-4458-8d55-b0d4a907bc9a"
        },
        "item": {
          "id": "cf576f56-5a10-4d17-8b06-67e33925f914",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "54cc63bc-25d4-4604-8d27-60cf350985ee",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "02730f87-8756-4727-a680-f5129f2f3057",
        "cursor": {
          "ref": "39830e5c-b47c-45b5-887a-1e9a5ea9a001",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef6f7eff-2058-4c52-bfa1-6f3fc9142124"
        },
        "item": {
          "id": "02730f87-8756-4727-a680-f5129f2f3057",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eebe5314-3aac-4273-a4c4-34cc022edeaf",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "e2c0c48b-1bc3-4479-bec5-68a8c6e3108d",
        "cursor": {
          "ref": "2f7a4608-1084-4d1d-a6e7-4db7d2f8b203",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "143b2c52-7296-4aee-925e-3d6502757302"
        },
        "item": {
          "id": "e2c0c48b-1bc3-4479-bec5-68a8c6e3108d",
          "name": "did_json"
        },
        "response": {
          "id": "3b71811d-e01d-4496-a3a8-fe4f75ea39e5",
          "status": "OK",
          "code": 200,
          "responseTime": 1500,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289d3991-554b-41ef-9a03-af81818bdae3",
        "cursor": {
          "ref": "38d34937-78ce-4db4-b868-dad1c9826b13",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2af43911-3337-446c-8606-acb8bb70158f"
        },
        "item": {
          "id": "289d3991-554b-41ef-9a03-af81818bdae3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9611bfb8-19c0-4d69-aaf2-02609d0c31c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289d3991-554b-41ef-9a03-af81818bdae3",
        "cursor": {
          "ref": "38d34937-78ce-4db4-b868-dad1c9826b13",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2af43911-3337-446c-8606-acb8bb70158f"
        },
        "item": {
          "id": "289d3991-554b-41ef-9a03-af81818bdae3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9611bfb8-19c0-4d69-aaf2-02609d0c31c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d33088-1a14-4305-922a-6d57f90a1e85",
        "cursor": {
          "ref": "6a4e0027-f314-4595-9060-fd398750d0f1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a9100736-1cdb-4451-a546-a9e00aeb6f07"
        },
        "item": {
          "id": "74d33088-1a14-4305-922a-6d57f90a1e85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "913a4db9-0b81-4246-8685-368ad4ca0640",
          "status": "Not Found",
          "code": 404,
          "responseTime": 154,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252ae241-b67b-4352-94e5-648c40d45ec7",
        "cursor": {
          "ref": "c7a0dc0b-fd74-432a-99e1-f70b7076ffe1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6cae29ab-acf8-47cd-aff8-d47b04e1c8ad"
        },
        "item": {
          "id": "252ae241-b67b-4352-94e5-648c40d45ec7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3973dd04-68a7-4774-bb4a-568e002998e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e59718a-cf3a-49f9-965a-0822b76fbdea",
        "cursor": {
          "ref": "2df867c6-7800-4cf0-bb0a-903bbfdc8299",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ce8c024-07c8-4c3d-a716-e72cb568f81d"
        },
        "item": {
          "id": "7e59718a-cf3a-49f9-965a-0822b76fbdea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c705e569-35bc-4a45-ba0c-ab0aa5311156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 101,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f20b9-159f-43e6-8692-722bb1457617",
        "cursor": {
          "ref": "66b2e3ca-6090-46c1-bb7b-e3f0f03c2ec9",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "106b07b3-0a58-4a5e-8eea-7a54f22e91dd"
        },
        "item": {
          "id": "3d8f20b9-159f-43e6-8692-722bb1457617",
          "name": "identifiers"
        },
        "response": {
          "id": "f318ab91-ac23-4a53-bbeb-5155e4d05cd4",
          "status": "OK",
          "code": 200,
          "responseTime": 1267,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862817fd-16cc-479f-967a-b1a95e0fb10e",
        "cursor": {
          "ref": "5144f41f-54b6-466c-8375-377b2982dfb4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a30c3e08-d1a6-4ed9-be63-de1682f91401"
        },
        "item": {
          "id": "862817fd-16cc-479f-967a-b1a95e0fb10e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1ec4d047-3de2-4ab2-ab6a-0d42754acc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8532814-9803-4f66-98b4-1db346f85c53",
        "cursor": {
          "ref": "73b1d26b-15c0-4024-8263-a68d9873b875",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "42b5aac4-87ab-4f97-a07a-7ca4ec7dda53"
        },
        "item": {
          "id": "e8532814-9803-4f66-98b4-1db346f85c53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "978c4c17-0a80-468f-a2ce-9b71e85764da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae19699-b741-4c76-9aef-2d35cbbd233b",
        "cursor": {
          "ref": "6deba6d0-c014-4f37-bc74-5e6bef9aa581",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ab3614cd-b23e-45fa-83d5-6b21a28e615d"
        },
        "item": {
          "id": "4ae19699-b741-4c76-9aef-2d35cbbd233b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "539b95e0-7adf-4f4b-a388-463291160b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7b1ba1-c227-4bb9-89df-58ca35bce36c",
        "cursor": {
          "ref": "b1c2abf3-a082-4b01-8dc3-92ef32d646d3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f2410408-e5bb-46fe-adf7-40ac270833d5"
        },
        "item": {
          "id": "2a7b1ba1-c227-4bb9-89df-58ca35bce36c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3e269899-c207-482d-bb74-af897c173bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f37b67f-7f02-40c9-810c-fc353b541219",
        "cursor": {
          "ref": "ee6684dc-1489-4ed2-a188-e39b1063c793",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "876f3129-5959-4d9b-a549-d2e224835940"
        },
        "item": {
          "id": "8f37b67f-7f02-40c9-810c-fc353b541219",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "40ac3034-ab3c-4be2-aa70-a885c6ec5b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9bca07-61a4-43b5-b0e0-84b9964170de",
        "cursor": {
          "ref": "4f6d4826-a8b5-4866-b509-5a8218483935",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f03ee2c3-fac4-46c9-b5fb-9c8f6cd54457"
        },
        "item": {
          "id": "1a9bca07-61a4-43b5-b0e0-84b9964170de",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a99f1bc8-8158-4ae0-be88-8a22760263fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b30d489-b1af-47ab-92fa-c8284d010d48",
        "cursor": {
          "ref": "ffa1117c-a0f4-4748-b7ed-fbdf28d8aa20",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b09212b6-fb9f-4785-afd7-9a4a4759691f"
        },
        "item": {
          "id": "8b30d489-b1af-47ab-92fa-c8284d010d48",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7edd4bf5-275e-49b8-b9d0-db6a43e2df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c393128c-5526-4b1d-b417-b9417b1db3d1",
        "cursor": {
          "ref": "87610407-13bf-454f-8cfc-e282934d97c6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6582e50b-7bbb-45ac-892b-e4123ac59e99"
        },
        "item": {
          "id": "c393128c-5526-4b1d-b417-b9417b1db3d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fbef1036-5d7c-48ea-a575-86e265edeba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e6f13b-3b51-463c-9bce-4392fd35fba4",
        "cursor": {
          "ref": "cd441cf9-4efc-4c5e-b846-3dbdf8570dc6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f33e5c8d-531f-4d01-a5c4-37d3da97ddd3"
        },
        "item": {
          "id": "c1e6f13b-3b51-463c-9bce-4392fd35fba4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b5b70dd1-a881-4336-af64-889f7f297bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7855118-8689-49bb-ae5e-01ec55c45bbb",
        "cursor": {
          "ref": "6b232ce7-2d35-4fe5-9b18-60c56b4c0275",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a5407bbd-e23a-4dc9-9173-289ef2bc4a6c"
        },
        "item": {
          "id": "e7855118-8689-49bb-ae5e-01ec55c45bbb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7fceb476-3a78-4207-b76f-5db41fb7207b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e5afa0-95c6-4598-bec7-ca53b31a817b",
        "cursor": {
          "ref": "d212dc94-15ef-480e-9bce-b20a6ba1355c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "52cff28c-c36c-4834-a11a-a7bf1843c9f1"
        },
        "item": {
          "id": "35e5afa0-95c6-4598-bec7-ca53b31a817b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9e7a83d9-126b-42b3-8483-4db48dbd2edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc86d93-cf4d-4b65-beaa-3b6c200b5163",
        "cursor": {
          "ref": "6593ba0b-7e9d-49c6-abbf-22fb935562f5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "64602e19-f217-4c8c-a124-0e552ca46b84"
        },
        "item": {
          "id": "acc86d93-cf4d-4b65-beaa-3b6c200b5163",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "03e200c3-2702-4447-b687-647a98179183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40045d2-1d86-4d16-a0ea-fb8eda688ffe",
        "cursor": {
          "ref": "2ef39687-9ce2-45ac-9f58-6892c6cac775",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "70e9fb2c-0b5f-4fab-bfcc-640d364bc8ea"
        },
        "item": {
          "id": "a40045d2-1d86-4d16-a0ea-fb8eda688ffe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7cae383e-1236-450c-9edf-c06cfaa941e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f4d145-5044-4b4f-891e-5d354d366711",
        "cursor": {
          "ref": "7cf847b2-e2d3-46d6-8204-d68e689e8f3d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "431dffa5-5b12-4e71-abb7-6a809e49a2bc"
        },
        "item": {
          "id": "40f4d145-5044-4b4f-891e-5d354d366711",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2dbe63c1-cbdc-403a-a083-1558abb55d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d843e56d-411b-407b-a59c-eb1e66835a05",
        "cursor": {
          "ref": "c391dda6-d38b-4693-90e0-cbd80889ff3a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b3ea7a75-6947-4ff9-85e1-7d5c4352dfab"
        },
        "item": {
          "id": "d843e56d-411b-407b-a59c-eb1e66835a05",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b8e6d32d-4675-4b6f-aea6-dc28f423cb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52454b9f-c6f4-4098-9e3f-2f18f2467332",
        "cursor": {
          "ref": "5fe5304c-8405-45df-825c-c462170ab1ec",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "afbe8ffd-4b9e-46a4-9261-9330592b86f5"
        },
        "item": {
          "id": "52454b9f-c6f4-4098-9e3f-2f18f2467332",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e379469-ad15-4a7e-a4d1-f8b45629d3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0def629-3a55-4788-a9f8-5259fed6ee82",
        "cursor": {
          "ref": "cb9877a7-c13a-4a89-96c8-c368f3d067d8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7feb91b6-f0f8-4e8c-97f7-d541a338691e"
        },
        "item": {
          "id": "d0def629-3a55-4788-a9f8-5259fed6ee82",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57a832c4-4c82-4c32-9861-25ff5bba4d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac7a14-5917-4a3c-b4cb-77857cf5a6fd",
        "cursor": {
          "ref": "32ed9b86-219f-449d-b289-28606e78e683",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e073bafd-ca0d-444f-9fa9-c9ab6038e9ef"
        },
        "item": {
          "id": "5eac7a14-5917-4a3c-b4cb-77857cf5a6fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "067ee509-bd09-4ee5-8957-c70660f7ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb95128-c050-4423-93a6-fdf49202d13d",
        "cursor": {
          "ref": "76bff0cb-9b10-4974-b7e7-a7ddac7ed76f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "029a9c7c-efb5-4c61-b22a-7ef5c04c6fab"
        },
        "item": {
          "id": "4eb95128-c050-4423-93a6-fdf49202d13d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f5fa322c-251a-43b0-9b40-abb35f41de00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922cbc7a-7629-4fa2-872b-305faacf4009",
        "cursor": {
          "ref": "0599445d-e396-488b-8319-4a5c36a8c702",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "754b1216-f3a0-41e5-96aa-d39f9e6a03ac"
        },
        "item": {
          "id": "922cbc7a-7629-4fa2-872b-305faacf4009",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "062f88dc-76d7-4033-b8b3-6fe8d57a91f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c9b7bc-3b4d-49cd-8a79-ea6f842c184d",
        "cursor": {
          "ref": "349a406f-df51-4e7b-a824-7dc835c7db0a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b89bab85-2102-42fd-8fd0-3bc0e4f8b9c7"
        },
        "item": {
          "id": "19c9b7bc-3b4d-49cd-8a79-ea6f842c184d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "863995e4-5359-4211-8d36-99c563c6e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3a45a8-5ef9-49e2-a41c-d20aa4b8b205",
        "cursor": {
          "ref": "5d7e94e1-1831-494a-8a1f-904e7761b9ae",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc79a090-0d9a-41bf-8c65-9044eb569f25"
        },
        "item": {
          "id": "5b3a45a8-5ef9-49e2-a41c-d20aa4b8b205",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d622dbc7-8598-4f9b-a853-6991674c4204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e0301a-dd30-4d11-a4f7-46f57f8da0df",
        "cursor": {
          "ref": "d62226d0-00ec-4dcc-b1c8-2127f5d0fec0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1d3b4071-a51c-4838-9b78-5872a97d908d"
        },
        "item": {
          "id": "49e0301a-dd30-4d11-a4f7-46f57f8da0df",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3b0455b9-df5b-4d3f-b907-9b8f35c3fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af625a32-6c6d-4cc0-8160-4e1266916013",
        "cursor": {
          "ref": "f586e50a-369c-4d38-b0d5-52b2f56c5ffd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "68c720ed-969c-4113-8a0f-6f176759aeea"
        },
        "item": {
          "id": "af625a32-6c6d-4cc0-8160-4e1266916013",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ee7479a2-e773-4998-99a7-c78816502c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed50777-2457-4151-b620-7c37a750e4df",
        "cursor": {
          "ref": "20f999c2-2527-45e9-a457-d24e398e92b8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6dc4203-ff6e-40f7-ac3b-c2df8a4ac4fb"
        },
        "item": {
          "id": "7ed50777-2457-4151-b620-7c37a750e4df",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d5e56204-1f0a-42c3-a02e-3bde9fe1e5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c25d448-e699-4178-b396-ec48086c98e7",
        "cursor": {
          "ref": "789ce50a-4f78-4219-8401-4ff2ec370d17",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "189f6640-7a66-47a7-8bd4-78b48f62f7e3"
        },
        "item": {
          "id": "0c25d448-e699-4178-b396-ec48086c98e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d48a2f14-9038-4700-b03a-b7ae7c76c1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31bdd7b-9f10-45a4-aecc-3ac5bc91d146",
        "cursor": {
          "ref": "2ac25832-b042-43cb-a3dd-5b3a8ae92e6b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0822d43c-f86d-434d-82eb-b5bd7d0a14b6"
        },
        "item": {
          "id": "a31bdd7b-9f10-45a4-aecc-3ac5bc91d146",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f44556af-ea97-4c7f-8de3-473da5f221c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d34ce-6120-4f9f-a975-aced21a99d29",
        "cursor": {
          "ref": "257877bd-88b6-4d4d-8c56-f58e7eef809d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "13eaca1a-1f18-41df-92b6-e51fb21542e5"
        },
        "item": {
          "id": "240d34ce-6120-4f9f-a975-aced21a99d29",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "091cbcf5-fe19-4f24-b529-ba335e69247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e403ca15-c0ea-436b-bf01-d01008abd763",
        "cursor": {
          "ref": "6fd9f2e2-26fd-4292-ae2e-5d8880b908a5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98184d73-f3ae-4271-88db-87c7ee32e545"
        },
        "item": {
          "id": "e403ca15-c0ea-436b-bf01-d01008abd763",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c42d12c8-0acd-427a-8ff4-f21237bd13d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ece82-ede9-4560-bbe2-172c93d20e37",
        "cursor": {
          "ref": "d46550fe-6eb8-48a6-897c-04e0393a5e87",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6684bef6-a4b7-485a-8103-657081c779cb"
        },
        "item": {
          "id": "8d4ece82-ede9-4560-bbe2-172c93d20e37",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e9f7074f-19d1-46be-a0c6-2ac89704f060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b6631-ffdc-4474-8151-723488aa164e",
        "cursor": {
          "ref": "38cc97d9-af93-4c64-83c5-5b1c0ddd274a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bf4d6e23-37e7-4ca7-ab3a-8ad32a0977c8"
        },
        "item": {
          "id": "2f4b6631-ffdc-4474-8151-723488aa164e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "525d94a3-9b6f-4648-9199-1d002c57bdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706cecac-9410-4b13-aa20-497e74ceda88",
        "cursor": {
          "ref": "3bee0185-0ba3-4844-a8ad-1f6f745ec92f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a5ba3ef-1740-4a8d-82bd-e8ab135d5143"
        },
        "item": {
          "id": "706cecac-9410-4b13-aa20-497e74ceda88",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "01387ed8-a966-4a48-aee7-94428126d0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ff04f2-e745-4ef0-af18-6bc54b46f262",
        "cursor": {
          "ref": "1d4c19da-95ec-4881-99c0-1e316a8f84c4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "553aef68-1b6f-4f75-834e-58220c020327"
        },
        "item": {
          "id": "b6ff04f2-e745-4ef0-af18-6bc54b46f262",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3516c278-b6ab-4877-9711-96607fd31771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02276c81-52f2-4c6d-bde9-35049eb7052e",
        "cursor": {
          "ref": "7d81c489-0a90-4da2-9d0e-e3b6cf290e9a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c08e8cf-5f73-40a5-996b-77a55e6fcb11"
        },
        "item": {
          "id": "02276c81-52f2-4c6d-bde9-35049eb7052e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b1ef1ae-fa16-43c8-baf3-998f84385460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3afe8b-e7f9-4f56-9621-076c345407fd",
        "cursor": {
          "ref": "6f846899-8f5d-4180-96c4-0b334aea0482",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "73087b57-868c-480c-982a-8a3ad1742f3f"
        },
        "item": {
          "id": "6c3afe8b-e7f9-4f56-9621-076c345407fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "792224a3-4f02-4fe8-8161-e3b30a4cc06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cae349-a130-422f-aab7-4b8c91a272b3",
        "cursor": {
          "ref": "3fdb1a84-9213-4c36-8e93-1b731049470b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f0a0692c-e1e8-4d67-9454-dae57bab980c"
        },
        "item": {
          "id": "28cae349-a130-422f-aab7-4b8c91a272b3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8a2449ad-a483-4619-bd0e-d7af76cc86e9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1484,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54071f6b-f70f-4f3c-9f46-8649d73fa24e",
        "cursor": {
          "ref": "dec84ea3-3ca7-4475-a08a-6e6ac60ea94d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f2b0b5df-fe31-4aa1-838f-731f725af2b8"
        },
        "item": {
          "id": "54071f6b-f70f-4f3c-9f46-8649d73fa24e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "080d185c-1149-42d7-aed1-e026743b951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c23823-c1f8-4940-b4b2-40188b74de94",
        "cursor": {
          "ref": "0e32fee9-a1ec-4ad4-bc59-3fb40a4811ac",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "128c07b2-9f8c-4f92-b3c4-a1792f86747d"
        },
        "item": {
          "id": "70c23823-c1f8-4940-b4b2-40188b74de94",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d1a3da8c-603b-48f8-8563-41f2853a0e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a0af78-6029-47e3-89e4-8f56b9e6aeef",
        "cursor": {
          "ref": "274d34d2-ce9b-4d99-8a5b-7d518b11a835",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "09d63bf4-60b4-4aac-a40d-428cf610342c"
        },
        "item": {
          "id": "d7a0af78-6029-47e3-89e4-8f56b9e6aeef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d93adee6-23e8-44db-9202-568b498d4854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1499057d-0376-45c6-8d4f-431a25b31937",
        "cursor": {
          "ref": "d15a4972-2be8-423d-aa8b-da2fc96464e4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "40749e21-fbde-47d8-b048-f31bd3c74b26"
        },
        "item": {
          "id": "1499057d-0376-45c6-8d4f-431a25b31937",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c8121db9-c042-4507-8e88-60b234578e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368bd643-b994-4266-8646-f8cd44d5ea79",
        "cursor": {
          "ref": "b52aaa07-d77f-4dc4-bf8a-d64e9fd8192f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6673163e-f78f-47ba-b017-c352e53d5a89"
        },
        "item": {
          "id": "368bd643-b994-4266-8646-f8cd44d5ea79",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b1a359d1-47e4-4053-af02-ebe4e7bf95ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cc461f-15b6-4a77-8cb1-29201aad3296",
        "cursor": {
          "ref": "f72dd372-7496-4b9c-be37-3eaf49da6f4d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "49cf3550-3235-4884-8a22-0403a6e2f525"
        },
        "item": {
          "id": "f0cc461f-15b6-4a77-8cb1-29201aad3296",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "771ffaf3-9bc8-46f6-a6db-f3880754e022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd0afc4-e687-43c2-a734-6bb728b62f49",
        "cursor": {
          "ref": "f917811f-1a50-41f4-9eb8-fcc359720946",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "28693e91-ded1-4578-8840-5346cea0033e"
        },
        "item": {
          "id": "8dd0afc4-e687-43c2-a734-6bb728b62f49",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b8a38daa-81e2-47ed-a957-d2029e81d725",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1463,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a0d252-b307-4110-bcd7-ad31281f56f7",
        "cursor": {
          "ref": "5193b52b-7c51-4f51-9610-c078ab816afc",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd4598d0-4e38-436c-b16a-c722531c4bc9"
        },
        "item": {
          "id": "50a0d252-b307-4110-bcd7-ad31281f56f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "90fa2e42-6fa1-4209-b143-62d724ceb550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec44f0a-7aaa-48f4-8280-990f7cc7ced4",
        "cursor": {
          "ref": "b7cea86e-3753-4aea-b707-b1700a37a550",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9bb05ee1-277f-4d1c-8a86-c8e9ed8163ef"
        },
        "item": {
          "id": "2ec44f0a-7aaa-48f4-8280-990f7cc7ced4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "09377bd5-7941-4ccc-bee3-76681bffd088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a458b0af-f27b-473f-b971-f4c57427ae82",
        "cursor": {
          "ref": "58a964b1-3575-4f44-ba26-270d012fb4b2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95fbe4a3-1638-4a73-9248-8e969025afcd"
        },
        "item": {
          "id": "a458b0af-f27b-473f-b971-f4c57427ae82",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "09849b7a-7c35-4e9f-b086-1f4b3c772622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc919126-faf2-4371-81d1-1d52fc260217",
        "cursor": {
          "ref": "5e1e4585-6ff7-4343-bfd5-ba6996a86c35",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "473a7f0b-0ed2-4c71-b328-b610e500300a"
        },
        "item": {
          "id": "cc919126-faf2-4371-81d1-1d52fc260217",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d4f1fd0f-ea87-47bc-9a4e-2e18e69b58e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60aa253-951d-4891-9737-8b14c67d55b6",
        "cursor": {
          "ref": "7d221bd2-746f-4ae1-9091-0d443c968d8a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c7a86288-9396-43e0-9b42-8edf0ce9fd94"
        },
        "item": {
          "id": "c60aa253-951d-4891-9737-8b14c67d55b6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b759269-355a-4ba7-b2ad-cc728033ec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7700f30e-59ac-4fbd-8c5e-553e2e0c4cee",
        "cursor": {
          "ref": "71672953-8d10-4222-ad99-176466d0c552",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8caa217c-3809-4d35-9a81-49923a674beb"
        },
        "item": {
          "id": "7700f30e-59ac-4fbd-8c5e-553e2e0c4cee",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2ae42da2-609b-4a79-b6e7-dabf91bbf8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571e9a2e-1169-4e47-b9bc-10ad5974d8a0",
        "cursor": {
          "ref": "0b39c6d1-5240-4bdc-bbf0-cbd04e36b522",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "735c5493-e8c1-4f04-824d-bca6ed4ef06c"
        },
        "item": {
          "id": "571e9a2e-1169-4e47-b9bc-10ad5974d8a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "97edd248-3c70-4ae4-8c40-6625ecd2e052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2522205-a6b8-4a60-9010-b3e7c593590f",
        "cursor": {
          "ref": "9b08b703-7c86-44de-a10e-0ce52dc53c42",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7acb9fbc-9a00-45ac-9acd-61c9f56444cf"
        },
        "item": {
          "id": "b2522205-a6b8-4a60-9010-b3e7c593590f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c66f577f-d7fc-44f2-8224-1ab91ebffaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bdba0d-2308-4d02-9956-741c52cf3c9b",
        "cursor": {
          "ref": "ce03c7be-183b-4a90-a189-cc66c59a1fdd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1006fe59-6ee1-486e-bbd3-d97e66e81508"
        },
        "item": {
          "id": "44bdba0d-2308-4d02-9956-741c52cf3c9b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "55f1f257-7f9b-4f70-9338-be79e3a5f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895a11ae-14c4-4a52-b643-08e8e9b16ca7",
        "cursor": {
          "ref": "aa7e1c2e-1e38-4fbf-90dd-807a9da8139e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d367fd25-38cf-4992-af30-65b39864b557"
        },
        "item": {
          "id": "895a11ae-14c4-4a52-b643-08e8e9b16ca7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "65f1fc0b-f93c-4015-a081-6e71ae807c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8881494d-c399-4758-bed0-8897b1581e98",
        "cursor": {
          "ref": "0aac33c6-e46e-4a1f-a8fd-8adc35266c5e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bcaa4911-c0a2-4e3e-b59b-a994867335f9"
        },
        "item": {
          "id": "8881494d-c399-4758-bed0-8897b1581e98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a07ef0fe-7d8a-460d-a97f-c308088d5480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6601a6c0-3f9b-4561-a592-93bf9a653ad5",
        "cursor": {
          "ref": "7ee193a4-889b-40c2-8f88-048ff2e46e86",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9c31abea-99c1-4362-843f-5aec206473ce"
        },
        "item": {
          "id": "6601a6c0-3f9b-4561-a592-93bf9a653ad5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1b8017e4-002c-4fe9-bec0-3b52ffcdf011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb437d2-6ce1-441a-8039-3dc7e8ae93a1",
        "cursor": {
          "ref": "f9c202e0-0ad6-4c8b-846b-01f6bc8a9db0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bcb5de46-7113-4fd4-87ae-c28a2abc1277"
        },
        "item": {
          "id": "dcb437d2-6ce1-441a-8039-3dc7e8ae93a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "404dd853-3e1e-48df-8897-ddf1b9ccc14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf331d80-50b5-4bb6-a832-774afda41035",
        "cursor": {
          "ref": "bc6251d5-d84d-49cc-bbf6-2326ca1ea09c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3244cacb-1092-47d3-aebe-6bd31b806f71"
        },
        "item": {
          "id": "cf331d80-50b5-4bb6-a832-774afda41035",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75f4beb8-b218-4afb-82a8-9affb0e9d568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60032e6f-c500-4fac-b309-f99ac495e273",
        "cursor": {
          "ref": "6845040d-79ec-4f26-bc0c-e2718003e117",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9637537f-46fa-4c4b-ba41-59d68d04587a"
        },
        "item": {
          "id": "60032e6f-c500-4fac-b309-f99ac495e273",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "48f8be78-e602-4969-a874-bea4af3de4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51024b04-ca03-469b-afac-c06a3f83e155",
        "cursor": {
          "ref": "70e65e97-1c5d-4e3f-ade6-aba802b8604f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2be8b5ea-5c5c-4556-b1fb-e6008546f8eb"
        },
        "item": {
          "id": "51024b04-ca03-469b-afac-c06a3f83e155",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ab0b3395-844a-4db7-9cbe-0057c39d57a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5945b5af-fd6a-4302-89e4-f8a966f0783a",
        "cursor": {
          "ref": "9417922f-9440-4703-8bc8-f40ae3399d82",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44b3d5c8-75b6-4485-9da4-bbd16819528b"
        },
        "item": {
          "id": "5945b5af-fd6a-4302-89e4-f8a966f0783a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "61854810-7d4a-4458-baec-33ad5eeb80c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3aa49e-529f-4a1b-b330-b1f333afca7d",
        "cursor": {
          "ref": "3c54f418-e9df-4f15-b381-93f227fda070",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5fdeec0-abcd-427c-a4b5-a97d0aa8ae71"
        },
        "item": {
          "id": "ec3aa49e-529f-4a1b-b330-b1f333afca7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3e2d2d56-fd85-42d8-a5b6-4ef5c931de23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2522a26c-fbcb-4836-b7c1-abfd2e2d8e0f",
        "cursor": {
          "ref": "a786934b-c4ca-4056-b524-775a05fdce1f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88d78c56-a9aa-4c5d-8a33-f292d4610f81"
        },
        "item": {
          "id": "2522a26c-fbcb-4836-b7c1-abfd2e2d8e0f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f59b3b9-8cbc-4b10-b270-c7de637b74d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2636327-2525-4d2a-b28c-d6741f9267ba",
        "cursor": {
          "ref": "b88bc392-f192-40e3-9bf3-51d9cf167570",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "779ed819-ac94-433e-b828-2a27009133e6"
        },
        "item": {
          "id": "c2636327-2525-4d2a-b28c-d6741f9267ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cf9dc366-463a-4313-a05e-347fe7ec0f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe295a03-cd4b-473a-ab16-80e9fbe3baee",
        "cursor": {
          "ref": "e5f8c0b6-c543-4a62-b00b-736b48669056",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "50547371-1c4a-4bff-b615-31f8b09bb603"
        },
        "item": {
          "id": "fe295a03-cd4b-473a-ab16-80e9fbe3baee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "56e94207-a3ca-447a-b266-0fda5c612aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda1bf31-71b4-4b44-8e8f-c99e19826a87",
        "cursor": {
          "ref": "817e55d7-d8fe-4bde-861e-0ac299401746",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bbc234e8-9baa-43a0-a5af-cc50a5954bf8"
        },
        "item": {
          "id": "fda1bf31-71b4-4b44-8e8f-c99e19826a87",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "60d7a918-c0e7-4b64-8fc9-96dd4f8cc5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ffccc-84d1-49aa-b1f8-a8179a8e8392",
        "cursor": {
          "ref": "746cb66d-61f6-43bd-9717-339269bf86b1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4d906691-9eaa-4d7a-a31b-695559b6dbe4"
        },
        "item": {
          "id": "e04ffccc-84d1-49aa-b1f8-a8179a8e8392",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "894c0070-d6d7-4d47-aa32-b346fbe035b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1080bc-f68a-4845-bbff-a5cbcdcec02f",
        "cursor": {
          "ref": "47165ae7-4278-4bc9-9fa1-2f5e1471c06e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "55e37a0b-2f55-44ab-8c93-77b6dabaa92a"
        },
        "item": {
          "id": "ee1080bc-f68a-4845-bbff-a5cbcdcec02f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cec5d3dc-4107-42e4-bc54-0911cde7b6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81a5555-1fd8-4933-bbb3-92906d2e7463",
        "cursor": {
          "ref": "ad5279c4-9cfc-4377-bd8c-fc4797fcd0f0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47beefca-f480-4c49-b804-0f95bab0ecf9"
        },
        "item": {
          "id": "b81a5555-1fd8-4933-bbb3-92906d2e7463",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1f32f11c-3d13-4306-8dd7-ba47bbd4c7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859e009-e119-4123-afde-e72ea99e41bf",
        "cursor": {
          "ref": "ca03bbea-ad7b-4200-b561-628627685a1a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ed0ae49-44e2-4903-9e32-62134bf5a69b"
        },
        "item": {
          "id": "9859e009-e119-4123-afde-e72ea99e41bf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "57c6cfad-3e28-49fa-bd2e-d5ae68666e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c79030-4763-40c7-9190-a4044ef1572c",
        "cursor": {
          "ref": "d38a36cc-99a0-4878-ab57-caa873f8f077",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7bf7c77d-d1f9-44bd-80ba-b93630c61525"
        },
        "item": {
          "id": "20c79030-4763-40c7-9190-a4044ef1572c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1c2d4ea6-fcff-4eb4-bd3d-a252c77189ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39754c0-eb09-4aa5-a9eb-9062907c584e",
        "cursor": {
          "ref": "d64164bb-76b5-4a8c-a4d2-e41760de75bd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4d758d6b-aa97-450c-bae3-d6aa6e8183cb"
        },
        "item": {
          "id": "a39754c0-eb09-4aa5-a9eb-9062907c584e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1f8d3f67-be21-46aa-b026-b7f3b7515e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a2494-ba2e-4319-9394-19565cb6355f",
        "cursor": {
          "ref": "196d90ab-1dc6-4cc8-8c62-a18e578948a0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "40dc3178-e13e-40fb-833c-84e665f2fe58"
        },
        "item": {
          "id": "5f1a2494-ba2e-4319-9394-19565cb6355f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a8ed90f9-562c-4316-ac64-9c9063f907b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6004c9-ce88-4a0d-92b3-33f11e9e37b4",
        "cursor": {
          "ref": "75c9ada2-9139-41f8-aded-323a870fb85a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "66a4ff5a-2a4d-4f56-9f63-af86a42ec7f4"
        },
        "item": {
          "id": "cb6004c9-ce88-4a0d-92b3-33f11e9e37b4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea68faae-723b-462a-88cc-45985e244bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ba39f-adb3-41d6-9ea3-268b437d1e84",
        "cursor": {
          "ref": "8c1522b7-7824-4b53-bb99-7e8e14c7a938",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a39b37e-ec46-4df5-b8c6-e22e75917219"
        },
        "item": {
          "id": "680ba39f-adb3-41d6-9ea3-268b437d1e84",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0eb96329-f179-46a9-ba1a-109b1fc07a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e76db-20fc-4ebb-8dfe-192613b0be6b",
        "cursor": {
          "ref": "7a4bb9a0-22a3-4454-919e-93d6d4e0db54",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4b3144a3-5542-4075-a76c-8503c7e864bc"
        },
        "item": {
          "id": "917e76db-20fc-4ebb-8dfe-192613b0be6b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6369ae52-323b-45e7-a113-4580a2bf5fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ac4e9-33e2-4e94-a632-1e0b0e2fc642",
        "cursor": {
          "ref": "574189d2-18a4-4fd4-8fa9-2c3104b2d28e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "167561d9-e672-4848-acf7-4fca9f8c5927"
        },
        "item": {
          "id": "e21ac4e9-33e2-4e94-a632-1e0b0e2fc642",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fe787b98-05e4-4081-8d20-dc87cd91d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bd3395-93dd-4fb2-b379-c9366a93281b",
        "cursor": {
          "ref": "a082b39a-e16e-496c-b530-af8f33229dbd",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cd2e482a-b728-493d-913c-b9c3fa932929"
        },
        "item": {
          "id": "33bd3395-93dd-4fb2-b379-c9366a93281b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c59475f3-c0b5-4865-8494-c1328409d9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849f9311-75c5-485a-8206-b48af51bc122",
        "cursor": {
          "ref": "c599b385-9254-47c7-8c17-407c33dbfff6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c51ca7d0-cbf0-4eb3-ad3f-d92d44c8e9ca"
        },
        "item": {
          "id": "849f9311-75c5-485a-8206-b48af51bc122",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fab32862-2b0b-4d51-a32e-6871418de42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66b10a-7908-4478-9ff3-66e7a81d5397",
        "cursor": {
          "ref": "b5352256-6587-491d-b471-b903ce295d62",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "18c31479-bf26-482e-94db-f9293f98fd91"
        },
        "item": {
          "id": "7b66b10a-7908-4478-9ff3-66e7a81d5397",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "19d28876-d61d-4b52-94b3-25ceb4837fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ef1d7f-7499-4449-b0ce-00223d5ddf55",
        "cursor": {
          "ref": "d90dcc93-1d58-420b-bce8-86b3a0bee20c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a9448b36-a991-47ed-b728-49fef5753a24"
        },
        "item": {
          "id": "f9ef1d7f-7499-4449-b0ce-00223d5ddf55",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9354d6d9-78a7-4c05-8734-968ce3fa2a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b275b637-0790-460c-9702-725ad92c501f",
        "cursor": {
          "ref": "86203c0a-4470-4874-a1a7-f838fc545782",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "afc6b883-a78f-4cf3-8183-2a187735a52d"
        },
        "item": {
          "id": "b275b637-0790-460c-9702-725ad92c501f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "999280ec-24e2-418d-8b30-fec4dedff384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ebc630-cfd7-498c-8fb5-df835fff5af7",
        "cursor": {
          "ref": "2ff896c3-84a3-413a-ab8e-de07e6eb73c1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "827fb1fb-be81-4d25-9eed-acbe54baea48"
        },
        "item": {
          "id": "76ebc630-cfd7-498c-8fb5-df835fff5af7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "70026f1d-d0dc-4a65-b6e3-54bf3c55a5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d40ce-a007-469d-b447-2a0c8caa6d47",
        "cursor": {
          "ref": "e60be9cc-8206-477f-ab2b-864ee6f8b7a1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9bf587e8-1d9f-4fad-8868-f94a108d1825"
        },
        "item": {
          "id": "658d40ce-a007-469d-b447-2a0c8caa6d47",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "27fef9e2-d7ba-46b5-be73-3c17513d5390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ddd419-863c-4ac1-95f0-be944e417997",
        "cursor": {
          "ref": "6d703887-b162-4e7e-a531-297a679a92aa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8ca354a0-d20e-46e8-bd21-6a4e9ef92c03"
        },
        "item": {
          "id": "16ddd419-863c-4ac1-95f0-be944e417997",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b758ce1f-37bc-4692-9e45-17fc184cc836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a371c-adad-4a17-b7b7-a7d328ee413c",
        "cursor": {
          "ref": "c4794138-5322-44ef-b2cd-7409f0cf18f4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a54d9749-ec4c-4a0e-9545-2af752737fa7"
        },
        "item": {
          "id": "792a371c-adad-4a17-b7b7-a7d328ee413c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ceb479bd-d075-4355-866d-ae5fb6aa5576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd8bb66-f072-41b9-9e08-3aaff974915e",
        "cursor": {
          "ref": "9066cd45-9e5e-414f-a7ae-003aded99f27",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa541190-1011-4773-bd69-3f9a3c169327"
        },
        "item": {
          "id": "0bd8bb66-f072-41b9-9e08-3aaff974915e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0da06e9e-65d1-47c0-815d-1666342c5c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da374fa-f1e9-4d75-ad5a-9a4314b088ba",
        "cursor": {
          "ref": "24946c1a-4a3b-4f93-8167-fd832a019a27",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "464d705a-6ff3-4bd7-8ab9-56348cea5259"
        },
        "item": {
          "id": "8da374fa-f1e9-4d75-ad5a-9a4314b088ba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a5f19c80-f9f9-4aea-9b4d-b2db25d5cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a37f5e-094c-450e-96df-d725b44a80b8",
        "cursor": {
          "ref": "aa88f362-c8ee-4426-8a5a-69bfc5378954",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "604bf70b-c0fe-4726-acda-e9e0c81be78e"
        },
        "item": {
          "id": "f4a37f5e-094c-450e-96df-d725b44a80b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b8e67b9e-4c46-42ae-a792-22a13b5a3710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eacb9d-dd0d-48fd-b1c9-d2840ff25e32",
        "cursor": {
          "ref": "9b39a7d3-0e13-47e4-9066-1b4a844cc2ad",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e6586ae9-8498-42d4-be11-ce8c784d7330"
        },
        "item": {
          "id": "f8eacb9d-dd0d-48fd-b1c9-d2840ff25e32",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6360f295-2c51-4661-8a2b-fc3ccdbdbb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5299de46-bb81-45b3-aa39-b698bf7ac635",
        "cursor": {
          "ref": "22ec6e85-cd76-4b32-9cf9-4b07d270e8da",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c4ca08c6-6c7b-4941-ab7e-e07c63696217"
        },
        "item": {
          "id": "5299de46-bb81-45b3-aa39-b698bf7ac635",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f8f12f24-321b-4fe6-b551-b824a46c52cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fff716-e84d-45cf-8476-7526ccfb9e77",
        "cursor": {
          "ref": "78937a5f-0049-4c63-a856-af9ad8dc4005",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d0f87838-5a25-4071-ad3e-898225b406a7"
        },
        "item": {
          "id": "74fff716-e84d-45cf-8476-7526ccfb9e77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d59a000b-e930-43d3-8040-25905f807961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4132e04c-aaf8-4520-a246-6cdcc7622ee1",
        "cursor": {
          "ref": "8506b219-79a3-4738-ac1e-33dd64548002",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98c9f44d-fc42-4bbb-a105-1aded6359914"
        },
        "item": {
          "id": "4132e04c-aaf8-4520-a246-6cdcc7622ee1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d11139a7-5e89-4bf7-8ff1-34aaa88cf309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c821191-af30-44c7-923a-35487fe23814",
        "cursor": {
          "ref": "9721dc0e-b8da-432f-856b-9e1253d54c72",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c3d9e903-47b0-4542-bcbb-c6d1c8c5a72e"
        },
        "item": {
          "id": "2c821191-af30-44c7-923a-35487fe23814",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4191de19-863a-4ebe-aef6-cdef55d5afdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fab3b7f-82b4-447f-9edc-c6c9600d9abf",
        "cursor": {
          "ref": "0f26bb1e-e411-4877-9ac6-282e0263afff",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3c1e733-768e-4313-a813-6177e9e97241"
        },
        "item": {
          "id": "2fab3b7f-82b4-447f-9edc-c6c9600d9abf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4e500c14-b86a-487a-b8f2-81fc6a836d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ceafaf42-6c61-4202-9062-b221a547c9a7",
        "cursor": {
          "ref": "c8f08c33-5cec-45ad-a221-55f181be809e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b723cc23-db0d-45ce-9b20-6ccb987e28f7"
        },
        "item": {
          "id": "ceafaf42-6c61-4202-9062-b221a547c9a7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c528bb9b-b365-44d7-8ff6-8b3df2fc0fec",
          "status": "Created",
          "code": 201,
          "responseTime": 9201,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a215d-34aa-47a2-ba6c-8150d93131a8",
        "cursor": {
          "ref": "04190559-ce32-47e6-8a58-4ef5effa68cd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "709095a1-897c-44c9-affa-ff36d1e577f8"
        },
        "item": {
          "id": "944a215d-34aa-47a2-ba6c-8150d93131a8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e76ec72-7e4e-4994-8f89-8526d6f3f2a8",
          "status": "Created",
          "code": 201,
          "responseTime": 8099,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d192a7-0bdf-4ea3-b840-45ae52c0e091",
        "cursor": {
          "ref": "6dd3f400-ab3f-48bc-8a06-a3e39d1193f7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "edddfc1a-42c5-4b61-8f04-a89e27f0c6a0"
        },
        "item": {
          "id": "23d192a7-0bdf-4ea3-b840-45ae52c0e091",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9b0973af-9926-4a9f-b72c-30be9703fc5b",
          "status": "Created",
          "code": 201,
          "responseTime": 8174,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f9a26-5fb0-4197-86f3-621fbf29a76e",
        "cursor": {
          "ref": "fdc6473d-faf2-415c-a352-4fc108aed048",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d4b4b034-f164-4b87-ae7f-8648dd785af7"
        },
        "item": {
          "id": "696f9a26-5fb0-4197-86f3-621fbf29a76e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "325d4560-ed6e-4354-9f17-c9ca1534dd3d",
          "status": "Created",
          "code": 201,
          "responseTime": 8611,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "262ba7d9-76ca-4535-b193-e8c985bf1ba3",
        "cursor": {
          "ref": "942eeb23-e6ee-4ba8-b266-ca88c146362f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "64155777-1c9d-49d2-bb36-b41c3297e0f0"
        },
        "item": {
          "id": "262ba7d9-76ca-4535-b193-e8c985bf1ba3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67129468-e893-4db4-be12-267321897fd4",
          "status": "Created",
          "code": 201,
          "responseTime": 8164,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cea834-0de9-4b03-9dbe-7f6d075b896d",
        "cursor": {
          "ref": "d1b147b6-21ad-4531-8e72-fcdad5d32769",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6362a60b-3084-4e1d-8048-411c362b1ddd"
        },
        "item": {
          "id": "64cea834-0de9-4b03-9dbe-7f6d075b896d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e065a5a-33b4-4201-92b6-32e55d9baef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "74a25af5-1088-4000-b1d3-fde19077dab4",
        "cursor": {
          "ref": "6148c985-00fd-47e0-9832-c0d9af6ced1c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "26188241-26f5-4346-a146-c9a5479dc38c"
        },
        "item": {
          "id": "74a25af5-1088-4000-b1d3-fde19077dab4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "25217934-96e7-43f4-87ed-546d23c718f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195b99c5-2aa6-4a9c-9c05-699f6e2df1e2",
        "cursor": {
          "ref": "0bd4d873-40e4-411b-a2c7-37ee82b42911",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9b7db3a0-984d-4d83-89c4-90329983fb99"
        },
        "item": {
          "id": "195b99c5-2aa6-4a9c-9c05-699f6e2df1e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fb62d4f-2576-4ebe-8ac9-8e609b0a406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405729af-4700-4c1a-b97b-25f038b7ddb2",
        "cursor": {
          "ref": "081b65b3-6ab0-4589-bd8b-507b434e873e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f263dc6d-ab12-4c67-9495-5db88581996e"
        },
        "item": {
          "id": "405729af-4700-4c1a-b97b-25f038b7ddb2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ed675b4e-a3fc-4e2b-9c49-fbdec84fb313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeaf174-1568-4444-966b-b5c8276110f2",
        "cursor": {
          "ref": "4b83e798-4ef3-450b-9b6d-f63fb2e35c1a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00cb6e64-fe57-4bde-a0db-9473009a2b64"
        },
        "item": {
          "id": "ebeaf174-1568-4444-966b-b5c8276110f2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dc019f3-e0d8-4f84-8b4f-31b2eb8b4af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3074fb-2c7f-4e86-b31e-9142c7cddcce",
        "cursor": {
          "ref": "c88b5643-9b10-45fc-ae61-532477335a60",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "00fb2ea4-d82b-48c4-9724-01dcd425efb8"
        },
        "item": {
          "id": "5e3074fb-2c7f-4e86-b31e-9142c7cddcce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e6a4de65-c9fc-44b3-a145-88c6712cbde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be960a6-8572-4425-a613-0dbcceefe782",
        "cursor": {
          "ref": "335e3f9d-c63d-4381-b3c5-72670126c372",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "df099c2f-0a23-421c-8d81-19d0a0a0f945"
        },
        "item": {
          "id": "6be960a6-8572-4425-a613-0dbcceefe782",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b63d6e2e-d1f8-4a57-8c47-1a0f37e13ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7495428f-88bd-4afb-8826-68c254eed00b",
        "cursor": {
          "ref": "f3d44177-486c-4aec-b059-1d0657664e94",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f301612-9697-40fe-a38b-25eb775d432e"
        },
        "item": {
          "id": "7495428f-88bd-4afb-8826-68c254eed00b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "083880fd-0bdc-4e03-9f28-5b28ad4ee036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38987c-4b26-4f99-a3d7-4afd798406da",
        "cursor": {
          "ref": "b39845ad-2636-414e-a672-ffdd65c16ec4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "12f2437c-4a6a-4673-8814-9f92648511ae"
        },
        "item": {
          "id": "7c38987c-4b26-4f99-a3d7-4afd798406da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c3e9551-9de4-4831-9e7a-c615eeb11108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb34bba-00e9-4f5e-af71-e6418fe3d1f6",
        "cursor": {
          "ref": "861ae86f-410d-4298-9ec9-b0e7b52dc64a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f8b753b3-ccd3-4c0f-8963-5b50620a6469"
        },
        "item": {
          "id": "6eb34bba-00e9-4f5e-af71-e6418fe3d1f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e47eddbc-86e7-479c-b409-7a12f5ae461a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321c23cc-28e3-4430-af8c-31503d7b9168",
        "cursor": {
          "ref": "bdc57cc4-8528-4a3c-93fa-423ec156a251",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "550d39d2-892e-4603-b229-5d9854587f40"
        },
        "item": {
          "id": "321c23cc-28e3-4430-af8c-31503d7b9168",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "98e414af-eb23-4194-ad1d-5e313b0e0c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d8ecc0-edcb-4909-aed8-052479c6296a",
        "cursor": {
          "ref": "150a2763-70ee-4c43-8a40-a47fb76962a8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bc6fa296-2ffd-4488-bbea-6bf12da06d05"
        },
        "item": {
          "id": "98d8ecc0-edcb-4909-aed8-052479c6296a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cce3df4f-d763-4baf-8b75-1e62d305ea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ed2911-bd4c-4b2c-a05e-9fd292d698da",
        "cursor": {
          "ref": "655886e9-b100-4510-a2aa-232b13ad6e3d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "14b944bf-9d1f-48f3-86b4-84f6953cb7a5"
        },
        "item": {
          "id": "82ed2911-bd4c-4b2c-a05e-9fd292d698da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9fcc152c-c9d9-477d-ba5a-bce8e00b8c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdbdd6c-4e7b-4437-8b2e-fb2181cb3a58",
        "cursor": {
          "ref": "c7674883-9cb2-4815-a1c4-10ea551fbeaf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc9a26f2-7d9e-4b56-af80-8a941986ac00"
        },
        "item": {
          "id": "3fdbdd6c-4e7b-4437-8b2e-fb2181cb3a58",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09f504d7-af61-4033-8d3c-d97d1264219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d2f56d-38ea-46d1-86ef-b509c8b737e6",
        "cursor": {
          "ref": "ace6ab92-3910-44d8-b510-459f02097db1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "36d97733-c37f-4b02-9376-633e5f4f604f"
        },
        "item": {
          "id": "30d2f56d-38ea-46d1-86ef-b509c8b737e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "043e2d6a-dd8a-4247-9c3d-820ad199644a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7a747-6cf5-4db1-a34a-7091f2f45ccf",
        "cursor": {
          "ref": "163f4499-9aab-4e1b-8f76-846c3cce395a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4db8f190-06d4-4e1e-99de-5af588b62a09"
        },
        "item": {
          "id": "9cb7a747-6cf5-4db1-a34a-7091f2f45ccf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4df218f-ff03-4dbf-ab89-2d191a2ff750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2813cb04-a6f6-4ef3-9a80-e61f2c9b588b",
        "cursor": {
          "ref": "eb05a2f3-033c-459d-9749-86cad9129940",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7830a236-d0b1-4555-b0dd-d56e2aba15b5"
        },
        "item": {
          "id": "2813cb04-a6f6-4ef3-9a80-e61f2c9b588b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93b038df-8cd5-4009-8a52-e84adecb5291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1034a1ad-b41b-468b-90f2-8b649585ab9c",
        "cursor": {
          "ref": "cfaf2eb7-883c-44b4-a242-de9994100147",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e8c0febb-9d43-403d-aa0a-06e2d9675f0c"
        },
        "item": {
          "id": "1034a1ad-b41b-468b-90f2-8b649585ab9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0676606c-e3f6-4ef4-9924-20ec388d580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3958af1-01e7-4aad-9a41-0956d94d710c",
        "cursor": {
          "ref": "4564859b-d65b-45ce-88a9-cc81061a599b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34351314-8e4b-4b7b-a919-ac9eba15be39"
        },
        "item": {
          "id": "f3958af1-01e7-4aad-9a41-0956d94d710c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01dbd78b-28cf-43e4-8564-882f463b5fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aec387b-59f7-42d1-8bb2-fbe72849c287",
        "cursor": {
          "ref": "56b5bff5-f187-4f74-8822-441ae28925f9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "18b40396-7ab4-4804-951a-a5ca0128753d"
        },
        "item": {
          "id": "6aec387b-59f7-42d1-8bb2-fbe72849c287",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f0988d0-bf5b-4374-87d2-34896d49d904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f98cc00-f6ee-4ab4-b820-38c374697268",
        "cursor": {
          "ref": "ddfc5fd1-f864-4d70-b0b7-7fb815cef4a4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "538a3017-e0a0-4a13-8671-44fba47f9b11"
        },
        "item": {
          "id": "0f98cc00-f6ee-4ab4-b820-38c374697268",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2b8ca381-e541-4c5c-9fce-1ec83dead837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04e9803-d71e-4594-9dfa-2a6501fa4d7b",
        "cursor": {
          "ref": "69d4d7d4-55c3-4d43-ac39-734bb25d650f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0c5e9f51-98de-47fb-995a-5f5ff1cf3c68"
        },
        "item": {
          "id": "d04e9803-d71e-4594-9dfa-2a6501fa4d7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1e662c58-63e1-4811-8f56-98cfe8bcc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6369d9f0-f1c2-4a63-8f26-e655c17b0d24",
        "cursor": {
          "ref": "f68b292d-467d-41e9-82b2-c94f34bc3cdb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "01d5c397-13a9-44cf-8cd5-af8510381d56"
        },
        "item": {
          "id": "6369d9f0-f1c2-4a63-8f26-e655c17b0d24",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bdc6aa14-f337-4bc4-8475-3637bd989803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de66824-82a6-43ca-a77f-9e7b67d1d73f",
        "cursor": {
          "ref": "f3732387-674d-4929-bdfb-0db4b5f4e76b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "175ba34e-734f-4c0b-ae8a-8d57fe0cad19"
        },
        "item": {
          "id": "6de66824-82a6-43ca-a77f-9e7b67d1d73f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb5f122a-5f50-4bcb-b951-0467d69cb150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065e3be-5db6-4f56-a4b8-1e249231a84c",
        "cursor": {
          "ref": "fb80ff6f-7a25-41d7-a0f2-e47ec649726b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a8bfda0-a7e6-4abe-adbd-17bbf8443ed3"
        },
        "item": {
          "id": "2065e3be-5db6-4f56-a4b8-1e249231a84c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b9331fab-9b20-4be8-92df-cfd8627608b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f7eeda-cbc6-4522-a5ad-27821ab9f267",
        "cursor": {
          "ref": "ae013a9b-6123-40b4-ad1a-99dcfa111015",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "65339cde-e3a7-4f4a-bf3c-f10f6752d3d0"
        },
        "item": {
          "id": "68f7eeda-cbc6-4522-a5ad-27821ab9f267",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d24ce27-ee9f-4560-ad4a-acda3ec95410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0940f1-f57e-43d7-82dc-755a05ac967d",
        "cursor": {
          "ref": "f076f36c-d8bf-4bcc-a909-1f1ee33561ae",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d80094d2-cad9-41f2-a5cd-317e1e78fa24"
        },
        "item": {
          "id": "bc0940f1-f57e-43d7-82dc-755a05ac967d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de5d6b11-6721-4e5e-b8b4-6b71cda4c397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3770f14-9af4-4341-b657-deb524fe0a46",
        "cursor": {
          "ref": "7bebf78c-4c5a-4aaf-bae6-f40e8045639c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ab255859-6aac-4ded-9992-31c6e0665b6d"
        },
        "item": {
          "id": "b3770f14-9af4-4341-b657-deb524fe0a46",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "559a8c62-20b4-4823-8eb7-6f175d9f7402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcac707d-0dff-46dc-9c05-48660a0c0967",
        "cursor": {
          "ref": "b0de4194-d4d3-460a-9a83-8a7372340400",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d77447f-b6b8-4a5f-b34f-44f2f349b1b5"
        },
        "item": {
          "id": "bcac707d-0dff-46dc-9c05-48660a0c0967",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "065ff2ff-bc49-49dc-a7f5-432769b887f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78892356-b7e6-46ee-9db5-d3cff640adff",
        "cursor": {
          "ref": "2265a070-34bc-4996-b07a-21f0292c29c2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0238e7dd-d7d9-475f-9f7e-ebb316ebc2f8"
        },
        "item": {
          "id": "78892356-b7e6-46ee-9db5-d3cff640adff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "21f7dc3e-34e8-4815-9dfe-2640cb755627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f58f03-6f86-4343-9f98-6df8c3082d82",
        "cursor": {
          "ref": "a9166144-c9d8-4e65-b07a-5512820a69ce",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ae3b1370-31ea-4901-af10-40cc677815c8"
        },
        "item": {
          "id": "a8f58f03-6f86-4343-9f98-6df8c3082d82",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "928db1fd-5094-4bb0-9493-68ae6183f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599c36f7-df8a-404e-b682-a927b15be814",
        "cursor": {
          "ref": "53a2dcbc-06f0-46dc-8a47-3d7108fca80a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cc0fd873-15b2-41c3-a750-e53a25154061"
        },
        "item": {
          "id": "599c36f7-df8a-404e-b682-a927b15be814",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be52010b-9d59-42ad-a9df-512bc960d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c59a410-20b3-45e5-8d83-4eb07fdd8996",
        "cursor": {
          "ref": "7e120cf7-ff07-4961-98b3-35b707f10f30",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1524b974-fd7e-421a-aca0-0152882da3c4"
        },
        "item": {
          "id": "3c59a410-20b3-45e5-8d83-4eb07fdd8996",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "53bac13a-6b9c-4254-b98c-8b2ef1f7c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bdb496-7b19-427e-ac0e-98ef4e48b9ac",
        "cursor": {
          "ref": "5501e941-942e-4985-a899-fa1df04fa2e3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7348823e-5489-4294-a9ae-280ea96c8254"
        },
        "item": {
          "id": "12bdb496-7b19-427e-ac0e-98ef4e48b9ac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1d9c4306-3453-44f8-a8b6-81962bf16ec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 111,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff27649-a41c-423e-a2a2-f5cad9a836f9",
        "cursor": {
          "ref": "f27ab03b-b767-4e39-9d05-cfa28332c589",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c09b873d-a87f-484d-9fc9-89e00a4c17db"
        },
        "item": {
          "id": "4ff27649-a41c-423e-a2a2-f5cad9a836f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5eb69c53-c733-4872-85b2-0cafe868bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6a9251-3a4b-4d3a-b0a7-1c9d3782ab00",
        "cursor": {
          "ref": "c0b912ca-7a50-44b4-8d3f-46e4ca6bd93d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0cc51b39-2bcf-45a4-b03c-0b194bddef06"
        },
        "item": {
          "id": "5f6a9251-3a4b-4d3a-b0a7-1c9d3782ab00",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "19e647e2-c181-4b4d-88a3-0ce7c3589958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e5c8e5-8467-4d6f-be71-dbb0c8aebfce",
        "cursor": {
          "ref": "62819c8a-d3c8-4e49-88f2-7ec96056958f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "15838e27-041a-40ca-9206-f7dac133f258"
        },
        "item": {
          "id": "10e5c8e5-8467-4d6f-be71-dbb0c8aebfce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "08aead3a-f666-4116-8b61-dc92a4f8788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd8f9ae-e59f-4acf-a375-ae6eb070197a",
        "cursor": {
          "ref": "b3c8d420-5be1-4e6a-a903-d0d2f821d9a7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b9eeea45-b369-485c-a457-9e79fb8c04e4"
        },
        "item": {
          "id": "8fd8f9ae-e59f-4acf-a375-ae6eb070197a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "827e142e-b037-45c3-a0b8-819656ac13ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336db19c-3f35-4bc7-ae49-8f4f7fbab4fe",
        "cursor": {
          "ref": "10224afa-d884-4070-82eb-fafe35fe57e6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6c22cd8-50a8-4cc9-abcd-dda200e0bc6b"
        },
        "item": {
          "id": "336db19c-3f35-4bc7-ae49-8f4f7fbab4fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "230d614f-52f1-4253-a1cb-d7d39d180231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155d8d3-0f5f-4a7e-aa89-7499a2c45a9e",
        "cursor": {
          "ref": "2f284a72-c1b6-4c75-b380-f1651fa9be59",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee3153e0-3bed-4a2e-9e25-bb07ecde8d95"
        },
        "item": {
          "id": "c155d8d3-0f5f-4a7e-aa89-7499a2c45a9e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5a0cbfe3-0eac-4662-9392-f6a6d8fc1017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32607d1f-58d5-44fc-a2f2-3150fae9206d",
        "cursor": {
          "ref": "13d4e1e1-d38c-4df2-aae9-06888b3ce9ca",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "393b9b8c-cc47-483b-ad66-6b4e7bbe715b"
        },
        "item": {
          "id": "32607d1f-58d5-44fc-a2f2-3150fae9206d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "792210e9-31b3-4df7-8c50-791553bd0456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26226d-e6d6-4369-8eec-26e4efe2b524",
        "cursor": {
          "ref": "6e607524-7fd0-424d-9bed-dd173727eee1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "be28f6b8-716f-4109-b53a-ae525944a4dd"
        },
        "item": {
          "id": "da26226d-e6d6-4369-8eec-26e4efe2b524",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b22c1518-8380-4247-8bf9-0ce70567a907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f86a9a-4f0f-4b2e-97c6-2b3ecd55c901",
        "cursor": {
          "ref": "9421afc1-d3ed-43cc-85a8-99e45dba02f8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7edda007-bc27-42f1-af10-c1a5e5a8a863"
        },
        "item": {
          "id": "66f86a9a-4f0f-4b2e-97c6-2b3ecd55c901",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb29bcef-4bc6-4010-bc47-1b44efeef4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a69817-2bb1-4dce-8e0f-306ac9500e7a",
        "cursor": {
          "ref": "a88ba35f-7b18-4717-b702-e808f5f92cca",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8cba171a-f909-49b9-b18f-75f0dd71509f"
        },
        "item": {
          "id": "f6a69817-2bb1-4dce-8e0f-306ac9500e7a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5fda25b2-1c65-43d1-97cd-c2cb8953e973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70bf352-3a54-4370-b409-11a4fbe55f58",
        "cursor": {
          "ref": "1175a04b-bb69-41be-93fe-ae9adacf435d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d05fed0b-9bd8-44c2-b195-b987d8885b8d"
        },
        "item": {
          "id": "a70bf352-3a54-4370-b409-11a4fbe55f58",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa32ac9e-cc43-47f5-9132-afb7d6b65224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729d9e68-bf80-471b-8bdd-5ca1fd74640a",
        "cursor": {
          "ref": "862b80bc-6d12-4cc7-8932-b291191a11ec",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "580cd7dc-f2a6-48c6-81e4-f086afee059b"
        },
        "item": {
          "id": "729d9e68-bf80-471b-8bdd-5ca1fd74640a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9e2e3811-8b16-4314-98f7-6a5f632aa1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e592da-e6dc-4968-9392-dca2c18b58a6",
        "cursor": {
          "ref": "4ce547eb-dad1-479e-b5fa-40dc175f633a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f9f7ed13-7b93-4c45-8358-d1f78f411010"
        },
        "item": {
          "id": "71e592da-e6dc-4968-9392-dca2c18b58a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "70a16af5-6dd8-4017-bf91-762cf09e8c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37b6db8-dc1a-4b36-8011-9de5227297cd",
        "cursor": {
          "ref": "2964b6a7-c16e-4f38-8e40-038cc3930f78",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d27bf4ef-7cb4-4791-a3f0-fcca3930ea7b"
        },
        "item": {
          "id": "d37b6db8-dc1a-4b36-8011-9de5227297cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "beb813ea-6cd0-49b7-b6b4-a8e1b7ee8bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6aab10-47ae-4600-bd01-ea26e2d68449",
        "cursor": {
          "ref": "c1880643-1ac0-4d7b-87d9-ca2708bb6ad0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fc6880da-b31a-4121-b97c-04d660ce6937"
        },
        "item": {
          "id": "ba6aab10-47ae-4600-bd01-ea26e2d68449",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "38a44071-88b9-46e4-a5c7-858ae1756fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1108e2f-760a-4907-b718-13d194af4310",
        "cursor": {
          "ref": "31a3e9b0-4d4e-4fe2-bbe3-4e1b52da17a2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "41cfd460-7ffd-4b46-bdee-49b10db7c577"
        },
        "item": {
          "id": "e1108e2f-760a-4907-b718-13d194af4310",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "665c806e-58c4-49f0-af8c-32c3950ec618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f611500d-bf4d-4200-85fb-9706576c9b9c",
        "cursor": {
          "ref": "e5a51644-6bed-4411-b88e-2aabea2488aa",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cfade8dc-99c1-48f5-8287-8842a4caaa77"
        },
        "item": {
          "id": "f611500d-bf4d-4200-85fb-9706576c9b9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8422192c-a972-4018-bb6e-b97bd71d979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931cc5c2-b97b-41a6-a703-e813bc8acfa9",
        "cursor": {
          "ref": "9e794464-36b7-4cb4-ac50-3d03c1b5e72a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ee7fbfb9-366d-420e-8df8-45cad185ee0f"
        },
        "item": {
          "id": "931cc5c2-b97b-41a6-a703-e813bc8acfa9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c582e81-0562-4b32-b88a-cca8cea474be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d98e39-10f3-4610-89b9-6577627d2eac",
        "cursor": {
          "ref": "b03d2eb1-965d-47a8-b7ea-3f27a47594b7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "05941dc7-f5f5-42f0-872e-be6c6ddf0018"
        },
        "item": {
          "id": "f8d98e39-10f3-4610-89b9-6577627d2eac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "960880f5-a0ed-4014-b69c-9ded706ec38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edab0d86-227e-4d24-b89c-629b44a6838e",
        "cursor": {
          "ref": "177eef22-1b40-4453-88d7-10c118343757",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bfb8d537-27d9-4c0e-98d6-301117e63dfd"
        },
        "item": {
          "id": "edab0d86-227e-4d24-b89c-629b44a6838e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "52be266f-a394-4c4a-b349-af565c5ce6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f939154b-8bc2-4ae6-be3b-d7805ffb377d",
        "cursor": {
          "ref": "708a229f-4f26-4683-a3cb-3355f8ab260a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "28eb9622-bc9d-4cc6-8867-e3b61eb79c6b"
        },
        "item": {
          "id": "f939154b-8bc2-4ae6-be3b-d7805ffb377d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "395c6d3b-7285-490a-afeb-6e86bf0aa9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2004b5d3-0c94-4e5d-b008-9e50a638738b",
        "cursor": {
          "ref": "73b2369e-efee-4cbb-b33b-e8c3be42e84f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "472e6992-34ca-404b-908a-72f3d6d66fac"
        },
        "item": {
          "id": "2004b5d3-0c94-4e5d-b008-9e50a638738b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "71f6d296-1150-4838-8d64-d66ee427c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d78f8-6437-4c6b-b429-e01d78f5d597",
        "cursor": {
          "ref": "85b54774-4b67-400c-9c59-abed71ef6bfa",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be94bdce-1014-4202-9d45-5ce14d23f7bd"
        },
        "item": {
          "id": "055d78f8-6437-4c6b-b429-e01d78f5d597",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75df528b-6f83-400b-836b-c31c42f5f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf01ee4-1bba-4014-90ff-4f703414023a",
        "cursor": {
          "ref": "b58f1d9b-7c01-4c48-90e7-8c7f68b0b23e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9979c5c1-13af-4fe6-b95f-45057ceb2e2b"
        },
        "item": {
          "id": "faf01ee4-1bba-4014-90ff-4f703414023a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25974f00-5a22-49a1-8f40-442c79e445e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec029c-59a7-4061-a6c3-9c240d54ec21",
        "cursor": {
          "ref": "7c52b4e9-566d-442d-88fa-905e534ac271",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b37ebe2e-235f-4d26-8a79-05632e39a344"
        },
        "item": {
          "id": "91ec029c-59a7-4061-a6c3-9c240d54ec21",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c00524ef-8c44-4b69-b9af-65c320a6b097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b903cbe3-816a-4a88-b4d9-d5c9489cca6a",
        "cursor": {
          "ref": "e258dc1f-ef42-4cbf-873a-5b595da1edd4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7281868-0b06-4af7-a994-09ecad4a60d8"
        },
        "item": {
          "id": "b903cbe3-816a-4a88-b4d9-d5c9489cca6a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68952f26-0009-4037-8d37-dbf6ac6f88ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0af212e-4fa2-486d-ac6c-095f7941759b",
        "cursor": {
          "ref": "76e62974-b4ba-4c78-8070-2110d9b67b60",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3a2857d8-2802-4c8b-b52b-328c7d4a5d5a"
        },
        "item": {
          "id": "d0af212e-4fa2-486d-ac6c-095f7941759b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17301b62-c25c-48d1-b72b-72e2c7a415c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6541dd5e-e77d-42ed-9a97-9e6c73c7721c",
        "cursor": {
          "ref": "3e9a3931-95ec-47d9-98b9-4d322caf81b5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d63c4e1d-ae29-4f9a-8b5e-3d9b588f54c3"
        },
        "item": {
          "id": "6541dd5e-e77d-42ed-9a97-9e6c73c7721c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e82a3c61-5c6d-40b5-bdfd-18ea27384cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82c4250-0194-4902-96e9-0dd2b3968c92",
        "cursor": {
          "ref": "b7284a8b-a559-42a5-a7c4-b1bd03af4bda",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "99825a7a-4aed-4033-8ec8-ed6c3c1ba8a1"
        },
        "item": {
          "id": "b82c4250-0194-4902-96e9-0dd2b3968c92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4075ed05-a1c3-4a33-817d-98ee2c9c3445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ae8515-479e-4f01-9fa9-70ab4e1145c8",
        "cursor": {
          "ref": "0119e3b2-6667-4c53-9c9c-762660c3d817",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7c626af-8c86-4df2-8d24-59ad142471c5"
        },
        "item": {
          "id": "a8ae8515-479e-4f01-9fa9-70ab4e1145c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4c938956-52bc-4392-9206-0db8e6abb337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf9d39d-d8f1-4d41-bbbb-48aea7171602",
        "cursor": {
          "ref": "77271fe4-4eb8-4ff6-8fa2-a0ee94461b9c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "338f30a3-5fae-4a33-a0fd-3e4d6445e6a7"
        },
        "item": {
          "id": "acf9d39d-d8f1-4d41-bbbb-48aea7171602",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83fea8b8-40d5-4abf-952a-ae7460b8b1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fdc577-a559-4455-a5d9-4500037aa1f7",
        "cursor": {
          "ref": "cbfc89b7-3b50-41bf-ba0b-27636bb8e34d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "da9a17f7-ec7a-48fd-882b-d75a1d910c67"
        },
        "item": {
          "id": "92fdc577-a559-4455-a5d9-4500037aa1f7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "de9ca7ad-e4f4-40c3-865a-2fa544d56f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8293b4e-fdb6-4652-9fb0-9dc53f04f848",
        "cursor": {
          "ref": "68028f72-b693-480d-b733-b1bf9123cbbf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1f8a4caf-c05c-4a33-b0f5-8e900ee50ea0"
        },
        "item": {
          "id": "a8293b4e-fdb6-4652-9fb0-9dc53f04f848",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e3442dba-d4f3-4512-a3cf-3892ea5f87e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4c23b-2b72-4db3-bdea-12793432180a",
        "cursor": {
          "ref": "b281800a-8e17-45af-a0d3-38e01e1625f8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5ac88ce4-d613-4b25-b0d2-c3d6dba21b40"
        },
        "item": {
          "id": "46c4c23b-2b72-4db3-bdea-12793432180a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5e6436ce-3440-428a-b7c0-854e5bc743bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd29e56-77b1-47d1-89c4-a8291f2bb41f",
        "cursor": {
          "ref": "59224a42-d574-45b0-b3d9-29f887e97186",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8857c7de-adfa-4949-a286-50e3cc10e07a"
        },
        "item": {
          "id": "fbd29e56-77b1-47d1-89c4-a8291f2bb41f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "60a860ce-c0e1-49c8-bce0-14a22ac47569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a5aee4-5bb6-4916-bee6-d934e7181a15",
        "cursor": {
          "ref": "119c796b-2b7f-46bd-97c1-3bc4e89fcce5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3023b613-dfcb-4b08-9dee-e16baaad8f1e"
        },
        "item": {
          "id": "58a5aee4-5bb6-4916-bee6-d934e7181a15",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e07df437-a4bf-41e5-874c-5fa96f27125c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f75393b-0a2f-4945-b05b-b0d9d387b9c2",
        "cursor": {
          "ref": "710c4b58-cd13-4714-9a2c-3580edb0c99a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7d2d2da7-618b-4049-84dc-4d6d390db5e5"
        },
        "item": {
          "id": "0f75393b-0a2f-4945-b05b-b0d9d387b9c2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b11bcee9-b2a6-4c7e-9575-4eb6e76cc816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bf5c78-83c0-45eb-ad44-bfab0e958b83",
        "cursor": {
          "ref": "ed4d5281-6a21-4766-815e-e2165f8633e6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "79678039-5030-4aa1-8d3b-a3abbc4221d2"
        },
        "item": {
          "id": "b3bf5c78-83c0-45eb-ad44-bfab0e958b83",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aaa8b4d1-835a-482e-bbeb-fb9aadd49a8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 104,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5c7f1a-ff0c-4df7-aa6e-07d4fd4636ef",
        "cursor": {
          "ref": "664f40b7-b9d9-41a7-8acf-055e0068e0e5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7484bbbc-5e3b-4dd7-9dd1-403aed311183"
        },
        "item": {
          "id": "fd5c7f1a-ff0c-4df7-aa6e-07d4fd4636ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e866dda7-00de-4e72-a918-cdf5d2c0f2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367413c1-be0b-4fef-a27d-a7425fb5d690",
        "cursor": {
          "ref": "6a44d46e-e105-417f-af78-4e0cdea92f21",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "562af1d7-d7d1-4077-adac-f8938daa6f15"
        },
        "item": {
          "id": "367413c1-be0b-4fef-a27d-a7425fb5d690",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39e79b5e-e493-4305-a6a1-0734030383e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb48e7-d401-4f33-86ae-e84e9be3feee",
        "cursor": {
          "ref": "553653c3-7526-43fc-840a-163494e75d5a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "237d4c31-29ed-4bc1-b880-35d09ec63c92"
        },
        "item": {
          "id": "febb48e7-d401-4f33-86ae-e84e9be3feee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ee984677-56db-4aa2-8e83-d5841fefcebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bab25-34bb-4c51-bfa1-67ddaa212d71",
        "cursor": {
          "ref": "2b4f2c1f-1a14-4877-97d0-cd7f08b4db69",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8123fd4-9621-4fa0-855f-acc374e60e71"
        },
        "item": {
          "id": "ab2bab25-34bb-4c51-bfa1-67ddaa212d71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9fd70cc-49a2-45c8-97da-f494ec68d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aa0ab0-bde8-4e60-a7f0-08c0943ac422",
        "cursor": {
          "ref": "5fa410ac-b1e3-4de5-9b49-176491f35c75",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cb8c856d-db7a-45bf-b0ad-0941d8cebc24"
        },
        "item": {
          "id": "f6aa0ab0-bde8-4e60-a7f0-08c0943ac422",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "de64c841-21e6-4bbc-932d-308bc97231be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73b5d6d-c0dc-4356-94d2-4102eb2d74d4",
        "cursor": {
          "ref": "1c9d93d6-035c-44de-8ca1-9811199c231e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc9adf4b-80b5-4c77-a79e-b2f2e51cfdcd"
        },
        "item": {
          "id": "d73b5d6d-c0dc-4356-94d2-4102eb2d74d4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b06b21f6-832c-4752-8afd-4e89ab79247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4b940f-e9e4-4da4-b537-8ba223826b60",
        "cursor": {
          "ref": "253c5063-1ca8-4aee-8f89-7cd666c47784",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4d94810b-cd50-4389-a55e-ddda4f50b126"
        },
        "item": {
          "id": "ef4b940f-e9e4-4da4-b537-8ba223826b60",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c62fc1dd-008b-4847-9de2-168df5acb3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eb539e-0ca2-497a-a50b-0fbe3e33e340",
        "cursor": {
          "ref": "8f6b19df-6609-463d-a4d6-c13f3c5a9b5a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "98798fb5-0adc-45ee-8dd8-3dda8da17893"
        },
        "item": {
          "id": "b8eb539e-0ca2-497a-a50b-0fbe3e33e340",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "47fb1f16-8b08-41ba-bff8-aa11fce24ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cf5447-d20a-4cf4-8260-5c8a93514042",
        "cursor": {
          "ref": "7fd7db06-3cc0-4d74-8a68-8c86b5a2d19f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18a46dc9-b6f4-4e6f-b605-892244c6dd11"
        },
        "item": {
          "id": "99cf5447-d20a-4cf4-8260-5c8a93514042",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "60d53d11-6b2c-4354-9823-18d119d63029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b9874-8eaf-433a-b5d7-b62a962e1b40",
        "cursor": {
          "ref": "fbcef72f-4ae5-4db0-bccb-65c9d2a723d9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01dab303-ce6c-4b3e-b99e-84a8508b8ef5"
        },
        "item": {
          "id": "031b9874-8eaf-433a-b5d7-b62a962e1b40",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ea90d487-9b6f-46cd-954b-31fef46fbd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94daac-9b3b-4459-b7b4-f38023924506",
        "cursor": {
          "ref": "04eb369c-22ce-4552-a0fb-803e1f0b8679",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0433d07d-1a6c-4864-a0ad-5b699df173f2"
        },
        "item": {
          "id": "7f94daac-9b3b-4459-b7b4-f38023924506",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42d5a166-4d19-480b-b245-657287678e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ea9c72-165b-4f95-a380-a6d21e748c31",
        "cursor": {
          "ref": "abb2d851-f9ff-4e10-ada8-f20fb0ddc5f7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1575efe9-ab8a-4215-a76f-281a590b2c0a"
        },
        "item": {
          "id": "38ea9c72-165b-4f95-a380-a6d21e748c31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0030ecd4-7f7e-4505-9d02-d657a0af08c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a604499-72f3-4fec-90a2-c1581d77274c",
        "cursor": {
          "ref": "bc31d6d9-2232-4a61-b142-5973206b8c1e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b60745b3-4e74-4e75-871a-26b8748d324e"
        },
        "item": {
          "id": "6a604499-72f3-4fec-90a2-c1581d77274c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86f50d16-d91e-48aa-bf65-b3854f3b6041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272d021b-514a-4842-a9bd-c1e6778c3b3b",
        "cursor": {
          "ref": "913e740b-8332-41fd-925c-1a43b83c8c9e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32cd1721-efef-4381-b030-342f85d1ebbe"
        },
        "item": {
          "id": "272d021b-514a-4842-a9bd-c1e6778c3b3b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb7aea89-f064-46aa-beee-0589d5bfce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b670196d-ba6c-42e8-9dec-e8e50ff0b151",
        "cursor": {
          "ref": "86e1201a-2e24-47e6-83ff-27c1a33f2a6a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "32b67c92-7d36-42dc-8ea7-23acc3de1a42"
        },
        "item": {
          "id": "b670196d-ba6c-42e8-9dec-e8e50ff0b151",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "25459006-9620-404c-85bc-2caae3fdecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306e64ec-f774-4a31-a269-6ed059dc108e",
        "cursor": {
          "ref": "6a422c39-b43d-4de1-b3e8-b7559985c1b3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "176f7a35-82b6-4829-a248-e8d388502d8e"
        },
        "item": {
          "id": "306e64ec-f774-4a31-a269-6ed059dc108e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fbd59ddc-8671-4ad1-8cee-b58fd62f7744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13a0946-674d-4964-9f58-ddcc4cf6400a",
        "cursor": {
          "ref": "8c43ec0c-af5d-43d9-9bb9-8b42dfcf594c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d143fed-ac2d-4f06-8e58-3572b46a933c"
        },
        "item": {
          "id": "c13a0946-674d-4964-9f58-ddcc4cf6400a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca4d2ae2-936a-4091-8c24-6d71a148e0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8322a8c-846e-4789-9b87-f026510bf30b",
        "cursor": {
          "ref": "bcd3d471-f0fc-44b9-b655-16275c17daaa",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "845ebc75-7c2b-4b56-8cda-f0a8161c2ecc"
        },
        "item": {
          "id": "b8322a8c-846e-4789-9b87-f026510bf30b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "57fd8ca0-2503-417c-8c2a-d5f06f2a6150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d759fe13-1c1a-466a-9e94-170c3140c243",
        "cursor": {
          "ref": "ebfcd9f4-227b-4f82-b94e-915c01c4a0d4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6eedf6dc-ba71-4a0d-8b6f-3b6e8d68e64d"
        },
        "item": {
          "id": "d759fe13-1c1a-466a-9e94-170c3140c243",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e6847de-d03d-40a7-9351-98ae7b36fe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84359ae3-e3eb-4984-8ef6-380f99b6f22b",
        "cursor": {
          "ref": "dcb9188c-6d4e-4556-92cd-1804b75e13dd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e15b37a6-6c99-42d5-adff-771bab3196e2"
        },
        "item": {
          "id": "84359ae3-e3eb-4984-8ef6-380f99b6f22b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "47a1f180-a281-4a7d-ad95-fafa83f86da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9595bd6f-ba00-4771-9881-e695e73bf609",
        "cursor": {
          "ref": "352d952d-6d8e-4941-ab4d-e2263373aa91",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c146d060-ddae-4fcb-9c67-d504b046269a"
        },
        "item": {
          "id": "9595bd6f-ba00-4771-9881-e695e73bf609",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3390041e-0080-4b57-a499-00a0ed2e9b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5936b4a3-643a-4052-b056-4e55e31eebcd",
        "cursor": {
          "ref": "c9964e0c-dc18-434d-b319-7ea8579e3157",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "04026b2e-9f8e-420e-9a37-6575c8caceb1"
        },
        "item": {
          "id": "5936b4a3-643a-4052-b056-4e55e31eebcd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3f8d83d7-2f0b-41fd-b2bd-96d82a33128a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb5ed47-354b-4917-9e88-5bc70c6ac79d",
        "cursor": {
          "ref": "5927483a-c1ca-40ae-baaa-26fba80bdd70",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4b3a608d-29f0-4f60-b880-0d77f19ba559"
        },
        "item": {
          "id": "feb5ed47-354b-4917-9e88-5bc70c6ac79d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bd6b5f24-7d00-4704-bebf-1dd9ab0f59de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37518c09-8800-4fa5-950c-96caa1eb3f99",
        "cursor": {
          "ref": "d046494b-e7c0-4873-a0e6-83324f04f2a6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "334a9f98-6650-460c-b789-adb1252499f0"
        },
        "item": {
          "id": "37518c09-8800-4fa5-950c-96caa1eb3f99",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f13a50ad-9a4a-4c8e-9d2d-7a157a4d2635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fffecde-40ba-41d9-a4be-502abd43dc92",
        "cursor": {
          "ref": "b134af03-84b2-4cc3-bfa8-d23dd8511ea7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da7250af-d87a-41a9-bd80-750605af5a0d"
        },
        "item": {
          "id": "8fffecde-40ba-41d9-a4be-502abd43dc92",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "50bf44fa-caf7-4d79-9608-c0df5dd341ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4fd8ce-28e8-4083-a96f-9699b3606e97",
        "cursor": {
          "ref": "0afce8fb-f7b1-44be-bad1-6dea5de0cc61",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7be92456-6a7b-4789-8d7b-1855794f67b4"
        },
        "item": {
          "id": "de4fd8ce-28e8-4083-a96f-9699b3606e97",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b9e158dd-844e-44a4-b84d-3b26ce65db34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cedf32c-ffa1-4ce3-830c-20802023c101",
        "cursor": {
          "ref": "c84ca564-04f4-442d-a823-596d7d741a25",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0e834927-1e13-47c7-9ea5-9afd8d9c4641"
        },
        "item": {
          "id": "0cedf32c-ffa1-4ce3-830c-20802023c101",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0275f02b-7bf3-4772-97eb-c144ecf5fa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e03cd7-fa95-4b8b-a4cb-8cfcc6044418",
        "cursor": {
          "ref": "add0080d-0826-41a0-8138-4829d76cc8cd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "339741b1-8c07-4f0e-bc5e-4d8617c56e05"
        },
        "item": {
          "id": "85e03cd7-fa95-4b8b-a4cb-8cfcc6044418",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "32d5d8c0-437f-424c-937d-982cf8310eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a5841-de1b-4167-ae19-6f541e681688",
        "cursor": {
          "ref": "2e005e00-b334-4794-bcff-f8be0988b60c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a4477c85-6ee3-4af6-98b5-bb533e511ce5"
        },
        "item": {
          "id": "5f0a5841-de1b-4167-ae19-6f541e681688",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4d35d70d-879a-446d-bbd0-e8d6aa92ae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa281feb-2ac8-4645-be32-941321999399",
        "cursor": {
          "ref": "4af8dcc3-b5c6-4554-8fd7-f9f4d4a551a2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa6a180e-678d-446c-abce-b488f9187d46"
        },
        "item": {
          "id": "fa281feb-2ac8-4645-be32-941321999399",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "78343ea4-0b0d-4f16-95a7-fb396e719f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d1bb40-5677-4b63-99cc-11204cfd69ed",
        "cursor": {
          "ref": "68859be3-5b6f-4aec-b8b4-b7b33315d603",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e43d954c-a0c9-4eb8-b5c8-5fc29c87743e"
        },
        "item": {
          "id": "25d1bb40-5677-4b63-99cc-11204cfd69ed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0651066-4ee0-4fe9-bd0f-988f90e058f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5b092a-c1f9-4933-91cf-d8fc3b62d64e",
        "cursor": {
          "ref": "5a8b4edb-a909-4ec1-879c-d5aded7c3cb7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9fd57285-b1cc-49c2-b474-3620dd818857"
        },
        "item": {
          "id": "5c5b092a-c1f9-4933-91cf-d8fc3b62d64e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4a919cc9-87b7-4d03-9da5-accf1f3289dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d046e9-60b7-413b-978f-692199b40068",
        "cursor": {
          "ref": "fdc2ba5c-1a81-4b7d-851a-e4798fb1cf08",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "559d0a7e-8168-4b16-a2f6-c412841d68ac"
        },
        "item": {
          "id": "d6d046e9-60b7-413b-978f-692199b40068",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6211171c-77f1-4e27-8027-7c3ad535378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a991bfbe-b3c5-4d8a-8de2-13cd0eed1121",
        "cursor": {
          "ref": "233b216f-8d5a-4679-a2d6-40ce72e321e2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c83072e1-3e44-4782-984d-a74ba54e0e52"
        },
        "item": {
          "id": "a991bfbe-b3c5-4d8a-8de2-13cd0eed1121",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2a9b157b-1b98-4d42-8e00-cc03433a6021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fc402e-f469-4068-82ba-206a052dab5d",
        "cursor": {
          "ref": "1ebe2c9e-a4ae-4540-9638-b71d81c0d60c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8e87c1d0-6756-47da-8c49-ef298cf9759f"
        },
        "item": {
          "id": "03fc402e-f469-4068-82ba-206a052dab5d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fde4180b-61f0-4efe-8155-1ea9bec61826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38286452-80be-4826-83d5-4ffa4ff77ebc",
        "cursor": {
          "ref": "ad80f7b0-4877-4a33-813e-3544572217dc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "756a23b9-804f-4179-8222-0919fefa3e05"
        },
        "item": {
          "id": "38286452-80be-4826-83d5-4ffa4ff77ebc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6085d9b0-1753-4852-8d4f-7050139936ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c385da-119e-4ffd-bcb5-0a69bf09f888",
        "cursor": {
          "ref": "f6bbae5c-5be7-441e-8f85-4c7a0eb305ac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d954575a-c9b8-4684-9554-3cb79e5c1619"
        },
        "item": {
          "id": "87c385da-119e-4ffd-bcb5-0a69bf09f888",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "02bcea46-d0e5-48e1-8719-427767d0d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9040e573-672c-4afe-8404-b6f3c26c8c71",
        "cursor": {
          "ref": "c1c742f2-9a6d-44e9-a717-ccfe1433e1e9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a16c27cc-24a0-4f17-93e7-44389e6833b1"
        },
        "item": {
          "id": "9040e573-672c-4afe-8404-b6f3c26c8c71",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0a741e0-c516-4188-b4a4-62df607eef44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594333f-d125-4a65-8ed1-fe270ad0d66e",
        "cursor": {
          "ref": "85353652-617b-427e-89ed-e62f3617c480",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bef53596-3d7d-4031-b205-4f940514b78b"
        },
        "item": {
          "id": "b594333f-d125-4a65-8ed1-fe270ad0d66e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "880f2965-3332-4ae4-acd7-61043021229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc641ed-e469-44eb-8fef-89546dc71b9a",
        "cursor": {
          "ref": "99db6e4c-75c1-48f7-9f9a-daa8c675e5a0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "464347ea-0e82-4e51-b7e5-364049317960"
        },
        "item": {
          "id": "fcc641ed-e469-44eb-8fef-89546dc71b9a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8c14bca7-295a-4f30-8659-eafdccb8b3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c76973b-82ba-483c-ae9a-3acbdd87ab97",
        "cursor": {
          "ref": "3aa8f109-ed55-40bc-a6e5-e27bc71e4fcc",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "474e0757-278c-4925-bbb3-4252aea759b9"
        },
        "item": {
          "id": "1c76973b-82ba-483c-ae9a-3acbdd87ab97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "de8b488b-4814-42fd-9841-b7e187bb8e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bddbed-a57f-4004-a216-b1351d2c0544",
        "cursor": {
          "ref": "4767a881-e122-45c8-a985-561014e27ba7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bf7c67d6-e993-4b5f-940e-ef4bac713eab"
        },
        "item": {
          "id": "58bddbed-a57f-4004-a216-b1351d2c0544",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6500065e-568d-4034-a00a-0a73af58c4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defcb15e-dfb3-4f9a-82d3-b9d72e228201",
        "cursor": {
          "ref": "453f4427-1195-4027-bacd-29436a4da88a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5bc322d6-5553-4cdb-b59a-5e18c528b0f3"
        },
        "item": {
          "id": "defcb15e-dfb3-4f9a-82d3-b9d72e228201",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c8ec9f6-e0da-4dec-bcdd-9421d3c65f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d558eed9-a563-47de-8861-70030a85815e",
        "cursor": {
          "ref": "4968d370-799f-4ee4-a87f-66a738ba0378",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b2112c74-0fb7-464c-a0e9-2200171de8ef"
        },
        "item": {
          "id": "d558eed9-a563-47de-8861-70030a85815e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f62d0580-0e3b-4a8d-942b-815fe0e61c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa7a563-04cd-492b-b311-e28ec9fbac53",
        "cursor": {
          "ref": "73c15b32-ac2d-4394-b62c-e015b431bb88",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e57568a7-7c77-46a1-96ae-24c6eb334c3b"
        },
        "item": {
          "id": "5fa7a563-04cd-492b-b311-e28ec9fbac53",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "98ced878-3df7-42a0-9b55-62c22bbfb189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ce6f1-7884-4516-bb69-735769dd17f5",
        "cursor": {
          "ref": "a032b922-9a16-4766-b67f-435ce9c3bc08",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c5a56e90-e960-4b8f-b5e0-e4d20b277a85"
        },
        "item": {
          "id": "9b1ce6f1-7884-4516-bb69-735769dd17f5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "62ac8739-058d-4448-a010-965d5731faa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba541cb-1853-4e5b-a638-c41292ffb8d0",
        "cursor": {
          "ref": "07904ac2-eb43-4668-bcc8-e7ade97ee75d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bcf2f214-16ae-41d4-982a-5ffd12bebf5e"
        },
        "item": {
          "id": "4ba541cb-1853-4e5b-a638-c41292ffb8d0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "df3a4631-c62c-4ba1-a8ac-52462f1d0468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f92e24b-dec7-4eeb-8eda-9be7d388ace0",
        "cursor": {
          "ref": "38ef7382-7ea7-44cc-a2c6-eb0ae8338c01",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d4e0458-e151-4d9e-ade0-1ae89fdf0d7d"
        },
        "item": {
          "id": "1f92e24b-dec7-4eeb-8eda-9be7d388ace0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "35ae67da-a295-461d-9bb2-15ff92c3875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d66882-ffad-48b2-8efe-651c00b71248",
        "cursor": {
          "ref": "bb45d110-89f1-49a3-8649-3f06c09895e8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "081d9870-a5cb-4780-9f38-9c3fc11d860c"
        },
        "item": {
          "id": "98d66882-ffad-48b2-8efe-651c00b71248",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cd0d3ccb-307d-426b-bc4b-d6dad64ef663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59568a5-7ae7-4882-8c06-e6e9c5dbe9a6",
        "cursor": {
          "ref": "bbeb0bdf-210b-4044-8b29-1d2459bb562e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a586e0b4-ef24-42a6-b1dc-9ff933500e68"
        },
        "item": {
          "id": "f59568a5-7ae7-4882-8c06-e6e9c5dbe9a6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f94d5c1a-25e9-4ed8-82e0-f9978f090bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba275cd-280e-44ad-b587-4e7fa79e4f6c",
        "cursor": {
          "ref": "bd93a210-f04c-4904-9ee2-c683ddf2dc4b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2aa176f-629b-4cb3-b225-b9daeeade838"
        },
        "item": {
          "id": "eba275cd-280e-44ad-b587-4e7fa79e4f6c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c5137585-9212-489a-a885-84c9b8724375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f24f8ea-7ed6-47b3-8d40-37f0e748bc4b",
        "cursor": {
          "ref": "a3953332-eca0-41ba-a6d8-e280f15ee8e6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f7bf1e7-2ce3-4d8c-adc5-0b59c9f61900"
        },
        "item": {
          "id": "8f24f8ea-7ed6-47b3-8d40-37f0e748bc4b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e551d4bb-a596-4e31-ae5d-43f1531cb27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32386315-4f44-4a83-861c-86c50d81b12f",
        "cursor": {
          "ref": "4e9116aa-9bd0-4aa5-acba-4f5fce33cb06",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5100d8ac-a43b-4786-ae09-a405d29749d4"
        },
        "item": {
          "id": "32386315-4f44-4a83-861c-86c50d81b12f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eec74bfc-7e74-42c4-9523-aec5687b7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca79a18e-5cac-42b0-8953-a3c75cbecfec",
        "cursor": {
          "ref": "ff593935-4eb2-45cf-8e99-916b0d1a67ed",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "185b3404-0ee5-4cf4-92f8-cd970ec1084c"
        },
        "item": {
          "id": "ca79a18e-5cac-42b0-8953-a3c75cbecfec",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c44581cd-f140-474d-bf6e-544aa5bc0f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6224aa1-45d2-4c2f-acf4-350858fb5cb9",
        "cursor": {
          "ref": "f83322e2-7935-40fc-a54c-4889c0040c36",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "810beeee-2b8d-4ffa-acd0-74c314672565"
        },
        "item": {
          "id": "d6224aa1-45d2-4c2f-acf4-350858fb5cb9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "66f5ac37-7368-4d63-ba7d-6d037ccb1477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63d86d-4b5c-45f6-9c0c-8a7b8495eb49",
        "cursor": {
          "ref": "45fe1b7d-0c74-4c79-8c53-0a8a25a578b9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "20ab0526-f123-4ad5-b233-efe0f19e8b06"
        },
        "item": {
          "id": "6b63d86d-4b5c-45f6-9c0c-8a7b8495eb49",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b02f5e7d-1ff2-470d-8ac5-66d5e75ad628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df304da0-fb19-4546-a812-23d8bcb39591",
        "cursor": {
          "ref": "8c1d2772-c002-4dae-b9b3-16b0efd0b503",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "683f5c80-db6e-48e5-a199-af9e9a7d056d"
        },
        "item": {
          "id": "df304da0-fb19-4546-a812-23d8bcb39591",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7fbd32ee-273f-4976-9947-4a5dce087f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52674c1e-e9b1-4d69-8038-cacc060c9a78",
        "cursor": {
          "ref": "7ee57def-edf9-4862-a84b-094f56301402",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "056714fd-e228-4339-b0d6-a55e5fb87da2"
        },
        "item": {
          "id": "52674c1e-e9b1-4d69-8038-cacc060c9a78",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "da125193-8484-4e85-8a5b-ef44a2d50d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30aab10-cb42-4074-833d-60713c1e5eff",
        "cursor": {
          "ref": "c76b13d3-2fc6-4979-a9f8-945b9720f554",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "70870758-e05b-467b-98d5-bf7b38c3b4b5"
        },
        "item": {
          "id": "c30aab10-cb42-4074-833d-60713c1e5eff",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5f526fb-0a48-4f21-bca7-97653fd8fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ddba29-20be-41dc-af12-8fe4277374b6",
        "cursor": {
          "ref": "96c68d42-f72b-445b-8274-fabf422c694f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f7e97efa-d2ce-4371-a9e9-5fe17c2d0d08"
        },
        "item": {
          "id": "d8ddba29-20be-41dc-af12-8fe4277374b6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cc3490a3-10a7-4419-b11c-64efd092ea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027c0814-a75a-4281-9208-f8795fa7edb9",
        "cursor": {
          "ref": "af9cfe07-75d0-4132-9d27-9e9da0cc5086",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "24a3757b-43be-46dd-a2d9-0b8716576f19"
        },
        "item": {
          "id": "027c0814-a75a-4281-9208-f8795fa7edb9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bedc7c84-5c82-4d69-befe-59b84d9ed771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c94afc-98b6-4a32-9403-4ae3aefb6917",
        "cursor": {
          "ref": "9f3c026c-e558-4bb6-acc7-90629ef40649",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9b678072-0f2d-48b1-b4bf-a684877629a5"
        },
        "item": {
          "id": "15c94afc-98b6-4a32-9403-4ae3aefb6917",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "39c81d3f-aba3-4eac-a678-e67e516d046a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4542dc-d3f4-47ec-bf83-4e76065e7ac4",
        "cursor": {
          "ref": "132b5b9a-f9cb-4d6b-a87d-a5754e2be1c0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2328fb61-9e4b-490f-972d-8268bd4d90c3"
        },
        "item": {
          "id": "6b4542dc-d3f4-47ec-bf83-4e76065e7ac4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "54644aa7-a468-45c3-af08-d8fa5836dcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f7801-459f-444e-babf-ecf34de2dd87",
        "cursor": {
          "ref": "454a64d0-0f28-473f-a5f6-becac22263c1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "590af624-0060-4513-9fff-300ae2546098"
        },
        "item": {
          "id": "862f7801-459f-444e-babf-ecf34de2dd87",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7b305ce6-1311-47d1-bd68-2f5e5a8d4ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69216d5-a4ad-4a73-8074-d8fc50c96048",
        "cursor": {
          "ref": "0d801b31-f6ac-4a57-a9f1-bb1677b2c264",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7ba85d82-72de-4a61-9978-30e4fddddd14"
        },
        "item": {
          "id": "a69216d5-a4ad-4a73-8074-d8fc50c96048",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "42045ac5-4334-4973-bc6a-d6f4f49b12eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a4c274-7097-4864-b89e-69d20c0fe818",
        "cursor": {
          "ref": "3d1a4433-2b6d-4f8f-8d21-fde08a5390e3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b2db003-4d7a-4a3a-ada0-222e4508757d"
        },
        "item": {
          "id": "82a4c274-7097-4864-b89e-69d20c0fe818",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "88d1a8ec-26d5-42c9-ade2-133840906b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9383c6f-ab37-4f31-ac0a-c16324e3387d",
        "cursor": {
          "ref": "7de50f34-ad15-4810-abbd-4b9aefaf9085",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "39a4ae2a-9155-4647-9afc-c809d1d2065c"
        },
        "item": {
          "id": "e9383c6f-ab37-4f31-ac0a-c16324e3387d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "474d8eb4-f805-4c9f-99ff-c2e92168ca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365a748c-8537-4a2f-9261-450cfbadb820",
        "cursor": {
          "ref": "2b5abaa3-a90e-4f42-b050-42f7499ff5a5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c17d4d62-eba9-4906-8f81-cc734dae9eab"
        },
        "item": {
          "id": "365a748c-8537-4a2f-9261-450cfbadb820",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b1c6cfb6-be74-48d1-b6ae-fec6f1c701ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f514fab-7ead-4b81-a0d1-c77bcd34c67c",
        "cursor": {
          "ref": "87279e40-fc2a-47c2-9433-3b933ffc00e8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d8fc06f4-33b0-4258-9178-6e991b97c6fc"
        },
        "item": {
          "id": "3f514fab-7ead-4b81-a0d1-c77bcd34c67c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f60169fb-a543-44b9-b5a5-ed8d54e55a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5d1484-fbee-4be5-be0a-4d6f6c976417",
        "cursor": {
          "ref": "db3c80d3-2f93-47fc-b06b-e19e3bfea0db",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "51f07051-2ee2-452e-9334-e420fbb68dc3"
        },
        "item": {
          "id": "2a5d1484-fbee-4be5-be0a-4d6f6c976417",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "83d49a9d-44dc-4c80-a32b-1cef9efa9e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9975f079-676d-41b3-9c56-34ad213a3080",
        "cursor": {
          "ref": "1757b004-4a74-437d-a169-094e4e9667c6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3928f079-8ef7-43e7-94cf-9fb22e9af81d"
        },
        "item": {
          "id": "9975f079-676d-41b3-9c56-34ad213a3080",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b7f24c7f-cc23-421a-900d-9ce74071f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f72d0c0-c301-4c3c-93de-55f173a0087e",
        "cursor": {
          "ref": "f03271bc-0976-4281-8e45-b791450fbcb2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2f450477-0ec3-4a6b-b2ae-305d32e60761"
        },
        "item": {
          "id": "2f72d0c0-c301-4c3c-93de-55f173a0087e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a0acf426-31ae-4f2b-9a31-a451394f0d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43118da1-1df5-4c07-92a5-d84f1b2129cd",
        "cursor": {
          "ref": "0c99b3c4-dac2-42ec-9f89-7fd773dac3e3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d7665e74-bd13-44e8-b9bd-65a323e132a3"
        },
        "item": {
          "id": "43118da1-1df5-4c07-92a5-d84f1b2129cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e5edfad-b817-4cac-b3a8-e9f48bee2f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e02b752-cd54-45a6-90cd-2f999d1a50fd",
        "cursor": {
          "ref": "22800974-79f3-416a-bda8-790688976e41",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e8ebe64b-f913-4488-84aa-f4d4e523d2de"
        },
        "item": {
          "id": "2e02b752-cd54-45a6-90cd-2f999d1a50fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5cd9f83f-355e-49b4-928a-01c43956cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd74a34-43dc-4c7f-95f0-dab95639a6e9",
        "cursor": {
          "ref": "dbd6ffef-d712-4412-97a9-e00572f05351",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "046dde59-7525-4778-967f-6bf13aa3b109"
        },
        "item": {
          "id": "fbd74a34-43dc-4c7f-95f0-dab95639a6e9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "04f4497e-f56d-4d3b-889a-eb79248c2e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957db1b6-1e7b-4587-b964-79ea2d07f38d",
        "cursor": {
          "ref": "d77f28ec-b214-4cc3-86bb-7d16dd8262db",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ffbb5df7-baaf-4ce9-8373-ec9f4057c4a6"
        },
        "item": {
          "id": "957db1b6-1e7b-4587-b964-79ea2d07f38d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3771aaf0-d764-4686-9a21-d6c7047400c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6433a826-e151-430e-9e1c-8ee54abbbaf3",
        "cursor": {
          "ref": "ac7e3cec-80c8-481e-a539-bde81ddcb475",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c93fe1d9-3000-4b1b-b2fa-6f6eb49842b1"
        },
        "item": {
          "id": "6433a826-e151-430e-9e1c-8ee54abbbaf3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19257f25-aa0b-475f-bbd8-51396c2881c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa6b8f3-830c-48e7-935d-dbec3c2f6fa8",
        "cursor": {
          "ref": "3569cedd-c2ec-4545-a38c-80d7e4b1129c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b2623eaa-03e4-4576-9d80-fd5ade4a07f6"
        },
        "item": {
          "id": "efa6b8f3-830c-48e7-935d-dbec3c2f6fa8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bdb663fa-7077-4857-8efa-c9628ec2ca1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d62aaa-8a00-4b3c-a09b-3a8b173f7993",
        "cursor": {
          "ref": "a5b3af87-6faa-4d2e-94b0-70583273eb14",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "46e47b52-e3f0-49bc-8fc0-dd34ea8477aa"
        },
        "item": {
          "id": "27d62aaa-8a00-4b3c-a09b-3a8b173f7993",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "58d38dab-5f32-4ff7-9b26-2d34d36d82d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e5c1a0-da74-43dc-8642-3baaa8f91f2c",
        "cursor": {
          "ref": "92a5f54e-a79c-455b-8120-de84a7a160f4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "76563909-f346-4138-8679-346badda4446"
        },
        "item": {
          "id": "f2e5c1a0-da74-43dc-8642-3baaa8f91f2c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0f12d626-8d84-4a1d-b0c9-8ba7a7761a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ccaf2c-f382-40d7-ae42-1a7d662efaee",
        "cursor": {
          "ref": "cd9b5d66-95e7-4cf8-891c-8a464f51b669",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "91498e7a-55dc-49d9-8736-fd0c732930b8"
        },
        "item": {
          "id": "b4ccaf2c-f382-40d7-ae42-1a7d662efaee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b602479-8edc-41ef-849d-d5b6c88ddd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965165e2-7c71-4283-bebb-109e4a0de1cb",
        "cursor": {
          "ref": "ce14e716-8241-4ec3-a0fb-3671d2b8072e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "28241793-248b-446b-94f2-aba383d51c43"
        },
        "item": {
          "id": "965165e2-7c71-4283-bebb-109e4a0de1cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "144879fd-18cd-41ec-b390-102d50cdd7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc22e7e3-216c-46a3-b895-2168ab8b1ae5",
        "cursor": {
          "ref": "f5b18591-f260-48a3-baf5-3eb6a56cb3e4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "67cf1be7-a143-499d-b684-8458d49d6de3"
        },
        "item": {
          "id": "dc22e7e3-216c-46a3-b895-2168ab8b1ae5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "97ae01be-5a28-49a2-8922-a37ffa06449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d678cf8-146f-4cb4-a515-8b7bc0112355",
        "cursor": {
          "ref": "862320ba-0b5d-441d-bf52-13c16d27127c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "371cbdcb-23a5-4895-89cb-e8bcd8a13a5c"
        },
        "item": {
          "id": "3d678cf8-146f-4cb4-a515-8b7bc0112355",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aa3b8d11-a19c-4cc4-a3e6-f5d5b8d63c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc2f9d-37fa-47d9-b1da-46e3e756d1a8",
        "cursor": {
          "ref": "2cb0261f-6210-4e06-b683-1f2363734912",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cbe47363-854b-4503-9539-46c15842db2b"
        },
        "item": {
          "id": "c3cc2f9d-37fa-47d9-b1da-46e3e756d1a8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73c80128-0d7b-489b-9c4a-e113b87876f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4320668-513f-4cfd-abe3-ad908f94fa94",
        "cursor": {
          "ref": "726643c0-ec32-4605-ae69-da6acb3b46e3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7ee5e99b-c5dd-4133-b42b-d6fb8190c2e2"
        },
        "item": {
          "id": "b4320668-513f-4cfd-abe3-ad908f94fa94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6dd472c-9b96-4893-a191-8aab09649d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9da6a8a-e065-404b-abc2-cae97ec8ce98",
        "cursor": {
          "ref": "b757c5e4-1ab8-4c1b-ae02-6dbfac1b14cf",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3a3e76f1-6c7f-40ec-816b-88cfc7c65f12"
        },
        "item": {
          "id": "d9da6a8a-e065-404b-abc2-cae97ec8ce98",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "57611a63-9eee-440f-b379-56c80e772fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f07fba-7e39-42ad-99b0-39a55ee1c8da",
        "cursor": {
          "ref": "2f32f49a-ca4c-47ad-a67f-bf1ab7aa2b56",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a9f13de3-312f-456b-ad15-9ba8baea9b0b"
        },
        "item": {
          "id": "07f07fba-7e39-42ad-99b0-39a55ee1c8da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "69334729-94ba-47db-baf3-fb92cfcd99b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6acb8f-0941-4305-b66d-677be2684398",
        "cursor": {
          "ref": "6b145153-ddaa-479e-9873-967e13e1b649",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8589fef4-ec5d-4a3c-b476-c8f46668f660"
        },
        "item": {
          "id": "3d6acb8f-0941-4305-b66d-677be2684398",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a304312-483a-4f23-82ff-0b2fd299e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af0a302-fa3c-45e8-bbaf-d20704a9028b",
        "cursor": {
          "ref": "f840d8ec-ee83-4d86-af33-b72f82a3cbb8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9e5105dd-228d-4724-af79-6f3b765d217d"
        },
        "item": {
          "id": "6af0a302-fa3c-45e8-bbaf-d20704a9028b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9a925d5-1c1e-45e3-a682-e40e70dd3762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81070fa1-c793-4522-acea-9a682fbf469b",
        "cursor": {
          "ref": "04ec7c65-3e92-4648-970e-3b4404ae9121",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f855972c-35a2-4e3f-a5cf-e2e971be409f"
        },
        "item": {
          "id": "81070fa1-c793-4522-acea-9a682fbf469b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f35a0dd5-48b4-41d3-83c9-ff047ce3a9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d72028a-8eb0-4ce0-a0cb-c708508f4502",
        "cursor": {
          "ref": "76a33f5e-b11f-4efb-9ad0-dec71ff4cffc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aea9bdae-b237-4f02-b0b0-cb527a225468"
        },
        "item": {
          "id": "5d72028a-8eb0-4ce0-a0cb-c708508f4502",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b293a6a4-888d-4679-a507-16e08449fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae2a22-ca88-4913-ad5a-94fc8e9aa80a",
        "cursor": {
          "ref": "aff17c5e-6220-47d5-9d32-83a02ff5fb12",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ec86d0ab-8bd0-4d9a-b6ce-fb48183b1471"
        },
        "item": {
          "id": "9fae2a22-ca88-4913-ad5a-94fc8e9aa80a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1ef6bd2c-4e05-41cb-adc4-293afa6201a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44996769-e317-4b01-bdef-dc3fa87009c9",
        "cursor": {
          "ref": "e5f0efd5-8532-446d-846d-580a72d1cf33",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1612e42f-c182-4cdf-b2a8-e90b93436cb7"
        },
        "item": {
          "id": "44996769-e317-4b01-bdef-dc3fa87009c9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d4fb8df6-88d1-4434-910a-d01d6c36386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01daaf48-0473-41dc-9543-8e5ba64cd5b1",
        "cursor": {
          "ref": "1cf98971-92aa-4073-86d8-8a9ee262bf3b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6fb8f3b5-3be9-4d60-a90a-a76b5970b268"
        },
        "item": {
          "id": "01daaf48-0473-41dc-9543-8e5ba64cd5b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ee205d8e-f51b-4a52-9093-e3590e63a211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292650c-83ff-4de8-815d-3bdc4323b7e3",
        "cursor": {
          "ref": "7774d328-2809-4dbb-b147-46320d3b8fae",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "30b3da79-d741-4e89-92ea-0d92ba19a587"
        },
        "item": {
          "id": "4292650c-83ff-4de8-815d-3bdc4323b7e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f920ee70-e00a-47f3-af6c-00f7088d9251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1438a7fc-b18f-41dd-9488-e7e3f21fd9fa",
        "cursor": {
          "ref": "d7825679-2d12-441c-9e0f-b3e565202aa4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6b38da37-c371-4f2c-943e-70e8be007745"
        },
        "item": {
          "id": "1438a7fc-b18f-41dd-9488-e7e3f21fd9fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fadd64bf-149a-413b-8ddb-767158686811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b10071-5635-4b83-8663-ea7f20589e50",
        "cursor": {
          "ref": "a11291fb-9bf6-405e-bec4-a375b43169d0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a6aad38c-c72d-49da-a74b-8b8fe043a2f9"
        },
        "item": {
          "id": "39b10071-5635-4b83-8663-ea7f20589e50",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ecbf21c-05ef-474e-95e4-9ea137fefe63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2febc2-5a88-44bb-9eca-a99ae0cd3540",
        "cursor": {
          "ref": "f47b04b6-5e74-49f0-b346-a90a2a8bc2d7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0f577d3c-0ec5-4b1e-a87d-9a1f94fd1822"
        },
        "item": {
          "id": "1a2febc2-5a88-44bb-9eca-a99ae0cd3540",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "221396c5-1f94-4365-9e22-c07bd2c21b61",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "305df744-c300-498a-acba-80b69c4dbc15",
        "cursor": {
          "ref": "6799420d-3bfb-4856-9978-970ab3a24148",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ad3a144-c407-4e37-b2cf-1a3531101ca0"
        },
        "item": {
          "id": "305df744-c300-498a-acba-80b69c4dbc15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cae6b87c-9bce-484b-8da9-027a124b9edc",
          "status": "OK",
          "code": 200,
          "responseTime": 1950,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d543f11-3eb2-46ee-b380-6434ca17f4f5",
        "cursor": {
          "ref": "ccec5a11-cf78-4c9e-bb09-dbf870dfc1a3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b78e7d63-222f-4d90-9010-736642fc580f"
        },
        "item": {
          "id": "9d543f11-3eb2-46ee-b380-6434ca17f4f5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5ff50db4-ca33-4533-ab29-ae931e50f665",
          "status": "OK",
          "code": 200,
          "responseTime": 1450,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "059bf4e1-10de-4f7a-9680-1d6e87b01884",
        "cursor": {
          "ref": "f6602cb7-b5e6-42f6-92cd-737938e5c8f9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43310191-652e-4dc3-b82e-fbf52ae59b36"
        },
        "item": {
          "id": "059bf4e1-10de-4f7a-9680-1d6e87b01884",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20a5201b-619d-4835-80df-6a0bc2f6705c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059bf4e1-10de-4f7a-9680-1d6e87b01884",
        "cursor": {
          "ref": "f6602cb7-b5e6-42f6-92cd-737938e5c8f9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43310191-652e-4dc3-b82e-fbf52ae59b36"
        },
        "item": {
          "id": "059bf4e1-10de-4f7a-9680-1d6e87b01884",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20a5201b-619d-4835-80df-6a0bc2f6705c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b2631-0ff8-4863-8c17-bdb740e35514",
        "cursor": {
          "ref": "4cd69bfd-dce3-44a9-a66e-47ea18a9b29e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1d9c57b6-f735-4f7f-8a60-0c92de44838e"
        },
        "item": {
          "id": "380b2631-0ff8-4863-8c17-bdb740e35514",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4430af0-b2a7-43a7-9109-f1e29ed3b5d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e65cd-d3f2-4e89-b886-e7bed52db335",
        "cursor": {
          "ref": "cd227b19-7117-4322-90de-42b883ae38ae",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "58901ab9-daaa-42f5-98b3-818162b9f093"
        },
        "item": {
          "id": "c90e65cd-d3f2-4e89-b886-e7bed52db335",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7edc76a-4d7e-479d-8117-40885f688ce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}