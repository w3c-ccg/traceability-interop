{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7abed0e-bfdd-4ff5-9d78-ee32f8d69d25",
        "name": "Clear Cache",
        "item": [
          {
            "id": "39d6522d-dcb5-4bee-8ab5-03745c9cf66f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "029cd87e-a0b4-4cb6-b6f0-f004d6ea4e7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a704bd2c-92be-4b2c-9b27-6d2da20a8714"
                }
              }
            ]
          },
          {
            "id": "570d0789-1e33-4326-8c6d-33dca5a97e85",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ebd53b7-3f56-4395-bd1b-c7b884352e8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f7d2dabc-0c05-437d-97e9-f546d7c8392c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1c588f1d-e427-43fa-b9db-5c4d38d2496b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "232b438c-e3d5-44e1-805e-37f27c5869be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee6f6362-617e-49e4-891d-f63ca7ace370",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "600f14b7-07a8-4fd5-8fb0-884421c3ad57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c2176a9-ea4f-43cd-be78-f92cf1288cf9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3a13297-f964-4876-98d2-ff65be901f14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0454dee-0605-4b3a-8e87-3b3312abfab6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e08cf4c3-e547-4616-8a41-6b85d9cf5fd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d0cf5f2-685f-4d85-8268-2e9b01455760"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55d66c99-9e5b-409d-9579-13138c4ad4dd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "25490eeb-d4bb-4ba2-b699-fab888ab0af0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afabd41b-fedc-4c9c-ab21-9db2c3e50c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66d86c3e-9ed1-4a02-b207-b2eee3841509"
            }
          }
        ]
      },
      {
        "id": "aec415ac-a45e-4a30-94fd-c3b3fb5fa56f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "381e2931-4116-42f3-a038-0acba333c4ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97ee76eb-8d3c-40b7-b726-9637d79f86c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "232667ac-3655-4d7c-81f4-33f6147def68",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78ff854-e14c-4f8f-a223-2eaa9df9e99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da7abc02-f484-40fb-8ad8-ef96141b5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f94963a-f766-42d5-b146-535bb39e327c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da8dfc1-7fe1-490d-9cb6-55083a4b810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8453ad0b-de6d-4ae6-ad5b-f257a949d92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2d9b57-3be9-4199-83e8-e6a62aa071ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8043bcbb-b7f1-4631-ae6d-d68a6ae9c899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "889bec2d-b2c2-4ea3-8e37-743791cdffda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "797b7c6f-85f0-4c3c-a6b9-6fad864ce886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a213ee9d-5b97-434a-a3db-8aadfe6bfd68",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed908d17-6286-4602-a6a9-3f1a0a196d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5415c681-60cf-4d34-b4b6-40a63efb7083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a783eec-e662-4485-8947-f3041efa6d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885561d7-468b-4d54-8d35-517dfa85e3eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3792a04c-795e-4c29-a4be-45b799ee24eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58372537-b27d-493a-bccf-d1e9327361ee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca12279b-4d2d-44a0-bcfd-6d81b381825f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3f86802b-cfde-41c9-8535-a22993417040"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fcfdd54-acee-4d26-b2df-f29d75afa98e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7283b7b8-d66a-4ee7-9faf-9aed73a61ee9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ad5c061-7bcb-4fb3-9c4c-8ef6d54c6052",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8ee7bc6-5208-47f5-97e8-de2dc7dff9f2"
            }
          }
        ]
      },
      {
        "id": "d8923104-75de-4254-b5ed-7061d12ddc2d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4278af02-02aa-4df6-91d2-cffefd3bf825",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d3ba35b-2f03-4f5f-ac4a-37629591e26a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7c15859-4db1-46f0-9c26-b66927c7a7a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc1a76f-3fb9-4694-88a6-2f45c96ac814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88555988-47f7-4a5f-8dae-c14d1abf55c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8f003a-2580-4c98-9865-aad06f73a719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe45fae-f0d3-4a2b-9c75-a3bb5e721cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9530bb19-e87a-4b4a-a0a6-c34fa8f739d9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dea11e3-70c4-4135-941d-069a2c7d30e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266239b2-9a31-4251-931e-75a78a636298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf9a2c-1829-47d7-8d4d-3f173ddb1fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae7365a-6379-4446-ad49-a05969b564ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a38203-52d1-40f9-bca9-0bebbdd651c9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39276a01-6c53-4f6c-9898-7b0a1b8afdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00c805a-70ac-4f7e-acc7-36dee2f3c4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8262a898-6e35-4986-9b86-75845ebe47c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56189939-b826-4704-8cd7-986468e52041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae84315-2f84-4ed1-bff5-bbc59f8fc911",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ac380d-7509-4b0d-8be6-17b86ff62c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e44c6cf-8ef4-4230-8899-84d20c5cd7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab804c8c-8ec8-4d24-b0fc-80dd78f5deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d48959a-33a9-4210-9c57-c5f4bedef52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2e208-4acc-4628-a5d7-0b2dd52e1110",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87164c2-926e-45f1-a86e-dc3e536b73d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8b5acb-17a6-4ef3-9c62-019074220858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d83f352-d2bb-4605-806c-2914e9587a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a37c36a-33d5-40c5-819d-80731d47f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56c3939-37ed-42f7-a85e-d75ce496db13",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52ecf1f-d8d1-4e6b-b1d5-1ce21a76b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668d047b-66d3-4b71-95d5-8ebb2fd6c470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2dfd22-65cc-4d4e-bccd-c2b76a258f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c3370d-0656-4f3b-9326-8974a79ba24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2661db77-79e3-4aeb-a20e-a7f4c528fee1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca00244-8354-4be9-b2ea-9b31a0d155f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fa23c7-e6c3-4c8b-9d04-a2f15773fec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35072be5-8e42-40c8-90b6-62a787994f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a338820e-7cde-47e1-a37c-fa6f2d6ef06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab05dbe-5f45-481e-a7e6-ae649c10681a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcea32d-6343-4d31-a57c-0dd8088a9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54037007-bbd1-4059-af69-69ebd46ef7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0874cb-23c1-4371-bde2-90dc2aa505d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "378ee595-6e75-49cb-92d9-e4239480fc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d724c8a-f880-47b6-8b99-773350a01e0c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291d56e1-b230-45e9-8fca-306d59057ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb512e1-2093-4471-9b79-0228720b8926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c08417e-6666-4dce-93b3-2ec4451420c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "060d2220-c805-4f93-839c-e02aba90feb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af3cc35-f867-44dc-9fd9-390d6b8a0872",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc314f50-7110-4655-bd2f-0b57ba22bb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb973851-b63e-4639-bf41-5acac9def24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea1f90-cae3-4a02-b36d-fdf182bee98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cef5e405-2885-4a2b-a498-f0fd97e51d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e9089-a649-4502-934d-9ca7a5fa505d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8516a829-820d-48cf-98e7-4fac920be9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25f60f9-c07d-4786-a9b9-0aab7741f568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b5dd87-e77c-4bda-a780-927493cf2753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad9086bf-e8f5-495e-a253-02e1845365b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970b997a-a4b3-41d8-b8ec-0bc69819b136",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b563688-7e60-47f1-b541-998b79d76dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c998a366-e77d-4260-9146-f55d1a3132de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9bc636-d345-45df-95fc-b432261313f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f2b65e-6dc3-4e7c-8065-e1e9472e3798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ff2878-d837-4ab9-97ef-9c35315b1a8f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81373f8-791c-40cc-bb58-9a9cf9404771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b86402-d7ee-441f-8917-67cf78f67565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2959d59c-5931-4dc4-a6d8-8fbbdcbb291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d33c0bc6-2e4e-4c12-88d5-8a091588146f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ba06cb-df00-438a-9a00-874de4e9350f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc70704-24a7-4df9-a1ea-95d1a0b33496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15871271-c13f-4803-9e4a-4f2e2da570b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dde6d5f-2a9c-4b09-a08f-e9507a56eaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b409dd7-e7a0-46b9-97a0-e998cc04372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b8920-f7ce-48b5-8019-7da2f3ccb601",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a4a0bd-ca72-4509-97a3-8e15927533f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b038cc-8911-4b08-a093-ddb22f1805f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d5c41b-053f-4a7d-bce2-5dde1122e1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe3c7dd8-a220-49f3-b9b9-386296bdd7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e480c98-19cf-46a1-bb0b-6bd4ad57a0cf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e77535-6bf0-40b5-aeb8-0f61cf91d84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3463d632-4eac-4bfd-a80f-d8a6730de462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e45e39-78ce-4f9e-aac6-a3ce9327013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c052a623-1b1a-4c77-a530-3049f9626a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88dde69-1cd5-458c-8de9-bdd141c2425f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d540cb7f-e06b-4249-ae15-b2cf567060f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d73b31-711f-4204-adc7-e0d23c39eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb980f60-c8d7-4a6c-ad85-5902655cf131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49f3eed2-4662-4354-922a-69bc54cfbef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c476b80-9e33-4d2a-ae90-ee6e5eb6a614",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a96a46c-f93b-4e31-8d28-bad8bbfa4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5512e2-cfe1-433f-ae21-4351a70d27c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1902b4c-0913-46dd-addb-e0495335ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8b2130-640e-492e-b3a2-f90c083145cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4772e3-d415-45b4-9f12-fc99c45aaf75",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367a4aa4-dfab-4fd7-bc5a-c76296d3b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7c1406-ac8b-458f-82a5-2bc464ef1eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a42dc-783b-4363-a69c-b90c07a1ec0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbe9656-d862-49bd-b1f7-2893b0412ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b49a4fd-e7f9-44c3-a887-fddedae51709",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c043d9b4-9b70-4f9f-aaa4-b0f855def802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829e4b92-f519-4d9b-9e18-a75c9df398b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf10f1e-9a39-4f29-b707-b4230fbd8332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "229592e4-9a67-4883-b586-70cb80a4cf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c955b-5a53-44ec-bdba-ac2907130b33",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe85c89c-9dd6-4c99-b4a8-3e073af20743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1884e626-7189-4f45-a4ca-d73a67d1ef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0949ce-b622-474b-a559-4ae1d26e4646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "065c6a79-e6dc-4e49-b9d9-220d2388d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f00ce6-bf84-4d55-acf6-2dd735a3a83c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4eeaff-5557-4e17-8322-6d9cb4d6770d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3472bdbe-1323-4892-b129-8b2f6463fc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724bdff5-61ee-4640-8c38-38e8c34207e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6778da1f-e99c-4ba3-8a3c-d2dbb4b8ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a5e40-8c66-4435-be3d-b56c1ff7771d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1bc04-f95f-4011-9e1c-dea96568948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3451677-8f30-4cad-9c97-eb0c5f98057d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712ab2fe-2b52-4d53-9682-bb8e75f09955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a07bbcc-ac58-4241-941a-68ad809914fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b904e1-49d6-4511-95b9-5d22daea3487",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f29c4-b3f2-4f54-9ff5-7cd5e8815460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e213d492-cab2-45dc-be31-ba0e75e1bf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89e1c54-68e3-40ac-938c-3df75e74bf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ee6923-31f1-4f91-9383-999694d3f094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a2dde7-941f-4203-9fb0-cbaff0847d32",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48abc5-079c-442d-a464-883610a16491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293e2b72-efae-4a2c-a64b-6cb289572754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82fe487-94ff-4f0e-8336-60631c07c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3825ebcd-ae2d-4836-b1f4-150e4ee53038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3544fdaf-d8e4-4a6d-9d3a-061fc9e525e0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5559069-6dc9-477e-90e3-3f9ca7e90d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e848da8-675e-4dfb-b5c7-f5bc0da04c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f866a-68db-4400-8f23-d84585f83936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf0bbc8-07d9-4ba5-8553-3acb051fea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80d19a1-2b28-4b74-9cbd-39da4e2f8345",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9d0e0-950c-4bd6-b797-df11da46e2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923bad88-aca6-4522-9eb4-7ad26b0011bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a6329-e354-4a67-b616-78b8aa756601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21695f12-1358-470b-b150-4b75e0f224cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f13dc2a-bae3-4c32-92c2-1371492da81e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d73793e-d755-433e-ae55-43b7481fe570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6139c3af-429b-4962-afd9-740d5480c453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da1e38-2302-4d6a-a5ef-c263531bca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ceab969-b629-4873-af3e-bb3eafc526ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac506945-9721-40a3-b3f9-937e416bf249",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e485e6-e507-4941-aa23-1d25e4ec534e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1372152c-9bad-4d7b-a073-87d250cfae8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ed8ddc-c277-4caf-ab45-f38e5541e3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfc583f-b69b-43bb-ab15-dcddd74ab16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec53020-b9a3-440f-b7ee-5eb2d8c70b44",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4581c-c810-4fec-a6cd-6ed65f3bc930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc425f5d-69ba-4975-a57e-f8ddbe8177b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac6d89e-42f8-4325-9e60-0d4f22ca21d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5de4e0-f6e8-4832-925b-3c91c824bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c43767-fd86-4e37-b88e-c46ad57d7516",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe678ea-028f-4964-9863-4bbd83f3d9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93dece1-fec3-472a-a10f-3d485cc037b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d43c3-f9c2-43ba-b5ef-e07b25ecefcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aabea5b-ebbe-489b-8db7-61fa6acc559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7244ca-43ce-4921-9dba-05a40f1c1a2d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa68a70-9236-417d-a9be-bf4b68b273af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c77984c-6710-46f4-ab5e-2eb5e3d6bd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce90d6a-d331-45b0-a333-2e5a8112a54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acde69c9-4ff8-4700-a691-112de2bb538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa54315-4ecf-45c9-a53d-6cc9e1c4e85c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a8002-69bb-4cf3-ba33-fedf6eed1511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c36bbcd-837a-4c02-b85f-fd870f6ae9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf266ace-11e2-44aa-97d6-ff5f71da952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9869bc7c-4ce9-44b1-b333-a18f73a89bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0b142d-aeef-4121-8458-73f29e99d8ad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c0cc6-455a-404a-a57f-74eae9bb035a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada385cc-9e43-4402-8808-a68acc1c363b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b576edf-e4cd-49e9-88cc-bc47035c9edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcdf9a8-911a-4d4b-899e-d28f8782446a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d5c6d4-3a85-4196-b762-8402799df0fa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575978f7-2a5a-42a7-a730-e0e0851569a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e419bf-c54d-49a7-b062-131f4d4eb9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084386fe-fdf2-437a-aad0-2601e64e031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa068a1-a912-438a-adb3-43ab5ecf0f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba24e79-6569-49f6-9be7-9fa2886927b2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30163475-3b27-4d74-b5d7-a3a77d5630e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18dbd553-7475-4d25-ae1f-7b403b97b84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcd3138-eb91-4266-aa2d-8c992eae0c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67c6f776-b961-45fc-8aca-122281dbbb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634c994c-041b-4c3f-81ae-7b90df75094f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1841f5-f669-46e8-a8d0-a3e19abfc81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127d85bc-8b39-4544-b886-500ec815b32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4d06eb-35a3-4603-9e2a-cf7e7331cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "431f09b2-3293-4c2a-8f4f-6c608ba175db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c722af3a-cbb6-4b5d-a1c2-7f28a0ce40f0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9648f8a5-7280-4687-bb79-a8c4c35b4558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d70f7d-664e-4558-a447-d693bb748e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2992235f-5d47-4a3a-8377-89d07b676bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41403113-a9a7-43d3-a486-93bdbbc75be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d650456-0f69-4cb6-9bf3-d79e5a844c8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d59072-c358-4fbb-a95c-6f75899982ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5542262-c662-4439-93cf-e1feb1853042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f62079-8f64-40cd-9809-d639983237bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f10121e4-0958-41e7-b6f5-c6b458c48586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9459292-3de9-4a81-aa23-d1da158cac0d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be70b90-573d-4548-8728-0c843beb80a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da74bb5b-965b-4e6f-8a51-d9f00e4123a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e97181-79ec-43b6-8ed5-d1edc67813a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cec7c3a-6e7b-4a69-9e8d-42fbb2acb7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276054d8-109b-4ced-98f5-3f2c36806061",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64cea05-67cf-4797-9ce5-738090aab744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676a71e7-f977-4126-a978-80ea84a03c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb48869-d529-4235-ae3e-e4785010934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "668f1ee3-bdf4-4a01-b571-d856a9424166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e5d9d-9b45-4a1d-a9a7-bd4ee885c4ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7da5d1f-f3f0-4482-bc05-c57fe2a4048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9038de-172f-4b49-8ba2-388237589716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4b3f66-3754-49c9-bb35-06458bae419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc2c435-5d44-4fc6-a890-5c963880cde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd280c3-4910-473b-9c01-ebca0ffb1e3a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88efa580-a00b-4c15-9a3c-3f0466086ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281f501f-3953-4ff1-bf7a-de6152835a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df355f6b-68df-4ee4-9495-5cfd71bd9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e509f-e40b-4dfc-88ad-c36a10908cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd0bce9-4a66-4d61-bad3-45286721c125",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17242ef3-36ea-49e9-9b29-3a886e827135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10acf424-856b-43e2-8189-23ba64533b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31622708-f6fe-4a7b-9bc2-8083e5b5e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "972d3781-5808-4e49-8870-426f9903a824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc3061f-1191-4b09-a8ff-0c07e4aaedd4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a90b08-d928-4b77-864f-a2b36152e93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265268d0-995a-41bc-a998-8aa01a7f8b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5dbdc8-2892-4251-ab60-e3c2ae23346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d09a1f2-1f0e-444c-8d17-1d1084810085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a769db59-55c9-4793-a622-3140559cf239",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb18dd-b198-49fd-919a-1342d4aed4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc932dd-8aba-4707-8c23-cac622b40d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f1376a-3b02-4f58-9d7c-2239cfd60b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c8b4f4-4ba9-44d7-bbe9-005193525c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e498f1f6-9cfd-4e24-833b-af10a8bdb3f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af6f633-d35c-4125-a5c5-7d31f1e44a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ac07ae-a8fa-4d6d-9cf3-88c3598edc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6146908-764e-42cc-80ba-dd8af979b423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3759cfbe-7ef2-41e3-8c27-79de6489668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c9aae-a92c-45fc-9f31-8ad212cf2383",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24781fff-ddb4-4a25-b163-4391756179d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e37df5-8907-4ee3-98c3-677e6ed16660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dd0a3c-6471-4a97-a73a-67693d6608fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b11276-1eb5-43e2-9b17-1c60386b7f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe8f473-3d0f-4238-9d13-949feeeeb502",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a653256e-b3c3-486c-b860-3a192b4bcf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a23c3ab-43b7-4e84-a2c7-fe2a6fa6715d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ed52d2-d681-4821-bf3c-57bfd0061853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0685ad4a-419f-407f-ba25-32ecce237284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69545b9-6bb9-4b59-9133-72c428e67d07",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d514d5f6-af6e-4fa1-abb9-c1df14699a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947e1ece-ac80-4ae9-9459-3415ee1e5c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfa95cd-e625-46a9-a800-3c3b7f73b25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94a2c76c-950a-470b-9d0f-cbf62a9717da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d2bb6-1bb6-419b-9202-a33e2997be8c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b548b-0cf1-44e3-bfb7-634684fdae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6050b89-4e14-48b1-8620-a1381bd4ec7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d809cc4-1764-4278-b8b7-5d8e9302c373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "74496624-d575-400d-8b6b-e81295cb193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e27ca-a9e2-49e3-b4fc-522bf0a0eafa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a614f05a-3bca-4478-b086-f283510419a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa69dac0-6580-45c2-bc1b-b6a4d7e6e1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8c6acd-9f1f-4464-956a-b0b15b1c2e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68c0557-b8cb-4ba8-a9bb-dfd03be1ced1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b1e9ea-f3c8-4544-8f1f-986bd8028bca",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a77858-5d28-49cb-b6bb-9a27a8fb59cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84f640b-6dea-40e2-b742-0e5de55f141c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457fb068-c591-44a4-be19-3ac5ae25c3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caaa2302-2ed9-46e4-86d7-de943d34ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ad9aff-8b1f-4f20-b6dd-e42fd08e9c9d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4078cb2-9038-49c2-ae52-bae67d1259f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57042450-0b0a-4496-90f3-853aa70452e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef450c67-02ac-431a-8fc0-77174d35d799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca227f5e-7a85-428c-b7f8-9eb04ebe1c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7591d1d1-49b2-4b60-b62c-ffd60e2aefb5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b61ead-9420-41c9-9c7d-85c91c3105d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c0bece-008c-4fa6-b397-7d27860171ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30768fc2-820f-4a13-81cf-a60773fd96d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2766fec6-c076-4c72-a8d4-f26ea75c0667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84799481-1d71-4329-96af-3adffad1962d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f6dc2-0522-4833-b9f5-a0f571e721a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5a0e27-3a9c-43fa-ad78-422d7fa1cc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2b663b-1a5d-4b37-bd57-2cbaf69cb895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aed436f3-b11d-408b-8d3d-84999cb3d0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7334fb-7656-4610-b17a-3ee577f4af77",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624b2fc4-ac21-4880-a47a-9e91e3fd63b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0376c1c3-ee95-467a-aede-cc9ca647f475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de2dec-6cb9-4800-8b8d-8bf4ac12acdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d34cc6-5eab-46e6-93aa-6fbce5bbcd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856e3191-4a62-4cb7-92f4-73dbab47b3b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df88fad-e67a-40fc-bfe8-ed4b77f3a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d0e683-06ef-45b7-af25-1511a0ea9e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13103ab6-7138-48da-9099-fcfc99c6ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b00f2560-ac34-4b4e-8b33-ace8d51ed12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e41064-67c6-4319-a42d-ce0639e07098",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a74392-c126-4725-8b21-2d3ccec9fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0b957c-8e76-42aa-aeea-b574062bf7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2edf6b6-7294-4c5b-ac20-d8aa26ae3942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00eca5fb-cebc-4c93-9acc-28789c043836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9d4d1c-271c-47dc-a948-f6068c6e8884",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f57c5-d22c-4675-99f2-a93bd8074353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d317c53-a7fc-4273-9785-91437d04096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacacd5-61da-4234-bb77-8e63a634b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a12f2fbc-8155-4fe8-89a9-214e033c226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd0a74-cb8e-4fa9-b1ff-22775480e98b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a56232-4094-4b0e-b74b-8dcf1909b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c35449-6572-4f5b-af9d-7e88a0127646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fbb9bd-1ee2-47be-af0d-77d076607e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f583a06-58b4-4aa5-9a3b-17ab7870b113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a0057-0c22-4b2b-99a5-f8b928f72b28",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf95c5a-f54e-459b-8fb0-706c5bc19206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7a1405-dd7f-4d9d-bf38-4d5862c7439e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6079d8ec-3829-4879-8265-8004f7a43d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5812e454-b683-4b8c-b59b-25447e9a5b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749d1724-ada9-4df7-88f8-75513b005b9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068d7aac-f2ac-4d9f-91fc-a61232d9f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb24dfe-3e5f-4001-a20a-d50ec81bbf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bfbcce-b99c-463a-a4a3-fb81b59b5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9f86b7-5ec2-4b59-9bf1-e691c686d4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077f7150-1e1e-49de-8158-a37228f22967",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f846f3-620a-4045-a18b-cec9a124be22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c7fdc1-e2d0-4341-85ed-3759df5013d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b96021f-9f05-42b6-8993-d6f720e39888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce0b51d-f209-4e75-890a-fcba8306075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7452b56-8fe7-43b2-beca-fc79c7ae1d16",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0e1cd-23ea-4049-8958-a5532a7a3439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe7df48-0042-4364-8e33-6104cd10a6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f88732-2886-4d30-9e86-d4cedb2c6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d716b9-97c1-443d-b260-4c4115218e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a86a4b-9704-4ace-9a98-241c0914627e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772224aa-a34c-43ca-a875-75f7b7ea1f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00039e07-1006-48e1-887f-2f5436033a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dabbb86-3c36-4ff4-a76e-634dd43fbb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e3e5ce-0ce9-412a-b67e-24cec75126e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585a9343-6a93-4cf6-9484-326a814bd6c5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2633c6-cafe-4f83-a061-31bd499e0fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b29119-8d3b-44db-a2f4-ccea884628db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c5985-5043-4923-b127-1b2041ab0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13c8c7bb-e413-449e-a755-4d0fb77d7845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add5762e-2188-46f2-a077-5fbd8f46c3d9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036317fe-4ea0-4533-9e8b-e932edc49155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4267021e-15a9-4306-a4ce-7fdc1d2546dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72dda81-462d-42ae-af2f-3b41a9abe796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc6ad57-ac6b-40ef-8076-b2b7c20cad7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2dedb6-7b2a-487b-aad5-3dddcea9f1e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d7a7b-a3be-4cc6-97f9-7ec20c66d263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef7a04c-5472-4e24-9eda-6a57a12f8b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd6417f-ccd6-4626-8edf-1f49269cbb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5ea21a-20c0-4eb2-9120-ca77a25826b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa6e24e-e0dc-4c7e-a4c7-142491cadcb9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9573120a-e0f8-4f16-b3e8-b53872486cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ef2e01-6eb3-4ce2-9fdd-579056e641d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cd4fd0-be20-4e74-aa25-e942d8ec20ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c93c722e-9ef2-42c0-a940-cc42dd01c5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f35c84-6386-438d-bf13-b1ec69f4e68f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d12ec9-fb27-4f9d-bd56-92e111397045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b6ae03-b260-44ec-bf2d-0646d7f01e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f238bf-af9e-4b63-ae0a-349a20a23d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9b14cb-efa3-44be-8929-bf1fbab68cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cdf73e-4923-4288-9391-b6dbcee4dd47",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc3895b-5ab9-4be4-8057-8db89be10668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d9949d-eeaa-4989-abff-32fbb7d117d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c499c6e0-f652-4015-bb7a-1ab18b257b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "361278cb-c082-455b-aedf-18ac1ebd505f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68695a2-c522-4061-9de2-be38a08f3e9d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74039054-9cd7-4c7d-9c57-93a31a44d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d947d49c-4d7e-40a6-9ef9-da76a59e1aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ef3984-84a5-4dc2-9b4c-e1a71b39aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19e6eb05-03ca-4216-8a25-99166561a91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627c1473-f233-4fb5-8f26-f33de311bd56",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f5433-4e6c-4e4f-9305-c733b393feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f0da17-463c-4358-bdc0-a19f43048ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c617f-71cf-4c32-aa62-59526c0697e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7284d1be-a114-4b59-9839-1c0f7287f029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8014c88a-f11d-4d2b-a64d-07d69ad8d3cb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ef4438-4f25-4530-a2c3-fe999e3ca4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f0dfae-c76b-4a8e-b8ee-067e9938fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54114f99-9a2a-44a1-ad61-4a28de264719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "855adee9-eb48-4b5a-831e-c7c2d38b1a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d222785-b9ea-4fb2-9a4e-fb9178818d34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd04f91b-941c-4899-8dc2-db299d713668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f212f894-dbe7-4b65-998a-b6e13fc5cba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c8f03-44c4-4231-961d-51dc6e9ba9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f939a84-fd93-4b85-a35c-037c49a2cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f720ee75-2954-4b4f-a8ee-4d558df2efef",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0241a9-b5c2-489b-ab6f-47656c8f1897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fce58fc-d221-466f-9333-92e54d9c6b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01dfb02-56e4-453b-bf2e-ac633f1664dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d909c862-5f51-43d1-bc71-da58904616f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2aa0e7-d842-43ac-8ae0-ec8af9510921",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a654dc7d-5c50-47b3-8d8e-17d2990f4cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9f5022-64a0-4a56-9fc7-bc37a60c88a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a889ba-7528-417b-8309-30b5f60bda07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f42269a-3ab6-42a9-b964-fabd4403862a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2ce84a-dc70-43a1-89ca-a111bc55890e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99acfe2-8ddc-41b5-a304-ee2cb98a4935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2330d5a6-ff0e-4dd6-9780-4b4d0aae5fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475e1854-69d6-4ce9-b0b4-6e5b56cf6cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccae4ef0-7a90-432e-9842-103aef31402d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe88f7d-90bb-46cd-8963-938efcc7e890",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7a5f6b-6096-41e6-8839-fa957000e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d24f5a9-860a-4471-aa1e-1aa0cdd7277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79de4af-ed2a-4f63-b377-b0fe928d7cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3173f94-33bc-4ee5-8f49-bc9200b4d8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57197ab-8c43-4e29-98a2-049b4a18832f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a3b85f-29c6-4a08-8538-fecfcad3ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ded70e9-3de1-4f58-8708-641d9118628f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2823b7-932e-493c-a255-6e3490adc603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f9428-57ad-4fc1-b5d2-3577c66eccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693d4f35-aae4-42de-851a-251a4b571e57",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ece9d47-209e-4fd4-a298-222e88cf8f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26da5894-8afe-4c87-8640-05e19f714c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e2ac2f-b714-4977-ae9e-95b2e54e832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be88f81-4a9d-4479-98c3-90eb5a92e670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd78806-12d6-4e44-9858-735f9cdda981",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1dd67d-9df1-45ec-841d-06e03cbc19af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4a3e0d-e695-4891-8660-b24f10d92ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798542f8-5fe1-4eb0-9a80-31f6e51b2ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23df6c1f-cf7e-4962-a65f-78aeff638a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84f87bb-17bf-42c7-93a8-65f9823d35c4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d44442-3429-416a-b2af-0887ab2d56a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2166aa-daad-4d93-a360-d1f3f6436804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8472bc67-0711-42d7-8297-c1ea6d28e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ed2b62-50c8-4521-8555-c68d2e4664f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4039bb01-cd6d-4e52-9a01-19ac7c16aef4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba8d51e-2b26-44fd-a98f-62c94c9132f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40df6f9-af6e-4a48-970f-e3175cd13a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6909c62-22ef-4261-ba01-93cd35a890d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22b4c44f-b4fe-4a60-841f-14eda122b68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b37ec4-5ad9-4da4-8ab9-fc4add0e1e06",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b566d817-1735-48b2-93de-88e350c48909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c90d0b9-2f27-4554-9fa8-79d02d94d506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77efd0c-8134-4bcc-8aad-c7e125c48ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93d7260-1d95-4252-ab17-70230c939f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9feb9c-f369-494b-96b2-3401904571b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a9b184-5a6e-4758-b4b6-062ae8ffec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023ea87d-d016-4a15-8106-b2d5f78b2de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54346b87-b7ef-4512-827d-d93c49c3ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a324d54-ef40-4350-8157-5ab8c04c25b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8534af0-75f8-4eac-a91f-f36b3e51f752",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b416b-d173-4602-aaa7-cffb47cc2f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c8ecc-da60-48b5-ab1c-05d14ff20feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2594414c-2dfe-49ba-9fe5-7e9ece507f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe83361-9c4e-4479-ab15-2f1b0f6681b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9276f4-f2e9-4201-b91c-4e16a529428d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ddd281-32d8-4485-b7d1-aeebae8e76d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125be296-7432-4f45-868b-11a511fc72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d86d29-97e2-407e-bff9-7c3d746e8d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3a92f6-ee6d-4f5d-928a-42d7b081f850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7806e4-c1ab-4bd9-b07a-121e115c9ca0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51105864-eb40-4857-8e44-66a904badf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f9d540-772f-48b3-8829-10c629dabd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a387e3d4-2257-4fa1-b24e-200cd1b55ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0cb598-d2c2-4bb4-a685-35ef63d17282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf47dc7-ebe0-4a16-93f5-d909471de96e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fefd0e-aee9-4d6e-bfdf-582ec07b3ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d20288d-0b67-4c3a-9cd2-0abfae08ee11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f32988-83db-4ca7-b524-0214c13ef5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6ec5bd-e5e0-4263-97cc-7071fcffb43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a23d8c-e567-474d-ab9e-160b04be34bd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c554a2-6de6-45bc-ad1b-08f9ebc9dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8409b48d-f0a5-4af8-91c0-9363c46ca6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76111df9-1c9d-495d-a5df-ed5ee39450f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b411788a-4e18-4e1d-98fd-90f83844f33a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfea562a-b862-48c0-b5ac-0f376e880ba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdf6dd8f-7774-4054-abe0-3e8029a8d6b0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f212f-86ac-4a82-95cb-8f54c7e6332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aeadc90-5dba-4f51-ae43-c97ffbb0cc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002e7687-978b-4efc-8934-1111575142ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d23e20b8-5977-4eed-9467-515dcae191a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f3ee83b-de6a-4ebb-8029-44695f31078f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "027306dd-82d2-4156-a30e-80c686b91e3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a3bae66-eb3c-4379-92e2-e266d7c96168",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e672c0-00ad-4a3e-ad1a-aec8136df408"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5884c498-a6d8-4832-9ca0-a4e74a744eb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26c4fdcd-e03a-4f3e-aec0-463b914c4cb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6cacd8bc-e661-4e20-bee1-d9cf5daea327",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "170a5d3d-0bf5-4dd7-bedf-760c7d8eb56a"
                }
              }
            ]
          },
          {
            "id": "73f49f5b-bc08-4ea0-8154-ed801c2cce12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e981d7f-da8e-494f-a745-ee6adeb9f466",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ded34d80-8dde-4d47-8eb7-4fdad373a012",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38923a-a707-48df-84a0-b95ceb71d60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7d79ca62-fcfc-4b88-81f5-9955176a6406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f451ec28-4c51-497d-89db-36f7be4e4992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538e9f2a-c65b-4df0-9b94-6dbd842f1dc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da7f7df7-6c54-4a99-b619-4e13e04617c2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b2c6bd6-1570-4342-9e22-002f1ea393ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8ac4367-c9be-4f7e-a2eb-c32281240cb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33b251be-eb1d-49a1-aac9-584ec16bb19f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05792d8d-0847-4b9e-abb1-e87786791132"
                    }
                  }
                ]
              },
              {
                "id": "98ba0227-7dfd-4a19-b23d-2477095d0aaa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12c251bc-e132-43f7-8bb3-cbf70a571348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec4b7c9c-190a-4d80-928b-f45ca465882e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb459b2c-c7a3-4cfc-9794-8fd8752dc9f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5d1c779-67dd-4255-a04b-a6e7726ab334"
                    }
                  }
                ]
              },
              {
                "id": "4f03b2ad-4f3c-4beb-b0ef-5da73e53d69c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68cb0ebd-c325-4ad2-8363-f956430fa450",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e2cf7bd-00dd-49d3-9df5-25d32126d601"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee4cdd2e-5bb2-4197-a209-a69a52afcdfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1238af7-23c0-468e-b5da-d4351c6b38e9"
                    }
                  }
                ]
              },
              {
                "id": "55496efa-0516-4fba-999e-f188d81bb601",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39930a53-fd27-448e-b4bf-1af9cea1d757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b78059d-e5dc-4584-9056-ae15c487a172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e840f4-151b-46dc-bbd0-b182f66913d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bda7c896-e17a-490c-807b-75721ea25d01"
                    }
                  }
                ]
              },
              {
                "id": "5baf0f0c-4302-469a-8d5a-2c84054cb605",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2057973-4c4e-4986-ab37-afbf78754af9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e51388a0-711e-4ce1-a6fa-26883ccd88fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea2feaf2-1210-46f6-ba27-1999dd075579",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f906d55d-b4c0-48b9-b7d9-2e138f295552"
                    }
                  }
                ]
              },
              {
                "id": "8b984616-aa7b-4249-8b81-31de49305b85",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a50c597-7ba7-4c11-8309-964c0e2a4d82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f80ebdc-6288-4d1d-967e-634c343bb625"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16b9c1bf-61f7-48b6-b9a7-4c8b467f6305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "112956aa-4635-4147-a318-15bb0c51df1f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99f39744-184c-4742-b62b-41baaf54fac4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e97e56d-b6fd-463b-b7b4-807c31945b3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e46045a-6cb5-453a-909e-91cdb43292c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83089a5b-ee67-4f32-8541-0bba219e6610"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaf7ab09-615c-4c3a-9f58-97b2cbacf892",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5665dd1d-07b1-496d-8773-ec6526df9dcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50ff954d-bc61-44c8-a5ab-a3e76da51530",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a670b4a3-a47e-4a07-8a26-a2f4d465f5a7"
            }
          }
        ]
      },
      {
        "id": "3679b601-7f12-4a6f-84ff-acfb8579a033",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "921701cd-7fe4-4db6-a373-ce08efc35959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1995ac7e-0e6b-4a02-b3c9-2d0f90ace8cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a995ed9-1a4b-438d-a29d-7cca3e7b3568",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67445500-c880-4e2c-bb16-be23f7d4a173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5509a8-1e0c-4c07-895a-f86bd05e731c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eae2d1-ce5a-4593-a585-46af5b0ac31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8764c552-151c-4238-95c5-33e1c35ca393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2059b9f1-7d1c-4555-b14b-0ae3a6de36c3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a479513-e785-4093-ae95-160d7968ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8514d9d4-8e2b-41f2-af6e-35967c4d1fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23295fd-eb57-45c9-92c5-6b0b29dd8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac295065-15d4-482b-b2c9-68ecd9145639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bc7fbb-45b9-4094-a4bf-df256b0c06b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb592d-566d-4b68-9c1c-67058963b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f32eb2-9b61-4d25-ac0f-bee01153276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6824802c-1f6d-4a44-97d8-9752b5b55cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d52902-690b-4c5c-9a25-37e7856e7dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4715f8ec-8bef-4ed6-94d5-e0916c03a630",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebdd558-74ea-4c93-9a69-3507d9275ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fee4c0-3de9-4649-ad8e-31142b326bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce953c0d-d348-4bed-8702-1983d0eec4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39dbee14-ddd3-4668-9a7b-fb92f2924b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30687fe8-c56e-4887-a4da-251636648a60",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990614a-1f5d-4c0e-9264-3e864ebdfdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691405e2-f3e2-4b1c-b401-5dd75d59a6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbb800b-d143-4425-875d-d3003f10a9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ceed39d-7431-4cd9-9962-91b55d947204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8ee7ce-933a-4f9d-86dc-c65a3c5ec7c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a779301-f153-4a19-86e7-cb83c94f0868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a988af-6d21-47b6-8292-d6bdc4d46c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb9e773-1597-4400-ae0d-26e343d62fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e60f5a1-8b2a-48ed-a03d-ccd00f23a7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8fa4e2-5f48-437a-90de-1e82bb221eb7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b9e9ed-00a1-451f-8fd2-30095892e236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f12b080-0480-4807-a24b-ec6cfd6a6e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5434d51c-742e-42b3-969b-cee1e4b2b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "045ebcfd-d5b0-4067-a054-90f3ccf289cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79db9a1e-10f8-4408-9a25-d88201e9ea65",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b45584-e22a-4fe9-bec4-b2f4677a5247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eb05bf-db8a-44fb-b388-886eb14a5033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20c0602-058e-4358-b68b-43338ac367f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b7d338-533e-4eb5-a218-d13ea7c60347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b770451f-7293-4b57-9525-2410b6ea29fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f9c40-6e8c-4ce2-979d-ad1b71a9eff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab24ff3-465a-4689-bf62-a423f6a14e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac6db92-f313-4141-aae7-c2333b3fe64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f63356-6ed1-4b40-ab97-5342812bb2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59c6d3a-d19b-4fb3-b393-4b67784d1762",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18947f7e-2af5-44f7-897f-991bf991ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ba59bc-3fe9-430b-9101-c7e5cdc980f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a22b59f-57ed-4a6f-8922-af0e6d544a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedaff0a-a362-46af-ad2e-78b574bdb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19723d6f-e546-425a-b805-a45d2f37b4be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffbab9c-f0f6-4449-b9b3-0e22d2f17a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e758b0af-ef42-4c98-abeb-e37eede80380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c4d8a3-6224-4002-a146-f53a702afe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "196dc0dc-2848-4912-8af6-bfd7d2b61bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6dde98-ddf7-4c4c-ab87-de01b40c953e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106699c9-b48c-43b0-88bf-b95539855ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a908f43e-9e79-4a5a-82b7-ec9436c8ffd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b3b0f-a432-4d7d-9037-131fb5819146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c06e4d-c3f3-4572-a850-e3e8e9cd462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100155b5-978c-4672-94c7-ec8c4af86a44",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53649dd-f40f-400f-8eeb-416a31466eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5888a5-96c1-4f52-a8e7-80870e117179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab95df5-b34b-40d0-b4b9-780e34dc4307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30985db1-d64a-48ac-8602-0e56f190085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e0454f-3e83-49d0-8bb5-c476a97a336b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eafa25-71b0-46af-b415-03ce5771255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264cc6c1-1236-4a73-8aeb-65ab841931a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c15d44b-1c7b-46c2-a825-c752626d33ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "593cc98e-b494-4b32-933c-25a5da72fb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11053253-47c4-4a8b-98e0-c0e4029301a6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca196f8-679b-45c1-a5e0-77c39449bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d6619e-9637-44c9-93ea-fab45e6a3ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684ddf5b-880c-4f67-b4b0-21a0752b3aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9344a86e-20ee-4aef-856e-e5a185b94fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a9603d-e01c-4e13-aef5-474b0d29889d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c85f927-f49e-4ecf-a3d5-39c42bec4bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae20eda-76e4-4554-afd5-6a56a0e7147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deb561a-7a2d-4b6d-bc75-5f12bd0be268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "407bb2a4-e826-46ed-b3ea-1565543fb156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189dd1c2-f481-472c-88de-253a22887fdd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85e1df2-8343-4797-aebf-afad4ded7dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c82370-bd63-4146-bf29-ca8a0d6aeba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b0e5fe-d73a-4c96-96a1-954bfcad358f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1040514e-3ea0-4947-9082-6ac458f9ea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eddeed6-3ab4-4364-bf97-8b1658e22af8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad5b3ad-6632-45ad-bb38-b858e425edfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e7de3f-0933-45ff-abce-233547990e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e03d592-56b5-4700-a5a4-fcd2f8a92ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17978bd-6f95-431f-a656-66ac9eb8f106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d69bef4-8678-484a-98dc-28832d9f85d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a187cf-90ab-4e9f-aeb8-4e3e1461f268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff34b22-ef44-4983-8624-f46f7aac2f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42ecac-3267-461a-a8f7-9c215143e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632da6c3-38ce-4fa2-836f-0963cfbc09c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbe5025-7dd1-4578-bda8-fc93ae9aebc1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb380216-8c82-4a02-a29b-33e3eef8b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcae21f-387d-484f-8a79-87e7707c3545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085b08d8-29fe-48cf-b6d3-c6eae2dba458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2895287-1107-43d8-b617-61a309686d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a816fe5e-ae2d-43e7-a9d3-ada226e2c871",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be62922-f3f4-4ad2-8c94-df5c8ea7297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e005df7-3b29-4fbc-b773-4a5c4db88016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87ba94-abce-4483-9d18-58120a24a328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f9d128-11a4-4847-a5cf-8b98b321f763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40914fef-e05b-42d7-82b1-398027535041",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde37fda-b296-4675-a7a4-e2f80ac66706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12aa5842-793b-4c37-a19b-a213f38d257d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a6bf7-eda7-4673-98f8-d7da13e331b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "936d8048-3c96-4ab0-a2cf-2bb1ce5fcf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8462d9b-85f1-4a5f-ba1b-164a5ef03a4b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7cb984-b23e-44a0-af9c-8ee7d958b64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55f1a9a-599b-4c8a-a6ef-0b7157aa48ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab73a220-4c84-473b-b5f3-3c4ee0725ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12607597-4f86-4e95-85a2-dc43903f2331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf5fa9c-bf5f-4b2c-8868-e8d221f44288",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d968f6f-3c66-499a-9efe-fc1948219c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d9b1b4-d116-44b9-a79e-efd263e4308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa8448-12e4-4f74-921a-f2b69dad1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c46260-370a-48d4-b43b-d2bf46e74434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6ec0e7-3a55-4031-b6f5-cae8e49c1d51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19ac740-0967-400e-9258-c5ff492d2158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29928ff5-fac6-4b29-bc63-7e07e592a163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df01fb8-059b-4b67-920f-d86876f4ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa67537-653e-4d1c-89ab-b2121816a315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59585efc-a404-4102-9cae-f6bb2a981908",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212844ca-ed6c-45af-93a2-af80dff21394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe234f-b098-46bc-b177-b982de31b94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112b131e-b935-4187-ac3c-03a4ff2d7283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feefd3ad-39c1-4af6-b5c1-9afdad08262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1b1f49-acb3-41d6-a9db-04a55b81ccd9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f22d39-e2d7-4b7e-85f8-6cceb21e554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdc66eb-0aea-4567-a8e1-fcb49b3b84a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa80602c-1007-4dd8-9e4f-1b9d7933b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf88a70-420d-4a76-ad62-c1d50f3dfc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4948fa17-cc61-4b76-b513-96c06709ea71",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b70af52-ff1b-435a-8177-466072c9b718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6534c6-5260-40de-b79f-5424125a14a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b328b3-39bf-4657-8b42-cd4cffa3cd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0599522-244a-4fd6-ae2b-54460020f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c47136-ae68-4030-857f-68b2313a33c7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abf2bce-dd76-4f99-ac68-e0f1cc17a8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7140140f-0c84-440f-a600-f27828285dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55419b76-540a-4f58-af4c-f6bb6a2c7404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28575254-7f46-4005-a929-791056dae222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eed7f56-abb5-434c-a96e-5a9d6b883446",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eaeb42-ac6d-443d-929f-9eb15f7748e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a03a517-9a2d-4117-8ee2-77537125af12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a0e514-f52b-4a9a-b2d4-1e1a67adf893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2eb62a-90a8-405e-86c4-b151f4e8a81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142a1c63-6b08-4490-8938-b8e4ccf9d2af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fffdc5-06f9-4b1c-b2d2-5d1d64bb9782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc042bc-f8e0-4a2c-bceb-194f97960806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f54b1f0-64fe-4b35-8300-7d668602c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6c6ee1-7c09-4d35-80ab-f49a70d4825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c863c-cf09-4498-910a-ac37869fb7b8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b4573-014f-42a4-a5b2-ce9199120061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3a75a3-e59f-4f8e-9c3c-44cb64743adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf9eb8-2da3-43fe-9361-a786b3a842b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060c9b21-8093-4906-9437-cce21d5404c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aae2f7-251f-48ce-a772-f43ef5973ea3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c63bed2-62ea-4f96-a7d4-2c1edc9851a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8ea233-51f8-49a0-9091-c61aec6d5bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d801b1d-aa1c-4168-9b36-f5a5d6ec7234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f11920-89d4-4406-bfe6-b6bbab8e473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20c7784-794e-4160-adcf-5a968e628ca1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175a3a58-5391-4047-9a49-c1cce66c7d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3162fa-e5cf-4ed8-a570-68d239f7cd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f5509e-3a9f-4f9c-b722-3e55d9013f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6eb48d9-ab17-40f7-b1d1-09f458f9dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974d98fa-b2b1-49e7-a418-cd83626feb5c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e17d58-0fa6-4769-991a-9f5599744095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38333afa-cd1e-42e6-bc4f-d4cf8d5003a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096e705f-916d-4f20-ac42-4e994030667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29159e8-eddf-4e4b-a667-8201e0c619b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ece779-a118-495b-9ba3-cfcf8e6c70cb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56db83-b394-4803-8f75-62f118238dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77afcbd-98ab-47c7-814e-4281a9f0c434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b80d607-404c-4407-bf86-c1f41b1475e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30061633-5a3f-4bac-b1db-55bad1c4465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa14a7b8-c70d-4b96-acb8-fedff5f1c45e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cdd6bc-e4c7-4ea6-a5bc-8cca608e2893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019938f4-c6cb-48d9-ab42-0ec32246605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893fd37e-a3e0-4069-bd6b-1b828db3f69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f7916c-87eb-4bcc-8e63-8c420b6e711f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bf12335-1a19-481c-832e-ae2500cf6bbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "feac40a4-4900-48dd-ad2a-9d2c03f6d475",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337db487-ba6a-4dbd-8137-37fad5df5ec9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d44ff052-8152-44f6-9962-b80d4399d0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aecd3de-740e-4b02-892d-0ff36fc587a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9819d69-d65a-4f12-b4c0-eeb0c227cbb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43fd55b4-cb7d-4783-99f4-6123ea550a82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37bdcf54-62ad-400b-bb2a-eabfe9992e4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c08d39c-fca4-4264-9e71-97faf2409176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c85bde03-682e-4efb-9f15-03ce716e15bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1973f9f1-f66f-403a-b440-ec1fb3f2b2d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8950bcbe-70ce-4e51-8fd5-dbf4adb965d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9107867a-b3e3-4c7a-92ed-421839b4d93a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2759b5b0-3092-4fca-b757-e7eea6f32375"
            }
          }
        ]
      },
      {
        "id": "4f4653a9-19fc-41d4-95fd-073a5b8db074",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8af8bdd2-3515-4750-8e3a-10a86a0145f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e25e45ec-cc2f-4c8a-8127-4557d65cdf0f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "502773d7-0422-4749-a90f-7988f4b0a159",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931dc1fe-2708-49df-9701-fd808892a6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1cb3ba-d9a3-4828-9906-872f26582382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4e324a-b40a-454c-944f-f320206bc73c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a58a6fb-3a1b-4f35-b78f-e53eee4f1963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6511da7-5cab-4266-a4e2-2510be7d6399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cae1f45-1057-4c5b-84dd-3152ac42b625",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aaab1c-13d1-4dfe-a868-8fcdc430e8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f55898d-7137-4b49-99ce-a60b7d032616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b069da-d747-4b6c-9a54-a9e07e4768a2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecdb360-9294-44fe-aa45-194dd3c0ce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30eca6f3-4d7e-4751-a94b-e1ce0df4e6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d914db1d-b937-43e5-9186-12d3bd232b76",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b28ea7-abdb-4804-9335-955d5fc82537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e776f5e3-c8ba-4d00-a451-71eb4ca383f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b493a2-d7a2-439d-880b-6376b2b92521",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d1df68-a31d-40cd-bc4d-a308d7bd7f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd1d3f3-0d32-41df-a5f3-4a93dfc38111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6370fdba-830a-484f-95fb-1283c0cb2b91",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a274d4-8ed7-42d9-9fe1-7a76a45cffe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a580664-3f77-4c23-bf74-581f3eea9c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09907cf8-9376-43a6-aada-4d7070ea7474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbf1176-5ca3-4ce5-8877-1631bac6b0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4c8e37-af52-4dfd-9c54-9a3c4c80d05f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06abd364-2cdf-42a8-a91b-fb2929f62ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516b1098-504e-4d01-813d-50b2dc7e3b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c76b2b-beeb-4a4a-aa48-17b83215f14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219cafa2-3e34-4479-97a6-76e4c341126f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d346e236-e485-4540-ac92-de7ff214e132",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b78537-7659-4051-9031-a25d91920d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec99c6a9-9c84-4284-956a-a1c0a9a19c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ade7811-e9ea-4311-b0d3-c142773009c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a921da5f-3cfd-4761-8679-311460a11272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c923ee-2bda-4862-ad1d-6099e6364d7b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b2d1a-b9d0-4f6c-a3b8-21df0d962786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ddc2db-333f-4335-aeda-0672c3a7f8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15350cdc-2d51-447d-bc90-74ea66108184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c66414f-8542-43ec-b1fb-c73aae509d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa03b33-8a89-4a2a-9ae1-72900d153cfb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921521d3-f2a3-47fb-8059-ec5be93a54a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1efca97-c159-4ba8-928e-f88cef29340d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77b5e4-19ec-424c-8059-f6262f5dfc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f45be5-792d-465d-82b9-21f2c1ae69e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbef60e3-17e3-4331-8545-55d0647dee94",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c548126-1137-4c98-84e2-0725e1a251f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10e8dee-61ed-4365-8af2-ee335cfdb90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344dadfc-5451-4d5b-b267-658b29f9d2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80c693f-3905-4ca8-b601-1effdbcebc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c711824-8d79-481b-a3a8-5881d1f1c478",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee95a4e9-594d-478e-8ffc-1a2ee41cb4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81445593-45a7-453d-a95c-dc952322d326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ea4cc0-36a6-4539-a638-b70ee909e134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0e2e07-ba48-44b5-a0fe-e17684f4497d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d6e16-2af6-4aae-b4a2-9c6fc27cd6d7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e803cee-2ca2-44c3-8ca5-ecf02b20e641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a4a2b6-282c-4172-a290-8d9005c5ea1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539eb13d-4154-499d-86fc-337123571f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48542bc-7218-4e7a-ad86-46fef826ffe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac32b06-c480-4078-a1fb-01ed7258a356",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafbde20-f0ff-4213-99bc-bc668765e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1c49be-d36f-4203-817c-8e58a14d860e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611c3597-3612-433a-b4f8-5eca1943fd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b1ba02-3447-4975-af7c-460d3aca49ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f647a015-473f-4e7b-8ecd-99bd47514c64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb453b35-9867-4d52-9d08-22192720d932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacf9016-9210-4fed-8314-27013cfd8310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888a82a-401d-4604-be57-41da3c13b4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fe049d-2666-46c3-9d54-b5e73146666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e84f258-27a2-48b9-a8c0-f8de08b8efa5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a2800a-2ed0-4834-9fd4-3d9dcb27a317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6e246a-173b-4880-bee9-a9d3f14f9c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4734d4c3-761d-4915-8e17-cff0dc747516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4209d7c7-939c-4a56-9083-37c627e3e8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e501087-d6fd-465a-8a19-ce831c2c6e97",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3d90e-386b-49ea-ad6c-e5d3ce3f9490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4bd1ce-6295-4dd5-a071-655ff02c9872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9523e64e-d93b-45d9-b404-a8451cfe4b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9fffb9-e2e0-42be-b84a-b876c6267a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90471d0-8749-4bd0-970b-2bdae5eb2e75",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2130c3-ee31-402d-b64e-457041ee93b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58446426-ee30-448a-aa82-14311993ffad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff67af5f-6e62-4f04-b8b2-6ac2cea1c81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea82bdc4-cfcd-48f2-b72a-a94d07d38bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d62e5c8-d4ea-4f74-8c1f-f92c9b61bf55",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd74ef2e-bfa7-4232-9b08-3f779cfdda1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6f8630-b883-4364-8ae9-54bab820dc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b48ba24-e629-4ed3-80a5-1d8617cc974c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e629c-0cbc-406f-8547-7a2cbb441817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b8b159-6c81-4965-b9ad-512b06536d23",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11142eda-d2bc-4fa3-93fa-4811aaf0a5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c42255-3da6-404c-a4ad-6df0d096fc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e771c7-3bdb-4a5b-8ad9-c25c48c9af96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfb2d89-763e-46da-92ab-d803490b004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa74d47-be64-40af-baef-9d0ccb5694d8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34df962-47c5-408f-819a-c79d7d6fc129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fd2078-5ba8-4727-9a95-f25fdc4698b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5fe8a2-3992-4fe0-b012-1f31be8f2c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f916463f-91cc-42e9-bd13-8d51ead23ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3422d607-3ce8-4c52-8892-599ef077f5d3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13965314-ed50-4ee1-b498-fcf72f3eb610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b95b691-354f-44d7-8ea9-eab7c322da8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f516c-2131-4224-ade2-87684deb1cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e803020e-35f6-49a5-bfd4-9b0ecd1219fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fca642-480e-4007-bfc8-fdf439ca7180",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639fd535-d5c4-41f4-b2fe-a4f8bc58a2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7c5841-e762-498e-a5bc-7610443910d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c115db-ecd3-4328-85a4-0447ebfbd779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fa08d6-dc51-4534-8a4d-cbede6a86384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf7580-60bf-44b5-8ff2-70f185281b9c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65b696a-54d7-4dcc-ae03-2e5df16b5f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec1990b-d2b1-49ad-a1c3-1412b108c3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a362c78-130c-4a02-88d8-cd048f72bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06876f4-bbad-4f3e-8421-617139b45fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c529ec28-d831-4091-9501-eeb688748e24",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b645e3d-9437-435e-92f4-8acb78fc716d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c4ea3e-2f27-46f9-b61c-8a9118a707b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a195cd-aebf-48e6-ac46-1d95fa47f10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046b203f-3d2a-45d0-8ea9-3f2fd2968726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e550a2-2cd4-4214-b717-101420051dbc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9eb6bb-9abe-4482-bfbd-58d680e6db48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0449420a-5513-407d-be4b-7257941294b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22058fbb-e09a-4c75-b401-13a9866562e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fb31a8-a48f-4762-aeb2-82c23065efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34670ca6-b868-4842-9abb-0baef74ff4e6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acbbb21-6aa8-4587-b693-1f664e88cd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a6cca5-b002-4045-8175-88cdc432df18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78c26e4-e9a6-4c2e-b6da-0da36b564d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fceede3-ca13-4439-ab99-cb96594d4208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861631b9-2783-487c-8c8d-33b2572803b1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812013e-b589-4b3f-92c2-1199a59630f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128e00af-8168-422e-844a-04bdf06e659a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eb9279-83ef-4342-a3d5-e885658c7d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87074ebf-1ba4-43f9-9b16-f261042b3d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd8c30f-a725-48b5-b2f4-e235deef902b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1fb5dd-76e4-4d65-a1f5-9913a6a4a282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1305e2-e2c8-492d-be66-e6d2af2a56f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b2a305-47a6-4db9-89dc-1e5ee580a045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1039cf-74ed-409e-9c85-bfb3a2f59321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafcc3ee-82b9-4630-8bc0-5a0c92fde72c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc548df-229d-49ad-94f1-2d4da1150a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da38930-ec4e-48f9-b49f-768e523f3eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb46f34-19ab-4670-8781-cd46fbb002d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a872b4d4-69c0-41cf-af7d-172583b17d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde466c8-4cf6-4213-8505-8f1f28bc7ded",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4424394a-fb48-44e0-9c75-7e93cf648e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360b2da7-8feb-4e44-9489-17d72fede052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158da54a-1471-46b3-9ad1-8b9b9f927ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccc37e5-bea9-46ac-8ff4-f1ca4b890e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534393d0-66af-45ef-8fd0-1dc6953d7c28",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73190cf0-b605-49dd-a806-9dda6339c79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c969f968-90d6-4dfd-9a5e-dfcaf4c2228c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d528936-99a5-4f11-95e4-533a3ade8f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7199d5d9-963a-482b-8cf4-8c546d16bdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9479b1d-bc8b-4e0b-a0a2-14b1576275ce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109420ed-b3fe-43c1-9dcd-9994076b452b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28ada36-804f-418f-890d-423305ba40fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0987a80-b4c6-4cb2-bc8a-6b5a65919e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831e1162-d402-449c-b6c4-ac50bf1bf9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccc8811-c1c1-4cac-8966-0fc77a789653",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf08fde5-7126-4363-a22f-c57ccd89088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec768a6-2619-44b9-9dd8-bb2d10be9cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732efa65-2448-48c4-a992-348c83d31bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb10979-e01a-40b4-ae27-2ccaaefae256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147019b8-946f-4719-beb8-764fcdc1736c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f48b76-363b-4af6-9a14-dc81835be8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a1782d-ac51-4b39-bfbc-08a8b0c20fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc63a097-bb3e-405d-8d09-b08a87c2578e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0945c95e-fcf4-4701-aa2d-878af14683e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f7e3f0-1aa7-44b0-9857-84cb37a849d8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8677aae6-3642-45e0-87e3-c7d2d3aa9f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca2246b-de2f-4a51-af59-d23aa169b5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee672776-002e-4435-9072-329f5a36c3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8636f575-a122-46e5-a61a-58f028db5e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a29ac-7042-438a-ad7f-8a243506d898",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520515bb-8e75-4e6c-a5cf-618145197a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18860c89-9603-4beb-aee6-c1bc2f5f72a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8fd8a3-ff45-41e7-90a5-162fd53a77b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1431b5c7-f97b-4064-8ee2-00a14e266fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcf676c-a418-4d35-894c-da81691e1e6c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463fb131-c647-4df7-a80e-00802eeac08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001db323-313b-483c-b53f-ad077879f68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d879ef59-3c12-4416-99ff-e129c1177fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272e5e22-ac58-4946-95ca-59236ccdf164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c4cdaa-3901-4f61-a2e0-38627261cf5d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e007c788-2ac9-444f-a6e8-b6cb375c78c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffccaf6-32b8-4889-be3e-586d8d287792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b96902-1202-4853-863f-8ce7746576fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c66815-a280-4fab-ac6a-ef980ef973ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74740ee-e715-4fd7-86ae-71261af4f1be",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5123da-2ecb-489a-bf06-46b6c9098f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab58a0a0-3db2-48fb-a32d-88c86f04c97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d1b6a-b3c6-4df3-9812-cb2a8070ccda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ce8f8b-9d22-49f0-a073-b49c6594daf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb6ec3f-5cc2-4050-a8d0-7343e5dc8773",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e09f36-d4aa-4a29-9025-1b3f2a22c28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902f448f-3241-4ee9-b364-e607cd9096f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73bf873-81da-4b63-ad2a-b0624eb1ffff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8e1349-a9c0-436f-b39e-f371a3c0ed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5351516-c44c-4932-9008-f35d63ef6f7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cb0c61-f142-47b5-92bf-3b4b29409124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6240aae5-625f-48d0-964a-3dc5d046ea28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9c1166-7f8f-4c33-b516-dbf9c8f2b14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09870745-d547-4eb7-b0eb-0d9d8d662fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410cc367-b4d3-406e-b342-6d9d540a0f53",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78eccb1-b160-482d-aa53-45b1cdc90cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddc2538-b591-42ea-a505-91cc574995d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9d8d26-8d3b-4022-b8df-360788738c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2e1018-3f69-4286-ae5e-3e5c2d19b20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1901b241-102f-4bfd-97e9-db19640c132a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da71f05c-fc0d-408f-b624-6e9feed12801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347ec22e-3c3a-40b7-ba64-c713c6c9e955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659c5686-2ddc-446c-8708-4ca4fb4ab370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eab6643-5c82-4825-a85e-009cfa54c516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee4e024-435a-4a15-812f-9165e52ba134",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff69afc2-80b4-46dc-8a18-aa31eabb99f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910903f3-e6fd-4a67-b23d-1fea28e05e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916d088-5af1-4675-9079-6a0eb2844e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8ec0b5-beac-424f-bca1-ef14f9c3b15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7feb82c-dd18-4e63-9ba5-d05cd88ecf61",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e64bc9-5aa6-4196-b59d-a24861d2022a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdbf6dc-5e00-4c34-b5da-2869f0ccc3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83444eb4-547f-41e4-94c3-7ff146d423c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ca679f-7eb4-4edd-b79a-3ed07a967322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7fe1b5-715e-4c41-8d4c-f7a839071035",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fd711c-acc7-4fb4-8d27-54662cf7d2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff838d4-b072-4c38-9668-de2f7eac8ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5754dbd-bc50-4656-a36b-979c0cfd7749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd35feb0-2809-4243-b2cb-e789808a5a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ae3565-8dd3-4e3e-abbe-a5dd3586afc8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccccf01-cf24-4d5c-92f3-056a3721fa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1250025-bc7b-471f-b835-31e2e2dfdd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4c246-309f-47e5-b314-db2d73f6a780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3fc50d-9008-4170-bd85-e3043df196e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0643b6f9-8c42-4b97-bc54-518e3924ac03",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f68eec-31af-49a3-b1ef-9e9d37d16ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b662c91b-0c2b-426d-bfae-0ed49f0bb8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aec709-0283-45ec-af3b-ee61a5893a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eefcc1-f4f7-46e8-ac60-d505d69eaf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb4834a-6a40-4bd6-ae0c-4f1ad4f1880b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e67d8c-9fa0-4b16-b209-a259ae1d95c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b513e4-e463-44a8-9fec-7083b5a34513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1650c015-b11c-4208-9327-780518e4c650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f10ae3-c44c-4c83-97e3-8046595614c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e6d2dc-7f04-40d2-9593-7659622d2bbc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaa2681-1977-4104-89e9-179c36361835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1326041-4887-4cfd-867a-01015fb00112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc237344-11b8-46fb-9853-c96bbe609497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732b6632-1dd1-41e0-9deb-ad64dece793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b8cdf-81f2-47de-9831-8ed7d3a2ead3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aad753f-57e9-46ce-ae08-0a7e1c59e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb07ebb-1623-4659-b2b5-e5ca6ab97e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de40026-1fd3-456c-98a1-8c542f32b9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10addc3d-e622-4bdc-8bdb-f8cc15cf97b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2957e1a9-1c18-4ba6-a647-de9c43a18e37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd80b1bf-a45c-46c0-968a-94d22a91734a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7254c077-636d-4629-91eb-7f3cf2a06c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad028d6-f49a-44ad-91cc-34ee67945999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccb60ae-4a85-47da-b628-e6d4e07ab59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53197ce4-8832-4219-96b1-19728355479f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e446f5f4-0c16-407a-936f-d21a479cd1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6db9ad-2801-4975-86a5-0a720b54e309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c4ba3-041c-4310-aa4b-9f94006a0458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7eadbf-e695-4652-b5a9-402a9d981d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b64418a-6eb9-4e37-b4f0-ce85971c20a3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b134f2f-c1ec-4cc0-b674-be020549c1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd45a5a9-cea4-4f8e-af37-69055addca18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879bae7f-874a-4833-bf4a-2661d5ba70b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca476c8-6984-4e21-824e-c47527a33877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8742ea2-6bb9-49a7-9131-6253c8b4ebc4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4b3ad7-2fe5-4e46-8975-dde44ced1ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53f013b-b60a-43ed-9481-36d49c004bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ade91e9-1188-4935-92ce-4a2da6e292da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de64e10d-a02b-454b-a64c-ff6acdb7141d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1e3bcc-5471-44a2-94d6-f8fa1adf494f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aea4ab-df6f-437d-8ada-989b704adbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c62fe5-7966-4247-9006-4ce95159039a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4673c21-9fc2-4fbf-942c-0afdd6b82576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2302e5f-e167-4f05-8d22-c5aa49d21cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693be85f-7273-4c2c-bafa-f795602673a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17f2983-c456-4ba2-b361-e3edd9f70a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e08740c-fc4b-49af-91d1-ff33edfbe1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96676e86-9c9a-4b50-a38e-6dfc4b1e86b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21e16d4-33f4-47d2-a389-0a044e22c643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ffd29f-ce38-4b27-9ebd-69ef0055fef7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b366a926-579d-45a6-a246-82f3bce07492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81de7c05-4184-441f-ada6-c75c971008e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d313c3-f777-4c52-87b3-6ee8248903e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c326c3b-f271-4492-8500-69fb2c9a8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641daa9c-ac50-4e00-87e0-921588577a91",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf6ec94-7d92-418e-9d56-5ed925f873fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262200de-c1e6-456e-b06c-9b9e2e6409d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a35d2f7-168c-41e6-9b41-64490627d4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd9e810-9d3f-40cf-bb71-67c619f537c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820086e0-c1d2-4c73-8e24-155252e8b55d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0accbfe4-c911-4616-a0fc-fde40337e178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5eba656-a5f9-4b67-9a1c-f8d9de50b62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae21194b-0767-4e77-99bd-0b6d52b630b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ff361d-79f2-4478-b43a-49dd01291611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396abb76-c61b-4166-a9d8-540011f4c57d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b5c672-b0b1-4ba8-b8c0-9f5a0ee8777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd5699a-3eb9-4733-9675-272b005f06f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f215e7-60b1-4270-9120-a94c274d0a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc43065f-2f21-44ec-833c-0ed91e4887ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1809fad7-adf2-472b-87ec-cfd379e95a3c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377d3b41-6605-4c38-8114-0641c853e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a924ae19-fc4f-4100-8cfb-552965d084f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e20e20-0ad4-4cb1-8bee-a3c96c333335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0405dd-ee14-4726-adea-b9d6f863eac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aefa305-c890-4576-bfce-fb805d3a720b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d27ea-f84f-46f4-8bcb-f6c3992ab1c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eddcc2d-6821-428e-a34e-7e02f64c403b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33618fc-4f6a-4fd3-9a4f-7e026b3ac820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dee7093-649c-466b-97b0-3f4a41e75b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489516ac-efc5-45d3-8637-63700e30f0b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb64c3bf-6203-473b-8c1a-5ce93d9179fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579184df-cb3f-4485-9720-f94766dbb4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9032c700-2325-4684-b91b-362d559b9ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b600c25-6d90-421b-bb78-5024d04d2b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b60693-5de1-4b1f-b878-8d620cbc3b7d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b328a-0db5-408c-a041-4bb1c75d8831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52109cb-a2fa-4e57-ba43-4f9f72249995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada42a2a-6683-490f-a8c2-c93d23ff4af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b65694-4540-484a-83eb-d62751389d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7890f78-58f9-4a1e-83d9-05f3fc24f86f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12199de4-5ecd-426e-8b3b-5cbd9a706d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ebfd85-bca6-4acf-908f-50b7774dc674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a0c34a-525a-414d-baf3-25aba63f571e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea803fa-c543-4621-84a2-cd4496c16b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f741ef1a-06ce-4823-ad61-7aa98d95cc31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e505812f-6e5a-480f-a818-e48935193196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ae8524-df68-4282-8043-41f374bc8129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc1bbda-37b3-4938-b646-5332bb1116ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8cf722-5646-4fb4-b534-d43a97ad170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bdf2dd-4ce4-4f55-be6d-edeaa54b39b6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd3d00-8b6f-4a42-b2f4-744a0bddb34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638eb7b5-136f-4af7-ac48-9f8449562c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e671cc98-f2a4-44bf-8a46-e71f8c3e7a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51283121-69a2-4150-8a83-972b89feb575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e308262d-5141-4865-8a32-254fce2030ad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3615361-51a9-4ca5-83cb-f9c510e042ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3373c0f3-138c-4fe6-a208-1ff3c8196c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a4271-df9d-42c9-8c3a-06c0126eaed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68dd1d9-f860-409c-b38f-eeb8b0384cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390b0f0b-0df6-42dc-a757-7062b3edac02",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0776623b-41d9-4517-b3ef-13a35704e2dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713ebd3d-e310-4a34-8163-fbe2b3d54e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9113d971-2b17-4bab-afe0-44f31d0c49c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffbd8f0-dfbb-492c-9e85-a015feca9ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e08ed4-45c3-4e40-acd8-9e89c88666f6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7919c28a-55a8-44e7-8bc7-fc3f75131d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42b43d6-fe35-4e3e-a604-e2ab0c6c43eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8355c150-a8dc-49ce-a4f0-5569cbf9b205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad0cdd6-0978-4f1f-ae20-0ea36e315206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd0787-f8cd-4290-9fac-c36ad91eef12",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbb7f28-81f1-4a38-8e4f-95ca848e5225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00b8802-bc15-43a9-9269-abcc9700908a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81a37d7-e398-4a75-9560-7b184635c68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2dc8bd-ec86-4179-a82a-915843f105a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25523c0-8892-4626-b74e-2b8b552a4f1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959ccf7f-a2f1-4d43-a067-192e78279cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9396a266-61bb-47b3-85b9-1f8c53ec9e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca46005-6df5-423d-9baf-7fa471f80f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1464f2a-e76d-4437-95bb-90705521a9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeb512b-265f-46f3-aec0-a51bb24fd4ce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fbbfae-ae4a-4ce3-9fd8-efede7e486a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f321cd6b-302b-485b-b6e1-56d5ab86e8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2e56a2-d1c5-4bb9-9662-b64987f6973b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3bcdec-c987-496f-8c48-9d35fd1a7a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3168ed70-4c7c-4543-a8db-514658681c9e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2399078-c388-4ba7-924a-10c598009d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3574dd53-eb37-4d08-847c-8ee9047e9020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2755af-73b3-416b-bff6-8b72cff570ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a18a7f-9b66-49fc-ba36-a4f07f0ee739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be1d4d9-1253-405d-8421-bf1b5cae6cc3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb4594-988b-457d-8377-8199f9974ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e68db44-0a90-4105-bcde-451803aa1827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af59c87-aaf5-4977-8165-420f3f74d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b3c7fb-0b27-462d-8ca8-59db4fa7e9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4f92b-e313-409a-b2b7-001a42edecb5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13c87a6-97b1-4845-8701-1c45b47ba5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf80462f-fd21-4907-bbb8-c985ea4acea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd3b6ad-f5b8-4583-bb6c-f13d78dc7e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80d7a87-9b22-4c94-acbe-08c5d6c0e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e84842-22b4-4a20-af78-3f366b5b7edf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f022e7f-1fc6-40ab-8b40-6313121bcdbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1814acda-787f-4052-84dd-663b2076af35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c008012-416f-4894-8457-a99dca1d2dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f8aed0-c75d-4983-aaa9-3e4eb0a771ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd76681-dc7c-4501-bb77-77c51977a5c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e600a33-5c82-44fb-87c7-63cb17b0c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59abd2eb-fbfb-4a10-bd24-f8c392bea867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0130fb-550b-4cde-928b-6148963ab68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531c45ca-d1aa-467a-a712-79a4eb77d214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307d754d-82d3-449c-a3a1-f239b6fdfedd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96754d98-4fe4-415d-9594-a0c36a94f488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672d6ece-fa2a-41d8-84f8-78b8c62443df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b05f8f-bece-4d51-b20a-6729ffd7c98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7f5ed4-628a-48c1-ae74-cf72ac43acfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81c9eee-6016-4670-9b7f-438108f3fee4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a85975-e56c-4b20-8f9c-35c6e4d5be48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15bee0d0-58dd-4d36-af11-cf24d241a24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eac1b81-8ded-442a-b880-16523eae9299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620b4063-3803-4cd3-8a0c-76d31aab5044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee9f341-d184-44d5-b59b-3e414e5e8a86",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4808b39b-67c6-4b20-b52c-6fc858469f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3612d9-f901-42ae-99a2-eee207515a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbf5682-9265-4da3-a4c6-c0982be0b808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa8f0bd-8dbf-41e7-9e40-b49c44b68310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bd031b-dac8-496a-b1e4-c4558b5b68d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2dc250-aa34-49fd-8297-613cf1690386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb27f85-41fa-4053-ac75-d0a6f22c84ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34b401-3058-4a8f-b155-4d6ec13585d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b256c387-6554-43fa-8098-ad7c57f9568d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f05934c-3c71-480a-b3bd-3c71e77039ca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3876e177-f2d4-4bf4-8a7a-447c68f885a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5a3e3b-fa5a-4497-bd9e-e9ea5609d459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46322606-9237-463d-8462-2e39ef3f1b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d098ec77-bbb3-44c8-9502-26369f1bc834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5933b777-9d82-460c-99cc-e4caddb5ecd6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2832df89-7b8d-44fb-b965-94c8d2cc9cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac8afb0-97bd-46dc-9c13-0c4ae7da89b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4558bcc7-a6f5-4811-b47c-aa3031313dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e67c47-36fc-4db7-b171-34f319fc6034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d21865-89e6-42e0-9f69-3087dd9cec28",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70e7c8-7794-4687-8742-36e7aa952b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa03499-33e6-422a-b3bf-d7617d113146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b3e7a6-0873-4fdd-8314-454cabb5de07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b5dbcb-2385-42af-ae05-807983ae5a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b073ba-01e6-4821-aa07-5e316739a2e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1520a909-2d21-4361-a413-6cafd7b28071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9629a2d7-1a40-4f9c-af4e-df54326b5e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0948c7b-5098-4cf0-b8db-cf9ae5c5218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a859813-9043-4422-b0c9-8afb26a44349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca011d-91fe-422a-8999-8da6f4d3e1e1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfa8cc6-0c53-4909-a575-13d2c7af789f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4c6a14-eb40-4957-a1f6-e16af0847209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7fb808-a7bb-49c4-9314-4dbeca73b5e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b646fbf2-f8be-4779-92c9-afcf1a0d10fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d41243-3512-48a1-9087-f8480d797d76",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072959b3-0123-4057-a9ea-e026eab3dec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33044cf-1d93-44e0-aa0f-e79c1d6f8dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1604b59a-1d68-4c29-9416-52ec80732557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cd7cdb-6ecc-4b53-b977-bc2d0a058888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af3d8af-6d2d-441c-b89f-6d8f5404dfe0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309b4353-3206-4ee4-a67d-cefe22ac21b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5e9117-e779-4d4f-9e04-b32ccef46c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b93f12a-3e75-403e-b847-33a69ffeab80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370c66a2-b761-41ca-8f23-9b731e0fc790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282a01f4-c3ae-4891-92c9-1ce999ef3997",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b52af8-a915-4388-a661-b4859ab8094f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1903616-3553-4951-a612-55ac0aff27e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a4c42-e91a-44bc-adbe-2965300da1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc8424e-0f26-4ee3-9ae8-f0665d277e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75100728-5a04-47f2-9ccf-1ccb5f5b9020",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fab953d-90b8-4913-8317-3a83ffb047b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab8722d-b856-4d5a-9729-1c59a4080313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb6a4c-bca0-4c17-adec-f073ac182060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8d901-c504-4cd7-baf7-7e8dffe23775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0859b705-a1cf-48de-9cba-0d7058f5b490",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b6bacd-08e2-47bb-b768-70750defbf39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420ca540-7659-47a5-9714-4524acb3b3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b9ff03-5973-44ba-9f11-69fba93d84e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf1454-8c5d-40df-9a2b-38d0bc37f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b492f51c-649c-491a-bd33-046a90d2d06e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5634fb7-c246-47a0-b17e-2fbc00abebb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5286f881-d067-492b-8645-da666215cbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc6ba7-9449-4309-968e-b7856f0f62f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5442aa-6f54-48e4-a296-a25dfd7c14ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001a1284-cbcc-4687-ac14-43399ca0efbf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7c8b79-1610-473f-b9da-611017d64896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cbcceb-dcc1-49cd-8658-dd46b224d2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77059b6-33fa-4f75-bec0-b45cea0bd831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2199b37a-574f-45e5-9fc7-cde952811303"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "475ac693-db41-415e-bdab-b736ccae6dbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c5c8341-27b6-4c39-8078-b3918302dd17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "486ba396-55ac-4616-8b27-99708afc8a7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80de95a5-3600-4818-a61b-4b6277b7a5c8"
                    }
                  }
                ]
              },
              {
                "id": "bfb0e408-2f8a-45a0-83b2-d71b809b2148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fadf668a-977c-4d3c-a824-3551283db6c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530dbc4-6eaf-4976-8fd0-78ccc86ab382",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80d61aa7-9975-4e5f-9f38-2f6ec50ef25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7f46ec-c437-45f1-8034-c1771a2bd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b570e7d3-f55f-4d4a-bb3a-dc511b57bf3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72689e8d-3f37-4733-b970-6fa4866d0652",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80bce461-0d1a-47e2-aa3f-77cc2ce1b907"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f9c71cb-ab76-47e1-81fa-23f7dcee21b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbcaad73-6617-4879-a3bf-ca6f87f0658c"
                    }
                  }
                ]
              },
              {
                "id": "fde59ed9-6d62-45cf-8a53-ac34dba6b795",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ff028448-01c1-43ed-874e-617767f131c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b5a71e-1321-4bbc-8424-3d94fc57c0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "57727f48-2c92-46fc-85c7-031bb308b5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3532d-885f-4476-9809-7dc11de663b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba66961-63df-45f6-9f71-fa1f45ddb3be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "219caf2b-4a70-402b-95be-66091fa2817a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15870d8a-0ac1-495b-b93e-0853f9291430",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5500862c-87d1-4bb5-854b-b2fc7573add7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a72ea5c5-5f84-4638-a584-8689d4fb0f9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4131236e-f199-46fb-bcad-1713b363b28c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d98288df-4016-4bdd-82ec-e9144852593f"
                    }
                  }
                ]
              },
              {
                "id": "30e2037a-e561-4ea9-ad62-b6728e2b91ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e2108e-6f24-4311-89be-c2120a2dc256",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db451444-44ce-49cb-94fc-ba8ac50e31b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3512b945-a216-47a4-8423-c2c29a631038",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65c49a66-9088-4548-87c1-7c6be1d834bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a53f6128-791f-4418-bc82-1b2538e44a73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c290992d-776f-4a72-8863-466a4c928b1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e915e9bd-cf9c-4105-8921-9fb585a51cc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57f73cec-b33d-4f3e-b374-1711da088fae"
            }
          }
        ]
      },
      {
        "id": "a36dae89-5f1a-4cc8-8272-11379bbbeedb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e5998ec-fd8a-4948-8fce-2be709e66da3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "198ade78-fdfe-4136-b849-68beb186d96a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f5affd0-87d2-4f0d-995f-c481fda9c726",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a4a9d-9bcc-4596-90c5-5db69cca06a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2b589d0-24af-472f-b78a-c35ae9923943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf7f9d8-a9c7-4ae8-abee-95f0d2c01b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8115d065-d45c-4768-80ae-ccd6e9aba116"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd278a9d-39a0-4cb6-8577-23cead45544c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d89ee3d-3b41-4ce7-b042-40f30006f54e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee739b3-7af1-4c81-9177-3c46dbde24f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a907ed5-f263-48ba-aeef-f80d7ca08e51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00b0e1d7-7c51-4d47-9f72-03233af4068b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57c7cbc2-61d8-4db9-8e93-d8eaad531c41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ac4aa7a-4441-42b0-8593-83893626e636",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5666412b-4543-43c5-abe2-7161ae687c65"
            }
          }
        ]
      },
      {
        "id": "39dbb927-a5f4-4961-92cc-07b3b5aa8514",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e1069b4-fd1a-4cfd-a2c1-93f9c7764806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dd1be7e-0849-46f8-a0a3-72dc8fa6fbfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31d3a7ab-03a1-4403-8797-3040937a377a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453322f4-50c2-4450-8e49-3fe63148f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6786ccb7-683a-4655-9357-3762163ee3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b89da4-6fa4-411d-893d-2a975b5f868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b0fdd1-bff5-414b-927a-bd5f70e4337d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3610bf22-2816-46bf-b210-08190c1a2a56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4deaa4c-11ec-4d1f-bcd3-3fc9419b1644"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c182e41-85d4-4cbf-8ba6-ab5503ae14ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f7e1856-8542-49ae-b7a4-97b84a140e2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca234560-4fe8-4332-88b5-a2555dda7c2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1feedc7c-03cc-4cf8-8214-eeb23d8bde93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b054c69-d35d-4d96-a95b-6e814a465634",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22549a80-4c0d-404c-8d13-e75a06d8d649"
            }
          }
        ]
      },
      {
        "id": "f4238edc-144d-4651-a09f-31672af62628",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8a5702e-e7db-4311-b8e3-f5b04547a648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0012c76-af24-45d7-bdd3-337a9d71685f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f28615e1-19d3-449a-a5ef-7ac9cbbf1de5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee9c10c-94ac-46f6-8fd4-9cf53f81d993",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f0c27c6-ee99-4795-904b-0fa483c2ccf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72667e9f-38b4-43f0-9070-5c7900a20e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e982dc1-b89e-49b3-96e2-bdb0e99fe6c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "553ea59f-36ac-4ac1-9f82-ea3d5f4b4238",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3cbafc9-9189-44ab-89d2-a900a4b47ef5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ad5582-361a-490d-a2b5-056c6a6d9119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffe238f5-715c-462a-b741-8d1cb1a43801"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999de8d8-748c-4bc0-a6a0-0e3a0c651a86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0bff0f1d-c34b-41a8-a536-a1a95f8896b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e023098-394e-4824-81df-b24643b5ad66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18e45219-313f-40d3-93e4-4b5f64d8849f"
            }
          }
        ]
      },
      {
        "id": "0a907ecd-bbc3-46e5-9da6-a358e8b02b3d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dad22d9-bb39-486e-9f34-c74537548961",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1799a9fa-91dc-4439-a7fa-df74db5ed73a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3f5fa9ac-6372-4f03-9363-28c983cbf00d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ceee677-b638-4cb7-94d1-5acef461525f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84c9af3d-53ec-422e-b46e-3f4ea42c68c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 107.48809523809521,
      "responseMin": 3,
      "responseMax": 12200,
      "responseSd": 829.2090440577483,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724805698030,
      "completed": 1724805733770
    },
    "executions": [
      {
        "id": "39d6522d-dcb5-4bee-8ab5-03745c9cf66f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ce475d91-3fa6-428d-abba-68a10d1827d2",
          "httpRequestId": "c937478d-b5b8-47b2-9097-580de2a92344"
        },
        "item": {
          "id": "39d6522d-dcb5-4bee-8ab5-03745c9cf66f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2a878eb2-bb76-42d3-ac8c-b15796900e67",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "570d0789-1e33-4326-8c6d-33dca5a97e85",
        "cursor": {
          "ref": "d7ce5a65-4171-46c9-ae08-b180a4a74bd1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5397d71-01f5-4350-9024-19f9bc71f09c"
        },
        "item": {
          "id": "570d0789-1e33-4326-8c6d-33dca5a97e85",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1ec16693-ca5d-494d-8cfd-da11971eee53",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ee6f6362-617e-49e4-891d-f63ca7ace370",
        "cursor": {
          "ref": "59399560-8f96-46c4-a910-5b73caa69ff3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "82142f69-3278-48b5-bba9-6132d5d890ca"
        },
        "item": {
          "id": "ee6f6362-617e-49e4-891d-f63ca7ace370",
          "name": "did_json"
        },
        "response": {
          "id": "deb32e37-46c8-431b-8e92-07d152a29be4",
          "status": "OK",
          "code": 200,
          "responseTime": 240,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232667ac-3655-4d7c-81f4-33f6147def68",
        "cursor": {
          "ref": "60f5da72-e808-4e77-ad47-6e40ff26c5b5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9efd68e6-9867-4391-9970-f89ab41a14d5"
        },
        "item": {
          "id": "232667ac-3655-4d7c-81f4-33f6147def68",
          "name": "did:invalid"
        },
        "response": {
          "id": "537faf4b-c2df-4d55-83cf-34c474759bc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 234,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232667ac-3655-4d7c-81f4-33f6147def68",
        "cursor": {
          "ref": "60f5da72-e808-4e77-ad47-6e40ff26c5b5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9efd68e6-9867-4391-9970-f89ab41a14d5"
        },
        "item": {
          "id": "232667ac-3655-4d7c-81f4-33f6147def68",
          "name": "did:invalid"
        },
        "response": {
          "id": "537faf4b-c2df-4d55-83cf-34c474759bc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 234,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f94963a-f766-42d5-b146-535bb39e327c",
        "cursor": {
          "ref": "8cf841c6-bd56-472c-b7e6-66e1e1dc765a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a68379e6-a739-4244-9bf6-86795ac1083b"
        },
        "item": {
          "id": "3f94963a-f766-42d5-b146-535bb39e327c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f84dbed-3936-49bd-8169-ba975c2753da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2d9b57-3be9-4199-83e8-e6a62aa071ae",
        "cursor": {
          "ref": "f798412f-50b2-4841-ac1b-7ca21c4a0d7e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "da2c8806-615b-410a-9ccf-e2dfd8716115"
        },
        "item": {
          "id": "2e2d9b57-3be9-4199-83e8-e6a62aa071ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4fe5f68e-1a43-4a17-a595-1419cdbcc832",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a213ee9d-5b97-434a-a3db-8aadfe6bfd68",
        "cursor": {
          "ref": "64614c95-3c09-4508-b412-3cb8e9e70bd0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6297bd90-dbf7-4b0e-bcf4-076fd7b35d08"
        },
        "item": {
          "id": "a213ee9d-5b97-434a-a3db-8aadfe6bfd68",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4f0ffd9e-4bbd-43cd-8058-98a49a03fd18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58372537-b27d-493a-bccf-d1e9327361ee",
        "cursor": {
          "ref": "fb084740-2ec8-4dc5-a0bc-63651d663291",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "da830c16-1351-45ab-bbcd-747ef2ab01d9"
        },
        "item": {
          "id": "58372537-b27d-493a-bccf-d1e9327361ee",
          "name": "identifiers"
        },
        "response": {
          "id": "d4d04125-4844-499e-903b-41a40d67beef",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c15859-4db1-46f0-9c26-b66927c7a7a4",
        "cursor": {
          "ref": "ecc0bfdc-7622-40d6-92c2-694e2f2f06a2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a9f5058b-1f55-4f93-bf8c-ab61cf076109"
        },
        "item": {
          "id": "f7c15859-4db1-46f0-9c26-b66927c7a7a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "270d720c-002c-42c0-911d-425c33bea155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9530bb19-e87a-4b4a-a0a6-c34fa8f739d9",
        "cursor": {
          "ref": "8011dd95-2c64-4239-9219-31f78e34170e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f9f036b1-39ef-4d66-917a-fda04ac0cee1"
        },
        "item": {
          "id": "9530bb19-e87a-4b4a-a0a6-c34fa8f739d9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "85a40c30-38d6-46c9-825e-4f5394af01a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a38203-52d1-40f9-bca9-0bebbdd651c9",
        "cursor": {
          "ref": "d40cecaf-e92e-4fd3-ad8c-a21bdde107f4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "01fda4e7-7456-4017-868f-30f2a768ee39"
        },
        "item": {
          "id": "64a38203-52d1-40f9-bca9-0bebbdd651c9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b8fd225-0147-4e2c-9ea6-5e756fe1edc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae84315-2f84-4ed1-bff5-bbc59f8fc911",
        "cursor": {
          "ref": "642eff0b-471d-4cab-97db-a792ac437e2e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9da06b46-414b-4dc0-8035-def0377e81b1"
        },
        "item": {
          "id": "2ae84315-2f84-4ed1-bff5-bbc59f8fc911",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "685e3e96-1cf8-43a0-944d-efe84f4da2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2e208-4acc-4628-a5d7-0b2dd52e1110",
        "cursor": {
          "ref": "bfa5d78f-d4cd-42fa-be09-3da6ec9a580f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aa3f5494-1e75-42cd-a82b-fd8d0ad983c7"
        },
        "item": {
          "id": "4ef2e208-4acc-4628-a5d7-0b2dd52e1110",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3ea8402d-8c13-4dbb-be14-c5049e02f4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56c3939-37ed-42f7-a85e-d75ce496db13",
        "cursor": {
          "ref": "254d007b-4c9b-4797-ba4e-c0640a21b3cb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0ef57c50-9dc7-40f6-9065-c14fac82c373"
        },
        "item": {
          "id": "b56c3939-37ed-42f7-a85e-d75ce496db13",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7cdb5c59-c98b-430b-bf6d-4f6a71f96fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2661db77-79e3-4aeb-a20e-a7f4c528fee1",
        "cursor": {
          "ref": "a3fb147a-4b0a-4326-8b67-2d4f30b79f72",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0ddee63-3ce9-4577-a85c-4960452043cb"
        },
        "item": {
          "id": "2661db77-79e3-4aeb-a20e-a7f4c528fee1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af6933ed-25e3-43be-b479-9b610a589e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab05dbe-5f45-481e-a7e6-ae649c10681a",
        "cursor": {
          "ref": "18622b99-4a48-4635-bf86-ca1b923270d2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "08e11e46-6e03-4973-b180-77f52cdde6aa"
        },
        "item": {
          "id": "5ab05dbe-5f45-481e-a7e6-ae649c10681a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f154fb0-59da-4bf9-9d17-fa90522b7afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d724c8a-f880-47b6-8b99-773350a01e0c",
        "cursor": {
          "ref": "ffd4c55f-fddb-4ea9-a8ce-1e4690638a0a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2482851-1dd2-427d-889c-8dccfb9af8f3"
        },
        "item": {
          "id": "9d724c8a-f880-47b6-8b99-773350a01e0c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2fc90a98-bf1a-4c4d-bed8-fc01a83462c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af3cc35-f867-44dc-9fd9-390d6b8a0872",
        "cursor": {
          "ref": "31d8ce44-d5a9-414d-9e96-5ae0d573dca3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2f3aa8b1-8367-4584-8a5c-a7ad14c29893"
        },
        "item": {
          "id": "2af3cc35-f867-44dc-9fd9-390d6b8a0872",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9a905c01-5916-455d-a5a9-53fe11f19890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222e9089-a649-4502-934d-9ca7a5fa505d",
        "cursor": {
          "ref": "c8819c12-6b2d-4f22-bc76-565e2a3ce92a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "21f66f05-73f3-41d1-a718-ace2738660f0"
        },
        "item": {
          "id": "222e9089-a649-4502-934d-9ca7a5fa505d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b9fa40ed-69be-4382-91f6-c167f9ee530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970b997a-a4b3-41d8-b8ec-0bc69819b136",
        "cursor": {
          "ref": "6d0fe710-e088-4e9d-8e72-8addd0c0a20a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "323bc5ad-b673-48d2-83eb-72364f67f661"
        },
        "item": {
          "id": "970b997a-a4b3-41d8-b8ec-0bc69819b136",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "600766a2-0de6-407b-92ef-ed53fa71697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ff2878-d837-4ab9-97ef-9c35315b1a8f",
        "cursor": {
          "ref": "573fae9d-af99-45f8-a572-14f091508bb3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f40f8961-f904-4cd8-9e07-2c7399a71f3b"
        },
        "item": {
          "id": "90ff2878-d837-4ab9-97ef-9c35315b1a8f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5b9b3cc0-92ae-4c35-93e4-7c4c89671542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ba06cb-df00-438a-9a00-874de4e9350f",
        "cursor": {
          "ref": "4868db13-78cc-4a8f-9aff-a6c0510e612a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8b747cc4-9416-4a57-9a54-9033ffa7ba29"
        },
        "item": {
          "id": "b3ba06cb-df00-438a-9a00-874de4e9350f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4d010bb6-c8c8-4fa5-b552-109d60ac474d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b8920-f7ce-48b5-8019-7da2f3ccb601",
        "cursor": {
          "ref": "e103e4e5-bfdf-48da-ab9d-763f5eb598af",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e0c3a974-e3c4-4b0d-8612-04c6a4a6e838"
        },
        "item": {
          "id": "d67b8920-f7ce-48b5-8019-7da2f3ccb601",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4713a0e6-5425-4776-bc20-d75bd9a493f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e480c98-19cf-46a1-bb0b-6bd4ad57a0cf",
        "cursor": {
          "ref": "73bac782-1ed8-4411-9a45-82f89e1c513d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d5cb8694-a979-440c-a411-cc02d6e515f4"
        },
        "item": {
          "id": "6e480c98-19cf-46a1-bb0b-6bd4ad57a0cf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c40ddfb-7e86-4482-a2d1-8f39aa87360e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88dde69-1cd5-458c-8de9-bdd141c2425f",
        "cursor": {
          "ref": "1268c774-4cd7-4607-a8fb-cbd0f26aa0cb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "32e63366-0d1a-4028-83ff-e42ad8e6f5b1"
        },
        "item": {
          "id": "f88dde69-1cd5-458c-8de9-bdd141c2425f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0f189b5-ebb1-40ca-aed2-d1008686e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c476b80-9e33-4d2a-ae90-ee6e5eb6a614",
        "cursor": {
          "ref": "47950ae3-1eaa-4886-a1e0-690ccef718d0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "820c95ef-2150-4874-96fc-b63a584fb948"
        },
        "item": {
          "id": "7c476b80-9e33-4d2a-ae90-ee6e5eb6a614",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d687b5b-2207-4d19-89fa-2521a996c9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4772e3-d415-45b4-9f12-fc99c45aaf75",
        "cursor": {
          "ref": "6ea493a9-4066-418d-8f6a-494006fdb9de",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3788da8-88c9-4ccb-a714-b38c31ec68f2"
        },
        "item": {
          "id": "0d4772e3-d415-45b4-9f12-fc99c45aaf75",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e1b838f2-d990-4222-be4a-82b5edace5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b49a4fd-e7f9-44c3-a887-fddedae51709",
        "cursor": {
          "ref": "dae2a4a5-7e65-413f-bc47-b08005e4180f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "40f222bb-d86f-4a16-8e7c-5d95d5f80c9e"
        },
        "item": {
          "id": "9b49a4fd-e7f9-44c3-a887-fddedae51709",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c63285ec-036f-4afa-ab52-8f8d814024bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c955b-5a53-44ec-bdba-ac2907130b33",
        "cursor": {
          "ref": "f748a139-e253-4a55-85b7-ac474e543786",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "77c52a65-13bc-4dee-8a85-041cc8968d2f"
        },
        "item": {
          "id": "7f5c955b-5a53-44ec-bdba-ac2907130b33",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9e06e11f-fa05-4b55-be32-760f20942202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f00ce6-bf84-4d55-acf6-2dd735a3a83c",
        "cursor": {
          "ref": "b0bd9375-fd1b-45ca-82cd-1f6d767e548a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "06cd15dc-b8fa-4449-8173-7ea6f02057b6"
        },
        "item": {
          "id": "12f00ce6-bf84-4d55-acf6-2dd735a3a83c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2ba64a6b-9c3e-49a5-a465-20c16461319a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a5e40-8c66-4435-be3d-b56c1ff7771d",
        "cursor": {
          "ref": "d9119b2a-4f56-4fb5-bbe9-ee740d07a1a8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "969bc370-2253-45e5-bf6c-3f991acaae61"
        },
        "item": {
          "id": "710a5e40-8c66-4435-be3d-b56c1ff7771d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39dddd61-049f-4f84-a286-ca7b9af6d189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b904e1-49d6-4511-95b9-5d22daea3487",
        "cursor": {
          "ref": "d6e1fe07-696e-4bc1-83b3-1c8c35a669ca",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "848f34d7-28ac-4522-ae2b-5cce57d15d9c"
        },
        "item": {
          "id": "82b904e1-49d6-4511-95b9-5d22daea3487",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "48563825-95cf-45c5-8d8f-59bfc9337a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a2dde7-941f-4203-9fb0-cbaff0847d32",
        "cursor": {
          "ref": "2775a647-7d40-48bd-b1b2-60b70dc6dccb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8d60d59c-76c5-40f0-adf7-068ea138a982"
        },
        "item": {
          "id": "70a2dde7-941f-4203-9fb0-cbaff0847d32",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ddbf8f4-1341-4c39-be65-13da040803c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3544fdaf-d8e4-4a6d-9d3a-061fc9e525e0",
        "cursor": {
          "ref": "7b477977-6948-4794-aef7-e3367924d015",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b6e47702-d84f-4b91-9f95-2e92b13e2866"
        },
        "item": {
          "id": "3544fdaf-d8e4-4a6d-9d3a-061fc9e525e0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "468f3ceb-e694-4f05-83d1-4ee1529684ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80d19a1-2b28-4b74-9cbd-39da4e2f8345",
        "cursor": {
          "ref": "9bf7882a-6483-445a-b967-52c3aa884217",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e15c8d21-9190-4e15-9aa4-6a8aa66b4525"
        },
        "item": {
          "id": "f80d19a1-2b28-4b74-9cbd-39da4e2f8345",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e2a84d73-08fe-4562-aed4-47feaa413b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f13dc2a-bae3-4c32-92c2-1371492da81e",
        "cursor": {
          "ref": "d3276e80-2c57-49d8-9f58-7aa2e3a52273",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f519a155-f839-4b7a-a24f-9c07c5f222cb"
        },
        "item": {
          "id": "3f13dc2a-bae3-4c32-92c2-1371492da81e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34967699-822b-4af4-ad72-9af75593a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac506945-9721-40a3-b3f9-937e416bf249",
        "cursor": {
          "ref": "bff71012-c004-4fea-bb77-059d2504ba61",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59341609-ee38-435d-8a9f-02ad17520472"
        },
        "item": {
          "id": "ac506945-9721-40a3-b3f9-937e416bf249",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83fe9702-7db3-490e-9ab1-40c174396672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec53020-b9a3-440f-b7ee-5eb2d8c70b44",
        "cursor": {
          "ref": "db32f547-d583-4e78-8b3b-5f7ca3180e48",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "675db4c0-411c-49e1-87e2-3fd49f756693"
        },
        "item": {
          "id": "0ec53020-b9a3-440f-b7ee-5eb2d8c70b44",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ac085f3e-73ec-499c-8b09-91d8dc147cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c43767-fd86-4e37-b88e-c46ad57d7516",
        "cursor": {
          "ref": "ee7b6cd0-e1b8-492f-8854-1b04b72d4b7e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e0a7d7af-5932-40de-b424-7c48a6916190"
        },
        "item": {
          "id": "84c43767-fd86-4e37-b88e-c46ad57d7516",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff07e017-6921-4e71-aa01-9c8a27951bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7244ca-43ce-4921-9dba-05a40f1c1a2d",
        "cursor": {
          "ref": "44969ae2-009e-4860-9a80-5097280299ca",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bc808aad-7679-4477-8463-41571e199495"
        },
        "item": {
          "id": "1e7244ca-43ce-4921-9dba-05a40f1c1a2d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c0b7c22b-e69d-46fe-bd6a-118baf1cdbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa54315-4ecf-45c9-a53d-6cc9e1c4e85c",
        "cursor": {
          "ref": "64a2dc1a-0794-4a27-ad2e-c2010d36066d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05a82b1f-0230-4631-bce7-e88ab7b7e65e"
        },
        "item": {
          "id": "4fa54315-4ecf-45c9-a53d-6cc9e1c4e85c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7ba5ec88-9c6c-4fe5-8f05-8c88c1157dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0b142d-aeef-4121-8458-73f29e99d8ad",
        "cursor": {
          "ref": "2a60a82e-6235-4040-8047-68c1622616e3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "52174191-d65d-45dc-a9cf-80736d6e8e54"
        },
        "item": {
          "id": "fd0b142d-aeef-4121-8458-73f29e99d8ad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b172feea-0a81-4755-8c43-79fb63d202cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5c6d4-3a85-4196-b762-8402799df0fa",
        "cursor": {
          "ref": "47b315ca-466d-4617-8fca-03b4f26af52c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "334677e1-cc8c-4379-8909-385152250437"
        },
        "item": {
          "id": "f0d5c6d4-3a85-4196-b762-8402799df0fa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "049589ce-6efe-4ed3-92f9-21d171941fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba24e79-6569-49f6-9be7-9fa2886927b2",
        "cursor": {
          "ref": "c5bc6d5c-3cca-465b-a6d4-7ea8e8e3dd72",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "34bf744f-12f9-4d77-b47d-6c1f0849af31"
        },
        "item": {
          "id": "3ba24e79-6569-49f6-9be7-9fa2886927b2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d3720d9-3e83-4af4-b817-6d466656bc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634c994c-041b-4c3f-81ae-7b90df75094f",
        "cursor": {
          "ref": "9a150776-7f29-435d-a436-5178fef45a79",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a74d2b71-fa72-4a24-a21e-22d043be8b07"
        },
        "item": {
          "id": "634c994c-041b-4c3f-81ae-7b90df75094f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a2ce926d-1175-4191-92b3-26eb54981a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c722af3a-cbb6-4b5d-a1c2-7f28a0ce40f0",
        "cursor": {
          "ref": "9a3472cb-c96f-48d7-9f85-7be4dc969ce8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fbcc283c-2d76-4ba7-8925-d246c7140b16"
        },
        "item": {
          "id": "c722af3a-cbb6-4b5d-a1c2-7f28a0ce40f0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2faab2e4-13cf-47c3-a1bf-c5bdf08ba1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d650456-0f69-4cb6-9bf3-d79e5a844c8c",
        "cursor": {
          "ref": "1d30267d-5dda-4c0b-952d-8724e70e305b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3a4793c8-c0bf-470b-a4ac-0d14169e0624"
        },
        "item": {
          "id": "8d650456-0f69-4cb6-9bf3-d79e5a844c8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75b7c4ad-122a-4fe2-95af-3b9b155f652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9459292-3de9-4a81-aa23-d1da158cac0d",
        "cursor": {
          "ref": "30330c07-2949-4b80-8b07-e01325bb9f1a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd63dd53-16e7-4434-8346-e43fccfaa858"
        },
        "item": {
          "id": "f9459292-3de9-4a81-aa23-d1da158cac0d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0ad3bb63-ee67-43e4-920a-e7ea4e15524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276054d8-109b-4ced-98f5-3f2c36806061",
        "cursor": {
          "ref": "b91315fd-ded8-455e-94ed-375aca30c04c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1f84288a-f67e-4790-8a89-522cc7d099a3"
        },
        "item": {
          "id": "276054d8-109b-4ced-98f5-3f2c36806061",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "28240442-ee23-4288-b0b2-38f0ae04f5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e5d9d-9b45-4a1d-a9a7-bd4ee885c4ba",
        "cursor": {
          "ref": "4b1b9a42-5a35-4946-980a-12858cf69dd5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "abe45702-a817-4e5d-87f4-c1ccd4a9323b"
        },
        "item": {
          "id": "d72e5d9d-9b45-4a1d-a9a7-bd4ee885c4ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eefe3e35-fd35-4565-87b2-d406861f0cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd280c3-4910-473b-9c01-ebca0ffb1e3a",
        "cursor": {
          "ref": "094d25a6-18d6-4754-9da7-5003999cd521",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "505fc16a-8ead-48c8-b6d4-179b2edc96fe"
        },
        "item": {
          "id": "4fd280c3-4910-473b-9c01-ebca0ffb1e3a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e108cd03-bc1e-4b83-ab5e-709e4234f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd0bce9-4a66-4d61-bad3-45286721c125",
        "cursor": {
          "ref": "4c2fa17e-c337-4262-9639-725d95fa7451",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0286dd49-25ca-4480-b3e8-b1444d408f65"
        },
        "item": {
          "id": "4fd0bce9-4a66-4d61-bad3-45286721c125",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "88b235f2-d544-42e3-b5ae-8a3fde1b95e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc3061f-1191-4b09-a8ff-0c07e4aaedd4",
        "cursor": {
          "ref": "75361343-1f9d-42a1-b6ee-4b154186b73d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fa485cf0-2af7-4abf-872e-74ac31aad611"
        },
        "item": {
          "id": "bdc3061f-1191-4b09-a8ff-0c07e4aaedd4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cc80baca-093b-45c1-bd36-45ad3df29406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a769db59-55c9-4793-a622-3140559cf239",
        "cursor": {
          "ref": "277e1b23-200d-4208-a4f3-b6c54cbe5f94",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ce51ab97-24db-44b2-bf54-b6a78d2d43ab"
        },
        "item": {
          "id": "a769db59-55c9-4793-a622-3140559cf239",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6cf771c4-af14-493b-a3f1-a26ce60abc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e498f1f6-9cfd-4e24-833b-af10a8bdb3f4",
        "cursor": {
          "ref": "2db19887-fbde-4d8c-bb29-7df426c6498c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "375aa938-a319-4fc7-9411-6d7be9ee2d2c"
        },
        "item": {
          "id": "e498f1f6-9cfd-4e24-833b-af10a8bdb3f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3c9efb39-09cb-42da-bc72-7b53923a5cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c9aae-a92c-45fc-9f31-8ad212cf2383",
        "cursor": {
          "ref": "51e19ff3-2238-464f-9953-d26b25efdc51",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f4f4e475-ded8-49b4-bbbc-2673802f1696"
        },
        "item": {
          "id": "216c9aae-a92c-45fc-9f31-8ad212cf2383",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "702cedc9-3e30-4a9b-9977-918b7ab727d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe8f473-3d0f-4238-9d13-949feeeeb502",
        "cursor": {
          "ref": "2e01046e-497a-45fd-a689-167c9459d54c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3cc9f31d-1479-4c19-93a2-f1decf6b1e3c"
        },
        "item": {
          "id": "cbe8f473-3d0f-4238-9d13-949feeeeb502",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ddb839fc-60aa-4477-91e5-21909d2d908f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69545b9-6bb9-4b59-9133-72c428e67d07",
        "cursor": {
          "ref": "16f4f50e-fdc8-45ec-8360-f83246970cce",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6030dc33-22ae-4431-99ea-dd29c31cdeed"
        },
        "item": {
          "id": "f69545b9-6bb9-4b59-9133-72c428e67d07",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1daf5ea8-bded-49ce-aa8f-5a5ea0293426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d2bb6-1bb6-419b-9202-a33e2997be8c",
        "cursor": {
          "ref": "f07cc33b-0711-43cd-b69c-272ff9a984b1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d63daee5-defe-4e4c-a38f-bbdc82050ff1"
        },
        "item": {
          "id": "088d2bb6-1bb6-419b-9202-a33e2997be8c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "54105b92-9df3-4246-a037-abc814980fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e27ca-a9e2-49e3-b4fc-522bf0a0eafa",
        "cursor": {
          "ref": "2a7008f1-d5dd-4c4c-9c07-3b39376f4480",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6a562a73-440c-4171-a52e-90f4caebb444"
        },
        "item": {
          "id": "0c3e27ca-a9e2-49e3-b4fc-522bf0a0eafa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "318c6bf7-58a9-4557-9922-e0e52d1318e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b1e9ea-f3c8-4544-8f1f-986bd8028bca",
        "cursor": {
          "ref": "a0659f9c-6a66-4131-a77b-214ef78390f4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "15c6ad77-3a61-4c36-b621-8f416c0342bd"
        },
        "item": {
          "id": "e8b1e9ea-f3c8-4544-8f1f-986bd8028bca",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "59901469-7d49-4213-97aa-3ee87c0fe867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ad9aff-8b1f-4f20-b6dd-e42fd08e9c9d",
        "cursor": {
          "ref": "4a451e33-3e9a-4f3e-899b-780b6002380b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "078f6338-2902-4ba0-9ad1-6b1fa98263c3"
        },
        "item": {
          "id": "c7ad9aff-8b1f-4f20-b6dd-e42fd08e9c9d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "42308415-e9d6-45a4-b701-325c93425907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7591d1d1-49b2-4b60-b62c-ffd60e2aefb5",
        "cursor": {
          "ref": "cb8a235c-725e-4859-9cbf-e82917357a17",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b5be2ac-761b-44f2-921d-61effb7e2bb7"
        },
        "item": {
          "id": "7591d1d1-49b2-4b60-b62c-ffd60e2aefb5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1d64eba6-2162-45b3-b0a0-49420fd23441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84799481-1d71-4329-96af-3adffad1962d",
        "cursor": {
          "ref": "bc72491e-ef04-4c59-990d-c2520110152f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f191cda-b53c-4001-bce8-23d894cd0906"
        },
        "item": {
          "id": "84799481-1d71-4329-96af-3adffad1962d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "38160399-54ab-47d7-8ddc-e76759e86a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7334fb-7656-4610-b17a-3ee577f4af77",
        "cursor": {
          "ref": "e821943e-88db-4489-ba72-b58f562475ac",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "141ac591-77a6-4476-bfe2-0def9081bb4d"
        },
        "item": {
          "id": "7c7334fb-7656-4610-b17a-3ee577f4af77",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e89124f1-e05f-4bfc-a39e-429a2a57f695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856e3191-4a62-4cb7-92f4-73dbab47b3b2",
        "cursor": {
          "ref": "26e2b1d7-fb30-4435-a8ea-4b28b9974ddd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "de66f10f-d79f-45e9-ab21-81c56edde89b"
        },
        "item": {
          "id": "856e3191-4a62-4cb7-92f4-73dbab47b3b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70b1f258-ff41-4dfb-8325-12b057cea9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e41064-67c6-4319-a42d-ce0639e07098",
        "cursor": {
          "ref": "3ff5f869-7a8f-4eb1-b12e-448102a4cc02",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ecf6a522-2cbd-4ed0-8df0-c6af12598633"
        },
        "item": {
          "id": "52e41064-67c6-4319-a42d-ce0639e07098",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6d2eeb3f-b3a7-4866-9c6a-515fcb5c5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9d4d1c-271c-47dc-a948-f6068c6e8884",
        "cursor": {
          "ref": "8ed98d84-8118-4880-8ec6-62e51323416c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca595cb6-3c50-4090-a07e-3eec7ad0ef4c"
        },
        "item": {
          "id": "9e9d4d1c-271c-47dc-a948-f6068c6e8884",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd5f2c2d-fcbd-4ce0-98ef-703409cab62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd0a74-cb8e-4fa9-b1ff-22775480e98b",
        "cursor": {
          "ref": "84ff818e-a809-4f93-a281-27b1fb4d72a7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f27c23b6-7b1b-4e97-afd9-9cd7fbc9b933"
        },
        "item": {
          "id": "a9dd0a74-cb8e-4fa9-b1ff-22775480e98b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e4f892c5-278d-490c-9bdf-e749ca7ce68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a0057-0c22-4b2b-99a5-f8b928f72b28",
        "cursor": {
          "ref": "7dc46290-c490-4980-98f9-f69355f6b1a4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "592c2d31-7eed-4a1f-a4b4-28ecfd60842f"
        },
        "item": {
          "id": "cd9a0057-0c22-4b2b-99a5-f8b928f72b28",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d29d4ec5-042d-482c-9d60-6ba82368dcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749d1724-ada9-4df7-88f8-75513b005b9e",
        "cursor": {
          "ref": "9615c616-c960-46c3-8826-2137f56ece4c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e0382d2f-5bb9-4fdf-b8c8-3c916f7d827c"
        },
        "item": {
          "id": "749d1724-ada9-4df7-88f8-75513b005b9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "630418fb-90ab-426a-8823-f56bf4248230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077f7150-1e1e-49de-8158-a37228f22967",
        "cursor": {
          "ref": "7f5e7dd6-9baf-4865-bf7f-008d87030b71",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f5219c56-3172-4ccd-a1b6-84fc25591983"
        },
        "item": {
          "id": "077f7150-1e1e-49de-8158-a37228f22967",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "59ec3656-7b83-48fc-88c9-561c6162297e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7452b56-8fe7-43b2-beca-fc79c7ae1d16",
        "cursor": {
          "ref": "51d66eea-b45c-42f2-a4d7-9437ee683b32",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cde05ca7-80a6-45fb-bdd9-79a1c1a84dc1"
        },
        "item": {
          "id": "b7452b56-8fe7-43b2-beca-fc79c7ae1d16",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4d18ed98-5671-42bc-bb2c-efe1d5840211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a86a4b-9704-4ace-9a98-241c0914627e",
        "cursor": {
          "ref": "11af5734-4340-47bb-a82b-94ccf7857ff5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1fa69398-11e2-473c-8719-5b46029d8d79"
        },
        "item": {
          "id": "90a86a4b-9704-4ace-9a98-241c0914627e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f94ce991-890e-44e9-8765-fe2adcf1634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a9343-6a93-4cf6-9484-326a814bd6c5",
        "cursor": {
          "ref": "73e5a8db-6c32-46ba-88b8-0f6e2d8a517c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5afd030f-7eff-446b-993e-beb2e8d4f9ac"
        },
        "item": {
          "id": "585a9343-6a93-4cf6-9484-326a814bd6c5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98ac781f-468a-4086-be88-403b0fb39320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add5762e-2188-46f2-a077-5fbd8f46c3d9",
        "cursor": {
          "ref": "1a51388c-1c1d-423d-8e1c-5c1f4101a9da",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b32da4e-ed9b-4b94-ae77-cff7a13a59c6"
        },
        "item": {
          "id": "add5762e-2188-46f2-a077-5fbd8f46c3d9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "89da5cf9-f1d8-42d3-b65b-a0380ffbf76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2dedb6-7b2a-487b-aad5-3dddcea9f1e9",
        "cursor": {
          "ref": "083798de-9067-4a13-98d1-dd647f8b0093",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d49448d-ca71-4e0a-832c-e1fba064ceef"
        },
        "item": {
          "id": "9a2dedb6-7b2a-487b-aad5-3dddcea9f1e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fdd79407-5686-4274-b64f-300099caff55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa6e24e-e0dc-4c7e-a4c7-142491cadcb9",
        "cursor": {
          "ref": "d863bd14-81a7-460b-9d6e-ec3ca091c671",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f5068988-d34f-4ef3-991b-d421c7657648"
        },
        "item": {
          "id": "9fa6e24e-e0dc-4c7e-a4c7-142491cadcb9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e0be2b2d-68c3-4f17-851b-8e49e1ec0d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f35c84-6386-438d-bf13-b1ec69f4e68f",
        "cursor": {
          "ref": "ad5e50f5-3718-43ba-bfa9-f8d337ac85b2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a0ac9ead-cda9-426f-98b8-151728209325"
        },
        "item": {
          "id": "c2f35c84-6386-438d-bf13-b1ec69f4e68f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "174de266-25be-4c7e-ad8e-1958efc6c5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cdf73e-4923-4288-9391-b6dbcee4dd47",
        "cursor": {
          "ref": "ce8ecdce-9bfa-488c-808e-9e5149771e92",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "20084461-8d60-4047-95a8-11d9de07853f"
        },
        "item": {
          "id": "b8cdf73e-4923-4288-9391-b6dbcee4dd47",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0a6b5f3-8838-4a08-968c-79e99b4c1005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68695a2-c522-4061-9de2-be38a08f3e9d",
        "cursor": {
          "ref": "a701444c-8b34-4e8f-a6d8-446eb763ae98",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "42d373fc-c0d0-4a48-8677-23ec271dc805"
        },
        "item": {
          "id": "c68695a2-c522-4061-9de2-be38a08f3e9d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a55e9a0c-d680-4b6e-bedf-8e644c65fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c1473-f233-4fb5-8f26-f33de311bd56",
        "cursor": {
          "ref": "d3e144ff-e0de-4cf9-9764-706eccc2dae5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aae70ae4-6a29-49f2-895f-cd3e70a7a132"
        },
        "item": {
          "id": "627c1473-f233-4fb5-8f26-f33de311bd56",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "141e9a1a-a131-43aa-b149-39509ee34c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8014c88a-f11d-4d2b-a64d-07d69ad8d3cb",
        "cursor": {
          "ref": "99d34b52-7fdd-449b-978e-0b195376dc13",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ccae9548-3339-4547-982f-8db7f1caf7e1"
        },
        "item": {
          "id": "8014c88a-f11d-4d2b-a64d-07d69ad8d3cb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "61e287f4-111e-4491-be95-5fd5942698d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d222785-b9ea-4fb2-9a4e-fb9178818d34",
        "cursor": {
          "ref": "f07b89c6-aa82-4303-bb64-9d62377fcedd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7bbf97c-abae-4fd3-bc51-e0e106e4bdb0"
        },
        "item": {
          "id": "7d222785-b9ea-4fb2-9a4e-fb9178818d34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "04677aa4-4667-4be8-98d3-c5f5f318dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f720ee75-2954-4b4f-a8ee-4d558df2efef",
        "cursor": {
          "ref": "b00fcdf4-1a9c-4dee-9d68-d199fcd18969",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "28a06e15-725c-4035-8677-89e94acfa39e"
        },
        "item": {
          "id": "f720ee75-2954-4b4f-a8ee-4d558df2efef",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3a3d15fb-cd4e-4865-8482-f4c62c8563dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2aa0e7-d842-43ac-8ae0-ec8af9510921",
        "cursor": {
          "ref": "f9491229-4e53-4117-b456-5270625f86a5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "01112d1f-476d-402c-a30a-918651e5e0d4"
        },
        "item": {
          "id": "7a2aa0e7-d842-43ac-8ae0-ec8af9510921",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eec2d337-b85e-4a33-ba88-b1c41bdf470a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2ce84a-dc70-43a1-89ca-a111bc55890e",
        "cursor": {
          "ref": "65a1259f-e130-4ce3-b81f-bf201744b127",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2be71caf-9fd8-4bf7-a1a2-1231c0f217a7"
        },
        "item": {
          "id": "ec2ce84a-dc70-43a1-89ca-a111bc55890e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2375d2b2-dbb4-4a85-b558-a63dc2081ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe88f7d-90bb-46cd-8963-938efcc7e890",
        "cursor": {
          "ref": "fcf54fe1-1959-4648-8efb-8cc1c7c227e8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7f203cb0-e276-4d51-b8e8-e9233b5dc4a5"
        },
        "item": {
          "id": "1fe88f7d-90bb-46cd-8963-938efcc7e890",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec1bdcdd-17b0-4742-b422-0fbc03f31da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57197ab-8c43-4e29-98a2-049b4a18832f",
        "cursor": {
          "ref": "faceeb00-72e2-443d-a3b7-45bf30278554",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e3251c47-8490-4f4b-ac4c-658b3cdf10d8"
        },
        "item": {
          "id": "b57197ab-8c43-4e29-98a2-049b4a18832f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "933f14c7-4104-4d65-b764-4d3e3f507ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d4f35-aae4-42de-851a-251a4b571e57",
        "cursor": {
          "ref": "8d422386-696c-44fe-8579-ba66df850a5a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4352b378-694c-452e-8634-12ecc5e61bdf"
        },
        "item": {
          "id": "693d4f35-aae4-42de-851a-251a4b571e57",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "51a3548a-eea6-4640-aed2-b09bbd6a6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd78806-12d6-4e44-9858-735f9cdda981",
        "cursor": {
          "ref": "4d1d44f4-7942-40cb-bbca-7806d41a13c8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "77aa09af-e950-4b95-b2d4-f2b9657e5b13"
        },
        "item": {
          "id": "6bd78806-12d6-4e44-9858-735f9cdda981",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5b4a0a3a-1d89-4727-ba17-36fe9c8c1c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84f87bb-17bf-42c7-93a8-65f9823d35c4",
        "cursor": {
          "ref": "cbd1aa7f-4456-4bff-b152-168a718e5b55",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e30ecc7c-6c9e-454c-a210-4ee9f5cb4510"
        },
        "item": {
          "id": "a84f87bb-17bf-42c7-93a8-65f9823d35c4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e6215f2e-2f05-4b24-8bf0-726ad720e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4039bb01-cd6d-4e52-9a01-19ac7c16aef4",
        "cursor": {
          "ref": "fc7aaa32-b738-41f2-94d4-01ca879d47e9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "70cfc12c-4001-4ccb-813f-9082ba4a5cd9"
        },
        "item": {
          "id": "4039bb01-cd6d-4e52-9a01-19ac7c16aef4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "36ec6389-33ef-4702-9c2f-3e931824a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b37ec4-5ad9-4da4-8ab9-fc4add0e1e06",
        "cursor": {
          "ref": "63fc4f1d-14c5-40c0-9512-8f1a5d132281",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c30a00af-844c-4e66-9391-7b1d7de341c2"
        },
        "item": {
          "id": "c0b37ec4-5ad9-4da4-8ab9-fc4add0e1e06",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "df5005bc-39a4-4c43-8c16-88c41bdd32ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9feb9c-f369-494b-96b2-3401904571b1",
        "cursor": {
          "ref": "eecf3a33-a3ea-4341-9029-3375ea5c244d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "561f63e6-1482-4e48-80a0-7f7f1f6a6b3c"
        },
        "item": {
          "id": "de9feb9c-f369-494b-96b2-3401904571b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "570b5d3e-ea69-4d19-8858-081fd6946161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8534af0-75f8-4eac-a91f-f36b3e51f752",
        "cursor": {
          "ref": "787f2afd-8330-4590-af17-7fb56ab7eee3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "52ab7a0f-4558-4a68-b731-8da754a04867"
        },
        "item": {
          "id": "e8534af0-75f8-4eac-a91f-f36b3e51f752",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0314bf24-36a3-463d-b836-c39e451fbb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9276f4-f2e9-4201-b91c-4e16a529428d",
        "cursor": {
          "ref": "85217f8d-019c-47a5-b3b0-aa464f118e5a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6946fed5-d5af-423f-a7f1-711d36718092"
        },
        "item": {
          "id": "9b9276f4-f2e9-4201-b91c-4e16a529428d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7b6abeec-173a-4e08-a60c-95e2115fd59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7806e4-c1ab-4bd9-b07a-121e115c9ca0",
        "cursor": {
          "ref": "cd50a3ea-4ed4-4b3a-8bb5-5fdffe8c148f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "305446be-fd65-4290-a6fe-fc838768d98e"
        },
        "item": {
          "id": "3e7806e4-c1ab-4bd9-b07a-121e115c9ca0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d902ea3-1694-4f03-8ede-1b5f9484a986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf47dc7-ebe0-4a16-93f5-d909471de96e",
        "cursor": {
          "ref": "1f92852b-f29f-4192-9595-de5c04c800af",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d57e714e-0303-45f2-b0f2-470be9941a75"
        },
        "item": {
          "id": "6cf47dc7-ebe0-4a16-93f5-d909471de96e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "75b62957-0b32-4bb4-b691-d3e5e8708f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a23d8c-e567-474d-ab9e-160b04be34bd",
        "cursor": {
          "ref": "7bc90994-d687-49fa-9263-28e2b40d3a22",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "74ad80b7-788f-4077-a547-8c9d0daa1f1d"
        },
        "item": {
          "id": "12a23d8c-e567-474d-ab9e-160b04be34bd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3dd2b906-3964-4a65-aa5e-fd701f6fe328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6dd8f-7774-4054-abe0-3e8029a8d6b0",
        "cursor": {
          "ref": "2b177673-45d7-4291-9318-5679b76de48d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "edb5252e-6d0c-4951-b648-bba472fc31cb"
        },
        "item": {
          "id": "bdf6dd8f-7774-4054-abe0-3e8029a8d6b0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3aa6935b-81ed-4dd7-b11d-73a3246fae18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded34d80-8dde-4d47-8eb7-4fdad373a012",
        "cursor": {
          "ref": "9fe173e4-2f86-49c0-853f-1f5334fce021",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0aa0413b-45e3-48f5-9d7e-c22064441863"
        },
        "item": {
          "id": "ded34d80-8dde-4d47-8eb7-4fdad373a012",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "635f9866-e8dd-4287-a86e-f767b67cca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da7f7df7-6c54-4a99-b619-4e13e04617c2",
        "cursor": {
          "ref": "d9956d12-5168-4c32-b5fc-5f08de8ea8c8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4b47c5dc-698e-4e24-862b-07f40414a0d0"
        },
        "item": {
          "id": "da7f7df7-6c54-4a99-b619-4e13e04617c2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d09dd2f2-84ef-4846-8d6b-33969c5e045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "98ba0227-7dfd-4a19-b23d-2477095d0aaa",
        "cursor": {
          "ref": "bd599784-ef16-4f9e-9df3-fd1d43449885",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35154687-d138-44d0-8e50-5ecfcd9719e3"
        },
        "item": {
          "id": "98ba0227-7dfd-4a19-b23d-2477095d0aaa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aa7300ce-bf02-49bb-bd81-c05bf5b5f5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4f03b2ad-4f3c-4beb-b0ef-5da73e53d69c",
        "cursor": {
          "ref": "05ff0e3d-ddee-44a4-ac65-efd6e2063d45",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bf5cf588-7d6a-4964-aed9-3af0b67c4005"
        },
        "item": {
          "id": "4f03b2ad-4f3c-4beb-b0ef-5da73e53d69c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b50f735b-97dc-480f-845a-36e0a7f6899b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "55496efa-0516-4fba-999e-f188d81bb601",
        "cursor": {
          "ref": "4d8e8ddf-aa96-4e61-8bd8-7f3d33038ee6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1147c1b4-a8f0-4048-a873-3a468a7c0fa5"
        },
        "item": {
          "id": "55496efa-0516-4fba-999e-f188d81bb601",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5b26aaf8-5b6e-490d-9acf-4a7b2c684dd0",
          "status": "Created",
          "code": 201,
          "responseTime": 12200,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baf0f0c-4302-469a-8d5a-2c84054cb605",
        "cursor": {
          "ref": "c494c421-f1a4-4702-b7da-427650061c8b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ce2efcb0-7632-40e6-a89f-f75376395ba5"
        },
        "item": {
          "id": "5baf0f0c-4302-469a-8d5a-2c84054cb605",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "69831f76-c508-4a98-a0d4-39dd4b7be8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8b984616-aa7b-4249-8b81-31de49305b85",
        "cursor": {
          "ref": "526fa178-0918-4be8-aa8c-de03945a60e9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5469cdeb-0343-4885-825d-ec8d53188683"
        },
        "item": {
          "id": "8b984616-aa7b-4249-8b81-31de49305b85",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3c4d9dc3-25a1-46a2-9b1e-f7779e92bf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4a995ed9-1a4b-438d-a29d-7cca3e7b3568",
        "cursor": {
          "ref": "4ae9b27d-e421-43de-b40b-bda7abfd34c7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea65befa-1fa6-411f-ad47-c066deb2bb1f"
        },
        "item": {
          "id": "4a995ed9-1a4b-438d-a29d-7cca3e7b3568",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b1333a4-4442-433d-8990-06841004ceaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2059b9f1-7d1c-4555-b14b-0ae3a6de36c3",
        "cursor": {
          "ref": "44f413de-2314-4f8d-bf6e-101977c1f922",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d484d070-a113-4c07-a76e-f06883e01622"
        },
        "item": {
          "id": "2059b9f1-7d1c-4555-b14b-0ae3a6de36c3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ada2cef4-1b58-40cb-a887-d7af4b1d5fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bc7fbb-45b9-4094-a4bf-df256b0c06b1",
        "cursor": {
          "ref": "1a1c2245-8861-4eb1-a263-ef56ed4f19f5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "251eae71-bd93-44f4-916a-3c16fb380b3f"
        },
        "item": {
          "id": "f2bc7fbb-45b9-4094-a4bf-df256b0c06b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90e6ca09-0ce0-42dc-b1c4-f4678d8b7e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4715f8ec-8bef-4ed6-94d5-e0916c03a630",
        "cursor": {
          "ref": "8c675cc0-5c82-432c-91f3-7fee45592231",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c42b80d3-0283-4c9b-a95f-680d3362b8d2"
        },
        "item": {
          "id": "4715f8ec-8bef-4ed6-94d5-e0916c03a630",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa55c0c4-1ce5-469b-97ca-d5e7f274edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30687fe8-c56e-4887-a4da-251636648a60",
        "cursor": {
          "ref": "92225321-7cc9-4616-acd5-f8d5a236a07c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ddc35e50-5dd2-4101-a8d1-ae07b755b795"
        },
        "item": {
          "id": "30687fe8-c56e-4887-a4da-251636648a60",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f369a626-0bb2-4b4c-9ca4-b36974888f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8ee7ce-933a-4f9d-86dc-c65a3c5ec7c6",
        "cursor": {
          "ref": "9d134e5a-627c-4633-ba2a-6e4c936fdd81",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b3ad9fd-6748-4b3e-8bdc-2eea17495cef"
        },
        "item": {
          "id": "cd8ee7ce-933a-4f9d-86dc-c65a3c5ec7c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0fbd5cf5-bdcd-4c6e-8424-49e966858389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8fa4e2-5f48-437a-90de-1e82bb221eb7",
        "cursor": {
          "ref": "9db90e2c-3cb4-4258-8465-6c76634ad0e7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b5b3ebb-c7cd-4632-9d3d-1b992341fc69"
        },
        "item": {
          "id": "3f8fa4e2-5f48-437a-90de-1e82bb221eb7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dc47c244-623a-4125-9b20-43779c118c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79db9a1e-10f8-4408-9a25-d88201e9ea65",
        "cursor": {
          "ref": "d3b365aa-7750-440f-b392-23acf6f26e68",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ad3e6e1c-d78e-49f8-8769-c253d95ed470"
        },
        "item": {
          "id": "79db9a1e-10f8-4408-9a25-d88201e9ea65",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1389792-3934-4f36-8d8f-9bc3bab4c17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b770451f-7293-4b57-9525-2410b6ea29fc",
        "cursor": {
          "ref": "3106f53b-72cd-46b3-929e-dbfd85ecd117",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "52766229-7843-45a2-88e9-f90f5a8a01c4"
        },
        "item": {
          "id": "b770451f-7293-4b57-9525-2410b6ea29fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cec02988-7660-45b7-9454-9b507772f238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59c6d3a-d19b-4fb3-b393-4b67784d1762",
        "cursor": {
          "ref": "c5c7af30-4b39-478d-8e3d-38c103c7e723",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1075d29a-623b-4d75-a524-634f5d4d2a8d"
        },
        "item": {
          "id": "b59c6d3a-d19b-4fb3-b393-4b67784d1762",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f0fef021-7609-420a-81d9-f7a86c12c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19723d6f-e546-425a-b805-a45d2f37b4be",
        "cursor": {
          "ref": "7f511ba8-310f-40d5-912d-3380a011a715",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "abf3508c-f515-4eaf-a966-3ab7e684c270"
        },
        "item": {
          "id": "19723d6f-e546-425a-b805-a45d2f37b4be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01df86a4-79e1-46e9-a761-48e7be7aee38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6dde98-ddf7-4c4c-ab87-de01b40c953e",
        "cursor": {
          "ref": "dc01d014-b7f9-4294-81ee-f022c989bd0c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bb791373-9db4-4dbd-ae91-90f9c05c7098"
        },
        "item": {
          "id": "9c6dde98-ddf7-4c4c-ab87-de01b40c953e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "03c4df40-c90f-44c4-986c-605a1ea8bb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100155b5-978c-4672-94c7-ec8c4af86a44",
        "cursor": {
          "ref": "055f2643-a032-4ee1-9b23-d22408c82c15",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0de32c3b-a9bf-44a3-9576-7572c2971eec"
        },
        "item": {
          "id": "100155b5-978c-4672-94c7-ec8c4af86a44",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8413230e-8a21-4437-bc59-adbe7b5c525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e0454f-3e83-49d0-8bb5-c476a97a336b",
        "cursor": {
          "ref": "4feb7cc3-1cae-479c-a400-f19671270046",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a237e195-847d-44d3-9c85-22c38742108a"
        },
        "item": {
          "id": "02e0454f-3e83-49d0-8bb5-c476a97a336b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "862a489b-4ca2-4e0a-8462-d17aa75ae611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11053253-47c4-4a8b-98e0-c0e4029301a6",
        "cursor": {
          "ref": "76b478b4-5af8-44be-88e4-0df20ab750e1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3b11912f-77af-4d77-b1ed-65c634504093"
        },
        "item": {
          "id": "11053253-47c4-4a8b-98e0-c0e4029301a6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c364f25a-b4cc-452d-822c-79be70dacdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a9603d-e01c-4e13-aef5-474b0d29889d",
        "cursor": {
          "ref": "fd365a2e-ac29-4708-b24a-c4a1b40bda43",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1adff253-47bd-4810-8ab7-4c6a030e82e8"
        },
        "item": {
          "id": "c5a9603d-e01c-4e13-aef5-474b0d29889d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc3f7dc8-dcd8-4049-a234-907ff4a72cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189dd1c2-f481-472c-88de-253a22887fdd",
        "cursor": {
          "ref": "9a2a4981-5829-484f-a439-15ec0242ec95",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b90a2125-9e06-49a2-9f94-db2562bf56c3"
        },
        "item": {
          "id": "189dd1c2-f481-472c-88de-253a22887fdd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5730265-2a8e-464c-a92f-5bea66a179dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "5eddeed6-3ab4-4364-bf97-8b1658e22af8",
        "cursor": {
          "ref": "07e13cad-34b0-4d29-8b89-a3e0370ea23b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "39f1bdf8-4af0-4e64-9bf5-7b949508299a"
        },
        "item": {
          "id": "5eddeed6-3ab4-4364-bf97-8b1658e22af8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d7b0287c-b1d2-43f6-a768-ced3b0992491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d69bef4-8678-484a-98dc-28832d9f85d5",
        "cursor": {
          "ref": "fb0a9614-6d0c-44a8-8a86-95c872125e50",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14af485c-ad83-49c7-8247-d5bfe93e57b0"
        },
        "item": {
          "id": "7d69bef4-8678-484a-98dc-28832d9f85d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06dbe6d0-b650-4237-8a72-19ab111c1461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbe5025-7dd1-4578-bda8-fc93ae9aebc1",
        "cursor": {
          "ref": "e291fc25-eb9f-40d2-95cb-52d6f99be82d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e25c518-4c4b-4eac-ae26-04550655215e"
        },
        "item": {
          "id": "6cbe5025-7dd1-4578-bda8-fc93ae9aebc1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d8b1df36-ce72-45ab-87ff-3badebe6d901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a816fe5e-ae2d-43e7-a9d3-ada226e2c871",
        "cursor": {
          "ref": "92cdcb04-611c-467d-9ed6-697778d5c9cb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b24d089b-ff50-43d6-b3b7-5807ec83a9aa"
        },
        "item": {
          "id": "a816fe5e-ae2d-43e7-a9d3-ada226e2c871",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "513cb190-b529-4ed4-a5e9-0a9f7b97d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40914fef-e05b-42d7-82b1-398027535041",
        "cursor": {
          "ref": "742004dc-06af-4af7-9763-fb537a0b71fd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4043c56b-a549-46fb-86b5-8d1167b43efc"
        },
        "item": {
          "id": "40914fef-e05b-42d7-82b1-398027535041",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76bdf988-ae86-4f56-be33-8806556107f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8462d9b-85f1-4a5f-ba1b-164a5ef03a4b",
        "cursor": {
          "ref": "0db17170-41fd-4739-9ceb-a824a190d3bd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ce17796-92b9-4273-8759-5fc6f65a5479"
        },
        "item": {
          "id": "c8462d9b-85f1-4a5f-ba1b-164a5ef03a4b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0530245-6d3e-4b7f-9120-0b09bc08050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf5fa9c-bf5f-4b2c-8868-e8d221f44288",
        "cursor": {
          "ref": "8f968211-0598-4ff9-9caa-9f551729e1bf",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "342de821-f3dc-4ebf-a6c5-460973c56ae2"
        },
        "item": {
          "id": "4cf5fa9c-bf5f-4b2c-8868-e8d221f44288",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "542f8337-b082-4de4-9791-c89aa4a0db24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6ec0e7-3a55-4031-b6f5-cae8e49c1d51",
        "cursor": {
          "ref": "4b2a23a5-ca08-416a-8180-0f7344a46ce7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "785f995b-a93e-4016-89d3-a80b5f738fed"
        },
        "item": {
          "id": "cd6ec0e7-3a55-4031-b6f5-cae8e49c1d51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7447f551-556f-47bd-a12b-318e2b131a78",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "59585efc-a404-4102-9cae-f6bb2a981908",
        "cursor": {
          "ref": "02a58dab-ac31-4256-914a-cedda316514a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "22f09617-e100-4980-80f5-6b33513c8a67"
        },
        "item": {
          "id": "59585efc-a404-4102-9cae-f6bb2a981908",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37d09cde-e014-4f0c-9df4-9ba62c47ec20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1b1f49-acb3-41d6-a9db-04a55b81ccd9",
        "cursor": {
          "ref": "75c9718d-adeb-4e41-99f8-dd1ce28aabaf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e662eb3b-4877-4d49-b0bf-1e32b29c97df"
        },
        "item": {
          "id": "bd1b1f49-acb3-41d6-a9db-04a55b81ccd9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76a29726-1ef7-47de-9332-cb3c6f3c2271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948fa17-cc61-4b76-b513-96c06709ea71",
        "cursor": {
          "ref": "08150147-706c-4819-878f-513bd980898f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0e0dfbbf-7714-476a-8bcd-41b5af7081a5"
        },
        "item": {
          "id": "4948fa17-cc61-4b76-b513-96c06709ea71",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a7099ce7-b8db-44da-9c88-0aa9f361ca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c47136-ae68-4030-857f-68b2313a33c7",
        "cursor": {
          "ref": "d4e03ec2-b589-4ec1-9a25-add8fc224d48",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "58038c52-d2dc-4058-b34e-d4af736b1c21"
        },
        "item": {
          "id": "39c47136-ae68-4030-857f-68b2313a33c7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed1a88ff-9688-4191-b94e-08b7ef79fabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eed7f56-abb5-434c-a96e-5a9d6b883446",
        "cursor": {
          "ref": "1be4de75-f146-4a78-93a1-0770848fe799",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "21c58236-5e27-45d7-afe9-98a386878f4b"
        },
        "item": {
          "id": "2eed7f56-abb5-434c-a96e-5a9d6b883446",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86cd52d6-c0f8-49e1-88ac-131098c8297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142a1c63-6b08-4490-8938-b8e4ccf9d2af",
        "cursor": {
          "ref": "c7ae39d4-a3c6-46d7-8b26-4d9b42a9dca0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "934faec9-9c3d-4567-b8ab-4a08f53a8f57"
        },
        "item": {
          "id": "142a1c63-6b08-4490-8938-b8e4ccf9d2af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3037ce8-94ce-4ee7-800d-3f9b83e1de98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c863c-cf09-4498-910a-ac37869fb7b8",
        "cursor": {
          "ref": "c23ea67f-7a12-41db-9a42-58320a5a98f3",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c1357181-cac0-432e-8b07-16b4850ab3ad"
        },
        "item": {
          "id": "761c863c-cf09-4498-910a-ac37869fb7b8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6f6dab58-ac88-4b73-aec5-8fce24c91717",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b6aae2f7-251f-48ce-a772-f43ef5973ea3",
        "cursor": {
          "ref": "cf1b954d-2be0-4e7f-bc23-88cb66d4c0b1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2bc3557c-634b-47fc-877c-715d5bc7b2fc"
        },
        "item": {
          "id": "b6aae2f7-251f-48ce-a772-f43ef5973ea3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "adcc62f9-6119-487d-aec9-b3331d56f625",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a20c7784-794e-4160-adcf-5a968e628ca1",
        "cursor": {
          "ref": "800a2623-3bab-427d-baa9-32340e01fb9f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ef68ec03-efd2-41d0-8015-fd022585d846"
        },
        "item": {
          "id": "a20c7784-794e-4160-adcf-5a968e628ca1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b1740453-6b38-4113-8bf5-1b86b2d0f770",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "974d98fa-b2b1-49e7-a418-cd83626feb5c",
        "cursor": {
          "ref": "4d847336-667c-4943-a77a-371ed132627c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "96d4a542-1cbc-4bb0-b721-d88fa9c3bd3a"
        },
        "item": {
          "id": "974d98fa-b2b1-49e7-a418-cd83626feb5c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0acfd896-ebb5-47bc-bb81-0a6fc7012488",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "20ece779-a118-495b-9ba3-cfcf8e6c70cb",
        "cursor": {
          "ref": "d7452f24-f507-449b-8b09-7099315bf60c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b86ab2e3-9a63-4c39-8d65-2ec77ca304bf"
        },
        "item": {
          "id": "20ece779-a118-495b-9ba3-cfcf8e6c70cb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "90a2c120-283d-4254-a620-843068a9a1ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fa14a7b8-c70d-4b96-acb8-fedff5f1c45e",
        "cursor": {
          "ref": "e492a17e-4d8d-42f2-a2f2-a9af272f2bea",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fbf30e8d-75a1-452b-bcf4-d0257dbfda89"
        },
        "item": {
          "id": "fa14a7b8-c70d-4b96-acb8-fedff5f1c45e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0dfbb4cf-07ed-4e45-a6d1-5b0bab0dc709",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "feac40a4-4900-48dd-ad2a-9d2c03f6d475",
        "cursor": {
          "ref": "a7b47629-7321-48d4-b4ea-f1e5d6ca7e0c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b268a34c-5616-401b-967c-8bc1b689c556"
        },
        "item": {
          "id": "feac40a4-4900-48dd-ad2a-9d2c03f6d475",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "78cff03c-2a61-4a1e-ba7f-6234d088b01c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502773d7-0422-4749-a90f-7988f4b0a159",
        "cursor": {
          "ref": "747df9d1-dd8d-4c2f-a889-4b7767fd0692",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a0b72d15-ae3f-4433-9ff9-f1db68237549"
        },
        "item": {
          "id": "502773d7-0422-4749-a90f-7988f4b0a159",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8e9e1108-afaa-46ee-ad83-ce89e3c41262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4e324a-b40a-454c-944f-f320206bc73c",
        "cursor": {
          "ref": "814401fa-45e2-4d33-9d52-b04d87047a9e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0a2c12f6-87ea-4eed-8fad-64762fad7b22"
        },
        "item": {
          "id": "8c4e324a-b40a-454c-944f-f320206bc73c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "171b15f6-5a2e-4254-9eb1-d3f3e26a9ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cae1f45-1057-4c5b-84dd-3152ac42b625",
        "cursor": {
          "ref": "233cb327-c1bd-473e-b8c8-3aa185079398",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb749452-c056-4d29-bda2-ad5917a4b1f0"
        },
        "item": {
          "id": "7cae1f45-1057-4c5b-84dd-3152ac42b625",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "957ad2fe-f87e-4414-bf9c-e55503ee4ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b069da-d747-4b6c-9a54-a9e07e4768a2",
        "cursor": {
          "ref": "ff8610fc-2105-41b6-84ca-fdcf37b542d4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6c9cc012-67a3-4222-911e-a7b8a0fdda46"
        },
        "item": {
          "id": "b2b069da-d747-4b6c-9a54-a9e07e4768a2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "043dcbc3-f443-4fbf-9d09-218ea8cda4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d914db1d-b937-43e5-9186-12d3bd232b76",
        "cursor": {
          "ref": "60f8a0a2-eeb6-4ed0-a54e-d514956b8475",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "47f02d0a-33a2-48f1-84d5-7562ceebedbd"
        },
        "item": {
          "id": "d914db1d-b937-43e5-9186-12d3bd232b76",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0fe5ea81-38bc-4023-b1b1-e1672e919f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b493a2-d7a2-439d-880b-6376b2b92521",
        "cursor": {
          "ref": "fc9d7589-43d3-4ea8-828c-b27d4894ec53",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6461bf54-4c37-445e-a34a-193da1c15df3"
        },
        "item": {
          "id": "49b493a2-d7a2-439d-880b-6376b2b92521",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a4ca5735-1568-4422-950b-d42a77e67d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6370fdba-830a-484f-95fb-1283c0cb2b91",
        "cursor": {
          "ref": "712c6742-6a83-43ee-9e9f-84944903f7bd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b6832802-e325-4add-8b65-8b0237f3b1d4"
        },
        "item": {
          "id": "6370fdba-830a-484f-95fb-1283c0cb2b91",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5a991ea1-ecd6-4a27-9c6a-01d12ab9a092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4c8e37-af52-4dfd-9c54-9a3c4c80d05f",
        "cursor": {
          "ref": "38b8bd18-1451-4ebc-b166-cb3fcee81a76",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fc93cf27-4a2c-41c7-84b6-adb07bc83b15"
        },
        "item": {
          "id": "cd4c8e37-af52-4dfd-9c54-9a3c4c80d05f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "beadbe4c-9448-4b83-8f4a-22a446e8bc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d346e236-e485-4540-ac92-de7ff214e132",
        "cursor": {
          "ref": "b9b98f23-0efe-4348-b3c5-4308c71bace3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5b27f344-c34a-4b93-bac8-55eeccd5d24a"
        },
        "item": {
          "id": "d346e236-e485-4540-ac92-de7ff214e132",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "08b4a2e0-0b0a-424f-a0e3-01d1ec8f4432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c923ee-2bda-4862-ad1d-6099e6364d7b",
        "cursor": {
          "ref": "84bff545-7c73-402e-8ad8-5286357a8f2e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fd6ecf33-1be1-4cad-b107-290c16b171e2"
        },
        "item": {
          "id": "a9c923ee-2bda-4862-ad1d-6099e6364d7b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "19b6e64a-9961-48d9-9bf4-532add4105b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa03b33-8a89-4a2a-9ae1-72900d153cfb",
        "cursor": {
          "ref": "5d0b5fab-6a37-4f28-89fd-bf54a0206ace",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b3c964ed-96dd-41a6-9833-ea3c0fb9d38a"
        },
        "item": {
          "id": "9aa03b33-8a89-4a2a-9ae1-72900d153cfb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "01cf4354-40df-4962-9449-5c68ef7eaecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbef60e3-17e3-4331-8545-55d0647dee94",
        "cursor": {
          "ref": "65ee2cc2-a99d-4426-997c-34d7a7630d47",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "523e46a1-8573-4c28-a4aa-d868a9555f50"
        },
        "item": {
          "id": "fbef60e3-17e3-4331-8545-55d0647dee94",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a7e084c-06d8-4ade-b20a-3371e0c506be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c711824-8d79-481b-a3a8-5881d1f1c478",
        "cursor": {
          "ref": "f8749d47-a50a-44a4-8b8f-d6dfd31b32d6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c7c8341e-e210-4f8c-bd57-ba0933045ab4"
        },
        "item": {
          "id": "7c711824-8d79-481b-a3a8-5881d1f1c478",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "14cb6aa3-fab8-4600-8418-37af1de82f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d6e16-2af6-4aae-b4a2-9c6fc27cd6d7",
        "cursor": {
          "ref": "74d9598b-b50e-49c4-b894-18371029aad3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a20ab1c-0180-4162-b262-5bcb11eb7196"
        },
        "item": {
          "id": "465d6e16-2af6-4aae-b4a2-9c6fc27cd6d7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "55afa8a1-4b55-4405-904e-918897cf2f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac32b06-c480-4078-a1fb-01ed7258a356",
        "cursor": {
          "ref": "b76d8db6-ded5-4701-8dd8-03208cc3d772",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8f5422df-2b58-42b4-b209-b97317f13d8a"
        },
        "item": {
          "id": "dac32b06-c480-4078-a1fb-01ed7258a356",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "298d1b31-4288-47c0-b91b-560348761ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f647a015-473f-4e7b-8ecd-99bd47514c64",
        "cursor": {
          "ref": "e93d2b86-6353-4468-9c04-ead1ac746301",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f1d7c2c2-a07d-4759-babd-cce3313350ce"
        },
        "item": {
          "id": "f647a015-473f-4e7b-8ecd-99bd47514c64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "55c42454-9401-4046-9bae-7d9190f1c016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e84f258-27a2-48b9-a8c0-f8de08b8efa5",
        "cursor": {
          "ref": "fe0118f3-8bba-47a4-aaa4-9604dc2b8ec1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "babacb11-4313-4ed1-b357-50e0312dbbe4"
        },
        "item": {
          "id": "0e84f258-27a2-48b9-a8c0-f8de08b8efa5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d0bd4e7-b8c6-4394-aff4-00a09edd9e51",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4e501087-d6fd-465a-8a19-ce831c2c6e97",
        "cursor": {
          "ref": "da789f2d-e7df-4683-994a-71a51cb72434",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "606fcb16-1381-4bd7-ae4c-e39ea63b45d8"
        },
        "item": {
          "id": "4e501087-d6fd-465a-8a19-ce831c2c6e97",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7848406c-4c40-481d-9e44-377d45153f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90471d0-8749-4bd0-970b-2bdae5eb2e75",
        "cursor": {
          "ref": "c7d53fa2-619d-48f9-a02d-796ca764516c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dfc77bce-33cc-4bc6-b4bc-3063acfd2cd2"
        },
        "item": {
          "id": "d90471d0-8749-4bd0-970b-2bdae5eb2e75",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "72ee01fa-4f82-4c43-b898-62ca20b47ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d62e5c8-d4ea-4f74-8c1f-f92c9b61bf55",
        "cursor": {
          "ref": "a973f88b-23c8-4110-8df9-42f68285b7c7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8de8a292-16dc-4aaa-8862-6fe1f6090d29"
        },
        "item": {
          "id": "9d62e5c8-d4ea-4f74-8c1f-f92c9b61bf55",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8127a857-1269-443f-b96d-48c0c2e264b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b8b159-6c81-4965-b9ad-512b06536d23",
        "cursor": {
          "ref": "c0decfb2-6c63-4e94-847d-a587182d25e9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "20296ef4-0eb6-43ca-9232-bdaa11282274"
        },
        "item": {
          "id": "d6b8b159-6c81-4965-b9ad-512b06536d23",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "26038bfc-a488-4d82-875d-6278d944ecce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa74d47-be64-40af-baef-9d0ccb5694d8",
        "cursor": {
          "ref": "a48068c8-7558-44b4-8fc2-f1fc0f426dc7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e3c5401-afa0-4332-a504-3a60b793e6f5"
        },
        "item": {
          "id": "9aa74d47-be64-40af-baef-9d0ccb5694d8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4e2f4b5d-0861-4ed0-a85b-e832b9c34acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3422d607-3ce8-4c52-8892-599ef077f5d3",
        "cursor": {
          "ref": "69b26636-7ad3-455e-a158-e1574c292ca3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5f159392-5c4b-4565-9df3-ebc18c5d84ba"
        },
        "item": {
          "id": "3422d607-3ce8-4c52-8892-599ef077f5d3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "45b5ee26-8bf0-4a97-8d71-326f7c8ff333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fca642-480e-4007-bfc8-fdf439ca7180",
        "cursor": {
          "ref": "363852c5-45c5-4374-9153-8c07784b65d3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d3e780ce-4283-4d1f-96c6-c86dcdf378df"
        },
        "item": {
          "id": "76fca642-480e-4007-bfc8-fdf439ca7180",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1867ffdb-3ebf-4d91-b747-c58e2259c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf7580-60bf-44b5-8ff2-70f185281b9c",
        "cursor": {
          "ref": "c5b302ed-7416-4915-8c95-fc1fc67aa44d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a32f58ed-76fe-4960-a672-c94af1f9b3f5"
        },
        "item": {
          "id": "40cf7580-60bf-44b5-8ff2-70f185281b9c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4829ec5a-3071-4f83-889d-8776233fab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c529ec28-d831-4091-9501-eeb688748e24",
        "cursor": {
          "ref": "b7beaf49-bad2-478c-81c7-c598723e59e1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3e650e86-ac39-40c6-80a5-0a72b9c96784"
        },
        "item": {
          "id": "c529ec28-d831-4091-9501-eeb688748e24",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7f738e7d-feae-4cae-8a52-b2a832bf1291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e550a2-2cd4-4214-b717-101420051dbc",
        "cursor": {
          "ref": "ff72eca3-b85b-47ec-b5d6-5c5567a5353b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2bea19a8-bd12-4acd-a908-eb9fabf0c863"
        },
        "item": {
          "id": "c8e550a2-2cd4-4214-b717-101420051dbc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "28bf3e97-d16b-48d8-b12a-9a716f2dce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34670ca6-b868-4842-9abb-0baef74ff4e6",
        "cursor": {
          "ref": "f48c2862-423d-41bb-ad92-4a6e09e2b24a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "465c5982-7dc9-47e1-8db0-f8baa317714d"
        },
        "item": {
          "id": "34670ca6-b868-4842-9abb-0baef74ff4e6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4b9b8c77-7ddc-4aee-8ff4-bb88e55e7a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861631b9-2783-487c-8c8d-33b2572803b1",
        "cursor": {
          "ref": "73b6c94a-bad8-44c2-8709-cec12c556e5f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7f9d3c3a-7f71-4a7e-a073-fb34af0b0bef"
        },
        "item": {
          "id": "861631b9-2783-487c-8c8d-33b2572803b1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c25a5ece-664f-45bc-99f1-e6f47cd46193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd8c30f-a725-48b5-b2f4-e235deef902b",
        "cursor": {
          "ref": "8cd38d16-e05c-43d9-b7cf-a8e5fc653510",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f3fabb0d-a508-4c0a-ad0b-91c432b4bfc0"
        },
        "item": {
          "id": "6dd8c30f-a725-48b5-b2f4-e235deef902b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c441a060-f7c5-4b5c-b943-39dabe0d96b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafcc3ee-82b9-4630-8bc0-5a0c92fde72c",
        "cursor": {
          "ref": "2c6d172d-88d1-4c92-8157-4aef4a5ef5ce",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c5712cbd-4b93-4673-9348-baa9e5b071a2"
        },
        "item": {
          "id": "cafcc3ee-82b9-4630-8bc0-5a0c92fde72c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7b9a10fd-8482-47c4-8eb1-b82734b67c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde466c8-4cf6-4213-8505-8f1f28bc7ded",
        "cursor": {
          "ref": "d8844876-16a1-4940-aa5e-e555ed4043a3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1f04269d-f32d-48e2-a5c2-68b491a85a80"
        },
        "item": {
          "id": "fde466c8-4cf6-4213-8505-8f1f28bc7ded",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3e4ff56f-2bfb-4aef-bd5a-63b1da11e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534393d0-66af-45ef-8fd0-1dc6953d7c28",
        "cursor": {
          "ref": "8750749e-6af0-40c7-a9fc-3c144c76bf1b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "73fd473f-caab-4315-b551-8279e56e4d81"
        },
        "item": {
          "id": "534393d0-66af-45ef-8fd0-1dc6953d7c28",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dabbb0ae-bc74-435c-a6b1-7948b4dbbd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9479b1d-bc8b-4e0b-a0a2-14b1576275ce",
        "cursor": {
          "ref": "1153f4e0-ab80-455d-bd6a-3a0135763b49",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5992ccb-661b-4e07-b093-52f2bfdbd75d"
        },
        "item": {
          "id": "a9479b1d-bc8b-4e0b-a0a2-14b1576275ce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0b7a07ce-8140-4a8d-8ba6-7bc6f2ed76aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccc8811-c1c1-4cac-8966-0fc77a789653",
        "cursor": {
          "ref": "3f24af55-0bce-4a34-bd45-26836d6953ec",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "475f64eb-9bcc-4251-8fb7-a4c7bba02902"
        },
        "item": {
          "id": "eccc8811-c1c1-4cac-8966-0fc77a789653",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "775640b9-7e28-467c-8bb8-8768d6a037d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147019b8-946f-4719-beb8-764fcdc1736c",
        "cursor": {
          "ref": "15ec8442-b087-484e-9bb5-1479bc49cce9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b997f180-06ef-46cc-ae27-76fb49ff5baa"
        },
        "item": {
          "id": "147019b8-946f-4719-beb8-764fcdc1736c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "66210f91-e546-4c93-a4da-8507d573fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f7e3f0-1aa7-44b0-9857-84cb37a849d8",
        "cursor": {
          "ref": "79eeba8f-0aa9-4301-a132-dde3a80ef361",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7590b998-6e64-4886-aec1-2df1c420e2d7"
        },
        "item": {
          "id": "96f7e3f0-1aa7-44b0-9857-84cb37a849d8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5660b033-5fd7-465c-84b8-cfef6ddca8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a29ac-7042-438a-ad7f-8a243506d898",
        "cursor": {
          "ref": "d7314085-8e70-4507-95fd-7ef6ea15a236",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "85ecde19-c46d-4ef2-a4c4-3d65abdab64f"
        },
        "item": {
          "id": "6e8a29ac-7042-438a-ad7f-8a243506d898",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ddd61cd2-af00-4ed2-9a04-640d41992f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcf676c-a418-4d35-894c-da81691e1e6c",
        "cursor": {
          "ref": "26c3aebb-3b4b-473f-b693-260132ed7b14",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a4c10342-70b5-46f4-852f-940a09441dc9"
        },
        "item": {
          "id": "4fcf676c-a418-4d35-894c-da81691e1e6c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed6483ed-a48c-4fb8-91ce-a7bcdaa9ca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c4cdaa-3901-4f61-a2e0-38627261cf5d",
        "cursor": {
          "ref": "a58da0df-555b-47a5-8a85-22695fe2112b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a9680bda-7771-4a45-9d74-f4faaff0dc8a"
        },
        "item": {
          "id": "a3c4cdaa-3901-4f61-a2e0-38627261cf5d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c2b12815-fcde-420f-931a-f6ac687196c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74740ee-e715-4fd7-86ae-71261af4f1be",
        "cursor": {
          "ref": "081afafb-6161-4285-b760-085e2bdbb6bf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ed388dce-b65a-45f3-9a69-a43711a5ecea"
        },
        "item": {
          "id": "e74740ee-e715-4fd7-86ae-71261af4f1be",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2fa491e-0c30-4c43-a7b0-98f06f982d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb6ec3f-5cc2-4050-a8d0-7343e5dc8773",
        "cursor": {
          "ref": "6da85fab-b1fd-4097-811c-b107878d2f38",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9ac606c9-bf6a-4474-9ca2-4bec436a3766"
        },
        "item": {
          "id": "ccb6ec3f-5cc2-4050-a8d0-7343e5dc8773",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a88906da-dd07-4694-b73c-d7e19eaec5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5351516-c44c-4932-9008-f35d63ef6f7f",
        "cursor": {
          "ref": "56591784-6100-4cd4-9ea4-cb880ffff33b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "84f69174-d701-45e7-af3b-47314211c271"
        },
        "item": {
          "id": "d5351516-c44c-4932-9008-f35d63ef6f7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "53999ee4-4a3a-4959-9942-df5e4a9e8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410cc367-b4d3-406e-b342-6d9d540a0f53",
        "cursor": {
          "ref": "be8f1e60-b256-4ccd-aa54-8e337a5ddf00",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "22e9ea5b-df6e-43ca-9dc4-6ff36299be55"
        },
        "item": {
          "id": "410cc367-b4d3-406e-b342-6d9d540a0f53",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d7290a26-d77e-47ef-8ec1-bc252d617121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1901b241-102f-4bfd-97e9-db19640c132a",
        "cursor": {
          "ref": "3cc6560f-c4b3-4d72-847f-aa2d3eeb9da3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "406e9581-5940-4277-8d82-72010ba15cea"
        },
        "item": {
          "id": "1901b241-102f-4bfd-97e9-db19640c132a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "10157285-a2d2-4fe6-bd3b-77cacc35b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee4e024-435a-4a15-812f-9165e52ba134",
        "cursor": {
          "ref": "1dac4405-d1d3-4097-a9c0-b6f31ad431c9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a233da07-6bea-4d02-a625-a27987213f4c"
        },
        "item": {
          "id": "aee4e024-435a-4a15-812f-9165e52ba134",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7d40587d-85de-4093-bf8e-44a62f5f02c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7feb82c-dd18-4e63-9ba5-d05cd88ecf61",
        "cursor": {
          "ref": "33bc2256-e431-49ba-af29-82b76ec68e78",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a8cf864e-d1ac-4e98-99eb-6c17e816c289"
        },
        "item": {
          "id": "b7feb82c-dd18-4e63-9ba5-d05cd88ecf61",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9ba6ede3-702f-4d6e-b93b-95adceeb41a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7fe1b5-715e-4c41-8d4c-f7a839071035",
        "cursor": {
          "ref": "ed41f248-a204-4497-bdc2-6b4bfec88bb9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f41c55ee-3cbd-4548-ac1d-2a6f7dea5ca2"
        },
        "item": {
          "id": "0c7fe1b5-715e-4c41-8d4c-f7a839071035",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fa962dbb-36db-4708-bf27-179dc83e00c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ae3565-8dd3-4e3e-abbe-a5dd3586afc8",
        "cursor": {
          "ref": "32f85046-2aef-493b-8eba-2312052d4a0b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "058a307b-df2f-46be-8ccc-e8f3fe162623"
        },
        "item": {
          "id": "f1ae3565-8dd3-4e3e-abbe-a5dd3586afc8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ff92ef98-20ad-4d88-9da4-7a25a6880c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643b6f9-8c42-4b97-bc54-518e3924ac03",
        "cursor": {
          "ref": "2e7f0b69-8e08-4373-9f33-35c4b65ebdd1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6f375b8-77b8-49ef-a5a7-1581cfbafed5"
        },
        "item": {
          "id": "0643b6f9-8c42-4b97-bc54-518e3924ac03",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "032ba4f5-ed99-417e-a0ca-50792b7968ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb4834a-6a40-4bd6-ae0c-4f1ad4f1880b",
        "cursor": {
          "ref": "c1db7ec0-6701-459b-9458-72a45ee4d3ad",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1c77c58f-c7e3-41ae-8e9e-f1de180cc2b0"
        },
        "item": {
          "id": "efb4834a-6a40-4bd6-ae0c-4f1ad4f1880b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f5ee7111-e478-4f1b-bde7-6dce4c750609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e6d2dc-7f04-40d2-9593-7659622d2bbc",
        "cursor": {
          "ref": "b1d9770d-2a4d-4157-9b4e-2d651958dae0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "455492ea-cfad-46af-a59c-bc0dcffe71ae"
        },
        "item": {
          "id": "70e6d2dc-7f04-40d2-9593-7659622d2bbc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "df145947-8935-48ce-80d3-04347658bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b8cdf-81f2-47de-9831-8ed7d3a2ead3",
        "cursor": {
          "ref": "22f7345c-5b63-4f9b-ab17-053669f5b0e2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bfa4757-a491-41c1-9b29-346ca126148a"
        },
        "item": {
          "id": "7e7b8cdf-81f2-47de-9831-8ed7d3a2ead3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cf2262f9-a54d-48be-bd8a-a73138cc7e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2957e1a9-1c18-4ba6-a647-de9c43a18e37",
        "cursor": {
          "ref": "c93fb63e-fa12-4d95-bbd1-bc7418dc07bb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f7c5c53e-395c-4ec4-b35c-65221ad4e25a"
        },
        "item": {
          "id": "2957e1a9-1c18-4ba6-a647-de9c43a18e37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff052cb8-4bdb-4a35-9401-643087b5f855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53197ce4-8832-4219-96b1-19728355479f",
        "cursor": {
          "ref": "cc963eb2-20d4-4ee7-a377-010be960351d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b72b7a1-a20d-48b6-a00d-5e76b3586fdf"
        },
        "item": {
          "id": "53197ce4-8832-4219-96b1-19728355479f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "40bb7b05-f043-4c78-9226-64a41a3fd512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b64418a-6eb9-4e37-b4f0-ce85971c20a3",
        "cursor": {
          "ref": "dd14f89b-a63a-4e37-bdc2-4ddfaac50081",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "63eaf34f-9f60-42dc-b779-bd2a6d0a2c75"
        },
        "item": {
          "id": "7b64418a-6eb9-4e37-b4f0-ce85971c20a3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cddf045f-120e-483d-999a-fd2554b6c3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8742ea2-6bb9-49a7-9131-6253c8b4ebc4",
        "cursor": {
          "ref": "140653c2-1ba8-4dcf-b195-bd209cb80a6f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2f3fb9a2-25e0-457b-b9b5-84564a78586d"
        },
        "item": {
          "id": "a8742ea2-6bb9-49a7-9131-6253c8b4ebc4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "046ee88f-6e7a-49ee-8d90-35bee79a3a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1e3bcc-5471-44a2-94d6-f8fa1adf494f",
        "cursor": {
          "ref": "61b5616f-7ad5-461c-8c99-444ffca710d4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "00fa5a2e-53c0-42fa-9e1c-5965ad8d781e"
        },
        "item": {
          "id": "7a1e3bcc-5471-44a2-94d6-f8fa1adf494f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5a8580a8-3761-4f37-9800-f4f79fbb8b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693be85f-7273-4c2c-bafa-f795602673a5",
        "cursor": {
          "ref": "c8441e60-a456-4019-bd15-08b1520fad93",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3158efc-c648-4839-8afc-25640b95c62a"
        },
        "item": {
          "id": "693be85f-7273-4c2c-bafa-f795602673a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d69c14ff-cba6-4c5e-ab4a-b9a579d0ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ffd29f-ce38-4b27-9ebd-69ef0055fef7",
        "cursor": {
          "ref": "4e9f51a1-9ac1-4b8a-8340-f69e645f858c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "002da759-0a71-4e84-8026-7e198398d01f"
        },
        "item": {
          "id": "f9ffd29f-ce38-4b27-9ebd-69ef0055fef7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5e9960f-4c8e-4171-ad74-749acce8282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641daa9c-ac50-4e00-87e0-921588577a91",
        "cursor": {
          "ref": "602aeaa0-485d-4eac-91b0-1972ca03247c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dfa609cf-8258-429b-be7e-238991960bbc"
        },
        "item": {
          "id": "641daa9c-ac50-4e00-87e0-921588577a91",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b9f8c412-6dc9-47a2-9f1f-c53433459516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820086e0-c1d2-4c73-8e24-155252e8b55d",
        "cursor": {
          "ref": "de44acfc-e561-45cc-9f8a-fec1ec4df6fe",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4d7f6a03-1c7d-4424-99e5-a813ca99ba35"
        },
        "item": {
          "id": "820086e0-c1d2-4c73-8e24-155252e8b55d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a2bc74e6-a43e-402c-8a67-93f0ae4ccf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396abb76-c61b-4166-a9d8-540011f4c57d",
        "cursor": {
          "ref": "f5a8e713-c03e-46b0-8b97-ae0fca5e8414",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "38ef7523-1683-4d17-ac54-518de44d02e5"
        },
        "item": {
          "id": "396abb76-c61b-4166-a9d8-540011f4c57d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1738447f-c791-4706-b067-8eeff64f50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1809fad7-adf2-472b-87ec-cfd379e95a3c",
        "cursor": {
          "ref": "dee0fa5a-8651-44f2-baa2-022372c57a9c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3dcadbf0-e49b-4bc3-946e-c038c3b0fe52"
        },
        "item": {
          "id": "1809fad7-adf2-472b-87ec-cfd379e95a3c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b00ca29c-4a11-4cf3-99eb-73b2a856a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aefa305-c890-4576-bfce-fb805d3a720b",
        "cursor": {
          "ref": "8a1d1d2f-2c18-45e9-a6cf-88ae3fab3f55",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "45c2b834-c6cf-4b46-b4df-4fcf4c8b764a"
        },
        "item": {
          "id": "2aefa305-c890-4576-bfce-fb805d3a720b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14a41a80-d2cb-4e79-b22b-9964856bab6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489516ac-efc5-45d3-8637-63700e30f0b4",
        "cursor": {
          "ref": "11f59f90-7e1b-44f2-9c90-ecff2ef2ed51",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6948d334-e411-4387-9faa-61a057f9e2b1"
        },
        "item": {
          "id": "489516ac-efc5-45d3-8637-63700e30f0b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b06ed30f-7eab-4e34-91c1-de24593eb974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b60693-5de1-4b1f-b878-8d620cbc3b7d",
        "cursor": {
          "ref": "4edd1f30-ce00-4daf-ac75-a5cb3c4224a4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "16be48cf-ea72-4130-8b34-e274699720e6"
        },
        "item": {
          "id": "26b60693-5de1-4b1f-b878-8d620cbc3b7d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ce2a76a4-45b3-4b5a-8153-885240f15d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7890f78-58f9-4a1e-83d9-05f3fc24f86f",
        "cursor": {
          "ref": "b5b0c2ce-1024-41e8-b7a5-08276aaebb63",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "abbfc4e2-32e0-415f-8337-0b75fcdebaff"
        },
        "item": {
          "id": "f7890f78-58f9-4a1e-83d9-05f3fc24f86f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff111eb9-531a-4368-8fba-67450dae353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f741ef1a-06ce-4823-ad61-7aa98d95cc31",
        "cursor": {
          "ref": "22237997-0e09-4cd4-903e-12f512f752b0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b78abfe5-2d23-44ad-befc-3c2e627bf4f8"
        },
        "item": {
          "id": "f741ef1a-06ce-4823-ad61-7aa98d95cc31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8faa1265-a39f-4cad-bd73-647b034aeeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bdf2dd-4ce4-4f55-be6d-edeaa54b39b6",
        "cursor": {
          "ref": "dd6f9310-8f30-4ce4-b912-add3b85e06e9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c7640c89-1854-481c-b68c-1d330282a5d4"
        },
        "item": {
          "id": "22bdf2dd-4ce4-4f55-be6d-edeaa54b39b6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "82bbc243-ab9a-4541-a839-862ba078ee4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e308262d-5141-4865-8a32-254fce2030ad",
        "cursor": {
          "ref": "fe6fa874-828c-4675-8648-7ba14d2679a0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5e68ed39-1e7f-4daf-9042-891d5189cc8d"
        },
        "item": {
          "id": "e308262d-5141-4865-8a32-254fce2030ad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a9f89d96-fdd1-453a-a52d-b3c4ebf4a529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390b0f0b-0df6-42dc-a757-7062b3edac02",
        "cursor": {
          "ref": "595eaa25-54a6-4332-839f-aa02cbeadd4b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4c51b9f5-8ccd-40ab-b394-7542c0e32570"
        },
        "item": {
          "id": "390b0f0b-0df6-42dc-a757-7062b3edac02",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5aee7fa-4d6b-41db-a681-af81e6033dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e08ed4-45c3-4e40-acd8-9e89c88666f6",
        "cursor": {
          "ref": "4e637050-9355-4280-ab6a-7a285428d670",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bdb1ac12-e05d-4999-b2eb-b4abddd15eba"
        },
        "item": {
          "id": "42e08ed4-45c3-4e40-acd8-9e89c88666f6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00760b79-25fd-4ee0-bbf8-a19721e21eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd0787-f8cd-4290-9fac-c36ad91eef12",
        "cursor": {
          "ref": "3a53c2b9-cfd4-4026-bafd-b3c753db6bab",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "661aec27-6ee6-4258-b33a-a604369c78f9"
        },
        "item": {
          "id": "d9cd0787-f8cd-4290-9fac-c36ad91eef12",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "15f99edf-a902-435c-8f04-af598cc82400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25523c0-8892-4626-b74e-2b8b552a4f1b",
        "cursor": {
          "ref": "43e65541-0429-4cc4-ad39-1f29f1977604",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "119800c9-af77-4048-b6f1-5d47c0042f1f"
        },
        "item": {
          "id": "b25523c0-8892-4626-b74e-2b8b552a4f1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b92e0a30-b934-465f-8dba-f6137ee348a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeb512b-265f-46f3-aec0-a51bb24fd4ce",
        "cursor": {
          "ref": "9e1e5a49-2b4a-43c4-9b93-b21c7c75f377",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fa884ad7-6791-4317-b58c-8c2b071614c5"
        },
        "item": {
          "id": "3eeb512b-265f-46f3-aec0-a51bb24fd4ce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "930e2ffe-2c14-4ba6-86b7-d668bcd10c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3168ed70-4c7c-4543-a8db-514658681c9e",
        "cursor": {
          "ref": "8b11bd87-6152-4918-8d4b-36368a59e5e5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae1dd503-ccb2-4550-9546-b94c9911b00c"
        },
        "item": {
          "id": "3168ed70-4c7c-4543-a8db-514658681c9e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "713b19c7-f795-4d68-9dac-0c718300c2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be1d4d9-1253-405d-8421-bf1b5cae6cc3",
        "cursor": {
          "ref": "4d13ae74-5be4-4601-aa2d-4b42ab648c2e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce8ea693-eeed-4353-b264-8b96d56594e8"
        },
        "item": {
          "id": "9be1d4d9-1253-405d-8421-bf1b5cae6cc3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e19aca6b-b8cd-44f7-8236-56fcbb44caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4f92b-e313-409a-b2b7-001a42edecb5",
        "cursor": {
          "ref": "706a6e07-2363-41c6-bf16-4bcd224a8c9e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "860f30ef-53b2-4787-9609-8cfdc04d7eaa"
        },
        "item": {
          "id": "c7c4f92b-e313-409a-b2b7-001a42edecb5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7d94c5b6-5de2-4ae2-823a-d76d989af6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e84842-22b4-4a20-af78-3f366b5b7edf",
        "cursor": {
          "ref": "83b476a8-be53-48b9-ac93-7c96f02087af",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ca1b9ee7-d950-460c-97dc-d27ee49bf888"
        },
        "item": {
          "id": "d2e84842-22b4-4a20-af78-3f366b5b7edf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6670475b-9d75-4f72-93fc-e5ee6b46f5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd76681-dc7c-4501-bb77-77c51977a5c2",
        "cursor": {
          "ref": "64921b53-06f0-4172-b842-924c3878ff16",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "144d9e92-a629-47df-aaa2-f7051130c000"
        },
        "item": {
          "id": "9fd76681-dc7c-4501-bb77-77c51977a5c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4ea06fa7-31ce-46cc-bbfc-4a7ed2e2ddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307d754d-82d3-449c-a3a1-f239b6fdfedd",
        "cursor": {
          "ref": "c49e1dfc-f042-4110-9946-b461ca263be3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0c932283-22a9-45bb-8759-37494300d59d"
        },
        "item": {
          "id": "307d754d-82d3-449c-a3a1-f239b6fdfedd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2bced374-36eb-4f72-8379-52c436fcdfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81c9eee-6016-4670-9b7f-438108f3fee4",
        "cursor": {
          "ref": "c06238f7-c6dd-432c-903c-c6c50f14000a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e133a2f8-b085-4aef-bfc3-bd36025d7111"
        },
        "item": {
          "id": "f81c9eee-6016-4670-9b7f-438108f3fee4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0a0cfda6-c195-4b81-b328-53f2be4f5588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee9f341-d184-44d5-b59b-3e414e5e8a86",
        "cursor": {
          "ref": "1f06fb43-ed7a-42c2-a6dc-513330eb840b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a01bef5e-a31c-4e2b-aa89-b074fb86cd95"
        },
        "item": {
          "id": "cee9f341-d184-44d5-b59b-3e414e5e8a86",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f350c5b0-32b6-410c-841f-89d25764e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bd031b-dac8-496a-b1e4-c4558b5b68d5",
        "cursor": {
          "ref": "c02f0861-121c-4e08-a013-e6cb988f6ec1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9ccca955-8a7b-423a-a500-ae726d7a8f59"
        },
        "item": {
          "id": "95bd031b-dac8-496a-b1e4-c4558b5b68d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "06821f80-fc4f-4a03-9b6b-fa79b3a65d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f05934c-3c71-480a-b3bd-3c71e77039ca",
        "cursor": {
          "ref": "d525127d-ce68-4da9-8bc5-564c759d3b04",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "40552f35-3da4-4170-9935-b4253a600f03"
        },
        "item": {
          "id": "7f05934c-3c71-480a-b3bd-3c71e77039ca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "44022360-51f6-4f61-bdd8-4d190cf5273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5933b777-9d82-460c-99cc-e4caddb5ecd6",
        "cursor": {
          "ref": "9db087a4-9357-4049-862e-e779b27085d3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d24447d9-1f1a-416e-b3b8-e20641dc9fb9"
        },
        "item": {
          "id": "5933b777-9d82-460c-99cc-e4caddb5ecd6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "699cfe58-c9ef-4904-b84a-01b3c70f72a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d21865-89e6-42e0-9f69-3087dd9cec28",
        "cursor": {
          "ref": "68e6a1cf-21f8-4ab1-8790-7e33b43db143",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1afb47ce-77a6-4de0-8021-66203c44618c"
        },
        "item": {
          "id": "72d21865-89e6-42e0-9f69-3087dd9cec28",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "60dc92be-b440-4a58-a529-8526e93acc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b073ba-01e6-4821-aa07-5e316739a2e0",
        "cursor": {
          "ref": "f0c9eafa-77fa-4eac-b091-f6b3933bca89",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6b669cb8-2eae-41e7-9caa-199f71765d32"
        },
        "item": {
          "id": "08b073ba-01e6-4821-aa07-5e316739a2e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "842422e0-217e-4757-b1d3-990bff0751d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca011d-91fe-422a-8999-8da6f4d3e1e1",
        "cursor": {
          "ref": "c64567a8-1326-4443-9ae9-9b8c1c56158d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0e5f2a64-d3e1-47d9-9595-1f80e2c69e89"
        },
        "item": {
          "id": "e5ca011d-91fe-422a-8999-8da6f4d3e1e1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "77409dda-448d-4287-a89d-2fc7597af259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d41243-3512-48a1-9087-f8480d797d76",
        "cursor": {
          "ref": "5b4c7c2d-d696-4c8a-93ce-be6f91c0056e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bb758f71-4b0a-4833-aa8b-49358f558850"
        },
        "item": {
          "id": "b2d41243-3512-48a1-9087-f8480d797d76",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c3ec905-63ed-4ddd-8d0b-fbf90725a159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af3d8af-6d2d-441c-b89f-6d8f5404dfe0",
        "cursor": {
          "ref": "37d15b5e-00e6-445a-8341-0f3804ba6ed1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f4bb8ec3-e435-4554-829a-3751434cd440"
        },
        "item": {
          "id": "4af3d8af-6d2d-441c-b89f-6d8f5404dfe0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa6f2097-e635-41f4-85dc-668de7bcd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282a01f4-c3ae-4891-92c9-1ce999ef3997",
        "cursor": {
          "ref": "5fe67f4c-169d-45f2-b012-06e0300764ff",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b3f71e5e-101c-4b20-a0f3-fd70276b3cc0"
        },
        "item": {
          "id": "282a01f4-c3ae-4891-92c9-1ce999ef3997",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dc9d9ea9-c6c1-44ec-aa72-d4d973d490e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75100728-5a04-47f2-9ccf-1ccb5f5b9020",
        "cursor": {
          "ref": "9edf50f5-83eb-4cd4-b0a0-c0a5ed060c70",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b46886f0-e514-45db-92a8-f27b7a5b68ff"
        },
        "item": {
          "id": "75100728-5a04-47f2-9ccf-1ccb5f5b9020",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c9255d9a-578c-43ec-81cf-524bcbc7bd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0859b705-a1cf-48de-9cba-0d7058f5b490",
        "cursor": {
          "ref": "2b82a348-6dd4-4553-bf21-533aaffb1456",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c4bbc63-c791-4e5d-871e-4117b3884355"
        },
        "item": {
          "id": "0859b705-a1cf-48de-9cba-0d7058f5b490",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2a237be9-08af-4c55-871a-4a92c2d52de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b492f51c-649c-491a-bd33-046a90d2d06e",
        "cursor": {
          "ref": "9bad5c70-ab50-40e4-93ee-cab2450bd7b0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "93ff2466-891e-4d2a-badf-018ef126f7cd"
        },
        "item": {
          "id": "b492f51c-649c-491a-bd33-046a90d2d06e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e04ba01c-1499-4437-9b3c-b653cc56fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001a1284-cbcc-4687-ac14-43399ca0efbf",
        "cursor": {
          "ref": "438024e7-7aa1-46bf-aa9e-af5fe1f4d462",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9eb0dce1-415c-4525-8b8b-e2aac4b6a896"
        },
        "item": {
          "id": "001a1284-cbcc-4687-ac14-43399ca0efbf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e6413f02-0b07-40ad-a0e8-e20cec85b588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadf668a-977c-4d3c-a824-3551283db6c3",
        "cursor": {
          "ref": "24a79f1d-b4e6-4b3d-8ea0-f9218bcbdd31",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fd616dd3-4700-4b7f-a011-3e4082a409c2"
        },
        "item": {
          "id": "fadf668a-977c-4d3c-a824-3551283db6c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ffeffcb5-b42d-4803-a204-782f5262b308",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff028448-01c1-43ed-874e-617767f131c8",
        "cursor": {
          "ref": "f19794e6-b4b2-4e4a-a41b-ec65535dce73",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2a55c6da-a5a2-42f4-8196-5002b2f6cad7"
        },
        "item": {
          "id": "ff028448-01c1-43ed-874e-617767f131c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "18f3b459-5742-4c98-a731-a60104c0577c",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15870d8a-0ac1-495b-b93e-0853f9291430",
        "cursor": {
          "ref": "94702598-6da7-41a1-9af5-b177e0e10414",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8fff1f18-a30b-4b80-83e1-9ad59570642e"
        },
        "item": {
          "id": "15870d8a-0ac1-495b-b93e-0853f9291430",
          "name": "credentials_verify"
        },
        "response": {
          "id": "76fb6752-73d1-4b19-803c-6429e476c1eb",
          "status": "OK",
          "code": 200,
          "responseTime": 3223,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e2037a-e561-4ea9-ad62-b6728e2b91ce",
        "cursor": {
          "ref": "c7ec0d05-df72-47af-ba83-5825a5a5eb45",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b5c5888d-49db-4468-8958-79446a90beb5"
        },
        "item": {
          "id": "30e2037a-e561-4ea9-ad62-b6728e2b91ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2622fff3-152e-41e3-8708-7fbd2ffee18b",
          "status": "OK",
          "code": 200,
          "responseTime": 3828,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5affd0-87d2-4f0d-995f-c481fda9c726",
        "cursor": {
          "ref": "5279ac89-d1ad-4abb-bdbf-91176a502cbf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c809067-51e5-4c5c-93ee-d61bdd05d578"
        },
        "item": {
          "id": "3f5affd0-87d2-4f0d-995f-c481fda9c726",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c20a4c67-c1d5-4c52-b436-02fabfc653fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5affd0-87d2-4f0d-995f-c481fda9c726",
        "cursor": {
          "ref": "5279ac89-d1ad-4abb-bdbf-91176a502cbf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c809067-51e5-4c5c-93ee-d61bdd05d578"
        },
        "item": {
          "id": "3f5affd0-87d2-4f0d-995f-c481fda9c726",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c20a4c67-c1d5-4c52-b436-02fabfc653fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d3a7ab-03a1-4403-8797-3040937a377a",
        "cursor": {
          "ref": "7df6580f-dd9b-4e29-a0de-4b36b482196e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "186fbafb-8c98-4302-97f2-ce2b0be0b794"
        },
        "item": {
          "id": "31d3a7ab-03a1-4403-8797-3040937a377a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "54e6c8b3-70f0-4d98-8ce3-469120c4a0dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28615e1-19d3-449a-a5ef-7ac9cbbf1de5",
        "cursor": {
          "ref": "141ed1c7-4a49-406f-aacd-be1269444cdf",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d769bf39-2ffa-48a8-ac2e-77174c70d2b6"
        },
        "item": {
          "id": "f28615e1-19d3-449a-a5ef-7ac9cbbf1de5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84ecb3bb-cd1c-419b-b8f5-7d56da25af6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}