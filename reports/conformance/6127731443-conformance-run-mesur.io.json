{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "31be1695-5b48-4899-9e3a-69411bf48bb9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b3ca211d-a083-4d29-8eb7-38d93c630569",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5deded33-020e-46f4-9a0d-6e408a503d03",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a346667e-cbdd-4a62-84db-b10abca6cb8e"
                }
              }
            ]
          },
          {
            "id": "5733282c-f543-4973-837d-12a8b7c85b1d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fd01b82-9b64-477b-b643-f98750f65c5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fee56ea4-b495-4bf6-ab05-a7c055c9ade9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "97a91426-cdff-4854-9054-afaca3867acb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3e829f6c-06cd-4f74-ac0e-f8b99641677d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27864ce2-9dcd-48c3-b3c2-5aa946974b66",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eac1d2d3-7eb6-4b32-aed3-d90c82d5d238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb87cc0c-5a02-4643-a9ef-240d5e09c54d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea0af702-4d5e-4611-bf63-58cdc288bb91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da48d5fb-1eff-46d3-bc4a-9cba893f6410"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2f40e9f-2d67-4af5-b06e-d2e586c73a3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b9db220-3db8-454a-991f-19b621ef4628"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca49a56-7373-4e28-8f82-374e6635ba9b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86d690dc-be77-4ce3-8d72-382f8f7962f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "313b19c3-d896-437a-a66c-b53b0d5f7457",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f7c5b9a-a930-4a34-899e-fdaaf1c2c73f"
            }
          }
        ]
      },
      {
        "id": "e345d1d0-9659-452b-949f-04b4e0bc57b7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d3b71ce7-a356-45a6-b68d-be7477b6be1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a71e8660-2f92-4e17-b1b2-e17624da3d8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c1f249c-1d8e-47c8-9361-e0439b43215b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f37b14-7ed2-497a-ae89-19bc363e1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "133dcc98-47f0-44dd-a528-d0733ab860c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559dbffb-1764-43a6-8abe-78c4a30a2bd8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45069d-c6a8-4d99-b0fa-9442303c2e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b57b49e-f80a-42ce-8e22-d25bcc7ae8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0090ce73-825b-4224-ad1f-a68b1f07ca9d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b57b727-1475-470d-bb17-660d740a99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdf40f50-e75a-4a01-9105-447b68b2a064"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64709f65-c61a-4f86-bfb9-280208f95c61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3afb2ee8-ce24-4312-ace1-e4f8bb729d20",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831bc26f-7ee7-49b0-adeb-327372075d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36fedc98-e8b0-4d06-83fb-4e5c7764645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9311611-1c07-4d31-9440-f9081b347b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235d6988-9b71-4c56-9bf8-024d703e65c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d15d9d3e-9713-4543-a003-da0807e27da3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7155b525-447e-43cf-9e2f-5cd141cdf206",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "240fd950-51dc-418b-aa74-c44998a80c5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "70fc30c4-5442-4905-969b-9008fa1ead45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf0610c5-0ae0-43f0-823f-0f8fa5f2b6a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "72d04b9a-272a-451c-a101-5eebf78bb9ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8837dab-e809-4037-963e-dac052780cf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6ec31f9-eb4e-460c-a423-818aef1e12f1"
            }
          }
        ]
      },
      {
        "id": "73a8342f-c62c-481e-b500-f842e214da2e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4323a679-3a40-4c96-bb9e-236237cff589",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27d6471c-6710-45f3-bb5a-810ea83b2fb9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7b67906f-0867-4613-8d93-b574cf899bee",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd384e9-c839-405a-b0b2-36ae4e679cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd482142-f0be-444b-b946-a8b1f3e4d717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3abcce-8fe6-4289-a5e9-bfc4d5149c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf1e391a-e57d-4044-aeea-7d435811399c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac425f9f-e7c0-4765-9124-c50d69b6898e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd35141e-cf34-487e-8025-b670407aa963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceda065-b01d-43b8-a39e-e7b6b7fad603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71cb60a-cc77-4193-bb9d-ef1971bdd365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdfcbe37-ab62-4243-8b01-72f156fe52f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd183f-f7ca-4a10-9ca0-7437fa754e05",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bab40c-5ed8-4873-81f2-983d4a760d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11122ef1-0b11-4079-8f74-7d6edda51132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d014f2-d426-4a72-8f1f-9e6b14f6753c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b67faa7-0e43-4e25-b723-2aa12ac3d2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10be1596-884d-4123-827f-0d98600db02d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032393f6-a16e-4d57-bb19-ba37600b4ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c07b6b-cb50-48a1-9df4-0eb75c10dc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd7e778-d2e3-4cf8-bb97-d34983de712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1461c666-c2f7-4810-a958-7917e967209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7a90b8-93c1-4139-908e-22fb3ca9652c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c824f2fe-d58f-4443-b028-5e33c3cb0b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f1fd15-632a-41ee-a13b-8fb9b610fc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1b09de-75e3-43b9-92c6-7c8b96337f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a3c4b19-9c12-4e47-b9ac-a2d7a3fbb617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d718e121-cba8-4164-836c-c23d4e835200",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e698554c-0ca6-4fec-8710-a29f9c467d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de74fc7-6aff-4756-b80a-f90787da673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be48aa70-d0a8-4775-aec0-a658a17aae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3b418d-0fde-457f-9bfa-eeb280fe7d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb4751-ded5-4b2d-b3c9-265eacef08fd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654a9d5e-9967-423b-a936-441d1865fe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e7de0b-dff9-41b8-983b-2cd6e7b5e1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae998edb-9f75-42ef-9c04-2631551d2665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18352cfd-9665-4aab-887d-8814ea1736de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b000c30-1443-46b8-8d03-9bcab1fef001",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285ab1f2-7d0f-4896-ba2c-c005e8407c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2b172f-761a-4985-a13b-629c2f832c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d9455d-4d96-46fc-b235-4a2be3aed742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b00bf0-75db-43c2-8674-6889767a7309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdaa93d-119a-45c9-a869-bc7f7aec8824",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fec629-cb6a-4ebc-b9f8-bee6979cbf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e351a42-2eaa-488f-947e-92148fb7e5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9328488-f4b4-476e-a1a6-bf733c8ab642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4972db72-70ae-4994-ad88-e1843496c59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dcd372-1e03-4b3b-aa8a-dfb6f831342a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333616ce-b72e-4e81-81d0-f2425a3ca560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8061e37c-e5e5-44e1-873f-f64bbe3ed4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9cca3d-3586-4bb1-9661-fce80e3bffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a67c2f58-7e79-4306-af07-1e6c420fc9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1aa358-6c2f-4adc-a1e8-35f3091f1da5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c866b1-22bf-4302-bd21-44912732f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8415785-9890-48ed-8373-a4772def417e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cf421c-3231-41f9-9857-07c3cd13891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "911cb80f-a611-4809-9cb8-4ae74eec1736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4b7284-04d5-44ea-91fd-fd50d1cb7a65",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171c9f2-0b63-4301-9750-11cc56e00bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ef73f-90c0-4153-8128-efc41a2fa72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38278f99-c1ef-41b4-a010-78774d1301c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b32c7b02-3711-4fdf-8f37-860275d474ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b67cf4-29fb-412f-b861-094be5439b85",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f30167-5e60-4aa9-b084-20dbf2a69517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b7661-4fe1-4f4f-b0a8-a66f3d333214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5df27c-4b29-452c-846e-04020560138b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3fe0d3a-4b5c-4873-a62d-3ed677e211a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3adcdbf-2866-422d-86c7-90d37ef67633",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549806b0-4cf1-4b3f-a7d0-65f7146daa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a814e8f7-0959-41a3-b9c9-8e1d1fcbd8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f2566-dd6c-4cda-b796-c49348d34a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3968cbde-3e46-4fdf-84cc-ef9825121b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9055d46b-8f2f-45d8-95ce-bffb6b93a38c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1d4d35-cde4-4f9c-88cd-822022dfb046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dd6a04-184f-4e00-a180-0e59aa3e9442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88790020-f999-49e5-9995-65f84312a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c5b8f3e-09aa-47c9-b93f-d8a3a581ef18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191659a3-64bb-4b7f-a7ef-c7949234c84c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d17c3cf-10d5-4450-871a-37839db8f309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0c5764-d93c-4dfd-b5fc-72485a8c3781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eba0d6-f1b4-4d16-a579-487559ae66ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c7b2f74-03e9-4728-8cbe-8a9dbf7dea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed330a1-22ef-4059-b62a-9bcfa1591183",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88849301-292f-490b-bcf4-709d491d348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f26da-66b5-4801-83e2-84962e975256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a90d86-0dbf-4085-a0e2-17b825f6630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345f2e0b-52f6-4392-8978-dc5324faae2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4874e3-de88-442d-a12b-e84075f504b2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c61b998-37c3-480a-8d6f-5bc27df4bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9485b1c-4592-4e69-ad30-22819fc2119e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aace4b1-727c-4c00-9332-ea51435cb010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ece3fe-9e96-4f4b-b2b5-67b74a78041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a5958f-97f9-4070-8935-31ea1d8d7a6b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae298d1-b544-4bd5-995c-6d5e92900b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62db27c7-106a-418b-8d73-ca91d4740069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb93931-7fe3-4b46-bfc2-af81bd55c388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c209607-5226-4835-9557-8ce32770e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783183ba-1eac-4ce1-a43c-0bffe6f1e2fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8493549-71a0-4f5b-adc1-b701ab18e60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e747bda7-1d2e-43ae-9299-90d5cd15717c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ed53db-fe94-46b2-b037-3e48422f5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4896d3-79c3-4895-9fee-927bdba03cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa7c7bf-0f9c-4627-a7c3-6347e612709f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27739c-0563-4e4a-b65b-fb8a6c0e66b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607889c3-7a60-4499-83f8-1c1cefbc91d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34022f8a-b158-4d55-a2e5-fd34d4a1911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7262f13d-8f85-4c46-89ec-cb2982d8fa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eb51a7-8542-4608-afb6-a3f8778e74c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8687f6e-b9df-476d-849b-b22b5001d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8719afa0-821d-4148-bfd5-66b17b975219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bc5d9-ff3b-41c5-954e-71c3148972f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61fb9340-f3cf-4707-a314-c8d1de675147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8091e54-de49-4f54-91fe-056fd81f00e1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f595dba-b8d0-4af6-9414-405f5f048565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b8017e-01dc-46b2-8bd3-8ac3c0924bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7895e124-cce3-4040-9735-3cac4a67b566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92975db2-5e01-4cc2-b260-e5c63c5aa6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccc547b-8b88-448c-a2e2-0dce8cc45995",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8594ac39-55c9-4047-8838-12a56108de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d3c47d-c261-4860-a60e-4d3162e4fc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1620323c-49ad-4d9d-9050-233c1bb0260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d94a92-8cd5-49f0-b23d-68cc2003ca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30a24ed-d4b4-4bd8-a754-df0a3ddc9af7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8edbe0-53a7-4583-a8b6-9dcab85cb623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63799b8-440e-4386-a6e8-f35c01214b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c986f7-797c-426f-87d7-d72b4f819f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6840aac-3cc7-42f8-ba22-47a0a948b04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b789e6c-a7fe-4f71-8f63-e9e93b5fd6ef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c6005-d673-4741-8c71-af82efccdd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe222245-23d1-4653-8af9-42853bcf76a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eccd3cf-cf1f-47b5-8674-9bab27d35a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad8c865-5096-4f23-bb38-88a0d8b4f9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ba7423-92f5-47ef-9de1-0c7396888e02",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2aa08-3678-432f-a36f-9558294848c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb42600-71e1-4e2b-b3e8-fc6b723f8904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad62769-12d8-4ce7-b779-7ddd4d3c8417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64d263a-3a37-4d8e-93a3-0d1205ac65e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b4fece-a0a0-4a83-b5bd-fcd6e9d1bb18",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e1f04-8100-4c9c-97a1-52f788ff9e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e44fbe-e4ce-49de-8bf4-eb6935c5e419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05260dfd-946a-4f14-bd6c-da042258178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0312f408-08a4-4d2a-b2c4-9d4fdc9c91bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e14d0a4-36cd-4eb3-bd4a-a8f6b57c7aa1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bd71c2-9362-434e-ac54-0eb7aad493aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626dcd4d-a666-439a-a922-890a82cb44fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f70b5-c3a3-454c-80f9-9451cdf3da0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59931a05-bb24-4cab-9685-cf27a362f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3d39e4-880e-4b30-8866-714152e107c7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67a4712-6351-41ad-be10-f53d2e97bc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9431b858-22c0-482f-ba15-b44f9f898f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc9f704-4c59-4408-b575-ff79d23d2ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa84c079-7aba-46ba-854f-4f07298b561f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d30bc9-3d46-4c69-82be-047029756b31",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6be64f-7d66-4ef7-9f39-af927b2bc2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b962a3dc-de67-4e8a-8bd3-adc9e2625a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998d6fa-d9a8-40ed-b045-269b8c21db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a276f9-ae81-4550-94e2-9420e6b5e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ffbd6d-49fb-4e5e-b963-542a421ec648",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e4b733-8f01-4da7-a0f4-8380acca2147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5749754c-14d4-4ba0-a4e5-a284b3a0aa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c02f9ed-ecba-4ae6-9f9a-4403145b97cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f5df2f-3c6a-4187-95ee-97e64b179e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94f3dd5-15d2-4607-8150-ce55e8ef0cd1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091cc38d-bae5-4b91-9457-da9c19bf59c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bcda7a-cdcc-4cfd-84ed-f996ec6d675a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c20d0-a1bf-43a4-aeab-8e1185ed98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3eac6b6-bcc2-4173-aa4c-b72b3c15362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a0a077-1504-40b3-a7aa-fab299e0939b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e464960d-3a0d-4ae1-8fd6-1540f19e4c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ad706b-13b5-4943-877a-2c30abd0cecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c89b3a-ae36-4647-9e43-d3a9f640114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa2d20d-cfbb-41f9-95a8-1895ca0ac8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c467ae-57b5-4cf2-ab8a-bb5b29627daa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817d04f4-12d7-4df3-80a6-060f129c7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6730fa-5c83-4d93-9254-67fef3b08694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af70233-5e9c-4ff1-a8b1-04cc531f739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2d69dbb7-3843-4032-a8b3-8b26fd853ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbdca94-c806-4656-9525-943465de8016",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f605c3-2df4-4f89-bcf2-29516bd025f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3de53dc-a954-4222-ab10-9d1ee69275c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce1a6a-5974-4a1d-90fb-6e3dcdf7669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b63e4b-6c2f-40d8-be21-87383bedb205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba20f48-1060-4f8c-92f2-aa8f3f3d0b52",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3390b0-bc84-4bcf-9513-ae987f604947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcb47ce-60e1-4f6c-9025-a8d5b6e85c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20e50ec-ced5-4429-9f79-737b0bf2be03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d163eb9e-e7fa-497c-b355-4d7fcef76ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac077b4-5b1c-44bf-a427-8ccc920d3f35",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a51ea1-09d4-463b-9937-64fb3058c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6531ca-4a47-448d-97e1-d5f9fc10cb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c70344-c0f2-4012-80e7-b48adf8f46d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05311482-5d8a-48cf-9561-6022d935619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0703a8-dc4d-46d4-873c-dad4f8fc0d47",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3fcdb4-bdcd-40e5-a886-8414a15748dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9ee0a-703d-425c-a2a4-4edb93555ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ee3683-ebb4-434e-8116-2dcdde7d9730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9c7f35-d0d4-4896-99a4-25316f5ef760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc09903-a306-4785-a68f-288bd860cd28",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5509bc48-3a06-410d-9785-48bbe321e589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b36fe-d5c1-4a2c-b8a7-46d0e8d2e810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3253f649-2156-45a9-a5cc-03916f87e156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c89079b-2f67-47cd-b07b-6b5d373155a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5785372b-2b8e-4bc8-ad47-0ef7e8d40182",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a7c8e-8cf6-4881-9604-37324ecf0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9132d1fb-e0bb-43b1-80ef-35c01e71978b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28a820b-1eef-4d5d-81f7-cf1a02335f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bc87f3-9d2c-4885-b0d8-397809c64dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed03cf1-9543-499e-a87f-a97405941f0c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570e73ff-8a88-464c-9926-12b652ae71f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c8cd91-be82-4230-9601-580222a263cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e485adc1-e9cc-4150-9720-56e9b784658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac1901f-4162-4fc7-8b47-5e6a70836829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5990ffc5-ebf5-46be-9e78-6ad879fe525a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b021bb-31aa-4c4c-8721-c318a4ddb7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312703f8-6b57-4817-aaa7-743b50bffb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ee3e01-7420-403d-a1da-fb91e2a01987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce93255-ea8f-49fa-bbe8-876a65088185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9ba281-d078-431a-b1f0-7511a73dd1f0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e9679c-7e82-4700-b0f6-f4081d76dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013a1221-7e2e-4994-9d80-d9b49b1e3d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f9a35-9d77-471d-851d-576cc7ac78ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0503fd9c-5e32-4f9e-9159-7163c88ef41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9c1541-6a20-440b-8218-98d9fa88ba69",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56764333-9da3-443f-9c79-ff3262ba9c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e9b380-c448-4db2-9c5c-437dc2f5ca5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6cd129-8be8-4424-b32e-7f72d5b8d036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce25a0f-1667-4501-887d-bbc1da8e8f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee9a5d-881b-4299-8a6b-b3894bb7099f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fd7b6-0396-49b8-a388-9b1ce3f0efbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1474a14c-fd70-4497-b07a-7cd994c86bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed832551-9a95-4185-82b6-f57e54598504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "857c4116-5f05-4859-8038-e4a3897431f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e302c30e-a4bf-47e0-a869-a53862e644e9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44063242-b0f1-4a6e-bf2a-803915cc1268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de509fc-8d81-4e01-8aff-94a8e2e36dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f266f226-0778-4c56-966e-2bc9b29d2081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6872b53f-ca8c-4725-91bc-5f4253a9ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bea5eb-beb8-45a3-b5c0-5a4b73ab591f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92255d27-645c-48dd-a17b-a991131f3c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab28c867-ae80-40a3-b5e9-9f1b011f7dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0ccde-45ce-45a6-bf09-21b473a20b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c342a9f-4dc2-49bc-857c-988187ad4fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a7643-022e-4e72-bad7-d19a818a4aa9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d768d4-0c37-4b90-9de3-287e25b491e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4d8fe9-4f95-43f9-a6e9-02826e623ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146e8199-fa15-496b-a3de-2729b405bf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e446a43-75dd-406e-9523-ce16d97bb631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd84bf70-3007-4f9e-8e3b-7b9fbe9acac4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7aa7ba-2c9e-48d6-b198-794c849f09fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cee2fe8-9474-459c-bd84-e9390e89584e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193c9115-28a7-493f-9bc2-28e833ba6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eedb00b9-f728-405c-bb16-9c3fee166ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa329b54-2bc7-4700-9fe3-db9e8ac2ca41",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938b236-daf8-465a-add7-d609c3b74699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1606928e-8dbe-4324-a58a-73ad9900e824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986823ea-ad6b-4326-abde-b1092a6dd1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7c2487-5790-43c2-bab4-f0cd4078fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81495785-bc5c-499b-8c18-a3f41e25b4b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656b8e3c-9ba2-4e26-b92b-5d12647f9ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4ebdf6-11fb-4232-889c-965fc28af13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17047299-efb7-47cf-9875-eed245227145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58c169f-c7fb-4133-8017-781c901b047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c3dd8-83e4-4fed-b706-cb7e0365870a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11e8ae2-8225-42af-a6a1-86e0596c011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f59264c-2767-4221-9d73-6a5f6ccc7ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf730e69-7b38-4de5-8da2-c668c2481c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cea302a-9d9b-4496-968c-564dda5666b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3d59d8-76a0-49fa-ace9-01d06b87d380",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c1b77-4b86-40f3-ac3c-4c5dd3db930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70505bcf-165b-42d6-87ee-a99482d80142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad097fa-a63d-4b22-8fb1-d3fb181d00b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed0ab1-aa4a-494a-8881-68fa81a7d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42561e7f-784e-4183-b964-06bd791112c5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a715c9a4-f783-4cf0-80cf-d8e647131fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c555ea-eba1-481c-85bc-74ccd87e4171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05014e48-2800-4d12-909b-2b7b0044e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54091cd-3dcc-4d6c-8853-30a9cd52acda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eefefd-70a3-4b6f-b089-ed221b63d93a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706ffc99-05b7-4e80-a228-fccc3a0cedde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6cba44-0f80-4d80-b4b4-24710495d62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d636912b-f456-482f-a37f-19cb68e86d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "917ad20c-95bc-4c2b-bca6-f1c630b9769a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e74a9b-4e91-4b0d-b0bf-435b1e2d9425",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0819e04f-d614-4e60-94b4-040bbd0c807c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe620b54-59e8-4104-a7fb-b013823ded35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33e7b38-bca2-4a03-9dcb-3687f0f36255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d697bb8f-ded2-4bc4-9fe5-df4ccdebfdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35281f0d-6525-490e-833d-4ebfc06da50f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e0e3ec-3cf0-4557-9f35-3f42ef2cba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98885d71-a46c-489b-a815-d427b1deb88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2534c6bc-2ddd-4347-b9ba-6a4ed1fd6a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30503ef7-5f14-470a-94b3-632f048c8fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44201811-fa38-4d34-88bc-876bb33058ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9e4174-1fba-4e1f-b3af-3d6805e04808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54286200-4ea1-4363-a144-1b2ea64d880a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ad5161-f080-423f-a8d0-f07c51af05bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b35b24d5-f778-43ae-b449-96b796d00430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9d4c8-84c4-4574-b129-adc6507081db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012ac0dd-4286-4082-baef-df2c89880f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcae18f-3441-46e1-8710-400e09e760a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f687ac-dc51-40f2-a2fc-4ab52bb178b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94e641-a5ee-4c28-9fee-681434bed148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f6c1ac-c317-4494-9be4-cbec6c6fd0ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56346dd0-ca25-4fb8-a9f7-4da9a235768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677005ac-3e02-47d3-b9eb-58cf4586f16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f8fa93-bfe6-4351-a832-25851650466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c1aece-a979-4913-af83-ae05180b2046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df3c08-db25-470c-9511-8dee5751db7d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df5d245-e3e5-4e0a-b745-85b2cf913ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89dd9df-81fe-4012-847d-6280b8623e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8289c13-ecdf-46fa-ab9f-6cf1f502c857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a71bba9-0380-40e6-9233-c25cf0a52f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c403a3-0a30-45d9-b966-5e5f72f72c8d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e73b439-e0b1-4184-9345-afa606205d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84662cf2-71dc-44bf-87ed-823dce049680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c4c87-f9c6-4b95-a53b-a18e152396cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3b44d1-e77a-4b03-b1bb-4edaad2372b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda4f96b-173d-4916-94a2-1ce8cb3a78d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec0f02e-0404-4dd1-9d32-f643948174b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c3eda7-44ba-4a4f-9874-ae2ad4400a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b496f39-2f73-438a-b3c1-2f9695c1027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86fe7a0c-b6c6-4874-8f03-3eb5e81181fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9e79db-151d-4876-b807-91bfb70ba432",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc2340-5caf-4e27-892a-354bd38cf177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd1eb53-2a51-4e0a-aca4-5d2084fb6be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3015d7-add0-41d3-8897-5718232f7abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e17b20-d109-47d2-b34d-2dffa148585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded3f2c6-3639-4ae9-a3e0-27fe2cd4b8a0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a360c80-0130-4d0a-aa3b-b9a8fe5ad8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d138f0b4-93f4-4ec5-a742-19b59641c894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e272c90-b8ec-4440-a7da-44fc0cbc6b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "264ca62d-bc96-4793-891b-51537f9903e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0135e73b-5fa7-45ee-875c-b600df7ede2e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48ffa7b-5ddb-40b3-82cb-8d2dc34dbc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d76897-2f6a-481e-9898-e77cedb3b331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf19818-ef1e-4cff-9dda-dcb67270a1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d91e5a13-b7fd-48a0-85bb-8c1e1c7860d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fbf2d8-c585-4541-8392-7afde87147bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e670a-87ee-4b4b-8d96-efb0cfec8932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17f8516-988b-4971-beaf-31fb7df5a591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ea27d5-8f94-4b17-9c4d-8f45d3bc90b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e057cf05-2efa-4184-aa4a-f2893e89da8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96fb89a-c037-4d88-b04f-95f758ebec2a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c455a5b-1cc1-4ba8-ac91-2142f8626c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f783fdc-887a-4ea4-8ba7-e1b725dcefc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c8d2d2-04c4-4056-b2fd-029fbdd1d328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9ad65e-aa97-4b03-91f1-2752c5378ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abde67c-9b26-4aa7-ba49-46e33015b688",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670c0e45-e872-420a-a9dc-c3ed31996b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f71326-2c96-4e23-ae85-91136465928b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be430ac1-cabc-494b-8a2e-fb416d39e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5971aa-7299-4eb1-a2ab-37cbd22dd9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad68d4cc-8114-46bb-983c-2470b97b3857",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d256ea88-0283-4bb7-b29f-b4767a744063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e708a03-15a9-4195-a376-11d62dcadb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0defe2-8e3c-43c5-b834-f9e735b6f98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fd5e83-233f-4e3c-9ed7-4f04c56b0568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a7e867-1953-4943-8f17-9996cae35565",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6469f9c2-5fcb-47a6-b9a9-68ccf7a846d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1783b8f2-58d0-4fb1-b96f-0b248c9037d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02aab6f-f588-4ea3-aafa-c438bd4c59db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "043f585e-a382-405d-9c32-707c4d13619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e898497-fd18-4f36-bfec-6c8cbe59966f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f8e5dd-277b-48d2-a949-6674e252be53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7781fd-f418-4322-8371-485fcb6007ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7893842c-05c4-43e2-a060-738ed0d2145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a221ff77-0a14-4e9e-a3fb-f73d37375882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f3c1d1-d4ac-4597-b4ba-20fca4b85548",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cc1a4a-bc97-4cd5-bbcf-7864b26b187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b9afc7-6365-4d80-baab-f276a8930f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43044714-be5e-4f8d-8f31-25a441476e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0ada37-17fd-42f2-96be-d2cbb1f7cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6006fda5-3cb0-4482-bba6-1279e844679b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b607ec32-8310-4cfc-a8d6-bf44a6fba92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb66c4b-f472-4ea0-bd4f-b87e58eb1fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ca780-ea1a-4184-88a5-ebada531e70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc7aeb4-84d6-4841-83e2-404d46bf46f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0081217-183c-4603-a84e-d2915c6ba800",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a81be51-740b-40ea-a384-cc467a12fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d8645b-d0f5-49aa-9b29-efa770af49af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e56410-c9d1-4ecc-854b-5f623876d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7417e00a-7e13-4393-8dd1-8889ee726231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259430f-33d8-4d39-826f-1c5b641e4e51",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5960e75-744f-4ef2-b153-35368fb60aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc41f30c-f43a-47be-8244-395a54777153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aff12a6-7009-49bd-805b-295bc67f5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "519448e7-5f82-4b0c-9984-5e1109659e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430d476e-43da-41b9-adb7-3e5a49ad12eb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dc5869-223d-4aac-b983-7a5d45f4c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6d34be-26d1-4fa1-acb0-b8e684c3d993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd322da8-6059-4092-a9c3-333cb4eacf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c21a233-ec37-468f-aba1-483e9861091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcc6089-04d9-4c58-8c49-cd8b8e54d78c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3d005a-1ebc-4d61-927d-32006a34af04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928ea3eb-7850-45ef-9d2a-5fc68c3b611f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2b49bf-a1c0-4d90-9488-5e28ae6650b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0086b05-fee5-4178-8add-fedc2a11ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719ad44f-9c8e-4eb7-8040-d424c7df9e3b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec61b1-5e82-42f0-9ed8-ae8c487845d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f416057-d0bc-48d2-a209-569268ef476e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ec87db-17f5-45e5-9f2d-b23aeb1d8b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc5921d-3a8c-4568-85df-63846b70e843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69c7023-20e0-4631-91c9-c8f0f325327a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af4825f-7e46-4034-81b7-d2b5b1b6d7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e555255c-2ca9-4600-bae7-86b7342470bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83a1412-fde0-43ca-86c3-ae7a01df3173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba670636-6cd8-4fb7-94ce-d9c2d7ab711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b8b55-95e1-4bd0-94a1-e635c1ef64e9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d8c92-3717-4788-86a0-8394efe2e305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf3ce61-e510-40f4-9daf-fa0bdaa53570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbae84ae-d1c2-4c23-b88c-23256a8f9499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bdf440-d871-4ce9-9f45-7aaebca284ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b66a0a-2115-44d7-9dba-edace263b64b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70c941-9c3a-4c9b-b129-000d9d469548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f950993e-d06e-4225-b4e4-af42a08c1745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba6306-e807-48d7-ab43-c02362a3156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c1eef1-8dfd-415f-b247-1edbc666c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe9f9d6-74a7-47a1-bf33-10882260910e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a784c-0204-4e7a-a04d-f01e0c621aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168eb261-688d-4576-bce9-3b450d852893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788e19bf-f275-45cc-9c1c-6ffc7bb50b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8f027c-9f10-4b40-bcce-9d075735eaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9e9e6b-bfd0-4f68-ae2b-8ffb3a5df112",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c8d7e2-2051-4913-a19b-e06b16e8794d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c3ad7f-bb45-4912-993b-308a8d48d11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d547aec-4ac7-4cba-b67b-612de0c41c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1be03a-942a-4e67-a786-9d6e7d2f39b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3594b0a5-2f37-47d2-b71b-032f7d23f416",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d76b3-dc95-4d91-8808-80d2eafd4379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2c0a4c-5441-4d6d-bacf-7ec3b693d6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a74763-2e6a-40ba-a541-3f1d1ea8bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc271af-5758-4b90-8754-e09a3c153ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647b657c-f5c2-430f-a54c-400fabf47fa3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616885ef-1813-4b07-a004-70ac3c04ff96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9995185-3394-43e5-863e-a85dd982c2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ee925f-a3b8-42cf-be4f-2e55d5e9f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd816ca9-77fe-4a61-8ab0-72e5c9f9ac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8c6538-5406-4e79-a0a8-ffcba22030b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffeeff1-3f13-4d8e-947c-1da20b0b2450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127f2275-d677-4093-a07c-a318c2f2f678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f2b954-498b-42fb-a7c4-860aec649c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e17265a-bd3e-41d0-bdf8-ade0f0945e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e30626-2bc3-4487-9e73-cc488dc188b9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb56b3b-4202-4e25-8494-5274f41ca5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe754b3-bb2e-44cd-998d-7983923ce35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43491f0-1fce-4e8d-996c-f6a573c3e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32280296-3405-41f3-b746-fe339d22bc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7edf10d-5746-4ebe-8c23-2df11bc401fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74db57f-8705-4055-8a93-f50bf23157ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b086de5d-4400-4822-bb64-40ce87480840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9b0c46-eef9-4d02-b739-98ce725a89d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71d047ab-a5b9-4e70-87dc-f85952344b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec4dbd6-f956-4212-bf83-b09c255b1e50",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb3c39-c864-45db-abeb-ab25bcc2d230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd421ebd-279c-4e8e-af86-514762d0faaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4eb8ec-438a-43e0-ae02-53890e227e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4009b0-78fd-49f3-96a9-6f77fc87c991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b775d7-5a0a-4f50-b40b-50c4d17f582e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b721da26-f5f9-4d2a-a8b0-1a8a9a3b47c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efe6a50f-9366-4ff0-9344-0cf0950d0dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5611c496-05b7-471f-9479-31fc5b3f5045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e89618f-2610-4497-8e2d-689904db9f52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42367269-1257-4b67-9b6e-f2c8cc0728a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf7a9c9-3fd4-45cc-b85d-b70b62f16597",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c91ea-52cf-435c-a7ba-303007d44caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b7e00a9-2d37-477b-9043-3c77bab27b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6686d074-b266-485b-8807-37b1c7dc0011",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acada788-1a3b-49d1-8237-24889f7a353c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01a783ed-abae-4422-ac9b-487a5bb10307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f80cae67-fe7d-4496-a6e3-cacf861137c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57975f0a-fa48-4c59-96e2-5c3e28c2299d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f84bee7-4eb5-44bc-8266-53f6579888f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e835ffdf-f536-44ed-bfaa-2c8c37a9ea72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7800854-89a9-4aeb-b97f-6e46d3b35b98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d2c712c-7bba-425f-bbf2-2807cc628bce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "210d6063-4ce5-484f-9541-9de13b1be1dd"
                }
              }
            ]
          },
          {
            "id": "ea83521f-641e-4aeb-a104-9fa9bc36b009",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b7b2e01-ea34-4641-af13-d10030ba754c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b53116e7-0d67-4b57-b3fb-a9c7346379c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47a84f61-1f08-4f37-82d9-cbd2c7cca338"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f62fe2b-b8be-4e93-ae51-338a5568eb47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c5fe67e-1780-434f-9c2a-4691989dd3b3"
                    }
                  }
                ]
              },
              {
                "id": "3622779b-a481-4b3c-8362-53b894659406",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9849aabe-4701-4c99-990d-46512716f644",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "331b11da-9270-4e95-b63a-8f2975215ea1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce9a096c-f71a-4641-9d08-b4e89b357500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f606ab8f-5672-4616-bcef-d3a44da8303a"
                    }
                  }
                ]
              },
              {
                "id": "f331b4d8-86f1-4ac8-b138-0f8f9cb3149a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60ec3ef7-5e9c-4dff-a311-148d2cfe86bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ae86d1a-3165-4ce8-ade0-192d88d755dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "151d4b19-3409-4c5d-8e16-7667c6db146f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b740f0cc-8ba3-4884-9aad-976a9ca52170"
                    }
                  }
                ]
              },
              {
                "id": "189330ab-ec10-4c01-8d9b-86140dfa220c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eadbfac-33a9-45cf-9733-b000b3c335c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66099bd4-31c8-461b-9955-b7c9004f5977"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bebe060-1ca2-47f8-8114-e6c252cd941b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f3b6ccc3-9b4f-4905-ba2b-916247566ef5"
                    }
                  }
                ]
              },
              {
                "id": "2bd85584-c181-4c6f-9ab3-2f38dbb977c5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "202efb4f-b939-4f23-a668-ca21167269a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8033fe3-3adb-4713-b3e3-a0cace4c7af1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc79d06d-4127-4f82-bcc1-c811ba7b56ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f2f3666c-26d6-4da8-80a0-32d8b9d792b8"
                    }
                  }
                ]
              },
              {
                "id": "c4ad7887-f44c-4074-99af-d7edf0693999",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f85a24-89b6-4402-9959-4b7a27b2fe9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d5971d4-9294-4dce-94bd-981163e23a13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "920d727a-51c2-4a88-90c6-0b944c1ea71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c204210-f9d6-487e-9058-8ceb0879464e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2d3bb33-64a7-4841-bb2e-bd10e56572a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e245091-ef05-4689-9d08-b6968d144bb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10474f0c-4ca3-483b-b719-388be56d61e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e4c4500-282e-454e-b24b-73e2dec303e4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21eae62f-3f11-451c-a791-f422807e7a20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0bed9acc-f13b-4878-b9b3-98851227a5e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eae84a2-f969-4e10-b8cb-8fcc793c43fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a63bc7b-f5ba-4e9d-8d7e-2a607fcd7743"
            }
          }
        ]
      },
      {
        "id": "8ac84c75-942f-4af6-a1f9-6a011766b624",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ef3a072b-1ba5-4546-a92d-5f321663b57d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5e29d0d-2f57-4d21-a583-e1f5f06cc10b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c81a454a-ea3b-4022-8b38-7edacac46b6f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfece25-aa59-4d70-99a2-34ce1e7a351b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77092de8-092b-42e1-8882-65b797c29b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a207f6-3bf3-48e9-a220-056524331c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "979e6bdf-2c46-4788-a657-84badc3facd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0167aceb-5068-4e25-bff0-11a756460f26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd311e9a-6ce7-49f2-91ab-84ef84b81dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d935c9-d594-4e71-9441-0bbda9558531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5f081e-1549-46bf-8a65-7c44b5ff4536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca234cc-228c-4c36-8a63-53b7c0c8eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0745d73-2390-44fb-9b80-8f30c1aef700",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a034d-bc54-44fa-b7d7-9a5907440afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29865086-69d9-4b38-991e-26625f2fd6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca9d59b-5729-4ccb-845d-8dc74abbe998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f987054-ae4d-4a49-921e-80a9d2b0238e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c545c0-a4f8-467c-a088-643675640f46",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc9470c-97ad-4764-bed1-2bc513b5cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4918670b-e21d-4fd2-826f-241d588fd5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed2eb9-fc5e-47a3-a308-31b37aafff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ada506-afe4-4450-921b-1e7caef6b578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2db34-f8d3-42c8-b24f-b458f2327132",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118d62e7-16ed-430a-a9f0-fd5b0a35eda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c755b0fa-26e0-4acb-9952-db043eb1035e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec6517-6573-4364-9308-f4ad547d3cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3961a899-6fd2-4efb-9b68-166f2f828668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf734f-75a5-4247-920a-b73e125f7e2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270fa894-a27f-4f8e-81d6-ceef26eb9e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cef712a-9c45-40b9-bffb-d560e28e364b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283dfa1-752c-44a4-b9e0-1da67c23abbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f3b7d6-9c7d-4495-9fd8-027a50560c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedfc0bf-8365-41db-ba25-b5897b6d00ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3da6915-eeb8-49ea-afab-7a0b844517f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22da5b6-a5a8-47cd-b23b-06ec7c900d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477cf6cc-e58d-414c-bf45-e7fca1e8f3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de3eac12-882b-4692-ae2c-ad0e9a912fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21edadc-30e3-47db-b2c8-c79e43d950ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e967b09c-c50f-4db8-bfd1-bada1408ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ca96a5-2cc2-48eb-837f-7b5dd29c63e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f74d39-935c-4d89-9a05-b3c0911193b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6faa7b-3df2-4805-ac50-7e6d553df292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3076fce-2d4e-4096-8aac-dcb4fd7fab4b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaf0358-13c8-4d3e-9158-f20a1afaf631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43ad73d-e8fd-48fc-8214-4c675290d701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f163749e-6426-4c91-aa46-55b88ce96676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56c2d1f-ad27-416a-be45-35fb0e5a4df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa6181-fd64-4d43-be12-91e31f5b06a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03d1ab-3da1-435b-a443-0b7425c49161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021182c7-37f6-46f8-8cd3-3821c298edba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67252f5c-b093-4416-af0b-69bc465e1a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97b654c6-ba29-49fc-84d6-1b5a807c1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c060dad-038c-467f-b2a3-40a0156090dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cab0bd7-e6a6-40c5-8016-0d8ebbba3cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d858f5a-b3b6-4293-bf1a-e26ad5497325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928305cd-3014-4570-84c4-47e33c238f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "358ed118-4f9d-4a15-aee5-dc1e286eaab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8460310-5121-4795-a4d8-ba8ac8b409da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf9ba1-8fb9-416f-addc-9e0f56d968ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3430e328-508a-47d4-b0cf-8bcbab166c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0113814f-58e3-48f6-840a-2421a6819a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f67d1e9-c66b-4a91-8f09-ae642f715e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29d581b-34d5-45b1-bc07-9455efabe7d0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33916673-a4ea-4b33-8569-e5950c2a3949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1655bf4-1d49-418b-be21-615e04df415d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09420b0-1f04-49ef-8512-4ec21a822a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b6267f-92fb-4043-9fb6-e788f38b2d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c2da2b-3d46-4af0-943f-ed4918434f1f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10817491-8aff-4cc9-8a58-ebd2fed2602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04112b84-dcc4-4c4e-afaf-db9258201255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb078b9e-f69e-4598-ae6c-9472bf948847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ccbc93-601e-4cdd-8319-354de14c9380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d72d6d1-571f-42b0-aac6-02a029ca111e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a68bc2c-68ba-40bf-9316-caa0a3a64bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f336ccb5-f9c7-4956-a058-de8d5c29614c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0845e9da-c141-43cb-ae36-1720f9f83a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0757cee-69e3-4e9f-bb02-60b12c4614c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a637c1-9eba-4157-889b-48a38d2c5e41",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec22ceb-bd3c-46bb-a381-fe77d090dafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577ae1eb-1431-41ef-af6f-47bdc5b557f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4848e88-214a-4a6f-8feb-38b6de259afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3d0585-5e93-4ce9-8851-c772fb2ec420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cff555-c233-4d1f-855f-3b82e8bd6a1b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2448c575-05e9-4bd6-b385-333938142b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7010af3-b69f-4c4a-bef3-a68078f6846c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778485ac-79ce-4c24-8a75-e87f712d0b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ecfafe-7c0d-425c-92ba-29115c9e44a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1446a8-bec0-40c4-9bc8-f87cbe1b22d9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f758c-744c-467d-bf7b-c432183ac2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e87362-d309-4748-996d-d5b52391297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18953bb1-a684-4149-854a-231ec8d82b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09109e0-a50a-4ee6-98b4-7aa1ab86d5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea9644-54da-4e55-a7e9-b2b73136a2f4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409520f3-e1fc-4e43-9e6b-4ab7728c418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38feaff5-adcd-4c75-8198-6f2e5519cccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1573ab-ed6e-4968-8c44-a3391e318b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3979084d-dbfe-410d-9090-0f3d33e93e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564a11b4-8ed0-4e9d-9fee-6419edec78c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816eb2a0-2de9-4bf4-bbad-0117d9963e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99c74c1-6bd8-49c8-b6db-70d8726edf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3741d11-dc4e-4bb7-9bf6-badfd075033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80698df2-aa1e-4bc3-a40e-1f6b14c11795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5542a2df-2352-4f4c-943b-aa7e99aa4ce7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0eeb0f-a74d-4ea1-9033-5a643a490cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981dea72-93e2-49ca-98d8-abe0d9c1527a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082f0fc6-8990-412d-94f5-b735a4a1251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939b3547-bf4f-4ab2-86a7-5622b165406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bb4c24-be78-4fb5-af15-f8d4d5d079f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16359b2d-a678-4fbe-8ce0-6466f7ef9ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d51f12-c6a4-4562-b65f-e79f5ca1775b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8144b512-7d63-47d5-a458-52f4d384d75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be5ee9e-c399-4176-98bf-742f4f6b4cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ead9a8a-ce84-4890-ad83-684e0977c8a6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f698f344-8c3e-4fda-b9c9-180f55cb2528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8c5305-8e8e-4774-89b7-038bf5e10856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e024ae1-0a64-4ab1-b7c1-98fc6830c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a88f1d-1c1c-4eed-86f1-35eeaaffd1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07562e4e-81cb-45ad-b1cf-28707f04a6ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65b194-466e-4209-8453-a0d4855127c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7befdfe7-e49a-434e-8de4-a1c379f88b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80196e3-b078-4f5e-841a-637c28cd6281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca31198b-0f62-4906-8552-7cd5c7178d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cc3be1-bdb0-4109-8c85-c7376c42dabd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b975da90-3fdb-46b2-91ae-24b20d8a925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ae9062-17a3-4bf7-b71d-1d6c73092ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc65b2c5-abde-42c3-89ba-b7611cc2dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4917a2-4bb1-4095-9e42-87b0e4a015fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2fb1e9-96c3-46ba-b2c4-0a209c2cf795",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfaca68-03fe-40d8-bfb8-2a3093c245ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eded068-9d2b-4603-9497-08ddeaed850f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde76cbf-5b3e-4a68-9d61-a60b1a304dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c86e4b6-bc93-4c50-94ef-1a4708457779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc77701-0d78-41df-b744-dbeab63942d7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf400f7-e154-444b-bcdb-2e41ea38921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199f6d47-ca07-453e-abf3-e493f556f4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bed2a0-88d6-422a-a868-8e1f4f3b0824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42a58a2-7634-472a-aa66-61c2f955c8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809dd99a-cb70-4964-b198-09240ef1028a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b0ce2-2e85-49a0-bb9b-26ff5b1fbafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03558dde-9409-4238-ba67-cb9758f0c2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cac1ec-9f5c-4983-8183-891fd3bdd692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c5e814-7ee6-4c98-9b58-e4eb7c71f360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811f48f9-988a-4bed-af15-5a799567d05f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b08f1ed-ff1b-4082-af4b-0ec02dca34bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84517cdc-f45e-4897-b3cf-09a92943cd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bde049-7820-4eaf-a627-b2e617ef4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "954f79ad-e8c3-43d2-bbe1-3cf486ea0021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faef5d6c-8af9-4809-b6b5-56f3b95ddb7e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8d6f54-0f19-4387-83bf-f30ecc08ecda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5f103a-9f99-4c07-8af9-b57c48b368cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7099a4cc-c6f9-435a-a4a4-483966bfb428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ccf15e-db34-4af4-b996-401e15e94615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe68079-8638-4890-8c52-19be385da23b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c85ffb-a7e1-4263-b585-b64e86270da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302af9f2-ff36-450b-a706-3bfcc52351e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdbed8b-fa42-4117-a1c7-7c99036a3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd26adc-aa31-48fa-8558-a1be95225f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdde1d0-9afe-4a43-8e66-fc6e18f6fe95",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce599ab5-bc96-414d-973d-a4f63a100bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cc02f7-ce06-4e9f-82f8-d25c59b09d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd30c48-ced1-4816-b532-58e1e58b77fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242b77b1-0ee1-4724-b39a-89ed4041c8fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94a849d0-f594-4fc7-8477-dcedea2fa248",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4b8cf51-6175-4528-95fc-7da845362159",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48227f8f-44aa-4def-9ae1-cf297ca2f657",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b52f27c1-b415-4bee-be3d-56681daeee50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da360b5a-344d-4d7e-97fe-d35be3305f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "369da4d0-04cf-41e4-8939-55de84d44e88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "493d6f08-d007-4a3e-ae6c-9fd27ae60025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf085c55-9687-4783-b4e8-dae3e8081537"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa19ae08-4b28-4387-87a0-55ca51c7f29f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75188a8c-d6b9-4ca5-8830-0bd14ba40ef4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15e51d83-48a7-47ea-871c-a959d6fc6abd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03b06381-1063-45ab-add8-569558261e14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "360359f3-2be3-4b5c-a967-221a321779a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd33bb02-74d2-4db1-beb2-4be99b5e1b73"
            }
          }
        ]
      },
      {
        "id": "ff9c2497-cb39-4fb2-bc2a-7a9de201fe4d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6fb9e00a-a97a-4e42-aeca-20a9f6e36ca1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06d28969-39d3-4c69-a098-e0c138f86a5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe61027d-87b7-4436-b8be-613a0e6fbb41",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f45786-b30e-4579-b733-e669d0b6f770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe7645b-f2da-4379-8f6f-0206e76cb385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3eaed9-e797-4c3b-b382-8fe2c9f4132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8f9177-fe28-45b3-8cdc-859fbc992d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11084ea-44a5-4e64-a6f2-1937db8a2afb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6279220f-53f1-484e-9074-fb39b21bfc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d9c7fe-ff0b-4a5a-a772-d8e92dcd9dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fa86ff-7883-404d-8180-867a440dd876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b955a19c-61cd-4728-bedc-e376ef895525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad99f4-75df-4025-bfcd-726fcbb7961d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ac4a0c-10fe-41ae-b82b-bc65ec865afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edb9968-16ea-405f-9906-4979d11da136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f67aef-d999-4826-aea8-2bd79cc7230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89547d6-cc4d-4a29-9db7-d877e847b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9863e6bd-0637-4443-becf-7552159d91f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1092834-9e17-4821-81ba-75c62344e42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f311a5c7-4482-4153-b7b3-cdd71596394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eef304-c3d5-429a-b584-1ec1f06e7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd42366-199d-43c5-a94a-c06a9eaefd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065ffcd2-c8d9-454e-9989-235d64399716",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc408afb-0a1b-49ce-8247-f231b4e65679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eaedfc3-162e-42be-8a44-aadf16e9c859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5bb2c8-82a4-4f4a-8ead-374c4380b63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2d707c-53ef-46dd-8e72-b03b355457b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ce3225-944c-4799-988e-92b735c9961b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82926fb-daab-471c-b9d3-b27069eea030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b7c213-1c31-4b09-9c1d-e76f0765bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e5bece-892c-4eb4-bf7f-fbe90c3f9c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a2094c-bd8d-4b87-9fe3-8e8392b07bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930ed201-683e-491d-a428-b88d93b0249e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff08939-daab-49c5-8048-70ed3c46debe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5707b756-f4a4-4dc9-9700-ba031f4f426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25014b2e-4930-4595-850b-83ab8a11f64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9720404c-0bfa-4ac2-a22a-09c553f63f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1b7391-6605-45fb-a2d7-8651553ede1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf28787-c4a8-4ee3-97c8-c68ddbdf3fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d702ac93-0ffa-4dff-9693-e8ad44576a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f799f3da-6907-4795-aff9-6194212aed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "082d8121-15eb-42fc-8347-c347545cd88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a8eae1-9dca-442e-99a2-6fd536b33b88",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c745dfff-7cc3-4414-97b1-eb41c410a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c77d7bd-218f-4987-b6a7-ccc7ecd48f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b670c68-dc34-4f6d-8581-22577b6087d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa734b09-8888-46e0-9d6d-c311d053fc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f7ee06-563e-402f-ae9d-25587229f5bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2627e978-17c9-4487-a47e-8879e620f89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520d4af2-34df-4009-8ded-697d075b6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206718cb-4259-4ee7-acc8-854e46fd0b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a52fb890-d1e3-451c-a4b7-4d2c755a0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2369fa57-14ac-4ba8-88be-9f4b733754ec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16963822-6af8-41b8-ae16-b5f91ae72311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b7f881-cfaa-47b4-a310-94150d5fc6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2c38b0-2d14-48a4-9775-45f90dd7a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "55cf8098-586a-4d1a-b0ae-f6813a3e07d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af7671-70b4-4653-bb05-466c717548c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65c32eb-4da4-4089-86b9-073f125e5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e2a156-11bb-4589-920b-c399b11e2678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b1d291-b2f6-418a-a1b4-bf81b4a3fc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d818034-9342-4f61-acc2-940316142a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400aaa13-b310-40a3-b8d6-7799d88b1945",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2531d-acc5-4bdc-a91f-c40ce48375a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2ffa93-b903-4a36-8c05-b4840b9b2b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459babee-29be-46ed-9d6d-ef1847de4d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b221031e-91af-40ea-8593-d237e3dea944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96866f67-6528-47b1-8de9-51992b952fdc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a353988-1d32-406c-95db-68ce16b529d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc78e329-00d0-46c2-8321-fcebc39e2617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5900cb09-23a1-4241-8763-20d2ebbe468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6756901a-215e-41bf-8cc2-c1c8e5933001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a9e89f-de48-4ce1-8f3a-22dd02e4e434",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2c636a-61d2-4aba-84cc-7e58506a38f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b1334c-9f4d-405a-a326-d052c3996a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af82f65-eb8a-40a5-acec-52ffefa43f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "85aab5b9-be59-45dc-ac2f-08c09f92f03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff27d7d-f517-4198-8bb7-825970208229",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80251e0-8b78-4e69-9539-1fa093830062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec2f073-de36-48cd-8b20-bace3ee7fbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c87a41c-9d31-4df3-a0ba-ae9fd89d1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5e2c16-138e-454c-a2b2-68535708579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8787ec6-2c00-473e-bc17-d3d85c06f5eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0faf7fa-11c5-493a-933f-bbb3c2ca97da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a06be8-ceb5-4664-8e35-d0059bc13fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6779542-1ffd-4b26-a2a5-784be981e8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5d71be-c315-4aa1-92a8-8b10ff9095f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47200ef5-da71-4d9d-b2eb-b55f9bd64f56",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7915625f-8917-4ad8-b2a8-fc1366b13913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dd661d-3a8a-4c25-a52f-28a3f2829217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c863c82-6bdf-4ec4-8828-7b5ca550390c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36c913f-823e-4d5d-90cd-3dbf82c842cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e78a31-9095-46b9-a3e0-c891bcef09d1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7034ab60-ae1c-48dd-8405-318eb195b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a0da94-8119-4b08-8d45-235e4ca4cb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a85cad-2608-48ec-9e7f-91cdceb78269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f871af-e0e8-4ccc-9dbe-33133f5b8347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1515a8b-3917-4ebf-b419-ce574314063f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4728c2e7-6cc6-4db0-bc5d-a49efc0fe1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec96187c-8819-4f60-9b4e-b8caa18dbfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041067ff-2e7e-41f7-8df5-beee59c4b226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "335e71af-b6dd-4796-aad2-364562d1a629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e3abd-d9b5-448c-81b7-5948955b4e51",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130bdbd8-b807-4056-9226-946ff172e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7b1158-405e-4294-95a2-72ff7e8146b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1d828-4832-4464-94cf-8d7bee3c7b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8ae74f-c9d7-4315-89d4-312a134bca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addfe7a7-56d0-4288-b291-ee461e176737",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147e986b-c43c-40a8-a0bd-86fd4a505780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf928b6-3ed1-4f10-884b-38c0a554a05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe83bb-1cf9-486c-a408-f4c148ff882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "772031f1-580f-4efb-8939-e519104f56f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07082175-b97e-47b9-ac54-9e0b6d28e60a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791f3776-b965-40b4-a3ba-da22ed4e30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a3f28e-014b-4acc-9c1f-aa9b03096097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bda186-097b-4588-9b2d-4625a6a9e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f56dccc-060a-4699-ab83-c34df8d6f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92927acf-2f56-4853-8c0a-28462a15f7f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712928e-9fb3-41bd-9a65-48cae5d3bdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc5c218-e02c-4ba0-b152-5539f67a4866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd9311-63f5-416e-8449-a24e9f37fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "510d4ba8-20ec-480e-ae90-774399302029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae377fde-4c0f-4383-9be8-14a4e1975953",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b446a4cf-82a6-4f8c-86e1-79aad28b8ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fe46fb-7f18-4cb2-8e6d-4ff98aecc4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23774d6c-834a-44d1-9332-a2bcced01fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38583824-02ec-4c5c-8259-2ea6c68bffa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e60dfd-179c-42d1-9143-3e2bbb805294",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b60583-9812-4ca5-a7a9-4e307688a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e182cff6-81c9-437f-b360-ee807852fd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471aa5fc-e9bb-4bec-a9b0-122c781aae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5de4d0e-6ce5-4ac9-bad5-48ad2202cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42efd2d-d623-4947-8367-7195483af099",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb156eb1-654e-423e-9129-21b9cec71729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aacd8ff-da42-46bc-a697-82ed1bebdf62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab179e45-60a1-4df7-bf86-4f5106356992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1853ce52-b275-4bef-b18d-5b625515061e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7025b6da-48e3-49c0-a951-bc99f121f6bf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ab369-2758-48f2-ae8a-50c8d55ac176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945fb4e1-34e2-4f07-b113-612db8740470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c8d521-14ac-44f5-b483-7fbf070bd825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9771ab53-2c43-4556-b66a-172d60809e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d51b081-0f4e-4051-a26d-af47e3764b38",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4464ad77-00ad-400a-aa72-2deb2c0b0ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed27342c-5ec6-4ebb-90d0-76b258fc0a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c421108d-9566-4da0-baab-c34006a566b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f058a0-65ab-4c0e-a791-8f4055f32dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80444ef-8aa6-42e7-aa07-945d2010dfa7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682715ce-ffb4-4224-91e2-bc6103950bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484f9bb5-8a5b-4788-97fc-ca419fcb7b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fad68d-56a7-44c0-a881-ba2e52b44f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "374efb58-fb6c-429f-9cd7-c1f25bf07e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf46556-e992-4764-86c8-3df597fcfc73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d7957-94dc-4a6b-8e8e-b8affded38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84c79ea-1978-4acf-b158-9e8cfc60d579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4e1a7a-de34-47d7-9311-c02d3bdf6158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ba1fcb-f75c-4363-98d0-684c53bd77e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2b2a75-120c-4c17-8217-831847646827",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a3e361-0a77-49e9-ae2d-d5078bfd15be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdaa9a9-ef02-4fd9-bb73-815ade56728e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6710873-b5d7-4a5b-98d3-95d1816dbad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf215fe-a9bd-475f-b10f-94f8d95aecf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74802f95-089b-4192-9b38-3aa6bd0543c6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b61e1b-df88-45b6-aed1-9bf7861a6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e09cea-f3a7-405f-8a25-8212a1b71d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e07161b-7ec7-4ac6-9a39-8282d414643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59769368-2dcc-4a06-b1c5-fd4cdb7f3e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9fc79d-a7d0-4386-8a50-05d2a6555b3a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc4717a-2360-430c-b0be-fb54f92c9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e4aca-b89f-4271-b190-063ca563f9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6b4a49-031a-4dd6-b799-a7069ff60f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7910956f-17f8-4d17-9978-65d876660c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0fd3f9-0912-4633-a9b3-c1044feb69d4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ada767-dedc-4d48-b906-1c95ea2af046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ec6750-a985-4724-b009-32efa7d4d794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48efabd3-8a06-4113-94ff-355190ecdfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "967e900b-fe75-41e0-adc4-dccd95f8affa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aefe90-6146-4841-82d6-ea3e63fa0818",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495ed37-c883-4aa1-b479-23ef08536d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea89e05-68ef-4f66-9381-caaa75a6c0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee81098e-86ad-4ef1-b63b-8786d999ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52134b70-a48a-415f-90b5-5968fa2ae9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68546103-8a3a-473d-98be-510b3759a985",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03437c2e-429d-42d8-9425-e1a68fb2ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b394e397-a5af-475c-a774-d87f91df32eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e24196-ed16-42fa-afbb-4b771f01b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4817a238-7fb9-4101-a32f-4949354dbb36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb7fe8c1-2996-4ac5-b09b-f988972f24b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256c8aec-00eb-4880-95d0-a319d58e1249",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe702c95-bbee-4984-b1d5-bff2c12930c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9aae9f64-f575-4503-8ad3-c7b3f8215dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ae6232-d163-45de-8d99-e3d02eb4356a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d7c2d7a-f3d2-4ed2-bf94-78c3d19b2a64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec4da085-e4db-467b-a4ad-c8a9f0b566cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d299ded3-5093-4ba8-9ce1-34b7f95c4bf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e087fc36-c823-4b7c-b080-d1c16d612d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "673ac0f7-a15e-4e7e-b562-e8cf770e3df0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "785d99a1-f813-4c05-b03a-a4be50ff5860",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfa4f830-8e8e-49b9-9644-fafe4710a56f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5903427b-1e03-4ac2-ab8c-967bd7ba4cdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42a9d48e-a4d3-4c25-948e-77442e4653a5"
            }
          }
        ]
      },
      {
        "id": "2d4bba22-44ed-4322-adda-495af347554c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8f1c443e-54a0-4e72-82a7-390a30323d2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6b0d537-a4b1-421d-a440-af20fc99c7f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "129c90df-6aea-4eb5-a12e-4fc4d5a30606",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7229c2-8173-48e0-812c-c3a546815d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65b58d0-fd37-464b-8f06-03bb36ad25cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8660f926-c4cf-4cf7-bbe3-a29dc3c4dee2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe87109-79de-4f83-920b-1a637534fe54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025f7cf-f6b8-407a-aa23-0bb5544a4cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a617898-44c1-4ecf-b32c-3fcc997a910a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08373855-f4b2-4f32-9d35-d968d7b11589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e31379-9e68-4e1a-add4-94a978e2afa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a84e071-55b3-4f56-bc8b-1cf76111af39",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a673f7-2a82-4e3c-a32c-584d42da5ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681543d0-c7be-403f-b836-bd838e35ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519f44b7-1049-4213-8de1-1a078694c92a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc88a2-f208-4f8c-912f-40c68e3b81c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925ba885-c285-4847-90f5-a0ff32843e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d3c4df-51ff-4adb-96cf-be2d44723357",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5bac18-8fef-4942-b82d-c956166e088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa2c4ed-aa44-40d0-be9a-a94c6f59d5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e752b1b8-9240-4332-9918-95aeab19fa6a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143194da-c810-4b6b-bd14-95ed35def05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eda1998-b2c1-48be-ac0a-5b574446e460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae55d2e5-3bf1-4844-9d59-df129f7159d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d875a9-10c7-48c3-a772-8e501eb2c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b3e748-9cde-4cf7-a4af-6c09f4f80467",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ac5c52-0e6f-4b15-9a8e-a5ed8fc6be4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cf0ca6-e7a7-4e4a-91e4-3394af4fc8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1db14f-b95b-4ede-ab61-747acbf90b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6ea798-cd7c-4bb3-b3c8-67a634dbead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827a9178-5d59-4fd5-a1af-2e0a67999cfa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2dad5-b0cf-4080-b7e7-518253e81ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59085f2b-3e18-431e-8bc9-a351cfcdf5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d41ea1b-f2ff-4abf-9607-625275fa9418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f6225f-6fa1-4b8c-a99f-1ae503ef8c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed515f52-46c0-4fb7-bef3-87415a2a704d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ba2ecf-0e03-4499-84a6-798bfce43f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07206bd0-596f-492c-9dfa-e53a8d2c8211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a86f7bb-0965-43eb-aa9c-42ac12848265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8c7c41-e6de-409b-a11a-fa116649a685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784514f6-b133-4ddb-8025-a1bdb5f63c42",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c3c13-b279-4b85-86d8-31ebadd8354c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a64f37-2e22-4fc2-8a99-43970e37d701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d172261f-0e28-423f-8e7c-6dcc72f02937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cece89-159d-48f1-a812-6905686ae2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e8ece0-289c-4074-93b5-784d95a64c31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d213484f-31d7-4a2f-8ab7-58313a805e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a64ac2-d54a-4e65-84f4-2c6b836b008b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44deeff4-703b-4f2e-8a73-2f626c8959b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a0e465-0267-43d3-86eb-e493705a38a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ca0d1a-41ad-4197-811c-1859631b57a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16e37b8-52c5-4bdb-8a8b-af8487c72247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab2a8ca-0f8a-4cfc-874f-100b79b9f522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e4bec-1e59-4131-b581-d2730dcbe07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40743df-dbcf-42f4-90f7-213b45139a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4221f29e-5d8b-40f4-a595-a82578ecbac2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de8cd2e-6eff-409a-b9b1-12fc69a31305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898224e0-f61d-409c-a4e7-3bb890f0caad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa6d44b-c210-4ddd-a7a0-6502defe6352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04c78e5-82c8-4e32-a616-9ef44b74a62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c7bfe0-e088-4ee8-8fdb-4ec43ccbe433",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d9395-d0dd-47a6-91e9-a67ae3c4b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e353d39-f153-46cc-a7ce-8704eac678fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44386afe-1939-4c2a-b486-6044a4dff98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99286f0-d043-4cd7-8af0-06f790c110c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764dec38-ac6f-444c-a14d-2d6fc3b2c609",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22426de9-2411-4456-9c69-2796911c92a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47d6dd5-75a9-467a-9702-0e45503d84c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e202ecd-f4c3-46f0-b43f-bbd153b14fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c645b317-ba51-4452-b6ff-317728df4377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26574eaf-facc-4962-a8cd-d0c44ecaf54c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea37c6ac-f63b-49af-abbd-3ac42f9fbc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7ac21e-66a5-42a6-81e4-44aef38aab58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34472763-cf2c-412f-8f91-af24398ee795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f78273e-e150-487a-97db-a4e548083220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ae7ddd-5dd7-451d-aa39-2ba308721bda",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26da4657-ad67-427a-9a41-ef025ec8ff9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83396aef-ef80-44cb-8a62-32aedeb7b619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aad0ea-d2f7-444c-8dea-7c4528232e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b84a928-d63a-48cd-a4c4-d40672ea1350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb2b470-f77a-439a-a7c0-f73c3161e2dc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bdc615-e772-432f-be61-8613b072dbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d25c2bc-06f2-44a4-9add-2a6390a79914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c66298-dd2c-4c96-8f29-a1d829db08fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0427b35e-e267-4fa0-b982-4d4376a17390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8955e8b-015a-44dc-9962-427c6d8409c6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca8b4bc-80a7-417b-a1c5-ef46b5e1305d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fe82f5-4c3e-476b-83d0-cf4385a77c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68219b26-df31-4521-ab95-7e79e3574101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9351e6-0997-4a17-a031-fe3944b55e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c080546-d6ba-4dcd-84d8-743f3d5ae0e5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa42607-825e-4cd5-9c57-a491cd916c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477cb835-627c-494d-9392-c45e117b651d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0b976-8d55-4247-aef6-be32681056fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89da5052-f029-432d-96af-fff3fa06dbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55438e9-e318-4439-b7ac-dd241099afdf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4d62b2-6f00-4982-91f4-aa226669879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35119bd0-c3f9-40d4-a07d-3d54a105865e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc6c76-c190-4821-b917-d571cea2d83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79885098-a009-4e3a-b5d0-5806e3400b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087c4607-bcbb-46c5-9021-42dd94886170",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1902a3-5103-4b12-a0c9-125a0ba1f547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5635f5dd-86a9-4bec-99e5-bdb4a9590353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac4164d-f94e-4d1b-813c-4c6a0f28dec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6cdc54-2c60-4d30-8347-c6259efffbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307b2885-17c4-4ffc-bd1a-ea477b4d20ef",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43e5352-cfcd-4007-aac0-f139e1aa8ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6969e7d5-51e9-4917-85c2-bc2f5c3ffedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31f6c3b-a0ca-4e0d-91fe-90f4e040a06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f890f839-59ea-43ac-b0cf-945c88cf9bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd14563-5ccc-43fe-b35d-42cc66e22a91",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476f5735-bc16-40c1-b454-328adeedc40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03d1f8c-64c2-45c9-83a5-1070a901dd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2757e802-f653-4194-bedb-24952609cd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb0e643-c177-4226-8582-904102d055dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472fbfe-11fb-47a6-8d9f-6e729c977d03",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d04eb3c-95b4-418b-82e3-142f1d1ce005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a1dd38-f445-4bc0-bf63-678375e79a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f434d-945c-4eff-ab3a-95978a1c74c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afb4dd4-f069-48d1-9c01-373b5bc99759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a870c-8f05-4ed2-b6af-d1c225bd6b0b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5aef9d-f833-401c-963f-820fe243bac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43706a8b-502c-4b2b-b7a1-27d806a86d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a47a6c7-4179-480b-9393-6f81a56106db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbcd19f-f181-4a63-8cd5-aa2980dd104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1735129-6506-4f1e-914b-5242200f3610",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3191c82f-5af8-449a-a247-c4dd36c2340a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3669c415-38fa-45b6-945a-66f31985ee66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c2e5e4-50f9-4819-9393-2e01ab761ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb2239e-e3df-46e6-92d1-d3d2c0adcaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e94b6eb-b40e-455b-b8f1-557f24e3ce79",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25abb8d-1b8b-4483-a38d-2f09463b023e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53bba07c-d5a5-4526-bb2a-836960acb37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0e4953-93d1-4b1f-b11a-b4ddcf8454bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5f011c-f858-4be0-85fb-d0bffefb9100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852e1740-7132-4d1f-ab8a-0382133f51c0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93b0089-3165-44c5-a979-ca23bf247004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f3a212-f478-47a8-9679-d20c320c05cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1579d9e0-1cee-417f-ab9c-859fc4901c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e950c9-b1cc-40aa-b20f-eb40af1a465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1284d9bb-2c94-4cd9-8dfd-180f8585d7fb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f168d8d8-cc3c-407b-8d97-060a9bfd5e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4549a1c0-0ccc-49b4-b197-674ace88a192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0541418f-82b3-4034-91aa-59714af1646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e692215-3836-4220-a7a0-743f79100b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b56fa9-9e0b-40de-abb7-ed896742d851",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92305c5-51a9-4ab4-a6fd-899d9fea19de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227147b4-84fe-4057-88c6-d2237e2a020c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa92fe1c-6b59-445d-a86f-df701e9799c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b979a5c2-181b-4cb3-869f-2738fda6f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc23d7a-cd65-40a3-95ea-4dbef853a13d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520dc46-3cf2-48ac-aeb8-a91e2d6eecd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f17da76-f896-4f4a-b59a-f32778e61c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e7694-8c8d-4dea-9cad-96ccb206f904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4d762c-569e-4ac6-b715-52ccc0430c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fab7ac-f5b6-4fa5-a710-9070b547f956",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fe4c48-f814-49ae-a8a4-3d67ddb7770d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18b771a-4d6d-46b9-8c1c-49d6d2261b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2726c7a9-8580-4e78-bae4-c3263860fd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050794f7-e1bc-4c76-9d09-4c523b81eefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109e4968-8d15-434b-82cf-700e5a219033",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9fd464-d9b2-4776-af6d-1fc1af89d3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f049e01a-4102-425f-adc1-f5fb1480a522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5c4307-7180-4de1-88ae-13115bc20e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae52f9d-6268-4d8c-abc6-f6a960c0d96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8560c4e7-c879-4891-9429-b91f0ee6fc58",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ee560-eef8-4a7b-adc8-8c469afa1420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916c02d0-99d4-401c-9cf7-394b7589eb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d90445d-1f7e-4e14-90d8-6b71dc8dc5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91730440-65a8-4179-8a25-cf54ec1ca774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a466f-aa26-4fbc-81a4-9d1270edf43c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e851ba8-c946-4381-8162-2a8af1a1c409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f56c84a-759f-435a-b227-4735725f0ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b2e10c-b625-40dd-b18a-2969e7d3396c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194bd70b-e4a8-47de-936d-8549a76332eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb552ee2-7785-4a8f-94f7-a04444828e4e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec415e8-14e0-43f8-8b88-d28a559ff7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c20dbc5-b84f-4a6c-a3ee-6eef517b230a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c33f82b-5c71-420c-8601-c6989f5167de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b1edfd-a1e4-43ce-a69a-4f5281e11ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3a1c0b-32f7-4588-9c78-f4505449d752",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d899b35-bb9e-4712-a852-8c52046ad882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b71ac1-8213-4c06-8939-921299039b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba5535d-ab16-4fc8-8404-cc2bb1cc0993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e28d2-b835-4c81-96f7-caf7a45c4417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830f64a4-33a4-47d8-8eb6-23dc817a149f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4c82ab-1eb7-40f5-b59f-2e78971000c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da23c25-28e9-4e50-9926-aaac67b5ca89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efacc8a5-38f0-4e9f-a6db-181e889034b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42fb3c7-c6e3-4563-a6a2-ec1baa5e485a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f44ad1c-f6d9-4cc2-bd3f-1bf202d0b3bf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04eea47-133d-4a6f-aa2e-defcb05d287e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55510932-51a5-4d21-8296-d675dc612b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a8eaa8-736f-4255-9ad2-5a067fce03bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7aeae3-7ae1-41d4-b617-c4a9614daa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecabfbe-66f4-4796-8aa4-b427c43eb005",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9390ee-0cc9-43a8-8f1d-b8332dc5eaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90501a94-bf00-4f55-8e6c-15ba482cde22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c94ef6-5688-45e8-bfff-65099d66d5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e6d1e2-d3db-482a-9026-7365b3884dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81148649-3661-4b64-b319-6f038ee02f08",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb0817-dd3a-4d16-bca3-25b66e721d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511a4c67-b52a-46f5-9b2b-fb3b00b7bd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6fe445-6481-4c22-9f3f-88a4ba056902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75722770-66f2-4479-b74c-a8aa50524502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0611e5d4-957d-47fd-bb8d-f39e42a4a482",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952db2ee-6460-4f58-933c-04302d3a9754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94599aa-a5e5-4242-ad01-66a0248cb430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8f7a09-35d3-40f2-a989-cc36bfcbee23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f354eb6-c558-4f24-94f9-4e10a2299e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88abce5b-4790-4c0f-a7b0-6ef41ac1698a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d3cef3-0495-492a-8867-b1429a9aebfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b2276d-53c6-4ddc-b7aa-297748eeda0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c39beda-297a-4f71-a4f6-1a0fe55e7052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61298473-db7a-4c94-867f-784713097dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe961aa6-2186-4c49-b112-99db82f3783c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e57430-8da9-4322-bc8d-7fdfc50f6186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f74411f-0e9c-4413-8c96-14fd1ccd7570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a245f7-aafb-42ed-89b9-e12374e894c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7667347f-4786-4140-868b-fb9ba74dadce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaabc7f-87ea-4a0a-b38a-030603ad6750",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7684c1da-c341-4767-80be-7bfb51328860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc65121f-95d1-4197-9da2-c1d8086313c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33090821-430a-4f3d-a1d8-1752e4f6fa0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef39636e-c232-4b66-bae0-122522ccfab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b5bfde-c0d4-4159-9084-7fa740adef80",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2480b304-3aff-4a2b-ac90-deebb4b03006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd527ada-a37f-4a24-9c80-13513bc68cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee003f71-ff3a-4be3-8650-41d302a9443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d767b2-56b9-478f-9172-7c7b59d3461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a3131-40fa-4199-bac6-6b87267b471c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d215c6-d7b8-4126-9c70-348ce39699bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da41037e-6cfb-4b15-a78b-78b829d1b5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d06ec-572e-40d0-8814-8bd93fc4d186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cbc1a0-20df-4e29-bf31-e531b6a5b143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a17180-d241-4209-b66a-f7353d057b10",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b6f1b8-7cca-46bf-8c3b-7674f57409df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e922ad4b-b737-4c31-9e53-b7665b5203af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a141dde-4372-4fce-be6a-43ba1790bd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392d7689-1a97-4a34-8e6e-36fdabc6fd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493084b6-25dc-425f-89bf-42fc7fe27b02",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed31b872-3683-413b-8aa6-2924baf63cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59eb0023-1cf1-43e2-bbea-8721733e210b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbc0811-eb7b-4dbd-a636-b53a09dd57d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f647ab2-56ac-4970-a933-1822190ae692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e92d87-6b38-4331-b149-10cf51abac43",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec91f1d-2c6e-463a-a42f-9aa663857424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8593734f-c867-4f36-8d77-27d3d3b43410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d82246e-8b16-4c3d-897b-92f41300dce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17c797f-0271-4d56-9fc7-3c784085815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4326a44-1fc3-4c4f-98f3-b8f2e0e9f5c9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad462794-6f14-4080-b11d-71fc7249f116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b630f4dd-4a89-4b70-8d8f-89c2bd8b8184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d6c9c6-33da-4768-b4e3-71ab76e69177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4b7d7e-5851-408f-955f-8e0fda53dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfa6ec8-a8fd-40a7-8a4c-b7cf5ddfff72",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aecc9ab-46fb-4850-a895-9750c05d741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7bfcf4-de53-4214-b1fc-20804d974beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8f3830-e9a9-4356-8d67-4a04202f18a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38dfdab-a276-451f-895f-1f2fb736cca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec49fd-254e-4a6a-be80-39f40b4c3570",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6bc3b-5bba-4b2a-bd42-7df94ea95035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68c58f-eecd-4745-86b8-fb645a3b40b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd89a26-4bfd-4615-b230-7349c05d80c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15fc447-d582-452d-80cd-6448d014e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca4c6ea-b871-4a14-b888-3c324b8b07e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5608e-e8a8-42ce-aa70-09be947bc985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c11be5-8ee3-453e-9840-fd8c7a5549dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c699a676-96f7-46f8-bfc1-21280f1c527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025dcc38-f70c-45dd-a130-8e7d74b1a96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd511ef8-1031-4451-83a2-71b2ddd10687",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daf8056-0b83-4a62-91c6-3e2221920930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa245386-6398-4a9b-9f67-a0bfa6187753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db657e94-ab31-4fa1-b358-e56f30e849b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac7f5a9-1119-4039-95e7-36ce2a2dd491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a9e107-8bd8-4b3f-be2c-e936204d57e9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cca6ff2-8afb-46bc-bf37-3c360109f50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4c25cc-5f1e-4b92-8aee-6aa6b26dc219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeac5f4f-3928-4320-92db-bf69018a146c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace9c6a2-b661-4e02-9659-18f34e191e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b08a3-6e35-48e3-be6a-7b1fa4332109",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8093da5b-67e5-4342-82bb-f30ebc0fdbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55be41d-c62a-4c20-8c44-f23c7a3a7a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2c60a2-92c7-4193-908c-35c180c06ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80270d3-bb3e-446f-aa98-9dec9579f465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc8e61e-2810-486c-aea1-c2124818b816",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d5f1ee-0b65-436d-8d04-56ec1261e565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c49b83c-2232-4b00-80dd-5f10fdd70eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079078b4-c14a-474d-87a5-0adc49d9775f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6fd3c4-de4b-4fcd-b6e9-99ef649f5570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3275352-e2f2-47ce-8b33-cf043a7cbb28",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b1e932-bf3f-4f05-8b29-de29087dae40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0e73fd-3e8b-4c5e-abb4-6321d93f2ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fdcce3-8756-4ae6-9d19-0288dc775589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5b7360-4e8a-4af2-a2c4-734c67f4eeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f274d-4fc4-4b2f-8e97-c0fc53a3fafb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d0be37-a655-4db3-b31d-75d2659b3f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961180e9-88f8-4e61-96dd-6f6b22837e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e450aec8-e068-4790-9b87-4b1576a8d36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccecd2c-d1ea-4d63-92ce-4e7dbc571e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aad919-07bb-4c40-a211-81e2f24ce388",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079471fa-0c02-46fb-92a1-f501c7c26f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d787fa-6951-4d98-a329-331b5a819af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fc2a29-0862-4bd2-a556-8482d7e04364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b07bad-4273-4aa8-8016-9e7743468bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f52a207-110d-4280-ae69-d9e1b37fb63e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367bd966-fd88-44d7-bdbe-32062f6267d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb99d048-fe0d-4b34-a06c-c4c8001c5d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efe9625-9182-4883-b9fd-f8cc3f798a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874cf21e-fb85-42e8-b529-90c1f02d8db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373c8e3-996f-4b30-ac41-776653027523",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409af91-72af-4a6a-8002-ec8f8ad48f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794068fb-8853-412c-988d-90db05985ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31257d3a-a8e3-4d90-9905-ab894ed85707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eac6d59-b58e-47fe-8dcb-406d5a68f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6275453a-c6b9-4d93-8e15-400bfb7001ca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013fdc52-c093-429d-94fb-3f15a5961651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f2559e-b754-445b-9282-33ff4804f125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e54bd66-42fe-4ec5-bef6-dbb5c65f95d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da060f3c-936d-4650-afc4-49621ae10b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4601e240-dc06-4014-8f83-3e5d2b6971d7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0440b95e-73aa-4e5a-a8f2-c7e658f59cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b633bb-9b7a-410d-b5c0-ff66f37d71cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae0e411-bf4d-4a49-bd6b-9454b55a9d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b258195-66cb-40a0-9bcc-c23b5da08db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c128f26-c7ed-4523-a1d0-62f60672b01a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed60309-b81e-4e3c-a52b-0eca2b11f80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b6e752-2a74-4aa4-9155-c28e822c85d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f972fd-7159-46a0-ae5a-002b5abf61a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06f6f76-f66e-4f4a-bf72-c326936a4c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9468ead8-c397-4526-93d0-4703742ce919",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae70bf70-7810-4089-9c21-706f9a4659ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51222848-3ed7-4e0b-ba58-b327d3f11756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fddb7-4273-4f3e-91ef-69b82545f59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef43eeef-eeb1-40da-a5b3-465145be4a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef61114-2215-4ca7-b10b-ddf7ca5052ad",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95fccd2-4e80-4e96-9247-df732962b939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb92756-4cc3-408f-8221-5a9f0a415599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b8eb57-0030-493e-a9e3-85b3fc1d6c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f3fa7d-b4eb-443b-9dde-0edc8f8bb713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdf679-3c87-4570-a613-842466ccc848",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae614bb4-3bad-4350-9af2-d7f188d3d928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441fdaf0-726e-4e84-a7a2-5a7aad133a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8a5c8b-6342-4331-bd5f-5530ffaa76bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3718cbca-b640-4929-b0fd-cfd368831dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35238c7-1d52-4e36-a3cc-d9f114684ce2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f900c75-697e-4f10-afbe-f0bb08d8b63f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4b6d28-3cc9-4e81-9447-e0491b9b93ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbea4e3f-c59c-4e93-9fde-ad7cf7bedef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5be7adc-b9e7-477b-a057-a6ec86731176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfb9c81-6b17-47ec-b1c1-c4d7f2d19cc2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ad78fe-e739-4c27-994e-185afd0133c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf33200b-a2d1-472b-b7e4-35c47749eea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b274120-29fe-4812-9259-809fb9c4725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e22531e-da0a-40fa-9cd3-a2dc6b864fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd0af4e-2759-4bc6-9b83-a2207a5c9c75",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed36c5a-a3f3-4722-bc95-1ed0ce2b78fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2343c4a-ec61-4857-9a36-0ab959211e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc9da37-5404-42a2-944c-00955bfd0499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ff2364-614f-4629-8d67-59d22ec48872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ad6f53-305d-425d-a32b-42af7b61fa54",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977f654b-dd41-467c-bbdb-144f7f2225a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ce2f97-865b-46ce-94f5-cea229fefd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e914cb9b-4d5f-4a73-aba9-0b3e9a6629b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccaed633-58df-42f9-877d-db6721435b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba89c2f0-fff5-4d7f-8a60-c9e801f30a5e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115dfc5b-bfd7-4ba2-8013-70b58c9c9c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7f2149-09ed-46fb-be0f-ffc835784188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f1005a-38af-434b-bd03-1a348632ab3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55d9a94-c773-4422-84f5-4385f1410538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43e65d1-8105-46e0-b80c-1376cd081ee7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330acb32-d846-4c34-96e4-2a105774f72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e518e2e-7484-4f50-9e1b-007598539acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9666a50b-8695-4c2f-b755-1fb211c66b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a70506-ca65-4823-ba28-88d96d761727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bb7abf-cc70-4173-a8df-0b6a23946ee0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d7843d-bede-4a4f-ab1c-d3e611ac6817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ea18f2-73e6-463d-ae8e-60d9ee217f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b348337-25db-4937-a9b7-1a4482510e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe973e12-7dd4-49e4-a2c1-8b154e04adbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6376c513-e1e7-4007-bd26-e10c309ad499",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb4676-0e6c-41ca-a7b3-cdaee8164e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d0b46e-4a7e-44ac-9732-b76c64e8caf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45cadf3-79f2-413a-9848-760cabd471fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea7700c-a054-40cc-894e-fa6f672ad254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44df0027-d1ee-43f9-b855-65f4fdaa11ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef803c4f-2fad-4d19-9516-33845d05f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87756bd0-eb36-4c0f-a228-d350f52d3131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d528583-b4f4-4fb7-b986-1d6dd084bff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf3143d-19b1-4334-bbe3-db5270250ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68a399-308d-4f3d-9369-ce96fe130369",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf88d292-8a03-448e-b699-1523e895fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34757308-4f08-4937-852b-f06619df75dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b05234-8197-456c-8757-717d55ee7b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6745cff-66a2-4f50-be63-ea26e1d12b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaa8f53-377e-41a8-b84f-cad8cb055d9a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cec993-4450-474b-8b53-2f082f5eb142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0250ba55-76ec-4c8f-9023-a2a10e51ac4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bf4d6e-c73a-4c43-9489-0be3e53d42e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7606d8-290c-4ceb-8142-5d366dc7c845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b2bde7-ee73-408a-b035-d4e0dea724f8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa85f47-ee70-4574-825a-6994d6589da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05616d86-3a82-4dc8-824a-b638bdf4b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149ca82d-7b0f-404b-adfc-095d02d0bef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc33e1b7-c91c-40c9-9aac-bf344bf9041f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff4d2f9-904f-4ff2-a081-e5a2bd9cff4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b4ea0-263e-4300-8986-48acf97ba402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc91a512-1c95-4636-aaca-7449d143a4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6429a95-3876-4f46-95d3-ad74118180ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86680e7f-f910-44ec-b417-e1dade3bbc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011fab98-82e4-49a8-bba8-18aca50e5c3a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eda038c-8240-430f-bd94-6938ecb09233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af4a3bd-aca7-47be-b0bb-e316550793bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab7eae8-583f-423a-9501-c218f92c5804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0110ca1-b2bc-4c40-9b67-accd3536b5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33186ae0-358b-460f-8b52-33b77b1f9ded",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b033f-2186-4ef4-ad7c-946e7e92e3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c6c8fd-17c7-42cb-b35d-57f00b5389fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0439cfa-c478-4510-8f7b-0f191a749623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44564a0-9488-4334-b2ed-420bd41f0368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8acc385-2b3d-4215-9874-04e04a731ad4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d2cf8d-1058-49d8-a9bd-745cf1ccfb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefb3bc2-0e9c-4476-8da0-9820d07df23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e8578a-4b15-4eb0-b406-23849688b18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8418268-1322-4c94-873d-ea26f27c0b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbe955e-9d8c-47a0-8180-b703db4073cd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3d584c-7701-4319-b277-d148ba4c7176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19eb4af6-f5ca-4ce5-8c7b-ac081c49ffcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32296c43-92b7-40a7-b524-cd84c5428599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b34a048-f7bc-4abd-b854-917b1c1ba7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207b3f20-3c03-4acc-b2a1-0bc3ef5a2f45",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d937bb44-0210-4d94-8027-6a6c35cc75f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb9f54e-a763-4911-b037-a797768d9b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23b9013-b38d-4430-8d32-87c78c8b0029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ccaf71-5f2d-43f4-8dce-ce714f48f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ad56c1-b30a-4d6e-91e5-4be0f62be832",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ef8a4-e53b-4870-a395-684640f2df8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80dbb81b-2636-496d-a174-e2d2bb582aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30996ab4-2f80-4758-9c99-210f2ba1db03",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad03b3ec-2eb8-4dfe-8aac-0d7f6322bbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5ce46a-b589-4ba4-9822-181b75ae8ba5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c57ec55-5aca-45af-af6b-b2bf387b1450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e1cee9-e4dc-4cc1-8268-e2496c9b50d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f5b88b-8c78-4539-8d4d-cf738d62babd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94439efd-bdfc-4915-88ab-dd0c747b64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94e2a19-748f-4262-acde-b885ff31e468",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dccef36-a01c-479f-bdd0-ccbd5c5241d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7796aafa-2db2-427c-827e-1b7fe02fbcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5700a010-e80a-4c6c-ae40-ee47690335f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee6cd0d-c84c-4d2e-a722-aaaef676a031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4b20aa-188a-4f1f-a5b7-1bcf64d7c2f4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a28313-172b-4c4f-9f1a-ba1c9d06f715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f96fb3-dc25-49d0-9d7d-92bc20c6e00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683df4f-1dbe-4c55-acef-f0e724d175a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30ce1f9-ef81-4873-9ea9-2af99d1b0cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bb8c20-1633-4079-bec4-456a87f50f78",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e26908-9968-41c8-9354-5ee69a3e96c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ea676a-5fed-4ecd-a427-f12574d16aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf7a81f-6ebd-48bf-ba1b-2108c9d57057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a771c078-ecbd-4a84-b6be-6e4b2d03761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5023e4-43ed-495d-b564-c97d814a3d37",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7f30ce-ce5b-44eb-86fa-d75ce3e0ab22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9b637f-da1f-45b0-b14f-ee589b90c5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c2725-09ce-4ea2-aa01-86ed790c6297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f03386f-8dd8-49c9-9b3b-37c2a88ec3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8729d9c3-656a-4222-8c35-7e67f7e34ce6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9af1b9-c474-4f86-b63a-a9f862d4b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872e2d84-0294-48f1-ba77-33b171aecf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5515ab7-b456-44ee-96a8-87ff8b74ed74",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a667c3c-1c16-4834-8709-8944a4aa6ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c83376-244f-4f8c-ac5f-f9df94e7e66c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524f4a61-020a-4e96-9a99-c48ac34f5407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f105c1b-cd84-471e-87c2-f9d8e70cc59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2c3955-50cc-44d9-856a-3e322c213413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae2c0ce-cd70-4bca-9576-3855959edd36"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4186df3c-c5b9-4da3-882a-49068c570465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f824108-9b3c-4ee0-8d45-2f9607950019"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea2403f-899e-49bf-b4f2-64a99fd24077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12d50b95-f221-4e64-962c-d61827e1bca5"
                    }
                  }
                ]
              },
              {
                "id": "658d3c03-af58-427b-8b59-04abcc0e62d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "015ed04f-002a-4cff-b9d2-301deb18647f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00960c6-1c75-483d-8055-61e8a5029dbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4586df37-6247-44e7-8977-1ed1497740ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d160a-1528-45b8-9eda-68bfd0c5f798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8f4ed1a-64a7-4447-bc16-3f34e91e257c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a27169c2-c1ab-475d-8178-119800525fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a454196a-c872-4fb1-b9f0-6525c853168d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "795efe8c-12e2-4344-877e-b0ccfeae20b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8592fb8-bc51-4452-a9de-a93694e50757"
                    }
                  }
                ]
              },
              {
                "id": "720e5296-04b7-4fed-bf62-463ce56aed07",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "950006bc-3a76-419f-8a05-bb1ecb0b4e80",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7af1fa9-c6ce-4450-821f-03814125b298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ad7ceea-9999-4534-9ba2-e53b5d1966cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e08f176-4a2a-4b06-81a6-9068740418fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300c32e2-3a29-4283-9c41-15036327ba2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fb1766dd-17f4-429f-acea-bc1b115bebb0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04fb72a9-1aa4-43df-8877-26228280990b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90f62345-f7c4-4429-a164-27c0381ed935",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4142686-ebfd-4f6d-8860-534002f1bc8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "157ad0bf-11a2-4051-8299-1516445a99c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c4fccb9-add3-4262-a298-22fa33c91afe"
                    }
                  }
                ]
              },
              {
                "id": "222a0499-fa5a-47bd-9588-004883344949",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cadbf55a-38e7-4756-aaca-42d8e477ef38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6da19125-8530-4180-bd87-760c20b1f0bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fa94724-01b8-4707-8a10-54482afcb16c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48096594-ccc6-4b86-a8d0-085a1af144ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07d99b42-ce29-4ef2-919a-32062e1350f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e648f972-27b5-4233-83ff-03027eefe289"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4da800ef-0270-4528-8714-7840cf6ef0ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53f53033-036d-45a4-8536-daf4b919b244"
            }
          }
        ]
      },
      {
        "id": "38bca60e-9caa-4f71-8ac8-5f6c8f5389d1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "545029e2-18d4-419b-8760-bed4e7842406",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62e82679-e7aa-45c6-a891-7c852deae6d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c19f5bdd-f257-47c3-bbea-22134556c4a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f426d0-96c1-4aa3-9b89-5b1a087c58b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c919e082-aee2-4a8d-b9e8-a98a199e43b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662678f-04a2-4cf5-95df-b1f514fb3295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee6bcba8-5c93-4b40-8c71-cb2c2421592a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5daa2680-66c7-437e-8305-09948419be0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab91a915-a42d-4b43-a758-7dec2aa78e6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3b44885-7c57-4e4e-883b-54260ed81ea8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d355021b-91da-49ef-88bb-42c91d2ccc94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e86b434f-3e3d-4b60-9634-21c42ae6d1dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a3c9ae70-291b-45a0-a3a5-dbfe51771715"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7c264e9-f975-4afc-961a-1888971603f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de524ad5-b39e-4a07-8179-a3ec2129ab29"
            }
          }
        ]
      },
      {
        "id": "e3e34fab-9f26-4636-829d-2900e4a1ab19",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cf015bd4-82aa-447f-b41f-0cbbcf228e92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d40aa5b8-3426-4104-9416-be38d278d4d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ee899d4-ef53-4923-8afc-1e1542462793",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3228122-5b1b-42c1-bc38-1dfa00078784",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0441e63-9f6c-4458-985a-7f75cc683b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5238e5-51ed-45ed-ac97-cf941f05f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83285ac9-07cf-41d8-be49-78de2edc572c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa4f6d8a-6f70-4653-b563-11cb4e7150bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69b6b175-862c-4928-b798-b8631733b5ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4fe3ddc-9eae-4f4a-8626-350abd29e8e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac5b30ca-52c4-42d0-8108-657acc37a0e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2847ec2-f112-4012-a747-14106ae56803",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94fae0d1-732a-4bce-ba6d-0e5c2ebd7ae5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bb9970c-3b07-4ecd-824a-48fba66a2415",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "958c637e-959e-40b7-a9aa-a40c2f61bdde"
            }
          }
        ]
      },
      {
        "id": "04042f4b-bd08-49e0-9a2b-d1dbdccd255c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cece3a44-3521-4992-b4c4-939ec5107613",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6854a018-9c9b-490f-8b9a-aef8ecfa2305",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7657c62b-23e1-410a-8491-9d02cffb7404",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230d7f13-ebea-4358-83d4-eb13699809d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf900fcd-941c-46d6-bbc6-641e69382af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2570dc-50fb-4443-9b78-744b840176cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68648cf7-9a84-467c-8319-ad47947caf71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af4d4e45-1eae-4949-b8c7-1e04124cd725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c704a74b-50ee-407f-b27c-7803c60f4b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "766de3bb-e1a1-48a8-90a5-66831a914aa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63dd60ad-1d5c-460a-9168-678850ad252f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7932135-c60c-420a-be97-44a19f09c48d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80cadb44-5ecd-464c-87a4-70eea7e487db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e13cfbf-f3f6-4bd7-95e8-104e04b802ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c802433-d5eb-4cd9-8dd3-f8f9b004300b"
            }
          }
        ]
      },
      {
        "id": "2fc99f3c-3642-45fa-a402-46a2cb23049b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31d35b8b-1317-4f2a-87d6-c508f6788b6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00e4ca55-4107-4c55-9ffc-78e83aae2097",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1e664c7e-e3e0-4d19-8835-512d77ea23d6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9ebc7ec-5916-4127-9049-6e9fb2cee84a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3124593d-d8f3-4e1c-9bda-d7b3a5ef68ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 58.183098591549296,
      "responseMin": 22,
      "responseMax": 388,
      "responseSd": 26.791742399875105,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694219498595,
      "completed": 1694219527450
    },
    "executions": [
      {
        "id": "b3ca211d-a083-4d29-8eb7-38d93c630569",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "70a85a87-7c67-40bf-992f-8a8c4f0bb970",
          "httpRequestId": "3f77aa61-423c-4025-a2c5-7734d5f4f96c"
        },
        "item": {
          "id": "b3ca211d-a083-4d29-8eb7-38d93c630569",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a8d09833-8306-449e-9325-fc736917823c",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "5733282c-f543-4973-837d-12a8b7c85b1d",
        "cursor": {
          "ref": "51ea4f60-5b8a-4fc0-a542-885cd18ccd46",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d229b590-40f4-41f0-9c8d-ecb50c5eb31f"
        },
        "item": {
          "id": "5733282c-f543-4973-837d-12a8b7c85b1d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "803eec53-0412-4fe7-8830-2ee12c5f399b",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "27864ce2-9dcd-48c3-b3c2-5aa946974b66",
        "cursor": {
          "ref": "16c58a04-bcea-445b-b34b-ba14c2c83486",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1e7202cb-d98f-4296-8cd5-90e208abb1de"
        },
        "item": {
          "id": "27864ce2-9dcd-48c3-b3c2-5aa946974b66",
          "name": "did_json"
        },
        "response": {
          "id": "946a606f-1673-4250-bf7d-a9a0b8be0e71",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f249c-1d8e-47c8-9361-e0439b43215b",
        "cursor": {
          "ref": "fd273577-727f-4c84-9dee-287cb3a5f143",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "878f990a-435a-45a1-a0d4-b63dc6e00073"
        },
        "item": {
          "id": "2c1f249c-1d8e-47c8-9361-e0439b43215b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a11707e7-b78b-4e18-beff-0532f9df888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f249c-1d8e-47c8-9361-e0439b43215b",
        "cursor": {
          "ref": "fd273577-727f-4c84-9dee-287cb3a5f143",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "878f990a-435a-45a1-a0d4-b63dc6e00073"
        },
        "item": {
          "id": "2c1f249c-1d8e-47c8-9361-e0439b43215b",
          "name": "did:invalid"
        },
        "response": {
          "id": "a11707e7-b78b-4e18-beff-0532f9df888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559dbffb-1764-43a6-8abe-78c4a30a2bd8",
        "cursor": {
          "ref": "e765ac87-1ecf-474c-b134-1b38cee8c06d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd123852-1d8b-4b25-bda1-216d6ee3e12d"
        },
        "item": {
          "id": "559dbffb-1764-43a6-8abe-78c4a30a2bd8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a9dbbbdb-b94c-497b-9553-ad87c3376432",
          "status": "Not Found",
          "code": 404,
          "responseTime": 98,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0090ce73-825b-4224-ad1f-a68b1f07ca9d",
        "cursor": {
          "ref": "07f8926e-4dc6-47bd-b355-98af9cb57fad",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "65a4ae62-3775-418c-8dbb-95853751deb5"
        },
        "item": {
          "id": "0090ce73-825b-4224-ad1f-a68b1f07ca9d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "afd02ca6-ea56-401e-99da-d329e84aeab9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb2ee8-ce24-4312-ace1-e4f8bb729d20",
        "cursor": {
          "ref": "6aaa01d8-6b14-43c7-b815-666b39434b72",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "28a25b9f-d96e-4d94-8455-1a734c39c7db"
        },
        "item": {
          "id": "3afb2ee8-ce24-4312-ace1-e4f8bb729d20",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ecbf03d-f12a-442c-ad80-cb6ca2e38b50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7155b525-447e-43cf-9e2f-5cd141cdf206",
        "cursor": {
          "ref": "327b07de-af4f-4304-830e-8151fea8540d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d120ed60-9093-49ac-8cf6-5825c699b79b"
        },
        "item": {
          "id": "7155b525-447e-43cf-9e2f-5cd141cdf206",
          "name": "identifiers"
        },
        "response": {
          "id": "81eb620a-d335-4ad1-994f-c1657db8333b",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b67906f-0867-4613-8d93-b574cf899bee",
        "cursor": {
          "ref": "2e7eda61-00b9-4806-911e-c4211a016895",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c4c61417-6053-430f-b8e8-b0c5523583b7"
        },
        "item": {
          "id": "7b67906f-0867-4613-8d93-b574cf899bee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3aa914e5-d4d9-4872-a1c4-fcfaabd83e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac425f9f-e7c0-4765-9124-c50d69b6898e",
        "cursor": {
          "ref": "7b96638f-7d6a-4cc1-87d8-cf719f27267e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bc86250-8b05-4683-a075-9cecf7a4a1e8"
        },
        "item": {
          "id": "ac425f9f-e7c0-4765-9124-c50d69b6898e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "440adbac-a0be-4b64-8f66-b879dc82cf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd183f-f7ca-4a10-9ca0-7437fa754e05",
        "cursor": {
          "ref": "91bd9236-fd0e-4ff0-9e33-b760bd69b54b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac5d843e-e919-40a5-84e2-cc5518e26066"
        },
        "item": {
          "id": "b4cd183f-f7ca-4a10-9ca0-7437fa754e05",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d07257f7-cf16-48e4-a03f-dce100532cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10be1596-884d-4123-827f-0d98600db02d",
        "cursor": {
          "ref": "b55967e9-9c33-44ef-a9aa-54016b5cac80",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0c4e12db-06a4-4590-8d09-700dd2e275a1"
        },
        "item": {
          "id": "10be1596-884d-4123-827f-0d98600db02d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "177336ac-8b2e-464b-b357-82b54f6dc338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7a90b8-93c1-4139-908e-22fb3ca9652c",
        "cursor": {
          "ref": "37e71adb-a7d4-4a54-af52-fbecdc4ad14a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "24221cf1-4b22-4b0c-8961-e357133a0e34"
        },
        "item": {
          "id": "6d7a90b8-93c1-4139-908e-22fb3ca9652c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d00ee47e-e8ac-410d-b6b3-dd124e0e14df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d718e121-cba8-4164-836c-c23d4e835200",
        "cursor": {
          "ref": "a5dbe581-f8b4-4ed3-bafb-8daa6a026de9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d96ad07a-60fb-422b-a000-b61285cc6ac6"
        },
        "item": {
          "id": "d718e121-cba8-4164-836c-c23d4e835200",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9d1bee71-c698-4620-b872-26f73f0e9893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb4751-ded5-4b2d-b3c9-265eacef08fd",
        "cursor": {
          "ref": "1914ae4c-8505-4283-8a2b-efacf1c28bd2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d3da3097-c285-4e97-aee0-a8ade5cb4373"
        },
        "item": {
          "id": "57fb4751-ded5-4b2d-b3c9-265eacef08fd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "72859571-815e-4186-8e9f-f558d7c47816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b000c30-1443-46b8-8d03-9bcab1fef001",
        "cursor": {
          "ref": "246ab49b-caff-419c-acdb-5d7c476ee80b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0c32f41d-b8a3-4fd5-8c9d-c0a95c016b79"
        },
        "item": {
          "id": "7b000c30-1443-46b8-8d03-9bcab1fef001",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "54be832e-e67f-40ce-8000-99fcbdf3342b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdaa93d-119a-45c9-a869-bc7f7aec8824",
        "cursor": {
          "ref": "700bcbe5-372d-48b3-ad13-c8167137a6dc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "21326acd-ca66-40b1-8e89-44d00206d9dc"
        },
        "item": {
          "id": "8cdaa93d-119a-45c9-a869-bc7f7aec8824",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc0e3a84-fe07-40b4-b96f-cc5deeafbb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dcd372-1e03-4b3b-aa8a-dfb6f831342a",
        "cursor": {
          "ref": "e8bb5dcc-d240-4ef0-b02c-405589a6e98a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "455551c4-2cb5-43a7-bafa-0f561985e4ea"
        },
        "item": {
          "id": "36dcd372-1e03-4b3b-aa8a-dfb6f831342a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cffb1ecd-4615-42be-ac0d-25e55e02ec0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1aa358-6c2f-4adc-a1e8-35f3091f1da5",
        "cursor": {
          "ref": "24c57713-e350-4846-8913-9d8e2a1037a6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "336084c3-7604-4604-890a-c7e20271687a"
        },
        "item": {
          "id": "ae1aa358-6c2f-4adc-a1e8-35f3091f1da5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c251cf98-a597-4413-857d-9a66b179bcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4b7284-04d5-44ea-91fd-fd50d1cb7a65",
        "cursor": {
          "ref": "3ea469a6-06c5-42f2-83c7-1b79d114ee07",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "df14ced2-a021-4fd1-8c74-388b3adb3712"
        },
        "item": {
          "id": "ba4b7284-04d5-44ea-91fd-fd50d1cb7a65",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9129ae2e-b214-487c-8330-cddab4f64013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b67cf4-29fb-412f-b861-094be5439b85",
        "cursor": {
          "ref": "7d912dd8-c7de-4973-9381-8a8369a4c7d3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "44ef1f94-ff8a-4f2b-9beb-1f5d4100feec"
        },
        "item": {
          "id": "a8b67cf4-29fb-412f-b861-094be5439b85",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "716a7d1b-70b1-4b98-b62b-a2ff609a7e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3adcdbf-2866-422d-86c7-90d37ef67633",
        "cursor": {
          "ref": "5af6d11f-ac4c-4bd7-a3c6-dbf778464810",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1f5f603c-3e82-4d48-a01d-2470ed5c632d"
        },
        "item": {
          "id": "b3adcdbf-2866-422d-86c7-90d37ef67633",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "116977d5-732b-4874-9f67-29225f02fa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9055d46b-8f2f-45d8-95ce-bffb6b93a38c",
        "cursor": {
          "ref": "789b9c07-8fe2-4a07-bc0c-2bfa6d14b77b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0358670-63c2-471d-a79b-7ebe1a8edf6b"
        },
        "item": {
          "id": "9055d46b-8f2f-45d8-95ce-bffb6b93a38c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ee0fd6e1-4a08-49aa-a8c8-ef4699973a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191659a3-64bb-4b7f-a7ef-c7949234c84c",
        "cursor": {
          "ref": "30ee5992-8d6c-4178-801a-5ade6090f718",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "03bc986d-772f-4778-bd2e-b0bf8f256527"
        },
        "item": {
          "id": "191659a3-64bb-4b7f-a7ef-c7949234c84c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f3397731-8fe2-488b-b0ff-3c54b04e450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed330a1-22ef-4059-b62a-9bcfa1591183",
        "cursor": {
          "ref": "4e9dce5b-266c-4409-94b7-dd8e1d4d0ab1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ae80bdd2-b39d-4851-8685-01c0eea1481e"
        },
        "item": {
          "id": "1ed330a1-22ef-4059-b62a-9bcfa1591183",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b9d32afb-866a-4efa-bf5e-b5e79f22880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4874e3-de88-442d-a12b-e84075f504b2",
        "cursor": {
          "ref": "45625f2c-c545-447f-aa25-80278f91a518",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b2a66f4e-b7d3-4649-9a55-4fc87fdde4a4"
        },
        "item": {
          "id": "7c4874e3-de88-442d-a12b-e84075f504b2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1e38c6b3-bba2-40de-a045-0e76c17fd41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a5958f-97f9-4070-8935-31ea1d8d7a6b",
        "cursor": {
          "ref": "d30953e0-7a2b-4435-8164-96782ea3f794",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5d32516e-e844-433a-a58b-d936e964c1e8"
        },
        "item": {
          "id": "12a5958f-97f9-4070-8935-31ea1d8d7a6b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a4c5e527-8a4c-44c6-b220-c58e29ecc086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783183ba-1eac-4ce1-a43c-0bffe6f1e2fe",
        "cursor": {
          "ref": "9152db27-6323-4ade-bb12-4b8fb56f4159",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc1aa475-3e55-4b30-a8b2-642612fbf48a"
        },
        "item": {
          "id": "783183ba-1eac-4ce1-a43c-0bffe6f1e2fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "78380451-2466-446e-92b6-5f7cf9b0642c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa7c7bf-0f9c-4627-a7c3-6347e612709f",
        "cursor": {
          "ref": "2444b2bf-5ad4-4f09-a1c3-a8a5f906770c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "54c834c5-56b6-4d9d-bfaa-4216854cb59e"
        },
        "item": {
          "id": "1fa7c7bf-0f9c-4627-a7c3-6347e612709f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ea11a778-a7f0-4049-8d41-42d7b04805fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eb51a7-8542-4608-afb6-a3f8778e74c2",
        "cursor": {
          "ref": "a7c7a573-982d-4e74-8509-37b7634022bb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e5192cdf-642b-4e81-8738-2ecf8a1f15aa"
        },
        "item": {
          "id": "06eb51a7-8542-4608-afb6-a3f8778e74c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27b7c2a2-17fc-4c96-bf04-6bfc6e755e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8091e54-de49-4f54-91fe-056fd81f00e1",
        "cursor": {
          "ref": "d83ee52c-e9a7-4744-8073-b58194254fd1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b12c85c-80f6-4f71-9690-966d7c17f68e"
        },
        "item": {
          "id": "f8091e54-de49-4f54-91fe-056fd81f00e1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8387d4b6-2ea1-45bd-968a-dabef45d1ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccc547b-8b88-448c-a2e2-0dce8cc45995",
        "cursor": {
          "ref": "1f947ecd-673c-45b5-93c8-2435769b8d2d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a54057b0-66da-4c6f-93aa-949eb2c79720"
        },
        "item": {
          "id": "8ccc547b-8b88-448c-a2e2-0dce8cc45995",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ab0102cd-6bce-4216-8e20-160c2771a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30a24ed-d4b4-4bd8-a754-df0a3ddc9af7",
        "cursor": {
          "ref": "4e0e4b75-2984-417b-a59c-ef57163e1ea6",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc7ef84e-9242-4023-8857-528338fef757"
        },
        "item": {
          "id": "e30a24ed-d4b4-4bd8-a754-df0a3ddc9af7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2665f42a-bac7-49fd-b797-4e80601feda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b789e6c-a7fe-4f71-8f63-e9e93b5fd6ef",
        "cursor": {
          "ref": "fe2380b8-0c39-4a1a-8224-548f2b94a53c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fce54473-bd76-4ab1-9390-bbc073a14aff"
        },
        "item": {
          "id": "8b789e6c-a7fe-4f71-8f63-e9e93b5fd6ef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2f4241bc-1650-498f-812f-39a5f17597d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ba7423-92f5-47ef-9de1-0c7396888e02",
        "cursor": {
          "ref": "e70bb535-2af0-46cb-bc94-50a030a3e582",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5d177028-a436-4569-bdf8-7c6ad28e9289"
        },
        "item": {
          "id": "35ba7423-92f5-47ef-9de1-0c7396888e02",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ed449232-f3d2-4098-9dfe-e650c6e3a0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b4fece-a0a0-4a83-b5bd-fcd6e9d1bb18",
        "cursor": {
          "ref": "17e6acf0-1594-41f3-bdb6-8e57b6bdbd34",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c5ee12ec-e608-4ff5-acb0-824202c43c9e"
        },
        "item": {
          "id": "f1b4fece-a0a0-4a83-b5bd-fcd6e9d1bb18",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e922ca10-0f53-4090-abed-63862dd25196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e14d0a4-36cd-4eb3-bd4a-a8f6b57c7aa1",
        "cursor": {
          "ref": "d6d119ae-08e6-4b24-aba9-909e016aa1d1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b45eee2-4251-43f1-938f-7522eaf54b21"
        },
        "item": {
          "id": "8e14d0a4-36cd-4eb3-bd4a-a8f6b57c7aa1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6d3c25b6-e091-4d4f-ba20-66c198b4ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d39e4-880e-4b30-8866-714152e107c7",
        "cursor": {
          "ref": "00b31b1c-9361-4bd0-a29c-9482e162feb8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5a318c1e-c04c-4fd0-8ff7-172c78a3af09"
        },
        "item": {
          "id": "9d3d39e4-880e-4b30-8866-714152e107c7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "110cb7a3-7190-4c22-a7dc-6222ba906cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d30bc9-3d46-4c69-82be-047029756b31",
        "cursor": {
          "ref": "e2e2e206-51fb-481c-94f3-708db8467d96",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "14617aab-0704-458c-b742-2764c8482f74"
        },
        "item": {
          "id": "26d30bc9-3d46-4c69-82be-047029756b31",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c17f7479-8513-40c5-8dc0-a66e0627984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ffbd6d-49fb-4e5e-b963-542a421ec648",
        "cursor": {
          "ref": "56e77a1e-5070-4ce9-aeeb-4e0a93732c06",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3436b7b9-5c9d-4096-927f-451d40b209a0"
        },
        "item": {
          "id": "79ffbd6d-49fb-4e5e-b963-542a421ec648",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bbfc52cb-e0b3-45c0-84e0-8a323789462b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94f3dd5-15d2-4607-8150-ce55e8ef0cd1",
        "cursor": {
          "ref": "eb6ab29d-3246-48a0-9eaf-eaaafdb15386",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d7036a4-837d-46b9-9009-4b0220f691d9"
        },
        "item": {
          "id": "d94f3dd5-15d2-4607-8150-ce55e8ef0cd1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3cc72fcd-f5b7-41ad-b279-ebabb16c5e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a0a077-1504-40b3-a7aa-fab299e0939b",
        "cursor": {
          "ref": "3f6cb997-4dcc-4269-aceb-750628fc5c7a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ecdf1865-9f08-486b-853f-fcdfd4496aaf"
        },
        "item": {
          "id": "17a0a077-1504-40b3-a7aa-fab299e0939b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "683a6fc3-df79-429a-9601-97ecc60e474d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c467ae-57b5-4cf2-ab8a-bb5b29627daa",
        "cursor": {
          "ref": "73af3bbd-c55d-44fd-9b7e-a94d3e411e0c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e4fb4739-4e43-4d52-b68b-26d69d8bf13a"
        },
        "item": {
          "id": "92c467ae-57b5-4cf2-ab8a-bb5b29627daa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c9b99c0c-cc4e-4f88-a913-cfb3c6a3e7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbdca94-c806-4656-9525-943465de8016",
        "cursor": {
          "ref": "588f4160-9c8d-4cb8-8892-cfc7b5fe3b1f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a626b876-26b7-4eea-a812-f76297453f9c"
        },
        "item": {
          "id": "edbdca94-c806-4656-9525-943465de8016",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "feb51efa-6f28-4cdf-9c0f-73e1e6f447eb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba20f48-1060-4f8c-92f2-aa8f3f3d0b52",
        "cursor": {
          "ref": "7c0c75a6-0f23-43b6-9002-7358db8dea15",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4b01532-7e7c-42dc-bfda-228680360b1a"
        },
        "item": {
          "id": "aba20f48-1060-4f8c-92f2-aa8f3f3d0b52",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3e7f57c0-89fc-4f0d-8eb1-edc8bee0a9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac077b4-5b1c-44bf-a427-8ccc920d3f35",
        "cursor": {
          "ref": "4dd499cd-65aa-4848-bb2c-1c50a7609824",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "95e3d1df-8136-4718-a2f5-774c0fd4777d"
        },
        "item": {
          "id": "0ac077b4-5b1c-44bf-a427-8ccc920d3f35",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "94a06c18-dfad-4699-9a63-30b41a2c854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0703a8-dc4d-46d4-873c-dad4f8fc0d47",
        "cursor": {
          "ref": "7bb53d95-7ecd-4c9b-98cb-4b41cb579b92",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "77bc8fa5-9e52-4470-a19c-b4ae424e84ed"
        },
        "item": {
          "id": "2d0703a8-dc4d-46d4-873c-dad4f8fc0d47",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "71d14570-e05d-4e11-b251-d95683299367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc09903-a306-4785-a68f-288bd860cd28",
        "cursor": {
          "ref": "3038d06a-b035-4cd2-964e-0c11d0ae55f8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1c3544d4-0570-46aa-83f2-101151648f01"
        },
        "item": {
          "id": "4fc09903-a306-4785-a68f-288bd860cd28",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c1a2e62f-e7bb-4bc0-8c26-4e261092c8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5785372b-2b8e-4bc8-ad47-0ef7e8d40182",
        "cursor": {
          "ref": "28739c96-ed0a-49cd-b5ae-d73d07347679",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "443e019a-108f-4e75-bec3-8591cc718ea9"
        },
        "item": {
          "id": "5785372b-2b8e-4bc8-ad47-0ef7e8d40182",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0d7c1ee4-c052-4d2f-8a08-a3017333c020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed03cf1-9543-499e-a87f-a97405941f0c",
        "cursor": {
          "ref": "cd174e6e-d908-4795-bd97-9bb03f9cb503",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee98933f-7c2b-453b-ae51-757e48f13e69"
        },
        "item": {
          "id": "fed03cf1-9543-499e-a87f-a97405941f0c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ff1568b-c21a-4354-976f-d71746685139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5990ffc5-ebf5-46be-9e78-6ad879fe525a",
        "cursor": {
          "ref": "d8ec4a54-b66b-4539-884a-5c27fd5c7226",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "51063621-3b61-4dec-9719-192703f4a4c4"
        },
        "item": {
          "id": "5990ffc5-ebf5-46be-9e78-6ad879fe525a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7d9f29e3-abd7-43a2-9e16-08c842dd4fb6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9ba281-d078-431a-b1f0-7511a73dd1f0",
        "cursor": {
          "ref": "643a2c2e-795b-4ab6-9886-4ce50ca7e6bf",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d5a254cd-aa09-4d63-bb0b-2d145f365ceb"
        },
        "item": {
          "id": "4a9ba281-d078-431a-b1f0-7511a73dd1f0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2c2c1e61-6598-4c81-939f-d7b5a6db390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9c1541-6a20-440b-8218-98d9fa88ba69",
        "cursor": {
          "ref": "c185fffa-bc63-4fa2-9571-fbfcc47b247f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32235267-5583-42cd-ad77-20cb75af095e"
        },
        "item": {
          "id": "2c9c1541-6a20-440b-8218-98d9fa88ba69",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f2cb6ac3-433c-4025-8b9f-121bf8a7bd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee9a5d-881b-4299-8a6b-b3894bb7099f",
        "cursor": {
          "ref": "27f0d066-b6a1-4b10-896d-3b536db4ad9f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "799fa2b1-6692-4cc6-a358-0304614f3321"
        },
        "item": {
          "id": "78ee9a5d-881b-4299-8a6b-b3894bb7099f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ba6ea0f-7f6c-4e6c-a3e4-60b9e747abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e302c30e-a4bf-47e0-a869-a53862e644e9",
        "cursor": {
          "ref": "964de971-d2de-40f7-a512-deb5c3646d06",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cbabf6a3-5c26-42e1-be5d-b3a029d43b3d"
        },
        "item": {
          "id": "e302c30e-a4bf-47e0-a869-a53862e644e9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6a9d98be-5e94-4c5c-9866-9ac1d4eb617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bea5eb-beb8-45a3-b5c0-5a4b73ab591f",
        "cursor": {
          "ref": "656f12fd-49be-460b-84e9-296d40008915",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cd6ee679-bb61-4007-ae2d-4fd61f513ae3"
        },
        "item": {
          "id": "83bea5eb-beb8-45a3-b5c0-5a4b73ab591f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "74f43912-01f4-4d29-ac6b-cdcb295d4600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a7643-022e-4e72-bad7-d19a818a4aa9",
        "cursor": {
          "ref": "50d6aab1-2d75-4fad-abed-e366e83c0567",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5125a7c7-ba57-48c0-bbaf-909cba871e86"
        },
        "item": {
          "id": "ea8a7643-022e-4e72-bad7-d19a818a4aa9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fae1b56f-7933-41aa-beb8-f6429056e9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd84bf70-3007-4f9e-8e3b-7b9fbe9acac4",
        "cursor": {
          "ref": "661707ba-8e36-4e69-ad9e-e34b43e6dbfb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "21b67378-676d-432e-bc65-fa2cb7e55c0f"
        },
        "item": {
          "id": "bd84bf70-3007-4f9e-8e3b-7b9fbe9acac4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9e2ce3a4-d44b-4e50-a376-3bd89d26ed60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa329b54-2bc7-4700-9fe3-db9e8ac2ca41",
        "cursor": {
          "ref": "a8b03002-12e8-48a1-ae67-a3e49047934c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0dde4c7c-5fdb-45c1-ac97-fce9a29ae805"
        },
        "item": {
          "id": "fa329b54-2bc7-4700-9fe3-db9e8ac2ca41",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc06674f-4476-4c26-99e6-749774d6b3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81495785-bc5c-499b-8c18-a3f41e25b4b1",
        "cursor": {
          "ref": "b6efab6e-f256-4bec-be56-1409d54427ce",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "45d3e57a-5034-441a-ad53-faec1ac7c4bc"
        },
        "item": {
          "id": "81495785-bc5c-499b-8c18-a3f41e25b4b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "01c07882-021b-4c03-86fb-5432ebe5c947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c3dd8-83e4-4fed-b706-cb7e0365870a",
        "cursor": {
          "ref": "e6ebad52-68c7-4a4c-9642-7276c16e18fc",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7203bb8e-cf7a-4c05-96a6-99451846d928"
        },
        "item": {
          "id": "f94c3dd8-83e4-4fed-b706-cb7e0365870a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52047469-4cba-486a-8ce0-b2c7b509c2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3d59d8-76a0-49fa-ace9-01d06b87d380",
        "cursor": {
          "ref": "011eefb8-3059-44de-8fb5-8299dd0a9093",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cc842fd1-850b-499e-8aa8-b7ae17fb8d90"
        },
        "item": {
          "id": "9e3d59d8-76a0-49fa-ace9-01d06b87d380",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "384d239f-6226-4a60-a4d6-d2e3ca5e6e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42561e7f-784e-4183-b964-06bd791112c5",
        "cursor": {
          "ref": "b53f91d8-f3a2-4f71-a92a-6124ee5bfb0e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d01f27c-abec-4a99-b131-0500e9abc3ea"
        },
        "item": {
          "id": "42561e7f-784e-4183-b964-06bd791112c5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c31ba210-effe-48f3-a2ae-976fff6af1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eefefd-70a3-4b6f-b089-ed221b63d93a",
        "cursor": {
          "ref": "18265c41-1fcd-4c57-8bec-c8c6d61d07dc",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "423769ad-2e25-4da5-9e1c-47f0cef12b16"
        },
        "item": {
          "id": "15eefefd-70a3-4b6f-b089-ed221b63d93a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5f30cdfe-0bf5-4dab-ab36-42905b629389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e74a9b-4e91-4b0d-b0bf-435b1e2d9425",
        "cursor": {
          "ref": "aa918a78-8102-4a84-8774-8ac2111241ad",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "07f75d56-3847-4341-a4d6-da802fec85fd"
        },
        "item": {
          "id": "95e74a9b-4e91-4b0d-b0bf-435b1e2d9425",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8f824e3f-53bc-4c99-b59b-c69c9cd37490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35281f0d-6525-490e-833d-4ebfc06da50f",
        "cursor": {
          "ref": "d7a1d1ad-103e-4174-8db0-45235977bec8",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3871bd29-8b18-403f-9ed6-d735a69c7612"
        },
        "item": {
          "id": "35281f0d-6525-490e-833d-4ebfc06da50f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "31247019-58f7-463d-a893-3896a8577d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44201811-fa38-4d34-88bc-876bb33058ad",
        "cursor": {
          "ref": "753169a7-f5a7-4e79-bcfe-15849069646e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0eccdfd2-fdfb-4851-8481-e3a9b1c5ba5e"
        },
        "item": {
          "id": "44201811-fa38-4d34-88bc-876bb33058ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b38d35b-e717-4234-909c-91ec2d2a422d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9d4c8-84c4-4574-b129-adc6507081db",
        "cursor": {
          "ref": "57131d5c-861a-43a3-9ce9-d95a621f0502",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1758d3f5-9cb7-4246-8f6b-838b39d4c230"
        },
        "item": {
          "id": "c0d9d4c8-84c4-4574-b129-adc6507081db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d07b870-8184-4eba-959f-3cd68d402d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f6c1ac-c317-4494-9be4-cbec6c6fd0ad",
        "cursor": {
          "ref": "c0a54dde-26e8-42d7-90d3-f27578617d48",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9eeabeba-da5d-4b17-8328-c61988bc0aa3"
        },
        "item": {
          "id": "24f6c1ac-c317-4494-9be4-cbec6c6fd0ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ad807be-788b-4125-bec9-9a6eae298101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df3c08-db25-470c-9511-8dee5751db7d",
        "cursor": {
          "ref": "0dacb9dd-b7ee-43c9-a9d7-8b0521026de6",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f3d3318-1642-4f1e-8fe2-7c269670da7f"
        },
        "item": {
          "id": "28df3c08-db25-470c-9511-8dee5751db7d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9834121e-1d5c-4b43-b620-8711c2316366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c403a3-0a30-45d9-b966-5e5f72f72c8d",
        "cursor": {
          "ref": "5e597d30-4cc8-4120-8339-2b31a03d736a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "81b1d8be-086a-4486-9b76-af58d4748f00"
        },
        "item": {
          "id": "24c403a3-0a30-45d9-b966-5e5f72f72c8d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "71dae37c-40e1-48a4-8b36-530a342ee279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda4f96b-173d-4916-94a2-1ce8cb3a78d4",
        "cursor": {
          "ref": "1f966cc7-9cb8-4e66-96b0-9d1071724a40",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b12ba2a0-3356-4c66-b48d-e418d6bdc395"
        },
        "item": {
          "id": "cda4f96b-173d-4916-94a2-1ce8cb3a78d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a4910f7-d64b-4aee-9372-4dc26e38f983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9e79db-151d-4876-b807-91bfb70ba432",
        "cursor": {
          "ref": "3a956665-9d50-496a-b945-658bbe42154c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4780787f-7d8c-4d20-97bf-6323dd547cb3"
        },
        "item": {
          "id": "fb9e79db-151d-4876-b807-91bfb70ba432",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48f4c6cb-487b-43ed-9629-006c01716e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded3f2c6-3639-4ae9-a3e0-27fe2cd4b8a0",
        "cursor": {
          "ref": "2e1e94b1-46b8-4994-bad2-6f753e0e2f78",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7a296700-913e-4c01-ba06-8e16a5677079"
        },
        "item": {
          "id": "ded3f2c6-3639-4ae9-a3e0-27fe2cd4b8a0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "48ecf103-92af-41fd-89e9-c05cc2feb803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0135e73b-5fa7-45ee-875c-b600df7ede2e",
        "cursor": {
          "ref": "e54e652a-6514-43a3-afb7-a15ff803da4a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "972f7e0e-5bc3-4f3c-8474-555f858431a6"
        },
        "item": {
          "id": "0135e73b-5fa7-45ee-875c-b600df7ede2e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cb169593-8ac5-4dd1-903c-16a84408cd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fbf2d8-c585-4541-8392-7afde87147bf",
        "cursor": {
          "ref": "110cdea6-b728-49c8-9915-7d40b934a5e3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7ac92b73-8768-40dd-bda4-00147ad72769"
        },
        "item": {
          "id": "28fbf2d8-c585-4541-8392-7afde87147bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0d434642-de81-42d3-a1bf-5eac6cd53276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96fb89a-c037-4d88-b04f-95f758ebec2a",
        "cursor": {
          "ref": "6f562681-723c-4db6-8b48-415d0d0d80cc",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "49aca6d8-c162-41ea-b57e-19001323ea5e"
        },
        "item": {
          "id": "b96fb89a-c037-4d88-b04f-95f758ebec2a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7d59dc92-cb1e-46df-96c5-93987e54e2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abde67c-9b26-4aa7-ba49-46e33015b688",
        "cursor": {
          "ref": "efb4a95a-650c-4a03-a569-bae844005300",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f3908b8b-e546-4710-bf66-38bbf7edb972"
        },
        "item": {
          "id": "2abde67c-9b26-4aa7-ba49-46e33015b688",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3915d2a-f668-4ea4-ab61-b7ee9546f23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad68d4cc-8114-46bb-983c-2470b97b3857",
        "cursor": {
          "ref": "fe78b58a-8a7c-4cae-a52c-9812043e3fc7",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "39850364-f288-4a43-b6ab-caa83e5dba2d"
        },
        "item": {
          "id": "ad68d4cc-8114-46bb-983c-2470b97b3857",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "14d11635-d5c8-45aa-a5f5-7ec8d8951b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a7e867-1953-4943-8f17-9996cae35565",
        "cursor": {
          "ref": "92dad1fe-5359-4e5a-8789-057efd8a677e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bca49f60-c847-48e7-8ee1-84b65976d069"
        },
        "item": {
          "id": "72a7e867-1953-4943-8f17-9996cae35565",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bccefd9c-954c-4406-9dd9-c10f047c2be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e898497-fd18-4f36-bfec-6c8cbe59966f",
        "cursor": {
          "ref": "f47b099f-783c-4250-8af6-02b8f19fb592",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf6d7b1d-cd3a-41f5-929b-a0b1b6f89753"
        },
        "item": {
          "id": "2e898497-fd18-4f36-bfec-6c8cbe59966f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7f3c75f8-d06d-49b9-b071-2b40fe5810b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f3c1d1-d4ac-4597-b4ba-20fca4b85548",
        "cursor": {
          "ref": "8161d5ec-6e80-47b3-9466-360e78f9f38e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e05438f7-fbea-4ffb-9405-260a422d0410"
        },
        "item": {
          "id": "e9f3c1d1-d4ac-4597-b4ba-20fca4b85548",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f9dac16-4da9-49d7-89d2-639a71675e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6006fda5-3cb0-4482-bba6-1279e844679b",
        "cursor": {
          "ref": "63d09fb7-2b31-4fd0-b6d3-52dbfb4d4f4b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e624bc2a-e6d4-409f-a307-1cac4b6c8403"
        },
        "item": {
          "id": "6006fda5-3cb0-4482-bba6-1279e844679b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e7761eb4-14ff-400a-a194-4488ec446e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0081217-183c-4603-a84e-d2915c6ba800",
        "cursor": {
          "ref": "5c4bfc47-5c01-4108-b2f1-4374038f4b3c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2c839141-c4af-4b0b-ad53-418cb0257982"
        },
        "item": {
          "id": "a0081217-183c-4603-a84e-d2915c6ba800",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9835e6b1-90b5-4d3c-9db9-f9c982102e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259430f-33d8-4d39-826f-1c5b641e4e51",
        "cursor": {
          "ref": "67fb0928-112c-4c02-858d-7e5acc7d59ed",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "87a1827d-c04d-4a79-823f-d1e155c6e5f9"
        },
        "item": {
          "id": "e259430f-33d8-4d39-826f-1c5b641e4e51",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "24678878-0bda-4442-98db-02a95468a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430d476e-43da-41b9-adb7-3e5a49ad12eb",
        "cursor": {
          "ref": "61315033-6208-4fe9-a091-6808cf97d046",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5b497dc2-f284-4ac6-8a8d-41f758281cc5"
        },
        "item": {
          "id": "430d476e-43da-41b9-adb7-3e5a49ad12eb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "16eeba4a-528b-4730-9ba5-ce8013e46f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcc6089-04d9-4c58-8c49-cd8b8e54d78c",
        "cursor": {
          "ref": "b082d230-27bc-466b-b2e4-f01ef5350584",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b17ed8c5-60b4-49d8-8831-d83bd7ca2a8c"
        },
        "item": {
          "id": "7bcc6089-04d9-4c58-8c49-cd8b8e54d78c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "74e59293-3064-40d0-b47e-2069396c0a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ad44f-9c8e-4eb7-8040-d424c7df9e3b",
        "cursor": {
          "ref": "8ece635b-cf98-4099-9d0d-6550b26a99cc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "684f5f1e-66e2-44e2-a717-839886715d05"
        },
        "item": {
          "id": "719ad44f-9c8e-4eb7-8040-d424c7df9e3b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "61bd217c-a7e1-458e-a3ab-efaff725854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69c7023-20e0-4631-91c9-c8f0f325327a",
        "cursor": {
          "ref": "51336cc6-2e62-44c1-bb6d-de4380714685",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f6c39619-21d9-4b9b-bb51-3366004f4cc3"
        },
        "item": {
          "id": "c69c7023-20e0-4631-91c9-c8f0f325327a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "86764c31-f2f0-4003-bdb7-93a0877e752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b8b55-95e1-4bd0-94a1-e635c1ef64e9",
        "cursor": {
          "ref": "fcbcf5eb-28b8-40d9-9bd3-2852e71504df",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b453a938-4773-4ad0-927a-3624426d2b62"
        },
        "item": {
          "id": "6a2b8b55-95e1-4bd0-94a1-e635c1ef64e9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "00273eb2-0749-418f-9542-c96151f48fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b66a0a-2115-44d7-9dba-edace263b64b",
        "cursor": {
          "ref": "b3adf1cf-a90a-4de2-b9c6-bd76876d8c9a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6be8fa69-ecf0-4b29-8c71-2fdcf5c48cc2"
        },
        "item": {
          "id": "49b66a0a-2115-44d7-9dba-edace263b64b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1814b4ee-41c6-4ef5-be85-0dbcfb6fc220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe9f9d6-74a7-47a1-bf33-10882260910e",
        "cursor": {
          "ref": "2d65fc72-a6b2-409c-b483-c1990e1e9afb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5ae4c64b-5303-4dc0-b11b-19e39477475f"
        },
        "item": {
          "id": "7fe9f9d6-74a7-47a1-bf33-10882260910e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b6ee00a8-f244-4b0c-ad6d-16c67bbc5834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9e9e6b-bfd0-4f68-ae2b-8ffb3a5df112",
        "cursor": {
          "ref": "6f0b2ae5-2a28-43c5-84bd-f50db629c83d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ccc6b01-dace-46da-88f9-9ac3e23ca944"
        },
        "item": {
          "id": "cb9e9e6b-bfd0-4f68-ae2b-8ffb3a5df112",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "04c08e2c-6a83-4223-bde3-197462249ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3594b0a5-2f37-47d2-b71b-032f7d23f416",
        "cursor": {
          "ref": "a32019bb-8020-4b56-98b9-5c1b9aeb17dd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17946551-df90-436b-9d37-34e50a226c0c"
        },
        "item": {
          "id": "3594b0a5-2f37-47d2-b71b-032f7d23f416",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "74c68a84-0f99-4034-b56e-d42359826640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647b657c-f5c2-430f-a54c-400fabf47fa3",
        "cursor": {
          "ref": "f37bf5d2-9bbf-4477-9c1b-f229cb3cb60f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7a420f52-de4c-4aa4-bcc7-e83908cbed65"
        },
        "item": {
          "id": "647b657c-f5c2-430f-a54c-400fabf47fa3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6693de42-7436-46d2-a36e-212d775a336a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8c6538-5406-4e79-a0a8-ffcba22030b8",
        "cursor": {
          "ref": "116b7d5b-c6b0-419a-b162-2b1a1057dfce",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2f492fbd-e997-4faa-94b2-95f664a7964b"
        },
        "item": {
          "id": "4a8c6538-5406-4e79-a0a8-ffcba22030b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bf3337ba-dd5b-4334-b821-88829a0d57cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e30626-2bc3-4487-9e73-cc488dc188b9",
        "cursor": {
          "ref": "fa91e2b7-1819-4a05-b224-ac2b80f0be25",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "deca6eeb-a610-4d63-8758-e4f23201cf4e"
        },
        "item": {
          "id": "e9e30626-2bc3-4487-9e73-cc488dc188b9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "49cda6ef-65b7-43fc-bf7d-7dcaf096cca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7edf10d-5746-4ebe-8c23-2df11bc401fa",
        "cursor": {
          "ref": "f9080423-e006-4591-8000-d2b29b0b0f83",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f774d8e6-0bc3-496f-86a2-884d30486a28"
        },
        "item": {
          "id": "d7edf10d-5746-4ebe-8c23-2df11bc401fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2cb8cca3-f42b-41eb-bcd8-25a97b8c0816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec4dbd6-f956-4212-bf83-b09c255b1e50",
        "cursor": {
          "ref": "079ff087-b398-4057-aa6f-5a67cee917f4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61232e8b-3416-4be9-9ab3-505a22d941fd"
        },
        "item": {
          "id": "dec4dbd6-f956-4212-bf83-b09c255b1e50",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a8b99c47-b906-4cee-9329-2022f4e2144d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b775d7-5a0a-4f50-b40b-50c4d17f582e",
        "cursor": {
          "ref": "ac5dc63d-d1f5-4f06-a625-0fb2781fb587",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "82cbcd09-6cd3-4394-ab14-42ac3e691726"
        },
        "item": {
          "id": "c6b775d7-5a0a-4f50-b40b-50c4d17f582e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b0a846a4-77df-4df6-8043-4b8280749bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf7a9c9-3fd4-45cc-b85d-b70b62f16597",
        "cursor": {
          "ref": "00ed86c2-5425-405c-a971-8a0be40e321f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "afb09e96-64fb-444f-9535-6fc38c0cf9c0"
        },
        "item": {
          "id": "5bf7a9c9-3fd4-45cc-b85d-b70b62f16597",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "796caf7f-9763-431b-8f7e-a4ce41a0f7c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7b2e01-ea34-4641-af13-d10030ba754c",
        "cursor": {
          "ref": "2f6b39d1-dd7e-4bda-828c-2ce55d57229c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fdf56c85-e822-41a8-8bdd-01ef362b4a7f"
        },
        "item": {
          "id": "5b7b2e01-ea34-4641-af13-d10030ba754c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb961805-d18c-475d-a5e6-3846470ec84e",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3622779b-a481-4b3c-8362-53b894659406",
        "cursor": {
          "ref": "a09725e7-dfd8-47aa-a5e8-adf781840039",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "28139aca-2df2-4db7-bf02-19d06b11891d"
        },
        "item": {
          "id": "3622779b-a481-4b3c-8362-53b894659406",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0bb6eecd-915c-404f-9f66-bfaa3cb7656a",
          "status": "Created",
          "code": 201,
          "responseTime": 227,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331b4d8-86f1-4ac8-b138-0f8f9cb3149a",
        "cursor": {
          "ref": "fb9ee5a3-227e-4831-a40b-c197e6f9c949",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4aac0fca-4e5a-4902-940d-7587c7953558"
        },
        "item": {
          "id": "f331b4d8-86f1-4ac8-b138-0f8f9cb3149a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eb3edfd6-c207-4129-b808-59ba3a45be78",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "189330ab-ec10-4c01-8d9b-86140dfa220c",
        "cursor": {
          "ref": "19728779-d173-4e94-9dfb-b23376523552",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "262da664-fd0f-491b-bd14-99afb4d2199a"
        },
        "item": {
          "id": "189330ab-ec10-4c01-8d9b-86140dfa220c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cbe5c454-b308-4570-85eb-b92c062bca5b",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd85584-c181-4c6f-9ab3-2f38dbb977c5",
        "cursor": {
          "ref": "f2aa16e9-4af2-4293-bd03-d15f80a23633",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0d93cc06-a7e0-4cf0-948e-e6561c244d4d"
        },
        "item": {
          "id": "2bd85584-c181-4c6f-9ab3-2f38dbb977c5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "264425b6-0b6f-4f88-a932-0e36a22a1545",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ad7887-f44c-4074-99af-d7edf0693999",
        "cursor": {
          "ref": "0f3396ba-59db-4848-a86c-9dc3c71a3d56",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8ed99921-e884-4a23-a1ab-72d338f8df49"
        },
        "item": {
          "id": "c4ad7887-f44c-4074-99af-d7edf0693999",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "28493ac7-01d7-4180-a4a4-65ce514f8683",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81a454a-ea3b-4022-8b38-7edacac46b6f",
        "cursor": {
          "ref": "a0380d90-9433-4339-b6a1-2e8a30007127",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8cbf1aef-c485-4768-a8ac-020aa2038277"
        },
        "item": {
          "id": "c81a454a-ea3b-4022-8b38-7edacac46b6f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fac42e39-b917-4631-b79b-1b98d5b085de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0167aceb-5068-4e25-bff0-11a756460f26",
        "cursor": {
          "ref": "d0863c2f-c8ec-4906-93b6-ac0945976f62",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "85cfbedd-6cdd-4a38-81df-166ced54458a"
        },
        "item": {
          "id": "0167aceb-5068-4e25-bff0-11a756460f26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f63a93b2-76f2-423f-9ec7-373df2ea0e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0745d73-2390-44fb-9b80-8f30c1aef700",
        "cursor": {
          "ref": "64e851cf-3459-41cd-9a70-3b73be56295f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7a055551-f076-4518-8ccd-bdc7755f11b0"
        },
        "item": {
          "id": "a0745d73-2390-44fb-9b80-8f30c1aef700",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c2e74ec6-6062-417c-a8b3-0ec620b15a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c545c0-a4f8-467c-a088-643675640f46",
        "cursor": {
          "ref": "66b12a82-242a-4f20-a2ee-54bf83125aa8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e085eebc-430b-4264-9a34-77e08c05e412"
        },
        "item": {
          "id": "18c545c0-a4f8-467c-a088-643675640f46",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f4b906a2-3857-440d-aa55-3ce5d5117b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2db34-f8d3-42c8-b24f-b458f2327132",
        "cursor": {
          "ref": "f7339d36-adfc-4302-873d-aa771dc3b226",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "16016dd7-28ee-469c-aa06-ba219bdb295f"
        },
        "item": {
          "id": "a2c2db34-f8d3-42c8-b24f-b458f2327132",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "07d6ccd6-7a69-4c37-94af-6bd135e0043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf734f-75a5-4247-920a-b73e125f7e2f",
        "cursor": {
          "ref": "fa928fd6-d80b-48b9-b13b-1d75f8816a6c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1693449d-ac19-42b4-b40f-6b70a6c666e0"
        },
        "item": {
          "id": "d8bf734f-75a5-4247-920a-b73e125f7e2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1811d0e1-3a19-401f-9322-9eb97f1f0c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedfc0bf-8365-41db-ba25-b5897b6d00ee",
        "cursor": {
          "ref": "8ba9f33d-38eb-4216-9867-b6476e65a082",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6427d663-f325-4aad-90cc-de00d424404c"
        },
        "item": {
          "id": "bedfc0bf-8365-41db-ba25-b5897b6d00ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "109bfd39-3390-451e-9e21-570e37606445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21edadc-30e3-47db-b2c8-c79e43d950ff",
        "cursor": {
          "ref": "5a6d6e3d-b2ac-476e-8ccd-08e5298b233a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2026a99c-af1e-4f2f-8d7b-97b8d96b166e"
        },
        "item": {
          "id": "b21edadc-30e3-47db-b2c8-c79e43d950ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c8ed230-0037-4cb0-b2a2-4a529456bd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3076fce-2d4e-4096-8aac-dcb4fd7fab4b",
        "cursor": {
          "ref": "221ac291-dad5-41c7-8905-72ab6348c9db",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "473f829d-2946-4704-a5a1-9737e33030be"
        },
        "item": {
          "id": "d3076fce-2d4e-4096-8aac-dcb4fd7fab4b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0d2eaf99-317e-4f67-b0da-c4f48d4619ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa6181-fd64-4d43-be12-91e31f5b06a4",
        "cursor": {
          "ref": "040ef7c6-594e-4994-87cc-b50d5faee264",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7b431236-ab06-47d0-af85-79d751f4d260"
        },
        "item": {
          "id": "7dfa6181-fd64-4d43-be12-91e31f5b06a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e5fc8434-5c23-4f2e-b742-b97361049f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c060dad-038c-467f-b2a3-40a0156090dd",
        "cursor": {
          "ref": "8215f729-28bc-45ed-80be-11d4108d592e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "82a4d731-4bdc-4776-859d-81e2bcbe6886"
        },
        "item": {
          "id": "7c060dad-038c-467f-b2a3-40a0156090dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3c8d1ebc-81af-4e4a-961f-81de8feda02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8460310-5121-4795-a4d8-ba8ac8b409da",
        "cursor": {
          "ref": "fc5abbd7-c186-400d-a0fa-c48facef7da0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5e4919de-0bf9-43fb-9d05-396119c05adc"
        },
        "item": {
          "id": "b8460310-5121-4795-a4d8-ba8ac8b409da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a4e6aab1-ea03-4f47-8d8d-08be65cb1450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29d581b-34d5-45b1-bc07-9455efabe7d0",
        "cursor": {
          "ref": "41b05d13-b7ea-4a32-ba35-21b879933f91",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "060ae70c-09d9-44d4-96bb-4bb61bde1006"
        },
        "item": {
          "id": "e29d581b-34d5-45b1-bc07-9455efabe7d0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3ee5830-0e35-474a-9812-e5a906ddc5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c2da2b-3d46-4af0-943f-ed4918434f1f",
        "cursor": {
          "ref": "8427955b-0f61-4ea8-a9cb-eaecb6f0ad95",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "639f8c2b-c021-4c27-8f74-2aa26314e3a6"
        },
        "item": {
          "id": "d5c2da2b-3d46-4af0-943f-ed4918434f1f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d1ebaefb-9f55-485a-961b-ed1f024f869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d72d6d1-571f-42b0-aac6-02a029ca111e",
        "cursor": {
          "ref": "3ccff883-f9eb-43d5-8980-8f87965d03cd",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5b9f9955-4b1b-4f96-b3a1-58e582bc4e8b"
        },
        "item": {
          "id": "4d72d6d1-571f-42b0-aac6-02a029ca111e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "87c238d3-8236-4cba-b6ab-fcb0c9c56c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a637c1-9eba-4157-889b-48a38d2c5e41",
        "cursor": {
          "ref": "137d6b99-a7fd-449f-8a8e-5551eb2fb0d6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4fe53e02-aeed-47a6-96f8-7e04bdfc43cc"
        },
        "item": {
          "id": "67a637c1-9eba-4157-889b-48a38d2c5e41",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d918105f-e6c8-438b-8980-b01860717073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cff555-c233-4d1f-855f-3b82e8bd6a1b",
        "cursor": {
          "ref": "ae3cb3b8-6f23-4151-b529-7fbd9863701a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bcff11b-c891-4131-a197-01db9a36828d"
        },
        "item": {
          "id": "64cff555-c233-4d1f-855f-3b82e8bd6a1b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1c6b046-86bf-40e4-90ab-9c7307ae06b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1446a8-bec0-40c4-9bc8-f87cbe1b22d9",
        "cursor": {
          "ref": "bc4827d2-de31-4686-9967-b5d50a3b6549",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "de58828e-8a2a-4e71-a5b5-46e544d7a60f"
        },
        "item": {
          "id": "5e1446a8-bec0-40c4-9bc8-f87cbe1b22d9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "363da743-6126-4b29-9eac-9dfd19c48fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea9644-54da-4e55-a7e9-b2b73136a2f4",
        "cursor": {
          "ref": "790e8d53-21b4-411a-aa1f-454d118b8d5d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5e4544c0-af45-43cd-8091-933b74a15b97"
        },
        "item": {
          "id": "67ea9644-54da-4e55-a7e9-b2b73136a2f4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8c4d9f1-2a30-4cf1-969e-8f80954a8834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564a11b4-8ed0-4e9d-9fee-6419edec78c8",
        "cursor": {
          "ref": "81510645-c37e-4ee5-906e-81e8b05d1134",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "40b4c146-655c-4c49-8840-d2892ffaea08"
        },
        "item": {
          "id": "564a11b4-8ed0-4e9d-9fee-6419edec78c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86b32788-6981-4096-8325-f860e4e67802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5542a2df-2352-4f4c-943b-aa7e99aa4ce7",
        "cursor": {
          "ref": "1dd117a3-669a-419d-9e59-ec8eafdd68b1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "364b68dc-9ad2-46bb-99c2-779f83fb6e89"
        },
        "item": {
          "id": "5542a2df-2352-4f4c-943b-aa7e99aa4ce7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2e6e679-aca1-4fe9-b63a-a81f083ba432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bb4c24-be78-4fb5-af15-f8d4d5d079f2",
        "cursor": {
          "ref": "2ad909ef-8908-4c8d-ac86-7116e3756511",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "86e16ff4-86e5-4526-9d6e-aee66957a4b2"
        },
        "item": {
          "id": "99bb4c24-be78-4fb5-af15-f8d4d5d079f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0cab3529-f6bc-44e6-84b7-153a748811c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead9a8a-ce84-4890-ad83-684e0977c8a6",
        "cursor": {
          "ref": "6a577113-7bc5-4bf8-aeec-e21a7e7675e8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "82edd97a-6658-4072-a342-69999399243d"
        },
        "item": {
          "id": "7ead9a8a-ce84-4890-ad83-684e0977c8a6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c13cad63-d752-4434-8428-433a42b05d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07562e4e-81cb-45ad-b1cf-28707f04a6ec",
        "cursor": {
          "ref": "2fc9170e-e529-40b2-ba4d-a4c19b412883",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9f8d9e81-6f3f-45c1-bc29-9c7b92681f6f"
        },
        "item": {
          "id": "07562e4e-81cb-45ad-b1cf-28707f04a6ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07fe8141-c821-481f-afab-f6e9accf32e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cc3be1-bdb0-4109-8c85-c7376c42dabd",
        "cursor": {
          "ref": "262b8649-4b4b-48b1-8270-fb5bfac418a5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "59a68574-54d5-4d91-a4e1-5fe4ad5385c8"
        },
        "item": {
          "id": "e8cc3be1-bdb0-4109-8c85-c7376c42dabd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9aab5fbc-cef7-45b5-8d23-21f9f402e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2fb1e9-96c3-46ba-b2c4-0a209c2cf795",
        "cursor": {
          "ref": "660c2ac4-4a1a-4900-a9bf-002bc29c28d9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d16c9270-4a9f-4278-9512-993262813524"
        },
        "item": {
          "id": "9e2fb1e9-96c3-46ba-b2c4-0a209c2cf795",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6e2d8e86-0128-48bd-99d0-939232c89679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc77701-0d78-41df-b744-dbeab63942d7",
        "cursor": {
          "ref": "83b8e83f-c7e0-470e-b299-86cbe2f32e71",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7d7ad838-3d9f-4b46-a9bf-d13e92ccd6c7"
        },
        "item": {
          "id": "6cc77701-0d78-41df-b744-dbeab63942d7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "34fdd585-84e9-45bc-a367-22c95f95b503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809dd99a-cb70-4964-b198-09240ef1028a",
        "cursor": {
          "ref": "ded49e09-6a24-4c69-8c5b-0e4dd85fa9de",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c954ff14-b911-4784-be3e-f729ff198095"
        },
        "item": {
          "id": "809dd99a-cb70-4964-b198-09240ef1028a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b46ff7e-aca5-4e9e-933e-b3c55fd5bda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811f48f9-988a-4bed-af15-5a799567d05f",
        "cursor": {
          "ref": "055f9d31-27ec-40b6-808e-4ccbcfd9a7f2",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34d337fb-57ab-4113-8e0a-3e18e8a5116b"
        },
        "item": {
          "id": "811f48f9-988a-4bed-af15-5a799567d05f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5b37be6-8422-4032-9e8e-4c6989ad93e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faef5d6c-8af9-4809-b6b5-56f3b95ddb7e",
        "cursor": {
          "ref": "8c80bc13-2c5e-44e0-b114-c65eb2c95bc9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "692d6cd6-c578-40ce-b015-726e3e0702a4"
        },
        "item": {
          "id": "faef5d6c-8af9-4809-b6b5-56f3b95ddb7e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db55b261-851d-4cd7-8b9c-cc3dec0dec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe68079-8638-4890-8c52-19be385da23b",
        "cursor": {
          "ref": "d0c95f4c-d3fc-4b08-95df-6b2f4bde7cdb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8f939678-9d1e-47ca-a6ff-b3cb8f1b1bcd"
        },
        "item": {
          "id": "4fe68079-8638-4890-8c52-19be385da23b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "490ad3d0-c60b-4852-8480-b512871d6081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdde1d0-9afe-4a43-8e66-fc6e18f6fe95",
        "cursor": {
          "ref": "92461ae5-1f7c-46c1-afb5-10f408da4764",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03fa6b3f-94fb-41a9-ac1b-28b7bf76af08"
        },
        "item": {
          "id": "5fdde1d0-9afe-4a43-8e66-fc6e18f6fe95",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9a0d4bbb-ecbc-41bf-b3b7-f1bf4e313689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b8cf51-6175-4528-95fc-7da845362159",
        "cursor": {
          "ref": "d4cf4368-4927-43aa-87bd-468b0dbbfe2e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ab317db-fb3d-47db-8ceb-0e722a18fdf9"
        },
        "item": {
          "id": "a4b8cf51-6175-4528-95fc-7da845362159",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6df6ceb1-d463-4f40-b4e3-08ed58701399",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe61027d-87b7-4436-b8be-613a0e6fbb41",
        "cursor": {
          "ref": "3956d77b-49c9-403f-9f72-1e1a53943ce9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cda32cbb-24b1-445c-85b4-787c40a033c9"
        },
        "item": {
          "id": "fe61027d-87b7-4436-b8be-613a0e6fbb41",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2d56eecc-6558-4dec-9e55-777c0500acf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11084ea-44a5-4e64-a6f2-1937db8a2afb",
        "cursor": {
          "ref": "7f267a3f-44f3-461c-a0d3-1add138a08fd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b594bf8b-5252-4228-b802-5bfd97e423bb"
        },
        "item": {
          "id": "b11084ea-44a5-4e64-a6f2-1937db8a2afb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2b3895f8-5d89-48dc-9def-affc6dd06bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad99f4-75df-4025-bfcd-726fcbb7961d",
        "cursor": {
          "ref": "7e77b276-24cb-486f-b1e9-1c643cf5a51a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1d5a9b73-a124-4b8d-928d-a1d90c255f45"
        },
        "item": {
          "id": "4fad99f4-75df-4025-bfcd-726fcbb7961d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03368f6a-14f7-48f1-9111-1a1f9143ec49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9863e6bd-0637-4443-becf-7552159d91f7",
        "cursor": {
          "ref": "518fadb2-4c5f-4eca-be8f-dad71a4e74e6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c5d035ec-68ec-4f44-bfdf-e08fcd4028ea"
        },
        "item": {
          "id": "9863e6bd-0637-4443-becf-7552159d91f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ee09975c-2bef-4b48-adef-0aae1bc2d0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065ffcd2-c8d9-454e-9989-235d64399716",
        "cursor": {
          "ref": "8e8007b3-2035-4989-9ce3-943c9b7b6131",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8ca190f1-fe2e-42c9-9e21-68f165f73ff9"
        },
        "item": {
          "id": "065ffcd2-c8d9-454e-9989-235d64399716",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d2fddc9-78fc-4927-9208-363c1b916229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ce3225-944c-4799-988e-92b735c9961b",
        "cursor": {
          "ref": "2c90ccf5-80e7-4237-89d2-81de46c8faad",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b78122d8-364d-439a-a7c4-d6310deb476b"
        },
        "item": {
          "id": "82ce3225-944c-4799-988e-92b735c9961b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30484d7f-7e72-42ec-9a7a-8d7e6a37e415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930ed201-683e-491d-a428-b88d93b0249e",
        "cursor": {
          "ref": "61cc558c-d45a-4c0f-af32-fa6e21db3d29",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7ab5363d-3927-4e44-9fa5-a40d7b01721e"
        },
        "item": {
          "id": "930ed201-683e-491d-a428-b88d93b0249e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e289b009-64cc-43a1-8957-d9d7de4dd904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1b7391-6605-45fb-a2d7-8651553ede1f",
        "cursor": {
          "ref": "c0dad0aa-b104-4107-89af-e17a210fa8e7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "02f71566-8a66-4ef3-b1d3-7aace2914207"
        },
        "item": {
          "id": "1f1b7391-6605-45fb-a2d7-8651553ede1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "472e03ce-b5e7-4061-9add-0254ad011d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a8eae1-9dca-442e-99a2-6fd536b33b88",
        "cursor": {
          "ref": "d8aaa673-aca5-47a8-8126-8e25819d10db",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b775dca9-b297-408e-8eb8-29e22c2d3d9b"
        },
        "item": {
          "id": "81a8eae1-9dca-442e-99a2-6fd536b33b88",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "663a15de-b942-4cfe-9664-294d2fec7ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f7ee06-563e-402f-ae9d-25587229f5bf",
        "cursor": {
          "ref": "ed3ef633-e7b8-4ecf-8685-9e6a327862c1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34c5aa6e-c4e6-4bd0-8d6a-a66e4eff38a8"
        },
        "item": {
          "id": "c5f7ee06-563e-402f-ae9d-25587229f5bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1dee7d48-2758-49d2-b168-ce38d6740558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2369fa57-14ac-4ba8-88be-9f4b733754ec",
        "cursor": {
          "ref": "8dfcb9f1-0804-4fb3-ba42-0ae0412e3653",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "69a2e8c0-81dc-4c96-bf35-0517c572c8bc"
        },
        "item": {
          "id": "2369fa57-14ac-4ba8-88be-9f4b733754ec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "797536d2-6008-4007-a6c8-d74a57d11453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af7671-70b4-4653-bb05-466c717548c4",
        "cursor": {
          "ref": "78990bb2-79bb-4064-b254-9d9c0376f15c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f2f14a2b-cd99-42ec-bfd8-473420dd3e16"
        },
        "item": {
          "id": "35af7671-70b4-4653-bb05-466c717548c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "685f30e2-0f12-40ab-a1d9-cb4fd5bb19f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400aaa13-b310-40a3-b8d6-7799d88b1945",
        "cursor": {
          "ref": "7b056554-f8e5-4d8e-bbdb-4fa3a542e583",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e177d7df-ce45-4be4-bd6a-6be1d71f270b"
        },
        "item": {
          "id": "400aaa13-b310-40a3-b8d6-7799d88b1945",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "074a3787-7204-449f-bff8-3b577b1c9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96866f67-6528-47b1-8de9-51992b952fdc",
        "cursor": {
          "ref": "6dddeca2-4d5b-4907-ab24-3b7c6cd8f88d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bb8cbad-b161-4d7d-8288-cbe1a7d7755a"
        },
        "item": {
          "id": "96866f67-6528-47b1-8de9-51992b952fdc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "68ca7508-a257-4090-a7dc-4f91e4a8bcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a9e89f-de48-4ce1-8f3a-22dd02e4e434",
        "cursor": {
          "ref": "eb9ece09-9d46-4b46-a3f2-d96a6df8b42a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e8394232-eb06-4100-99d3-09fbd32c36ba"
        },
        "item": {
          "id": "80a9e89f-de48-4ce1-8f3a-22dd02e4e434",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dc701704-1e45-4bd8-a4b5-a6df1253b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff27d7d-f517-4198-8bb7-825970208229",
        "cursor": {
          "ref": "dd16f663-d929-473e-bb90-e31bd1fc1e85",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cea0f664-d98d-48f0-a6bc-1a93a2041afa"
        },
        "item": {
          "id": "8ff27d7d-f517-4198-8bb7-825970208229",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "615307af-5def-413f-ae6a-76d6a43a0850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8787ec6-2c00-473e-bc17-d3d85c06f5eb",
        "cursor": {
          "ref": "ea327e11-53a5-4481-bb08-72bc5d4ced2b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bb06a76-586a-4f5e-874f-d841ef87f863"
        },
        "item": {
          "id": "e8787ec6-2c00-473e-bc17-d3d85c06f5eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ba802dbf-0d78-4140-9a85-af8595833f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47200ef5-da71-4d9d-b2eb-b55f9bd64f56",
        "cursor": {
          "ref": "a313adeb-0bb6-4ec8-8583-e7a0fc5d1c4b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e4f0389-df5e-48d6-a8d0-eb08c4d3163c"
        },
        "item": {
          "id": "47200ef5-da71-4d9d-b2eb-b55f9bd64f56",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "612b6a83-c1f8-420b-bace-00184ad20a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e78a31-9095-46b9-a3e0-c891bcef09d1",
        "cursor": {
          "ref": "af90146f-6907-4f41-b0b5-fde591828c33",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1adbe601-201f-4ffb-b617-d5f68c3bb43b"
        },
        "item": {
          "id": "46e78a31-9095-46b9-a3e0-c891bcef09d1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c851efe5-a6a3-4bce-956b-6038922bfa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1515a8b-3917-4ebf-b419-ce574314063f",
        "cursor": {
          "ref": "bac30f8c-be24-4300-83dc-405e7638ba50",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7890deed-0930-4076-8cf3-c277f393721e"
        },
        "item": {
          "id": "d1515a8b-3917-4ebf-b419-ce574314063f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "41d8bb02-0e04-4b23-b0f0-5d198d6e90f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e3abd-d9b5-448c-81b7-5948955b4e51",
        "cursor": {
          "ref": "41da739b-a898-47be-846d-b16666635122",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fdb02784-2b50-404b-80fa-8c04ff17ebcb"
        },
        "item": {
          "id": "583e3abd-d9b5-448c-81b7-5948955b4e51",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb6d8cb0-6193-4be3-8320-aeb2178d56ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addfe7a7-56d0-4288-b291-ee461e176737",
        "cursor": {
          "ref": "3638018e-4c0e-4f70-a1a9-8b270184455f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cec7cc06-cfb3-40e9-813f-cd735cd01b33"
        },
        "item": {
          "id": "addfe7a7-56d0-4288-b291-ee461e176737",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8e7a8e98-0321-4b4e-8a79-3b9a1b4f528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07082175-b97e-47b9-ac54-9e0b6d28e60a",
        "cursor": {
          "ref": "bb7274ba-b93a-446d-b428-aee7cd38d968",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8117e00f-0325-464f-b67c-bc22d592be7e"
        },
        "item": {
          "id": "07082175-b97e-47b9-ac54-9e0b6d28e60a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e9d5cc6-5655-42d0-bcc7-57788daeeb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92927acf-2f56-4853-8c0a-28462a15f7f8",
        "cursor": {
          "ref": "734c47a2-5fc9-4ec1-b4a8-508acaa10837",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed2902cb-a89f-48c6-bc21-80e6a9537419"
        },
        "item": {
          "id": "92927acf-2f56-4853-8c0a-28462a15f7f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3af537d1-fa96-4933-998b-b5fcbd60ed39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae377fde-4c0f-4383-9be8-14a4e1975953",
        "cursor": {
          "ref": "7c656100-4e1b-4d74-b67f-0f95a2155973",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33f508d5-65fa-4931-ab30-321783120bac"
        },
        "item": {
          "id": "ae377fde-4c0f-4383-9be8-14a4e1975953",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "13259057-fc12-4f44-96f2-c0c75dddc3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e60dfd-179c-42d1-9143-3e2bbb805294",
        "cursor": {
          "ref": "9a2eeeed-ec01-46b0-ae16-21bffe800950",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8a56835c-96a1-419e-bf48-b9ed6f654c3e"
        },
        "item": {
          "id": "97e60dfd-179c-42d1-9143-3e2bbb805294",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db7df5a0-03d6-40b1-9d95-6c3074103478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42efd2d-d623-4947-8367-7195483af099",
        "cursor": {
          "ref": "ddb2233d-df4f-467c-8b98-20849aebd081",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a119e296-20a8-40da-afba-5c2fe5b51091"
        },
        "item": {
          "id": "d42efd2d-d623-4947-8367-7195483af099",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0677d51e-1190-4550-84cf-555c75bdb804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7025b6da-48e3-49c0-a951-bc99f121f6bf",
        "cursor": {
          "ref": "a68bc246-c425-4d6a-af4f-e402d0ba278e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "949e6db8-6fb6-487b-b488-c463d8164c98"
        },
        "item": {
          "id": "7025b6da-48e3-49c0-a951-bc99f121f6bf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c07265c-9f27-4bb0-a309-eeca2bff003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51b081-0f4e-4051-a26d-af47e3764b38",
        "cursor": {
          "ref": "0b5e0c9c-99ae-49bc-82a6-cb52aae96b42",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "760c49ae-3f2b-4573-a370-4d86e1d1c424"
        },
        "item": {
          "id": "2d51b081-0f4e-4051-a26d-af47e3764b38",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d6b9db8a-090e-486c-bbd3-2b4f4324e016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80444ef-8aa6-42e7-aa07-945d2010dfa7",
        "cursor": {
          "ref": "50a13f58-2935-496c-bb56-f61538fbb3e6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "40963821-b58e-4c2a-9107-e8758c29c9fc"
        },
        "item": {
          "id": "e80444ef-8aa6-42e7-aa07-945d2010dfa7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68e3cdcb-373d-4db7-af6c-c1e58da7170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf46556-e992-4764-86c8-3df597fcfc73",
        "cursor": {
          "ref": "42f45c4b-fea6-4831-961d-007c18917458",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ecb8df5c-4691-4004-9d5b-00d6f0d511be"
        },
        "item": {
          "id": "fdf46556-e992-4764-86c8-3df597fcfc73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ecd34ab-1141-4fde-9640-c1e912b0465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2b2a75-120c-4c17-8217-831847646827",
        "cursor": {
          "ref": "430f8e3f-e9dc-4da6-ba83-ee64819c8952",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "48956cfd-daf8-485f-b895-8c45c5a8bd05"
        },
        "item": {
          "id": "dd2b2a75-120c-4c17-8217-831847646827",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fea05c8-0731-4ca6-af59-abb1bc014ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74802f95-089b-4192-9b38-3aa6bd0543c6",
        "cursor": {
          "ref": "a33cc396-3995-40f8-98ae-cc8c672e89c3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f6d7c72-c4ac-4cf2-a9ac-d131c96efc32"
        },
        "item": {
          "id": "74802f95-089b-4192-9b38-3aa6bd0543c6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b81fc968-6b50-41cc-81b0-bd2e25fbb8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9fc79d-a7d0-4386-8a50-05d2a6555b3a",
        "cursor": {
          "ref": "907d93ba-ec71-4c0e-9fcf-a4f6125a3689",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7861ab20-8e4b-4da0-bd41-d668fbd43eb9"
        },
        "item": {
          "id": "cc9fc79d-a7d0-4386-8a50-05d2a6555b3a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c632b81b-f588-4ffa-9017-3886b5b2624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0fd3f9-0912-4633-a9b3-c1044feb69d4",
        "cursor": {
          "ref": "01126a24-e2a4-41af-a4b4-5f6be7f4e772",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29c405f7-48c7-4a54-85ba-2ef978ec9c8c"
        },
        "item": {
          "id": "db0fd3f9-0912-4633-a9b3-c1044feb69d4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7fde40f6-ecf7-4752-8752-1df1b8d4dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aefe90-6146-4841-82d6-ea3e63fa0818",
        "cursor": {
          "ref": "9b9b061d-c967-4e38-ac85-dc4afaafd971",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "06eb450f-13aa-4378-9192-f4c53509a05a"
        },
        "item": {
          "id": "62aefe90-6146-4841-82d6-ea3e63fa0818",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "28946222-bbed-4f36-bea2-953883cda595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68546103-8a3a-473d-98be-510b3759a985",
        "cursor": {
          "ref": "6c6a3451-b5ff-4f27-abf3-4faa3c7daf7b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "618115c2-4886-461f-8147-bf44bf1fb5e5"
        },
        "item": {
          "id": "68546103-8a3a-473d-98be-510b3759a985",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b02e7915-3d17-4005-a40d-8913855f2cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256c8aec-00eb-4880-95d0-a319d58e1249",
        "cursor": {
          "ref": "95c91d7a-ee46-464c-a780-f234c1e25b92",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e9be8efe-65bf-4a9e-98d2-86f25399181f"
        },
        "item": {
          "id": "256c8aec-00eb-4880-95d0-a319d58e1249",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "388417a5-fde4-4bc6-bc2e-ca86de8199e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129c90df-6aea-4eb5-a12e-4fc4d5a30606",
        "cursor": {
          "ref": "a58d2e65-aaf7-4a49-bfd7-3699c2cde41f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8d4c41c2-6493-408e-ab46-c862a798e896"
        },
        "item": {
          "id": "129c90df-6aea-4eb5-a12e-4fc4d5a30606",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ef35f9-9305-44b7-b29c-57a31c880f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8660f926-c4cf-4cf7-bbe3-a29dc3c4dee2",
        "cursor": {
          "ref": "f120585f-4309-40cd-9d39-dffa560d6319",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "efa248a2-e3e3-4108-9f09-a185807b44a6"
        },
        "item": {
          "id": "8660f926-c4cf-4cf7-bbe3-a29dc3c4dee2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4eca7c88-4ce2-4f7d-a5ea-cce0015d5fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a617898-44c1-4ecf-b32c-3fcc997a910a",
        "cursor": {
          "ref": "3487efa5-81bb-4021-b720-257f409ecc77",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "03907226-99f4-4857-9556-7111e2e275b9"
        },
        "item": {
          "id": "8a617898-44c1-4ecf-b32c-3fcc997a910a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1b1d8636-80ac-4a0d-ac77-9aa40f0e165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a84e071-55b3-4f56-bc8b-1cf76111af39",
        "cursor": {
          "ref": "9e690433-17b2-46ed-aa45-5394b1e00e19",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d0364130-f232-4ac9-8e8d-013cb48dd924"
        },
        "item": {
          "id": "6a84e071-55b3-4f56-bc8b-1cf76111af39",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2064df4d-f544-4076-bdb7-3ec03f16d1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f44b7-1049-4213-8de1-1a078694c92a",
        "cursor": {
          "ref": "da772b7c-f06b-436e-80a3-56d50e3fabfc",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "19afdd7b-ee06-4412-abb3-6a2206d139d5"
        },
        "item": {
          "id": "519f44b7-1049-4213-8de1-1a078694c92a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7c4eabbe-e4fb-4d79-aa41-f6f8aea8ff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d3c4df-51ff-4adb-96cf-be2d44723357",
        "cursor": {
          "ref": "1eb8a6c6-0277-4c1e-bbd6-d59690f0dfe5",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4e42510a-093b-4fc9-8672-421e544851b6"
        },
        "item": {
          "id": "13d3c4df-51ff-4adb-96cf-be2d44723357",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b3645b07-1e6b-4a19-b1f9-17712a05c8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e752b1b8-9240-4332-9918-95aeab19fa6a",
        "cursor": {
          "ref": "c55124c4-441b-4a0e-a764-283b846bfb35",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "414e4773-4067-4d12-b0c6-9988122d44cd"
        },
        "item": {
          "id": "e752b1b8-9240-4332-9918-95aeab19fa6a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c18087a7-b308-4279-b0bd-2777dd243405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b3e748-9cde-4cf7-a4af-6c09f4f80467",
        "cursor": {
          "ref": "347a4b77-b054-4b89-8368-c921f528dcac",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f0a4de01-c060-4188-8231-7249eb18661c"
        },
        "item": {
          "id": "e4b3e748-9cde-4cf7-a4af-6c09f4f80467",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2a64cfc2-d1fa-489d-888e-e3ab0489b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827a9178-5d59-4fd5-a1af-2e0a67999cfa",
        "cursor": {
          "ref": "1f91bcf3-ec7d-400b-b842-8b276628dbf6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a4093014-abf2-4424-9803-da5323b8b819"
        },
        "item": {
          "id": "827a9178-5d59-4fd5-a1af-2e0a67999cfa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a32ae98d-1b55-44b1-a083-d667351707eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed515f52-46c0-4fb7-bef3-87415a2a704d",
        "cursor": {
          "ref": "d2f794e7-3944-4d3d-be13-780daaeef3d5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "512ea12e-2086-4b8e-b7da-06c22ddf32d8"
        },
        "item": {
          "id": "ed515f52-46c0-4fb7-bef3-87415a2a704d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0e55917f-1e2c-4e86-b27e-7f3323769f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784514f6-b133-4ddb-8025-a1bdb5f63c42",
        "cursor": {
          "ref": "e831d2ab-2ffa-4d00-93ff-47ebb51d906d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "83f88e5f-fb1e-46a1-892b-b59c3a2699b9"
        },
        "item": {
          "id": "784514f6-b133-4ddb-8025-a1bdb5f63c42",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f87ac05f-fb3f-4d70-a6e2-3621a2e1e9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e8ece0-289c-4074-93b5-784d95a64c31",
        "cursor": {
          "ref": "120c5a2d-fc80-4962-8362-44135316dc8e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ead7aabf-9c97-4b71-b6bf-834d796137af"
        },
        "item": {
          "id": "60e8ece0-289c-4074-93b5-784d95a64c31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ce4eb7de-2002-4810-95ee-93c3b77ed1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ca0d1a-41ad-4197-811c-1859631b57a6",
        "cursor": {
          "ref": "05c3d578-e6fc-4f7e-b42a-e0a6ec7f0c06",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "09942cb9-6e91-4b43-a62a-3e267e9fe2f8"
        },
        "item": {
          "id": "a9ca0d1a-41ad-4197-811c-1859631b57a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e08e6ccf-d541-43bb-a8f1-77bf97947daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4221f29e-5d8b-40f4-a595-a82578ecbac2",
        "cursor": {
          "ref": "b22fcd6f-6583-4800-b870-16b9b740a9d6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "472c34cc-6e28-46f0-b8a2-64ad77ae8b3c"
        },
        "item": {
          "id": "4221f29e-5d8b-40f4-a595-a82578ecbac2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "47c3ff08-d87c-4428-b01d-2c43076ebe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c7bfe0-e088-4ee8-8fdb-4ec43ccbe433",
        "cursor": {
          "ref": "1d61e1d4-0076-4ce8-a77a-7988395976af",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cf4104a0-389a-4e55-bc46-0b0d18d6709f"
        },
        "item": {
          "id": "f5c7bfe0-e088-4ee8-8fdb-4ec43ccbe433",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "57a3caf7-e8f0-4a26-bd56-5a80d4dacf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764dec38-ac6f-444c-a14d-2d6fc3b2c609",
        "cursor": {
          "ref": "61d3164c-660b-48cb-bcd1-b99fe75700a0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "025698e2-56a4-4c86-a646-26cab68b412d"
        },
        "item": {
          "id": "764dec38-ac6f-444c-a14d-2d6fc3b2c609",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "975c973a-7e20-4a59-9cc7-48d79208d62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26574eaf-facc-4962-a8cd-d0c44ecaf54c",
        "cursor": {
          "ref": "9cda0e12-0dce-43cc-b2c7-88b953ee07c2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ad36d40-f2aa-4ab5-acf8-b6d73ca65a67"
        },
        "item": {
          "id": "26574eaf-facc-4962-a8cd-d0c44ecaf54c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "953cc350-da4b-4d00-82f4-4bca0ef202ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ae7ddd-5dd7-451d-aa39-2ba308721bda",
        "cursor": {
          "ref": "be8353e4-18d0-4536-bdd4-f7d6c23a7233",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9332e372-43b9-4c79-aa64-9398f63e1c9b"
        },
        "item": {
          "id": "c0ae7ddd-5dd7-451d-aa39-2ba308721bda",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee540ec3-2cc9-49bf-8b04-053804342974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb2b470-f77a-439a-a7c0-f73c3161e2dc",
        "cursor": {
          "ref": "b7e36385-2ee8-488a-afc7-1778fdef4d80",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d796283-8691-4d44-a973-6974751e23e5"
        },
        "item": {
          "id": "7cb2b470-f77a-439a-a7c0-f73c3161e2dc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f35afb7-d561-4741-a042-350a86c98566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8955e8b-015a-44dc-9962-427c6d8409c6",
        "cursor": {
          "ref": "d4b96894-7c84-4ca0-afa7-520bd7d5e3de",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "52ce3f38-a50e-4bdc-b33b-c5d871808149"
        },
        "item": {
          "id": "b8955e8b-015a-44dc-9962-427c6d8409c6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4612b4b5-ee24-4f18-9939-1bdf63a8309e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c080546-d6ba-4dcd-84d8-743f3d5ae0e5",
        "cursor": {
          "ref": "34388ccd-1263-47cd-92e0-299dc9a665fa",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8742d3d1-89f8-482a-8678-929d6b8a211c"
        },
        "item": {
          "id": "3c080546-d6ba-4dcd-84d8-743f3d5ae0e5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1103a195-c794-4c3b-8c9e-d09eb92b7314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55438e9-e318-4439-b7ac-dd241099afdf",
        "cursor": {
          "ref": "06bfbe2c-4d28-4a24-8eaa-5f56a94bff94",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05524cdc-72a5-4666-aa09-4679ad580cd4"
        },
        "item": {
          "id": "f55438e9-e318-4439-b7ac-dd241099afdf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c08598cf-986b-4235-b3a6-d4486224d42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c4607-bcbb-46c5-9021-42dd94886170",
        "cursor": {
          "ref": "594c104a-d655-4649-a5bf-f7092b003b01",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "feb4f42b-52b5-4183-86f8-9f9cfa4c5ab9"
        },
        "item": {
          "id": "087c4607-bcbb-46c5-9021-42dd94886170",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef2ca0e0-ae3e-47de-83fe-5ba07ce17be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307b2885-17c4-4ffc-bd1a-ea477b4d20ef",
        "cursor": {
          "ref": "f86167b6-75c9-4175-b270-aef790ee6605",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7d8d5110-6a6f-4666-9cb7-8d307ddc0096"
        },
        "item": {
          "id": "307b2885-17c4-4ffc-bd1a-ea477b4d20ef",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "88e2cdf6-696a-493a-a5ce-ba7e16586f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd14563-5ccc-43fe-b35d-42cc66e22a91",
        "cursor": {
          "ref": "7cc80633-4836-49d2-a687-f1693d6e480c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc90d416-5f6e-4d51-8d73-d60213a52827"
        },
        "item": {
          "id": "5fd14563-5ccc-43fe-b35d-42cc66e22a91",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "387ba7e0-8aee-4be2-bbb5-68e771cf07df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472fbfe-11fb-47a6-8d9f-6e729c977d03",
        "cursor": {
          "ref": "a41d368c-dffb-490a-bc11-ff478a58e9af",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b7220171-10b2-4967-b350-0a38fa328293"
        },
        "item": {
          "id": "e472fbfe-11fb-47a6-8d9f-6e729c977d03",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "934a6a2f-3f24-4822-a6b6-44d0c84a9575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a870c-8f05-4ed2-b6af-d1c225bd6b0b",
        "cursor": {
          "ref": "41441131-5537-41a8-810f-b801fab08b38",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "646a8465-398c-4cd0-8a9e-ec8aeffd4742"
        },
        "item": {
          "id": "630a870c-8f05-4ed2-b6af-d1c225bd6b0b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5ab5ab59-598f-4910-9fbb-a2067766d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1735129-6506-4f1e-914b-5242200f3610",
        "cursor": {
          "ref": "f12f9c18-f73f-472e-8b65-e27b6e3ac3bd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "07f4648d-e0c2-4926-aa7e-56aeeff24cc7"
        },
        "item": {
          "id": "e1735129-6506-4f1e-914b-5242200f3610",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0678c81b-3cf3-4670-ab17-8da54ef600f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e94b6eb-b40e-455b-b8f1-557f24e3ce79",
        "cursor": {
          "ref": "1289541d-5423-4d5f-bc55-5e8e459d901f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fcb1602f-1df5-4dbe-8a19-cdf9028739b5"
        },
        "item": {
          "id": "7e94b6eb-b40e-455b-b8f1-557f24e3ce79",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6454d2e6-4a3d-4b97-b43b-dd066b27acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852e1740-7132-4d1f-ab8a-0382133f51c0",
        "cursor": {
          "ref": "1f0cab16-bbf6-455a-87ce-53da7dcbdb66",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3cb3cbcd-6de9-4b6e-9db4-962f5c8ff05a"
        },
        "item": {
          "id": "852e1740-7132-4d1f-ab8a-0382133f51c0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "98835e88-4acf-4f83-a121-d1c2810c51f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1284d9bb-2c94-4cd9-8dfd-180f8585d7fb",
        "cursor": {
          "ref": "a21170af-e8c3-40b0-99d9-ee924f1baf00",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "07432846-84e2-485c-80b8-3c194077e757"
        },
        "item": {
          "id": "1284d9bb-2c94-4cd9-8dfd-180f8585d7fb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "483b56b5-67db-4882-9c71-46ab3f85d517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b56fa9-9e0b-40de-abb7-ed896742d851",
        "cursor": {
          "ref": "bc2b18a7-e32a-4a14-beb3-1d23a30c8ded",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bdd1b17c-e922-4027-8de3-a4683a972844"
        },
        "item": {
          "id": "c2b56fa9-9e0b-40de-abb7-ed896742d851",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5dfea266-2800-4c3d-ab2e-bacc43d574bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc23d7a-cd65-40a3-95ea-4dbef853a13d",
        "cursor": {
          "ref": "e571797a-0af0-454b-af49-d45f9cd49e65",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1fd2bd72-eff9-493b-a519-1e93257a7fb8"
        },
        "item": {
          "id": "afc23d7a-cd65-40a3-95ea-4dbef853a13d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7e8622f7-28be-4a3e-b90c-7884f001ccb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fab7ac-f5b6-4fa5-a710-9070b547f956",
        "cursor": {
          "ref": "52971cc6-6681-4998-822c-3d865fba9b92",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "27c1010d-08b9-45b2-ac3b-a367ed521e6f"
        },
        "item": {
          "id": "e5fab7ac-f5b6-4fa5-a710-9070b547f956",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d7812449-249f-420e-9b16-b4bc215dd5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109e4968-8d15-434b-82cf-700e5a219033",
        "cursor": {
          "ref": "268e799d-bb66-4074-971c-1679f8bc2e5b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2eb82f40-ec81-4a5e-a4de-d68a5c6e09bf"
        },
        "item": {
          "id": "109e4968-8d15-434b-82cf-700e5a219033",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60e48f6f-d29e-421f-a9a1-044b288589c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8560c4e7-c879-4891-9429-b91f0ee6fc58",
        "cursor": {
          "ref": "3ee1c882-afb5-4b1e-87b0-0eeb035b4880",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d4905766-cc02-478e-a615-220edaa7d196"
        },
        "item": {
          "id": "8560c4e7-c879-4891-9429-b91f0ee6fc58",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "80b4b86c-86c8-4b71-a620-75ff688ba912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a466f-aa26-4fbc-81a4-9d1270edf43c",
        "cursor": {
          "ref": "8b05c9f8-f9a2-46df-9ef2-218247fade6c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bfed2994-073f-4283-8f99-c8ac2da2b8a8"
        },
        "item": {
          "id": "b74a466f-aa26-4fbc-81a4-9d1270edf43c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b1f9e6a7-ad94-47e7-a431-4a5a45cc574c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb552ee2-7785-4a8f-94f7-a04444828e4e",
        "cursor": {
          "ref": "0c5e24a1-4af4-4b44-9f32-2be49c12c713",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d369d31a-c691-43ad-ac50-b1ffeac569f4"
        },
        "item": {
          "id": "fb552ee2-7785-4a8f-94f7-a04444828e4e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1ec21259-ed9b-4862-be8a-30ef6e0f6278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3a1c0b-32f7-4588-9c78-f4505449d752",
        "cursor": {
          "ref": "07ec7ded-3089-482c-ba25-484c1f7db91e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c112259c-aacf-40d7-b4fa-8cba94d44a83"
        },
        "item": {
          "id": "9d3a1c0b-32f7-4588-9c78-f4505449d752",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "546478d2-92ed-49d7-8605-fa03764b95f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830f64a4-33a4-47d8-8eb6-23dc817a149f",
        "cursor": {
          "ref": "b43cd0ca-9cc7-477f-85b0-a476412acc08",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f04fe30e-ed3d-4094-a2bc-32b87194dfc1"
        },
        "item": {
          "id": "830f64a4-33a4-47d8-8eb6-23dc817a149f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "54fedbfa-aa4a-477e-9571-cf4816ef478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f44ad1c-f6d9-4cc2-bd3f-1bf202d0b3bf",
        "cursor": {
          "ref": "7c997796-7c5b-48e5-a028-b97985ef81ec",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b6dd61d0-8638-4bd4-a139-5963a8417657"
        },
        "item": {
          "id": "6f44ad1c-f6d9-4cc2-bd3f-1bf202d0b3bf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aa44ba17-2357-4927-bca7-84baf7e98fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecabfbe-66f4-4796-8aa4-b427c43eb005",
        "cursor": {
          "ref": "ab09fb42-66b9-469b-9618-3ecd91a3e81d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9acf74ec-7a7f-4a13-9b9a-811ef8234ad4"
        },
        "item": {
          "id": "8ecabfbe-66f4-4796-8aa4-b427c43eb005",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "84f80354-3a32-4f9c-a612-f34414eab53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81148649-3661-4b64-b319-6f038ee02f08",
        "cursor": {
          "ref": "01997187-1a4b-4427-abf2-a32307c196e4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d33cae67-d10d-437a-9fd5-cae011139db5"
        },
        "item": {
          "id": "81148649-3661-4b64-b319-6f038ee02f08",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b85308e2-e03d-42f3-bf26-8961364660d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0611e5d4-957d-47fd-bb8d-f39e42a4a482",
        "cursor": {
          "ref": "1d7ac29e-eb80-4ddd-9fc5-6433408b61d5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "44abab56-9b2b-4a34-8312-aca7f1d6fb4f"
        },
        "item": {
          "id": "0611e5d4-957d-47fd-bb8d-f39e42a4a482",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8ac1f621-cd01-4b19-afb2-46f70c73e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88abce5b-4790-4c0f-a7b0-6ef41ac1698a",
        "cursor": {
          "ref": "0822d99e-b8aa-4ae7-9194-a1116509d156",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c208bd70-df06-48fc-9438-289cbe1fc1c3"
        },
        "item": {
          "id": "88abce5b-4790-4c0f-a7b0-6ef41ac1698a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e98b215b-a8d1-4140-96d9-537e7d1295f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe961aa6-2186-4c49-b112-99db82f3783c",
        "cursor": {
          "ref": "812871ad-1b0f-40ee-aaf0-55189b97648f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "97f88b60-8763-4397-885c-fd4b2e1beae3"
        },
        "item": {
          "id": "fe961aa6-2186-4c49-b112-99db82f3783c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a856f50c-2ec8-42c5-b118-5746b21073ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaabc7f-87ea-4a0a-b38a-030603ad6750",
        "cursor": {
          "ref": "f158f751-ed10-48af-bd45-80f6f10c0593",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e83c47c0-56bf-44c3-b633-f73200cf1cdc"
        },
        "item": {
          "id": "beaabc7f-87ea-4a0a-b38a-030603ad6750",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "10282be0-48c3-4ecc-83d0-63d8bcbce7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b5bfde-c0d4-4159-9084-7fa740adef80",
        "cursor": {
          "ref": "ed296187-1433-410c-8785-4d507fe9e8ab",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c7fb7248-8edd-4137-8761-2b15fda0519a"
        },
        "item": {
          "id": "e6b5bfde-c0d4-4159-9084-7fa740adef80",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cbba3e9b-2760-4e90-a8bc-574b820ae5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a3131-40fa-4199-bac6-6b87267b471c",
        "cursor": {
          "ref": "a455ed73-f286-4f68-a900-8ff2e12fc292",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "af1ed5a2-c8a2-4a99-89f2-24167d595146"
        },
        "item": {
          "id": "e93a3131-40fa-4199-bac6-6b87267b471c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "830d297f-afc9-48f6-b082-5fff9088f997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a17180-d241-4209-b66a-f7353d057b10",
        "cursor": {
          "ref": "2476462f-cc4a-405b-be8b-1590d768d144",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5da0fd94-28aa-4ad2-a925-e68b5c7bee41"
        },
        "item": {
          "id": "36a17180-d241-4209-b66a-f7353d057b10",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "04489e95-8f7d-4391-a0ff-84c358fbe849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493084b6-25dc-425f-89bf-42fc7fe27b02",
        "cursor": {
          "ref": "b1146464-c56f-427d-b799-9a770e4fa391",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "85e6c3c3-f0d7-4a91-8145-8b82c2d42ac4"
        },
        "item": {
          "id": "493084b6-25dc-425f-89bf-42fc7fe27b02",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e5ba3596-ed0a-47af-ad03-b58e5c11322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e92d87-6b38-4331-b149-10cf51abac43",
        "cursor": {
          "ref": "975872f2-b274-4bd8-bfea-682bb7c6a056",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "86aad67e-ce4f-4fc4-b06d-18b6a71d1ef9"
        },
        "item": {
          "id": "80e92d87-6b38-4331-b149-10cf51abac43",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "69bb4266-5125-440a-a96b-7871f34eeffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4326a44-1fc3-4c4f-98f3-b8f2e0e9f5c9",
        "cursor": {
          "ref": "de604a55-6bb8-4611-94f3-426109396883",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "502567fb-01f8-45eb-af9d-a96c2ad466a8"
        },
        "item": {
          "id": "a4326a44-1fc3-4c4f-98f3-b8f2e0e9f5c9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "211830ee-3229-49aa-8a4c-286e6f0fd175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfa6ec8-a8fd-40a7-8a4c-b7cf5ddfff72",
        "cursor": {
          "ref": "c70995f5-4b68-4a74-a213-460fba6927f3",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2f6091cd-055c-4262-bff9-ad3d547abf99"
        },
        "item": {
          "id": "5bfa6ec8-a8fd-40a7-8a4c-b7cf5ddfff72",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8e3e9ffa-c60a-479a-aae1-c0939fcf0a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec49fd-254e-4a6a-be80-39f40b4c3570",
        "cursor": {
          "ref": "f7136201-67f4-4a7e-a4cb-b6f7c1c31f2e",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4273b329-7ae4-47b6-bea7-6d5584edeba8"
        },
        "item": {
          "id": "47ec49fd-254e-4a6a-be80-39f40b4c3570",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6cfc130c-c204-43ce-bc30-6eb0e88c4f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca4c6ea-b871-4a14-b888-3c324b8b07e7",
        "cursor": {
          "ref": "459f1625-3a47-48d3-a2a6-822ee290ec92",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34a736d7-1e3d-4cbf-af3c-9d1372fa0dc0"
        },
        "item": {
          "id": "dca4c6ea-b871-4a14-b888-3c324b8b07e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d30cd51-3f6b-4759-88d7-0b8831021073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd511ef8-1031-4451-83a2-71b2ddd10687",
        "cursor": {
          "ref": "8d730449-0298-465a-af9b-5b0be27f6d12",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ead605fa-6839-4227-a978-f9434ec80330"
        },
        "item": {
          "id": "bd511ef8-1031-4451-83a2-71b2ddd10687",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8d63aab2-64af-43b3-ac44-5576e54088e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a9e107-8bd8-4b3f-be2c-e936204d57e9",
        "cursor": {
          "ref": "bbaadaad-992f-4149-a346-f58753ef7a30",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a7344c90-4f28-4450-be67-48c3bde5ec59"
        },
        "item": {
          "id": "45a9e107-8bd8-4b3f-be2c-e936204d57e9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3968e2e1-3943-4f91-b769-9040388e699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b08a3-6e35-48e3-be6a-7b1fa4332109",
        "cursor": {
          "ref": "19126643-116b-42cc-b993-33960eae0a65",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3e3e9c4-1f7e-4965-8648-eb27dcd3a7e2"
        },
        "item": {
          "id": "434b08a3-6e35-48e3-be6a-7b1fa4332109",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7ff6600-833c-4b15-8064-a608cd315927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc8e61e-2810-486c-aea1-c2124818b816",
        "cursor": {
          "ref": "91c71254-1d63-4e83-81c0-fb6c548ddd57",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "40633b77-2d11-494a-ad3e-051e91f2d30b"
        },
        "item": {
          "id": "5bc8e61e-2810-486c-aea1-c2124818b816",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "995a4b38-099d-4b87-b8e3-c4c28b74b068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3275352-e2f2-47ce-8b33-cf043a7cbb28",
        "cursor": {
          "ref": "450bc170-0ac1-4173-bb4c-30854c5915c8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f3602ccd-c1db-4cd3-bd21-4292b140f7f9"
        },
        "item": {
          "id": "f3275352-e2f2-47ce-8b33-cf043a7cbb28",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f8ce0766-75c3-4197-adde-02ed2fb13019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f274d-4fc4-4b2f-8e97-c0fc53a3fafb",
        "cursor": {
          "ref": "315a0c30-d99d-487b-9f8d-28f2d18a9ff5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4baeb49f-97cf-4ce3-936b-4f221e6b1be6"
        },
        "item": {
          "id": "1e8f274d-4fc4-4b2f-8e97-c0fc53a3fafb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5995f9d1-2425-43b2-855a-900c968de4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aad919-07bb-4c40-a211-81e2f24ce388",
        "cursor": {
          "ref": "566c02c0-8175-4317-b855-2f019485e9d2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "464e30ad-d92a-48d3-a226-ccae805caa33"
        },
        "item": {
          "id": "05aad919-07bb-4c40-a211-81e2f24ce388",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "df489678-a986-4b68-b5d9-ad91aef013bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f52a207-110d-4280-ae69-d9e1b37fb63e",
        "cursor": {
          "ref": "dcb50b6c-13ff-4651-ba64-a768189cc3e0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d2c231a1-bb8a-43a4-9cb2-dbf96522935d"
        },
        "item": {
          "id": "0f52a207-110d-4280-ae69-d9e1b37fb63e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "017cf8d6-062a-4865-83a8-03367e3c7be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373c8e3-996f-4b30-ac41-776653027523",
        "cursor": {
          "ref": "f379f93e-cab3-4bb5-a751-78538781c26e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59d0f7d5-3d52-47f8-9289-9ed99aeef6f9"
        },
        "item": {
          "id": "2373c8e3-996f-4b30-ac41-776653027523",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc6d96c1-d184-427e-b908-41d4ee65dfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6275453a-c6b9-4d93-8e15-400bfb7001ca",
        "cursor": {
          "ref": "0fe50d78-fc91-485b-b0f4-888b9c218093",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a0f92daa-5814-4c24-804a-255d8c2fda0d"
        },
        "item": {
          "id": "6275453a-c6b9-4d93-8e15-400bfb7001ca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fbaf131d-e932-4638-9a5d-9b53b692e427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4601e240-dc06-4014-8f83-3e5d2b6971d7",
        "cursor": {
          "ref": "bc3ccfef-0dd1-4975-af85-6a6acad4d716",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c517d985-0ab9-4c04-8998-c57ec59d76fa"
        },
        "item": {
          "id": "4601e240-dc06-4014-8f83-3e5d2b6971d7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fa9cc68f-97fa-49fe-85ca-30e8f0db079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c128f26-c7ed-4523-a1d0-62f60672b01a",
        "cursor": {
          "ref": "948d2c5f-6431-41fa-8c91-4ea28e4a74c4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "09e1d374-1124-4f5b-960c-4522355693a3"
        },
        "item": {
          "id": "9c128f26-c7ed-4523-a1d0-62f60672b01a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15f4a198-dd75-41e8-91da-26235bea0484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9468ead8-c397-4526-93d0-4703742ce919",
        "cursor": {
          "ref": "58a6c4c2-73e6-459e-8d91-5b7fc64c91c6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8967429-47d9-4508-86b2-013908933586"
        },
        "item": {
          "id": "9468ead8-c397-4526-93d0-4703742ce919",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b70fc33-bfae-4580-a638-dd8169fed343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef61114-2215-4ca7-b10b-ddf7ca5052ad",
        "cursor": {
          "ref": "9dce8c71-c969-4831-8b14-22cb2253a0a2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9420bc55-051c-4d23-809f-789f3c8d562f"
        },
        "item": {
          "id": "0ef61114-2215-4ca7-b10b-ddf7ca5052ad",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "127246c0-e656-4cff-9c63-550586dcffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdf679-3c87-4570-a613-842466ccc848",
        "cursor": {
          "ref": "c86982ea-faaa-4d75-804f-7f6c87b02215",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0bb09a95-a1ee-4fa2-bf56-bea66d4bb732"
        },
        "item": {
          "id": "ddbdf679-3c87-4570-a613-842466ccc848",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "007118a8-aab4-4cd3-bd6d-e1a8a5774be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35238c7-1d52-4e36-a3cc-d9f114684ce2",
        "cursor": {
          "ref": "edd9eea3-b7f7-4d29-91d0-dd95e10883cd",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c2b8888-044a-4e62-ae06-2718b4c4b617"
        },
        "item": {
          "id": "c35238c7-1d52-4e36-a3cc-d9f114684ce2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "904007ef-10c4-4915-a699-348adbd13f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfb9c81-6b17-47ec-b1c1-c4d7f2d19cc2",
        "cursor": {
          "ref": "4637a930-0860-4213-8698-895788db753a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bc06aa14-bc32-4a06-8110-0a10e84d0982"
        },
        "item": {
          "id": "5cfb9c81-6b17-47ec-b1c1-c4d7f2d19cc2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5e6e05ba-7dc3-4765-b228-1c8ca19fef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd0af4e-2759-4bc6-9b83-a2207a5c9c75",
        "cursor": {
          "ref": "471b90a1-a8d8-41f5-ad2b-805ad36827eb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "18d78c21-dbe0-46b3-b65d-c95db5093244"
        },
        "item": {
          "id": "8bd0af4e-2759-4bc6-9b83-a2207a5c9c75",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "76176b61-f9c3-45b6-8a16-fa3b8f866d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ad6f53-305d-425d-a32b-42af7b61fa54",
        "cursor": {
          "ref": "069f9492-56f2-4933-9594-4b9408bb1b13",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "56989d62-d409-4949-aea2-c026857899e5"
        },
        "item": {
          "id": "b4ad6f53-305d-425d-a32b-42af7b61fa54",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "96f764fc-44f6-4961-b1ad-07b6901068ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba89c2f0-fff5-4d7f-8a60-c9e801f30a5e",
        "cursor": {
          "ref": "82d6a358-2409-41d5-a788-f34080e4a4ba",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "511c299e-210b-4b6d-a28f-9a574275e5f6"
        },
        "item": {
          "id": "ba89c2f0-fff5-4d7f-8a60-c9e801f30a5e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c636ada-552d-4093-8477-49f62d5a4a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e65d1-8105-46e0-b80c-1376cd081ee7",
        "cursor": {
          "ref": "35f484dd-d657-4a15-80ee-daab4e8d17b8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dbbacae5-f6fa-4ec1-a0fd-9e3e1ee8959a"
        },
        "item": {
          "id": "f43e65d1-8105-46e0-b80c-1376cd081ee7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c96b759-ec9d-4a0b-9eec-20d584e1153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb7abf-cc70-4173-a8df-0b6a23946ee0",
        "cursor": {
          "ref": "f8b7b2ba-64ca-4059-9956-99b030bf7559",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b6fb59f9-6d55-4115-ad16-e48fd388f807"
        },
        "item": {
          "id": "83bb7abf-cc70-4173-a8df-0b6a23946ee0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fddf9294-35d5-49ca-8c9f-dbc4b56be984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6376c513-e1e7-4007-bd26-e10c309ad499",
        "cursor": {
          "ref": "3ae8ccd5-f2a3-4045-af32-bfebabfa5dfe",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a74669fc-3152-4fec-8179-028e617e4631"
        },
        "item": {
          "id": "6376c513-e1e7-4007-bd26-e10c309ad499",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2266ccf0-1918-484f-a886-8c23ef69a77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44df0027-d1ee-43f9-b855-65f4fdaa11ee",
        "cursor": {
          "ref": "7387ce47-ac45-4a4c-aa50-73c5f344d9f8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "72b518e6-caf2-4f95-ac59-0e19ce243c11"
        },
        "item": {
          "id": "44df0027-d1ee-43f9-b855-65f4fdaa11ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "30f76dec-bbff-488b-89df-0de3d834fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68a399-308d-4f3d-9369-ce96fe130369",
        "cursor": {
          "ref": "ca6fb71f-971c-4eae-b03d-81d50ce5559f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "56770dd5-7b96-4679-8db0-fda3116a1de3"
        },
        "item": {
          "id": "dc68a399-308d-4f3d-9369-ce96fe130369",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "53361762-560e-4478-821f-16fd954e2ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaa8f53-377e-41a8-b84f-cad8cb055d9a",
        "cursor": {
          "ref": "9267ae0e-b750-461f-b45f-5dce715336f1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "29234ada-e366-4d04-96a9-16c16cfb4b04"
        },
        "item": {
          "id": "acaa8f53-377e-41a8-b84f-cad8cb055d9a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "704499cb-7a5b-433e-a88e-be68ecc0f2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b2bde7-ee73-408a-b035-d4e0dea724f8",
        "cursor": {
          "ref": "b15228e4-04db-44e6-96c9-c8f9faff94fb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1b527396-9088-4d5d-bc00-cc31131e49dd"
        },
        "item": {
          "id": "62b2bde7-ee73-408a-b035-d4e0dea724f8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1693bdd6-f9a7-4027-846c-528f90a5e07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff4d2f9-904f-4ff2-a081-e5a2bd9cff4a",
        "cursor": {
          "ref": "a2dad386-d9c4-45b1-aec2-78f8e318b302",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "26f92df4-b90a-4743-8ada-8fd68f0e86d5"
        },
        "item": {
          "id": "3ff4d2f9-904f-4ff2-a081-e5a2bd9cff4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9c66f3c2-c8b2-46d1-af18-1333a490e41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011fab98-82e4-49a8-bba8-18aca50e5c3a",
        "cursor": {
          "ref": "6098fb0a-d146-4bae-85d5-daa72254bb73",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "58c970e4-25ba-4450-b44a-ec6cb35e9d12"
        },
        "item": {
          "id": "011fab98-82e4-49a8-bba8-18aca50e5c3a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cdc3d7df-6287-4e01-9721-0ee05ce37b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33186ae0-358b-460f-8b52-33b77b1f9ded",
        "cursor": {
          "ref": "8986b55d-b0ad-47a6-9528-3f05c17256ce",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "93c2d023-1c7b-46ff-abe9-f0d8a300b9ad"
        },
        "item": {
          "id": "33186ae0-358b-460f-8b52-33b77b1f9ded",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2ec0937f-554d-4e29-8f5f-ae0991738dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8acc385-2b3d-4215-9874-04e04a731ad4",
        "cursor": {
          "ref": "7372b9b4-e881-4576-8ed6-0952a0695356",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3434c8c9-19fd-4f26-91ec-186a65bd3d96"
        },
        "item": {
          "id": "b8acc385-2b3d-4215-9874-04e04a731ad4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dbb7650a-f6ab-40f7-b947-65b04d345e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbe955e-9d8c-47a0-8180-b703db4073cd",
        "cursor": {
          "ref": "5ac9aa00-b638-48d0-96cf-f2cdd7402b08",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b7dc95fe-0712-4706-8b5c-c789ae5fa278"
        },
        "item": {
          "id": "adbe955e-9d8c-47a0-8180-b703db4073cd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d0c2bcab-9b9f-4e67-82d7-8aba58d25f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207b3f20-3c03-4acc-b2a1-0bc3ef5a2f45",
        "cursor": {
          "ref": "94dd84d6-3d5e-4036-92a4-205d7fc5c35f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "661df982-90b2-49f7-a854-8966daa60fb1"
        },
        "item": {
          "id": "207b3f20-3c03-4acc-b2a1-0bc3ef5a2f45",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7a9ee401-f405-4c6c-8cc7-d4e132c31bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ad56c1-b30a-4d6e-91e5-4be0f62be832",
        "cursor": {
          "ref": "48bce451-3785-4b98-b124-41f630049254",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "22bffe12-531e-442a-b170-0933cd3980e6"
        },
        "item": {
          "id": "98ad56c1-b30a-4d6e-91e5-4be0f62be832",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0cf0d786-b12f-4ce2-bb6a-cb29dae4226e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5ce46a-b589-4ba4-9822-181b75ae8ba5",
        "cursor": {
          "ref": "5a3f8727-e336-4ad2-9f80-d26a9acd47e2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e3d8a9de-e2e2-49fe-8e27-ef24c12fb971"
        },
        "item": {
          "id": "4c5ce46a-b589-4ba4-9822-181b75ae8ba5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2145d607-c789-4ba0-a5e5-de631ccdf828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94e2a19-748f-4262-acde-b885ff31e468",
        "cursor": {
          "ref": "b931cf59-d016-4382-b4ca-1ef62fc1b326",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "88ed1df6-1f04-4fa2-9018-8ba9fc2935e7"
        },
        "item": {
          "id": "b94e2a19-748f-4262-acde-b885ff31e468",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "04ba7f87-0f3d-446e-b3d4-736d0418c9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4b20aa-188a-4f1f-a5b7-1bcf64d7c2f4",
        "cursor": {
          "ref": "0f8dfee5-c230-49b2-b575-32a04419f1b8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f514e2f9-1b56-413e-8c15-a5f9c0140186"
        },
        "item": {
          "id": "ee4b20aa-188a-4f1f-a5b7-1bcf64d7c2f4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ac06a2e6-5ff3-4e53-b6e9-ad0051b3759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bb8c20-1633-4079-bec4-456a87f50f78",
        "cursor": {
          "ref": "7a296eaa-d30e-4a30-8f04-0fb2a74789d9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "82dd35d7-2b41-4f2e-8186-4654fec555af"
        },
        "item": {
          "id": "79bb8c20-1633-4079-bec4-456a87f50f78",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b042d38-64f4-4f3a-a3e4-3f789e863a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5023e4-43ed-495d-b564-c97d814a3d37",
        "cursor": {
          "ref": "33b46507-c69d-4253-9e49-d0631a4bdc7c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9c6577d8-18da-42cf-9a35-63f0653f55fb"
        },
        "item": {
          "id": "3f5023e4-43ed-495d-b564-c97d814a3d37",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "03f45c2c-1953-4796-acfe-dce07236ef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8729d9c3-656a-4222-8c35-7e67f7e34ce6",
        "cursor": {
          "ref": "b5574793-9886-4831-bb8b-c4c7ba4b9d3c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c287ba66-7c6a-4039-ac5f-cac9a41f9e35"
        },
        "item": {
          "id": "8729d9c3-656a-4222-8c35-7e67f7e34ce6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4bfc222e-4e8a-454b-b1da-87bc7377fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c83376-244f-4f8c-ac5f-f9df94e7e66c",
        "cursor": {
          "ref": "97b52f46-6552-48cd-bb61-c4c6b2d4abc6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "166a8821-3c3e-418c-a8a0-32b24b32abd8"
        },
        "item": {
          "id": "47c83376-244f-4f8c-ac5f-f9df94e7e66c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c29a4d23-07f9-4f65-980c-80d2be94e5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ed04f-002a-4cff-b9d2-301deb18647f",
        "cursor": {
          "ref": "91084eeb-896f-4eea-83fc-b68e2ddea4b0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "72665007-9733-4a16-837a-bfc63462f474"
        },
        "item": {
          "id": "015ed04f-002a-4cff-b9d2-301deb18647f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cdefed97-3085-49b2-a023-82ef2d5965fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950006bc-3a76-419f-8a05-bb1ecb0b4e80",
        "cursor": {
          "ref": "f5327d1e-6808-4dc1-9419-79165e20fefd",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9209b95e-248b-44f2-80c2-eb566cfca4aa"
        },
        "item": {
          "id": "950006bc-3a76-419f-8a05-bb1ecb0b4e80",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "647522ce-e03d-48ec-8dbb-70aeb4d88dcc",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb72a9-1aa4-43df-8877-26228280990b",
        "cursor": {
          "ref": "a6d4c26b-06d7-4c11-91af-20fd954d15cc",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f1c47b67-0aa3-44ce-be50-08634e2296f0"
        },
        "item": {
          "id": "04fb72a9-1aa4-43df-8877-26228280990b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d1b9e299-a306-460c-bf82-5c18a836e062",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "222a0499-fa5a-47bd-9588-004883344949",
        "cursor": {
          "ref": "4ccd6e71-69b6-49a9-b685-ca8566c3b4bd",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0950c3fd-e3aa-44c8-96d8-4d1abaac64b0"
        },
        "item": {
          "id": "222a0499-fa5a-47bd-9588-004883344949",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "042fd9eb-df22-42d0-8a09-c91a0fba6ab2",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f5bdd-f257-47c3-bbea-22134556c4a6",
        "cursor": {
          "ref": "3114dac3-6301-4b85-a737-2e3d1a694444",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ad1c4e3-ce58-4b68-8dc1-0db90619460f"
        },
        "item": {
          "id": "c19f5bdd-f257-47c3-bbea-22134556c4a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76881cbc-04c3-4fd4-9e63-31127c24d41d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f5bdd-f257-47c3-bbea-22134556c4a6",
        "cursor": {
          "ref": "3114dac3-6301-4b85-a737-2e3d1a694444",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ad1c4e3-ce58-4b68-8dc1-0db90619460f"
        },
        "item": {
          "id": "c19f5bdd-f257-47c3-bbea-22134556c4a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76881cbc-04c3-4fd4-9e63-31127c24d41d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee899d4-ef53-4923-8afc-1e1542462793",
        "cursor": {
          "ref": "d949c942-49e0-417d-91b4-3142dce6d780",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "82daa9eb-ced1-4a63-8666-55c4e9479265"
        },
        "item": {
          "id": "1ee899d4-ef53-4923-8afc-1e1542462793",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e416c6c1-db9d-4443-9fda-5f82f6669d89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7657c62b-23e1-410a-8491-9d02cffb7404",
        "cursor": {
          "ref": "824108b0-944b-4216-a68c-0639684d04f8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e3d46b7c-e3c2-444a-8459-dfef0633cc45"
        },
        "item": {
          "id": "7657c62b-23e1-410a-8491-9d02cffb7404",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d985ba3a-eafc-4394-888b-d7266dc11f6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}