{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9904937e-56b2-46c2-8916-70cd04e39e94",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6c4633c8-f2d1-4071-8ea6-174e9d6a2ee0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a792541-28a2-495f-a2f6-2d9bea5c52d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "43d56f86-c505-40d9-a0dc-e8661b35ae4b"
                }
              }
            ]
          },
          {
            "id": "1bd47c21-6339-4751-932d-d74687af3955",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f9b5d48-a2bb-438c-8295-1c7390259f6c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93ed421d-642c-4abe-8d04-d4b0d0eff9bc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fb65087c-e07d-4da2-9af0-26074189b6ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5fb48471-1919-4325-b09d-f49b0b34cde8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b97d7c8d-0653-4926-9b2e-655cbe96d04f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d28e8c7-04d8-4770-a989-cf8c97a96cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6223abaf-5676-4593-b556-f36c8be08a3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcb7b23e-91f0-41c9-8977-79598851dffb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "975d3dfb-2350-4cba-8c1d-0351c4199801"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ebbd3b5-029c-45f8-be41-4964dfb5b49b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fe57197-1c0c-4652-be02-3076f7f3590a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf6390d6-cf95-4327-90ff-b81dc23250f1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae459035-f126-40bf-8fc1-f16d5ae4eb13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2b9ae81-3e5c-4732-b66b-1eaa1d94d6b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c18a776-9828-496b-9a35-3c06e4b2c04d"
            }
          }
        ]
      },
      {
        "id": "95be7f51-e8b4-434b-a30c-86a69fd39353",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cda23f86-f25c-4662-848a-5ddbcf28548c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c20b6b8e-b2a9-4a0c-83f4-48eeb1292a98",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6b51ba0-3cda-49b2-ab00-4ad930bceb60",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b46d1a6-654a-4581-90be-aba0102a6268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eba4e6b7-9ce6-4148-814d-90c3e2955aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b735ada-646d-4a2d-8c25-e70be4f14928",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b8d03-7fb1-48c6-a95c-9fd5ab69ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02a72b64-9e14-4347-9476-b025dd37a371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1df39-d369-4861-aced-6e4654280dd0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b068f0d-8108-4760-bbdd-adebcdb427c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e19c6adf-64ee-4108-96f0-685c7ac127a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f88a2d26-eaf9-4a1a-8f4a-453fee378e99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ec9924e-be4e-44a7-a062-f455b6233bf5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2049009-ca94-4d0c-a2d2-98254b6c497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "367d412b-2ebe-4f9b-a9ec-b59ad482f2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dca839-55ac-494a-8046-59112e627f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae9f074-2732-4afc-8e7c-de29012f009b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbd0a4c7-7d89-4957-be44-460a48462351",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f943f7f3-3b76-4cbc-a3d4-d3dea03a14c3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89f766b-0cea-4215-af66-457a4fe1b3bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5019a493-b18c-40b6-8cb1-e37a2933924e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f5fdab-2d45-45b7-88fe-da8be2eb2696",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d544e511-1061-45a3-bb4c-7211d8601e40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "563d4c65-65f0-4bc2-ac0b-f8114134a83b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb427526-8032-48af-9bcb-fb75e869403b"
            }
          }
        ]
      },
      {
        "id": "d855f8aa-6fd4-46a8-bb7a-3cc2fbc8d2c7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b2925de-aa98-4dea-94a0-325f8675430f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1928079b-87c2-4bdf-9692-4a19a545369f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5de4443e-a1af-4dc6-84f6-eff54b7c738c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8192c7-6739-49d5-b244-0d9266883dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f5cff3-e785-4dcb-816c-af972d8d5518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b61fa-6aa7-4f01-ae2e-a08cfe09eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4bad3c-bd6e-4d04-a7e7-4bf9cebac3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7666be-f464-446c-bf21-a958e61483d5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cba89ac-f9fe-4838-a7e1-616b04a2eaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872bf7f6-e536-4715-807d-fae7b0d00e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acce150f-91d7-4486-a0aa-a7b2b32afdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "817a63b8-1225-4800-b5ba-9e371a83a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba369b62-3a33-4c70-9208-36592a61f0b4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86730dc9-76a9-4bc2-b61f-96d8d3d922f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75befcbc-7d90-475a-bead-90d8974619f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75617b2-30bc-4219-94b9-41016d0e5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f40e1eed-de23-491a-94f9-45258370cd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f523566-e6c9-4573-998d-da32d34a46da",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879e036f-a708-4c87-97b4-ef74e35fb6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c872cabd-7499-43a9-a44c-3afcc5470973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418b0e62-3b53-46ff-b4e9-6496d228f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76b05b19-4b9a-4d45-96e5-994aff925bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24eaabe-87e2-4cd8-af38-f69c5a1a11a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e2c7a-e653-4000-be2f-ece4885c844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d483b6f-ddd5-474c-9bf0-b443eade78f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3074f4-bf0a-424c-a17e-f51ac982c67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b53639f-ee65-4161-af2a-61e1eb81229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3d2a86-5043-4929-b795-45090ad35ecc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff07d934-9511-46b0-80da-9e04958e5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fde91c5-a981-4a32-9335-e05ac40c62d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b18be56-e569-4639-b4dd-f47e2ab4f9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31982b44-5a0b-41e1-abe5-496a5f67f3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d043e2f1-e0eb-4d39-8fa0-b6bcd589d42f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec300a-0c1c-42ce-a987-5ca2d76f18a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2518e994-5149-448c-9493-914e3c9aa072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c642dc7e-dba8-44e5-b728-e95b4889aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57cc1239-2df1-420d-b943-68abce2b03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7c6aa-9d4b-43e5-935b-d1caeabfc0f0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f00699-086d-48d0-9544-d7209908fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa4eb85-5b8f-4718-aa48-3396348fc6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2c888c-77ab-4776-9593-17faa40d5fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f11ccf-2154-425a-9ed2-ed6c4743a1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac2ca7d-c71b-4602-8929-05029a3ad9d0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca9693f-5446-45ce-9697-6cfc8a37cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbbc4ce-6e17-49ca-9795-b975c53255e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aea9bd-fba2-4f55-aa70-baf45f6a6be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1322545d-e318-48e3-a329-8e8934b47b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eba7bc8-d9d4-44ca-8996-bb8dbb4b236b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c90f0a-f6c8-4c14-8370-7fc7182930b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fcb108-cef2-490d-b107-0c353399b796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6320fb7-0b5e-42eb-9dd1-a4d8d6b77ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23f23403-a311-4869-9fa8-9336ca77b685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27783ad-456b-4779-9f97-e3777ac63718",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66066c1-5f0d-42cf-9a62-bfc6933d2887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5106876-869f-4cbb-ab1f-2edac019faac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406dc12c-15ac-4dde-bae3-3aa82c1fc9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3206b8b3-caeb-43b4-9c76-e3f40d52f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661505da-4c9a-418b-b3f5-dee6e28d0404",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c863131-6432-4ddc-879e-7750a5b89d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b5fa06-3068-4f49-ac6c-80351e9d5583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ac3f87-4e99-48ce-8bc8-98507f174acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c653dde-0a34-4454-b9d5-3464b73a8763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fbbc13-435f-488c-b822-ce6271708b46",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aac6344-80be-45f3-875b-2b232d3f476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3145527-12df-4ec4-b13f-6ee8c747b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec0a25b-53e7-4ac8-8af7-c08aa119d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d467b0b-75f0-4f6e-92b3-c388bf7352e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58600168-2d1d-4121-99f5-cab90fa489fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82739b8-33bb-49a2-8de0-8468116ebd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4917b9-8b9d-4130-9d9e-14398904de9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff2f59c-071b-4207-aff6-bc7d5ec0e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cd0888f-5a97-4a27-b318-d3bd374cd96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171214c9-8e0c-47ad-8c6b-ec1e5474e60d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4996c562-0b73-46c6-9054-73898623ff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a679ab49-cc34-45de-85c9-1e37555949a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeaba0d-95f9-4c14-808b-657211dc8c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dab5c44-f567-4c6d-b83d-838f6db2854c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbacc834-6542-4f99-bc52-7af3f2916ae1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de2c8ed-53a5-4baa-9ba4-4cf13eaa7465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b892d981-fa95-457b-b5e8-6fbc2c15ed41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5a5ca6-708d-4f67-9372-06c4f670bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d51633e4-6c05-47fa-a623-55424a051135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49703d8f-ce62-4fe8-88c3-eeb82c7fd7db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e10928-318c-45e7-bc50-97b5b3b8dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6330198-4826-485d-a438-81e3e2647c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5eaad4-8c39-441f-98e7-50dab5d7f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bda6858d-744e-4049-a2e6-b44a76aaf3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900b480e-490b-4ce5-9775-243613af5e85",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceaa755-296d-4db5-8209-1abdb2b623bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099cd61f-e397-4c44-b655-121db422d265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf15041b-4448-4375-a0f0-c84ecba321cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d9dc93-25e9-4255-af90-b920cb8bed68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748b4e0c-0bd2-411b-8c9e-b1cdf5ca0556",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff865dc-13f4-4a0a-aea8-71235065781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8503ee1-5c60-433c-a3cd-7b0a11f82c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90c83b7-d487-4e5d-b306-8c0be479b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6507af-7876-45be-861e-4253f83cfccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c389aaf-952c-496b-9e54-a15698dd677f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76bc20-f512-4235-be13-3fb41f70a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d67b0a-681f-4873-b1f7-8b2bb1fc1ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0683f0d7-93a9-4a9b-a0e9-f4eb1c04dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a24383c-0e79-486d-a6ed-b342460557ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31626c8-2b9c-4197-af83-7d2235eb8af2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3beafd-a77b-422e-8ce2-9d4d20760ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5470abed-77a6-4a7f-9342-f2f0d1343368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943b7167-4ec8-4330-92b0-4b2427bd994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "960c3dd3-408e-4d14-8805-8a4e546b97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aaab4e-b06c-44f3-86a4-425d1e8f7859",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c89fa-e31f-4766-9d0f-a98e82eb114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6156a64-3460-436d-ae59-855007b8c000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbef9f1-ce16-4487-86ae-d95efcb80eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "820d62c7-911b-4a3b-a029-ab9b046b01f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd208d6-de83-4a93-a810-2db98ab60290",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e8035-542d-4688-89ba-fad5c2b10602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4c1789-014e-4293-b2e1-c851bff2090f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a8574-64f5-4061-bb1e-a6b20307e92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2389b68-d1eb-4d9a-ab65-2df8a065b6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7789444-4e31-4607-8dbc-4c935ca419e4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1ceced-fa29-40df-b07d-f5c1fde53716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67c92af-c9d7-448f-b4a6-c39dea8c22cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e06e52-3f30-4561-9ad0-2a73c7bf1038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b25a343-08e0-4ed7-8f2d-ff1370770d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a0f230-d9f7-45bf-b8ca-8c5ccbb916bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b9ce3-0601-4097-85ed-0d4880c84ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32498890-7af0-4b01-bb34-e9ab9b49c1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988b8c01-6d59-4d11-832e-d71e189a63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1d4860-497c-480d-ae1a-bc9e3d641c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e51a1c-5173-428c-baca-b5bda47cdec6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ce2ae-5c77-4ba2-a366-2b950a934ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9039979-e9ee-4ef5-8786-019395e0f820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44d166-89b5-4e78-9a29-059fe1307cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00a7c07-8219-4fc0-93d4-6f671a5d684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cd6b4d-568e-4d4c-9430-de299dd98f2e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db63d9-bb41-4177-bcce-375e99fe3e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cdd2e5-daf0-4b72-a354-456a0953b706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351dbac6-3abb-400b-93af-4681b0ec8eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38ec9e2-d274-44f0-a98f-1e1ddd7e7e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d85a6b7-830e-486d-a56a-403957c1fea8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64608576-40f6-4272-a6a4-9e40db7f0b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658e8099-61b5-485c-9a5a-2d17341aa5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962b79b4-b776-4841-84e5-85b494506deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b78ad03-4ec7-466d-b15a-9e6857fa85bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20da484-6e2d-40ec-85df-72961e83584e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66ea3c8-5cdf-4936-9874-3f3e31d12614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce943814-a224-4c88-8855-adbd7b7a7854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace9de28-5bdc-43cb-9c55-4253d944aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35623b7-d674-4069-a4fd-1030c48ec3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20aa5b4-6ef2-4142-ad81-fac7136bf4d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de55000e-de1d-463c-9549-12d87906f981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4913265e-b669-40b0-aa98-1d2f5bc8c2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f281f-397c-4d2e-a8f9-379c8657cd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc1156c-6fff-44fb-8866-719f766230ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0580441b-3227-4d11-83a4-5b9b04e810f1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549f983f-f91b-470d-ad86-86a6e61a7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3251693f-3954-4463-bd7b-1b9c709c3dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d661cf4-74f4-477d-bc7e-d90f9a8c5750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded4f828-c3bf-4905-83d9-e6958523fcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d923e9-7ada-48f1-a5fd-409950a2fa5f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5f6856-60fb-4939-a7fa-f8653c522b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39db6162-f569-4299-b0e5-d57650cbcaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05628c33-620e-43da-91d3-6ab121e05058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d8ccc9-6240-4c94-b4e8-268aab469595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b47532a-6177-48ba-b9dc-a961f7dbb5db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b78a173-6e04-41c4-9440-e3b528230e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bd255d-2a66-4c19-b20f-c47117bfe57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5022bbd6-93cf-471d-8217-a9d38aa8848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d72c16c-d25c-4667-9012-d98ac97167bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65775317-6427-4684-90e7-297ce727ba4f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15cb0eb-c38d-40c7-8487-ae282515d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d3326d-0e5f-455e-921c-905c1e014ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93c6725-892b-4176-bb1f-c5b26809c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9f7b20-2a57-407f-9385-5f0b2bc06b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6696e605-c1b2-4f39-98e1-b659a887c8ae",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b6fafc-bd6f-42e3-b418-b80087cdb235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2b28ef-41a5-4bf6-9d96-eba91cd4275a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687df8e2-705c-4a1d-b459-8e175b1fe7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcf80dc-2ae4-4945-8d27-0f0eace8fed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc69277-1437-46d6-8ceb-5fd3cf17751f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e607645e-6c7f-42d2-94cb-9e7d677d1e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5605980-1a19-437a-ac6c-bfb6b6769c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995482b8-9bbd-4c1f-8f01-7e4d3ef9e8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac02386f-496b-4e05-929e-99f33292115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c1084-9bd9-4124-baad-97efac67f76b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a23d93-001f-4fbf-817a-98dd0660e00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7b659b-7ca3-4ee6-ad7b-0902a0303384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3509526-c28d-4a11-ad9a-a2b60d970e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad17e18-a4de-40be-8e98-697ef8146c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebe0cee-06ca-4fe3-bee9-59e65bcac50e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e2f8a8-935e-4a36-a816-e4b046afa80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d145ae-5422-4372-8747-d2070df2c2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aebd0c-77b4-46b9-bcc4-64314dd86799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eebad2e-c556-4664-aa9f-44ed746574b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db606e-d294-4414-be11-771bb5741f09",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3facd89-888d-4a01-819e-cbcbe84fb61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7016d5-4b17-49c3-bb32-623879f12f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514e8737-9c44-4f5d-9231-68d6ba3faaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d35ddb7-0b65-4d23-a91f-e56536251f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7605650f-383c-4b83-b2ff-e7460f705e82",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0beae5-ce6d-49e5-a905-0b2ba155a43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2944079d-391b-4ae5-8c7f-e26b483fb9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8bfbd-935d-4982-86c4-8687fc08d278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "040b2fc3-7508-466d-b073-ff3c9b128eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9fff2d-a55a-4fa8-8eed-43b6fb6e3740",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe62c0f0-2f4e-4028-a6d7-6c03ba90a0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a4f79f-9a09-48fd-b481-6bd94031098e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b4ea4d-8b79-4911-8d4f-9d4433780dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff767ea-e0f7-45af-88fe-b9a0179da9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5789124f-63db-4c4c-9d26-f027f4e72a58",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2924fb4-8ff4-4ead-8963-eeccc42c8a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a65038d-8f9f-406f-89a3-f221d23cbf34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeed5f2-27c2-42cc-9eb5-36abd7869cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3050fa0b-c0d9-4e17-9ce8-92dbef446112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0bc7f8-5952-4746-b916-0a1d0a8eb7d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c10a31-07ed-41ae-954f-48dcdd15d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e452da1d-e19b-4dde-a54c-e2ccb186ffb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c844387-ba73-4cfa-b9d1-6a0a80092d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c50db98-bc05-4707-8ffd-3d56bf447741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184086cc-f962-4382-ab4e-0489f44bd247",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5e18f-38ab-42e8-84fe-003e1b066aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229a6183-a696-4d2f-b30f-175cb5ab90ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187f42bc-f800-4f19-af4c-315ca3673a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "72eeb899-b6f7-40c4-9026-5fd9e29ecc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81622173-eb14-4f47-a0d7-20a56006d959",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8436aa1b-cbc6-43f3-849e-b25fb0d1ac6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50508a0f-2e2d-45ab-80f1-bc6e3dcd7845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c8c597-c213-4c74-8a05-47be317f5167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2fba7e-1f6f-4e98-9ddf-861bccb799ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346c98bc-31ca-41cd-bd48-039037e0d82e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e849119-6d84-453e-b65e-1fcc371fb930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1beaef4-9145-4f33-ba11-61801bc96cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6090edd-89ea-45ea-9bee-1355938e6eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be85d6fc-0da4-4413-b60e-e106e850d083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b60cc63-24db-4910-8ba5-44555a0ce574",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f14d7d-0de2-4338-ae39-65865f1a5a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1449da-3809-42a6-ad1d-2254252f282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c11021-b153-4503-b968-ca15fbc32f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d48ed15b-a5bd-4482-b1a6-1f49115cad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa636556-8f3a-4a56-a596-429c89db6b15",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ac2be0-9876-4d09-acd7-d8cec16f361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7aa6ab-d8ef-424a-a537-0a0e08b05a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601be901-619e-4f20-baa7-0dd990fbbc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7d0efa-043c-4563-aaa8-234ba3a21fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef6ede8-f604-4cc6-98a1-3ce8f7a4f59f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fde07b3-3694-45a9-9a1c-c61ec17fd47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f43d483-0c23-4cc4-a08f-1d6ec2a3d305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4c47c7-adbe-487c-99f3-3338bcf06794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d68a70-15d2-4364-b5be-a1ca9387a5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03252a82-799e-499d-8c5a-abd91792013d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982da4a4-72ec-4c51-a17d-4a18750040a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f73093-6c36-48f9-9a59-ddbe00dc5210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0efdb0-8ca4-4355-8d80-236af98bf649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e968ee0d-e62e-4819-b30f-6cdb5e241e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dffcad-1187-4975-97e5-f65a9ea551b5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ebe76d-80d8-41a9-ac3c-bcce710f3118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868da4bb-d5c8-4625-8d65-8cce1b308782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785d456e-3527-442f-8bd2-b4ee0a5f954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d781f1-5639-4b0a-beb3-19011d37074a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f834043-808c-409e-87a4-9dd931b513bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50889c6e-a152-41e8-b688-7652c88d7e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e257bb17-32d7-4105-aca4-1c490635ddc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43144ed-bc6b-4a42-9461-ab7b0ad061ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a384b672-810d-4a91-b28c-bf178fedab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42e7f89-3cd1-49dc-8f95-f4e6f3217b4d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da81303-3338-4c70-b5c6-c791bdbd3cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982607b2-0fa7-4754-97d5-fe1e2565a42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87cf684-a215-4c10-9b86-c14b983bb229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b68abe-aa13-43fb-9342-dc6d7ef3d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d4130-64b7-494d-9708-b9d6a306a282",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbeee38-6486-4141-b3a0-1a5a9f28bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f5656a-24b6-48a4-9006-5f35320c3404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97ead33-8ec8-4bea-ac57-8f7693c19b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "597a7915-50b5-44d2-a079-877d9fbdf11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42419f9-c9db-4f3b-be41-242826c56dc0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f879de2-3b3f-4cd6-8b5f-7a3af7bee419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009e8d0e-fad2-40f1-bb71-b5dfaad0d55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936b6715-9466-47a6-8e07-09604728e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ea19a8-af84-4ed5-ad24-a521071f88cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c10c6a-53fe-4f2c-a7ec-ca694923a9fd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a85f900-7c7c-4664-a53f-09079cb3aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1207782c-2c4d-421b-9428-32d0e196d1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab5c346-3058-416f-bd1b-bdc1439e374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa004ab-e066-42d8-9236-6256bc4ab272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b860d35a-4762-4841-b24f-3679e9f9a638",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e31bce-8fef-4b58-90a5-25e1ebfcd0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0aeb49-a908-41e3-8688-e03f2b543bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3402ab7c-c5c1-4706-a536-214ebb895dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25491f5f-f2c0-42c6-8820-372c3e189c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c217cb2f-12b8-47c7-ab09-aaf37aaf67f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712a4962-16cf-451c-be49-cb881394e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059ffbd3-fa9e-4867-9f7f-e14da506b68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ca18f-4166-43a9-b2e0-c93271fc21ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c23e0c4c-a75e-4671-bab8-0f77f09fce2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187e665-c6e1-4341-8552-f50eed593a25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561fa05-20c8-4abb-ab9e-d0430324aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f22d3a7-b4ea-4565-bba3-86a26a97b223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1132c273-b603-42fe-9848-21842d52cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "391a8fb1-5ce6-4dc2-a8c2-cb815e90af32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f8621a-bc98-49a2-bcc6-101d3dfc2dbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73375ad3-51f1-4166-9036-b24ad57a92d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fbcddf-b8b7-4247-be30-787aaf66f022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b119af2-1748-4192-8482-c53490768eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2819427d-de1b-4e64-8f72-2aaa8e375847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cd6b96-4178-4732-b3a5-ba0a68721576",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6255e21d-015c-4333-b0c4-e2cc8d1f9bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d8db7c-f3d1-401d-b7ad-1c2900dee618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71258af-4fe3-4968-ae68-22bd1f2e629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "482417f9-7c00-4247-b255-5ba980cdc6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a2ba01-1a95-455d-a552-574bdc82cd09",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e201890a-1fbc-4ba1-b9e2-69eb339d2424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e430ae24-0035-4184-8a8c-58ef1549b60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814fdbe-2872-4139-9110-554327a4ef73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b28c21-fa2b-4a04-945f-6f7b56140afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be4e68-85c2-4ad7-9680-2f1afc9adb83",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b5293f-5460-4609-a97d-22deccc056ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d411e9-d027-4e3d-8c35-cf38801f2ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fd9387-9435-458b-a3ac-e1eb96a4355e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2a543a-5148-4315-aa46-4f49fa4a82dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b28da-79eb-4b45-acc6-a06270f72acd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb9b8e1-7998-41f7-8d93-df82723b71dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8aa85-ca1e-45ae-87fe-84b25c87fb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec7c505-5538-473c-b899-6c1e3203032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7481f571-0c3b-4049-a068-51f05ddd7409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de8f7f9-9bb4-497b-b6c0-1298fd66efc4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afa2a4c-ece5-4052-8a7f-dcdb36d572c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8147f3-e347-4ad0-8fde-96918a9cf71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b8bfe-01da-45a4-9b0e-c445118e396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d770e07-22cb-4666-86cc-fb610e4921d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f488e77f-91fa-4611-b445-8a2e29435aa5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5033b7eb-6b53-41e6-9cce-c00d997407f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1253c67a-1338-4abd-8a14-09c47bdd3d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea8f458-121b-4d1a-88ac-3d574f659746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69afc2fb-e8c1-4925-bfbb-58e8ec7308fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a91e57-6601-4621-b435-4605b1942d19",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d4bfdc-e9e9-4319-9f0e-6b1725d90e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bda194-7bc8-4a59-9ae0-59e6bd4d25c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfd7210-c227-46ef-b73e-867e467df456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8bce3b-8cbc-4945-9a86-7f5db38284cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a8d542-0ae3-4f79-aa6b-e138cba876d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc60deb3-b62e-4e67-918a-c651fc628069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ae8184-27e9-4b5b-a02a-e4d6cef24077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a666548b-2776-4340-b91b-b0a3dc9dce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc7972d-ed7d-4685-aa38-878d9f3ad90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8960bf6d-4fb2-40c4-a8ac-9b9238c9ef32",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693eccc0-2d69-4ba7-b5f4-8ea1edfcb29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658e48a6-5376-4765-90c7-d4f6f561836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae6e376-6f9a-4f5b-befd-00a26ee2e4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a40feb9-7df9-4944-8bb9-7cef16d1f55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec815179-1160-43dd-a87e-4e5d21a69cc9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a763af9e-968e-4afb-a2ba-90160c3c77bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10e5441-fead-4f04-b026-a1ec10ead676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a25e1e-2a58-4f06-a45c-764d9e07d162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "240c65ab-a9ae-4718-b3d5-0824d63eb0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7f04e1-b1a7-47f5-bb03-1fddb74e46fd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f089188-b6a3-4663-bd0f-d206df980f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3564159-dbd6-41fa-ad57-3d5fee9be1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0355bf25-5658-44ee-828a-ccdb6e2e648f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a15b8255-d6ce-4014-b2e9-dd64102994ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271a5282-98c6-4364-bba8-a01997de4c58",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439d1a59-f77d-4eda-a050-867e7689fd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875e2ea1-8eb6-42e0-b69a-f1c7178b1396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e35228b-1325-442d-8aa0-3ca6d9537c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b56cbf-a35a-420e-be32-6eef67ca4773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c07905d-c61a-411f-94dd-17f4ed2ceb83",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b91af2-0896-4d80-85d9-d4207c0c531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84534fe-82fd-4806-9800-8818c346441c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2559bee-81b2-4b6e-9d49-05b87c80e315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a074f33c-695c-44e2-b7b5-34bae4729acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253f5cbb-0899-4023-9256-60b0c34f4867",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e140e5-a2a1-4828-9748-5e974e3e96e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25394102-37b8-40e3-9ec4-c521b77c7179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba38979-e765-4a53-9246-27055e91801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef114720-0283-4b00-983c-3c4bf898944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3068ac-06de-49e2-84c2-17ed34d65dfe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b8e9e4-5c13-4d65-9f81-47f5954fe2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b84a947-e969-411d-b0ee-08c187c2a422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac81b6a5-be05-4f7b-8f75-2841da99c34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d43cdd-ae89-4951-ab25-72b3af8c86d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad268fea-8ec5-49ae-bdf2-0dc6c6bebfce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b50d0d-cae3-4a51-b979-dbed4b98ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de08af48-b76f-4457-a498-111d9e36f537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf25c3d6-64c9-4064-8978-554f2b3d51f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8b5da8-55b3-4aba-a9e8-6f1f1acc3bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d3730-55d9-4b0e-9b45-291656ed97c9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192325ab-cc97-401b-aa3f-36e836da695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbe7173-99d8-4ad0-b97d-e15cc9f6131a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50186b4-1761-4450-a784-74feea3d3800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b986303c-7a50-495f-99a9-53188e9c9ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b3ee0b-d646-4583-bfd5-354456304806",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9155fae0-62c5-429e-85af-7b0fde24580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b719fe94-6c0a-4e5a-82a4-cd8b01b9d0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6cf6b-327d-40df-b855-bf9c5d11eb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ded73c4-ff1e-40d6-a1e9-ae7b2cc8d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebd25c6-e440-449b-b660-ba4be4bc5f14",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2024d835-a619-49a9-ba60-32df4b8bc8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3b97e3-aa9a-4480-90d8-4156b7c4e4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b4bb38-b0a3-4f56-8bfe-74ec87b79592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5960c1e8-24fd-45e8-ae4d-3389a16cdc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a9d17e-3fd8-437e-a2f9-f8cb11c1f2b6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a99f5-0604-4960-bb02-0a663131b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84888894-ca92-42e9-855d-37cb8240fc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32478488-6870-4da7-a6ae-2f0b2b6ecaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44d4c670-89bf-42e8-9124-4eb37d4a32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e40d8a-4136-42c3-b4e4-c138f7b5dd73",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55338c6-ab30-45cd-b969-a3065ce0b6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecec212-7235-403f-b8f3-beb95599e139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a390ecbd-cbae-4ac7-81a4-b2661bd8d98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8591a184-5dc8-46cf-89a1-7ae05447ea65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998177cf-875b-4b2c-8003-e28542ec9edc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32ffe48-dcc4-48aa-80bd-66f6716c1ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e09c48-cdfb-42e9-bc7f-7399945f3175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961723a5-9827-47ed-aaf9-92191dec9056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b49d87-85e8-4509-af19-2c54de9a8537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f2ff64-ef7c-4a2e-b84f-fb3a55ada3de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5d68ec-6757-4b31-a991-9645ab15801d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8e88aa-13d1-4430-b790-13304e6444fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a96d6fb-e056-4cbf-897a-13bd9cebdc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dbde36-23bb-4329-8aec-93f728cd9bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ed59b5-4d24-44d9-b6d7-92ec216cc87d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ab030-58b6-4ab9-aa0b-1c3bc8709f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d068ce60-a124-4ad3-8ebe-6e3f48ef934c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd088e96-a5a2-45b6-9a1a-7f16c40e6b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8b805c-007d-4f54-8066-a9a3f4747ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1998461-aef6-45d8-80c5-0fc83bdfcb34",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5b9750-a522-4da2-b2df-5bd9fd526884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994a9c9c-a779-44e3-8950-3f92b090f2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15286a88-07df-459e-8c12-0888adf27a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ae5b0c-0380-4157-83eb-3d60103fe556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04834cf-0b09-432c-8295-3d5cb97b52fe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f353c3-5f0e-4621-bedb-fcbfed127fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb68a68-6b2a-48c0-9f16-5168169368ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a109a-7fc0-4e9b-8fe6-6e4ced9464cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf56f79-2573-4383-bc7f-3b1636fef248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180e47df-5962-4bcb-b95c-6c6346bfd176",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2671a3a-eac1-453a-93bd-5ab780d95625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cbc181-9353-4f49-9f4c-4867f32f5dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be980e18-45bc-4585-96f0-35c0260e5969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2099a2f-025a-4f18-ade5-3fadad87c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825cf518-64ff-454d-8d5e-fcd6d930597c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13e1476-3b21-462d-ba40-34a47a93511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b7af8a-decc-46a3-8abb-ab770626cf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94208d54-e046-40e2-8b11-ad84f8318b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "711f16b4-fda7-4976-9f8e-4e2f6836b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42a8354-0f37-4594-b8b7-8f06e5428acb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22f06a3-29ee-428a-ac42-cc5f11c26ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065cd389-aefa-46a1-b8c0-e0d3b5ac258b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19de2f-47b2-42de-80b7-7bf24e49e46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6ea303-6c00-4e0c-be31-0fe069a0fe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df051a02-db53-4d55-8edc-08fe49b6c0c4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad0cfed-8735-47c5-8ca5-8909246b63a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a7aa8b-0446-4923-9e4c-d4e719baef72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5383dfa-ecc2-4b19-b4fe-63e4175b5c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58f5d9b3-dc7d-4588-9c6f-3daaf3f94143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51500b56-d73c-42d2-88f5-88ff7bb4ff93",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15496c5-d1fe-4a51-aed4-94dc804b50c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12475e7-91ee-44e5-be36-62c6544fe19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b250c9c6-a277-4321-a564-130140d481a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb04936-9e64-401f-bc72-26d84cac8cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70f776a-c79f-4d0d-8a71-93d2fc7b2eed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f9df5f-9b84-4bb3-a1d0-558f003d98bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b2e0ccd-2d89-4437-946c-c9fabfeabe15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4334295d-52ad-462e-a6d0-11b8a474a17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78d7f486-0eef-4232-8439-25bb00f3fcf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da38395c-4c69-4812-9a3e-48dc1e13953c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6adfc28-ae0d-485e-a9f2-cd62ee8f3089",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50695b34-6627-4863-b1d3-e2dd6ccfcbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a3cb114-fd66-437c-be60-d7c26bb00412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99da930-aa53-4e1b-a63f-500d435770af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f4989d-afb8-4424-b68b-d6b887ba31e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed0b586a-1d14-4ffe-b6ee-69a3c657148c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041600ac-ac6d-40e0-9849-596fe653f4c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cbe90f1-15c6-4360-944b-01b5942492c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2370cdfa-9f5b-4f93-bb9a-4c570d883840"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caa4f5a7-238d-497a-bafd-1d942dffa88e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4256761-a125-428c-b03f-9587c54bc90f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31ad0848-c742-435f-b99d-c3ba25f9cfe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5364ec43-a5ee-48b7-9849-e74b276b1181"
                }
              }
            ]
          },
          {
            "id": "0638cea5-3adc-44be-b393-abc8511b3489",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3113fb2d-b2b8-42fb-890e-35781abeafe4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a07249-8e74-413d-a949-353edc7824c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c7dd653-e1d2-46a0-8a70-b8b49a3ea153"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a7a4f8c-c7e9-4a20-aef5-7b5f90495e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0db38a39-2f6d-4b44-a41c-84423d7b6770"
                    }
                  }
                ]
              },
              {
                "id": "aa7d747a-94d5-4459-a37f-584519043b76",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1463f31-cec2-445d-bb19-89e4c99f000b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "607cf473-d343-46a1-9bdb-c611259c5c92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15838670-2246-4a0d-a5fb-6e8fa745d0bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e44ee5f-33a7-4292-9ae8-64739d5e27b9"
                    }
                  }
                ]
              },
              {
                "id": "d4f3ce11-c523-4214-90a6-d6fcf6dedb79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de0bb0a-2a92-4f08-a31f-4bbd84da21dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecf550bc-1e58-4fbf-b220-94b80d318ff7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00b71449-abc7-4766-9142-7de80f5e0041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20e66280-f45c-44f5-b729-6a2f03012dfb"
                    }
                  }
                ]
              },
              {
                "id": "734db0c5-abdf-4a98-ba42-f986029e97da",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f94dfbc-2bd8-47b2-82bb-dc101a9fe99a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5dec068-bd0f-48a1-8f0c-33e99f5c681e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cefd7214-1d75-4f7a-a6fb-89eeff542dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "140417c8-b852-4e52-8e17-719931faaf98"
                    }
                  }
                ]
              },
              {
                "id": "b7276bc9-c758-476e-b9e0-43c1206b1c55",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a5a792-3d2a-4327-9275-083ae9da7b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f122fa27-b1ed-4d24-bc52-b7a52bf64a65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8487b7a3-3a65-4640-a24f-7cd85d6cf4cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0d7cd24c-7035-4d66-80ca-6babcb13fc07"
                    }
                  }
                ]
              },
              {
                "id": "efe744a7-4736-4582-8694-12696e27c683",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdd6a70e-68a5-4e08-9ea8-ab7ec5991cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e5450d2-b2c3-4339-abc7-caff616a6b18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c48583e-234e-44ef-8c49-2946509ba16f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97a4b327-f920-4c4f-9af4-3fde97d8b357"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a52870f-8ce0-4673-a63a-f6ed8e02c51e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed02aa64-1317-468f-8ffe-2099a8c78682"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4e3cd97-17e5-4ff7-848e-a9308fc65f21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c1f44f8-5828-4124-9ff8-869dd254d9c8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fdeb6ce-aad7-42ac-b71d-14c4731ddf93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "75a035b7-a132-4f14-88c1-7ac0097af0bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94de16fe-ae10-4b8d-b0ff-5c31acedeff0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88473a67-91ab-4e02-b6d0-1aceb723a22e"
            }
          }
        ]
      },
      {
        "id": "172199ad-98fe-4538-a18b-636a258c6457",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0f96f4c-d574-4c74-9c99-d626a5c490cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3da8f8a-2fb7-4651-ae56-80a855e2c59a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f98fd1c1-e3e8-442b-a641-9e282e13d84d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3a3d1d-0f37-4547-aa8f-ced785c16c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe0de59-c049-43b0-9e42-8ac188f4ecc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664f012-5ec4-4a64-a244-d0a4a3cf14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56666c11-70b0-4025-a977-ab59f758bdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2620c551-f796-4fe8-aaba-eca650ad0093",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5886f866-2700-4259-9115-3d8bfd49e60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bc0b8a-be32-4b4f-a0a6-7d988107c859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fa8688-34de-40a5-9527-b87446813e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "330384da-e0ac-46da-bb40-2e57aaafa809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a076a8-dc7f-495b-a0dc-54291f9984e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc09bc3-7b90-474e-aef4-b2d17cc44a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9af370-9413-40fd-bd05-7272400a7272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c117c775-0748-470e-8704-8ec827789242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6869149-1257-4a3d-b2d5-c1ec8818d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00e374f-33f1-4701-a96e-2ef102aee55b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0392342a-3d68-4456-885e-f301a50ce220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c94980-d7cd-4ea7-9415-6c8a44de9401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b48620c-4e1d-4570-8914-0fb0dbd9ac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8670347-1d95-4bbc-a120-813e1cc96110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f7dbeb-04c5-4578-b657-de03b8f68f82",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bee7ab-322d-423e-b7b1-7960652d0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ba8c89-5832-4317-b9c1-e26e566fcaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fdc049-5281-4920-a549-1d3c3863b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ed8624-ca58-4dd8-a46d-291359000e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daff9243-ecc3-45a8-9916-0caaf7ec6db9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ad1e57-2317-48c5-a1ef-1a6cf52b887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97c263a-bde8-4ffa-9bba-6ff27b01fe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d7c078-11fd-4587-bc38-a300cc0996ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "026cc244-4c7c-4cf8-a243-f6288de940b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31dcb22-1af9-46a5-aa96-e7b196599ca5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46180749-0419-4448-bcc2-4ff952d71017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e166f1-cf8f-42e2-94a9-2b37f3e23534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4045ac0-f4fa-4e49-9311-4ac7ec117790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "38acfa67-4ffa-44e0-ae06-a3ea8f1d9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb30364-444c-4ada-9265-0aae16d14d7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd52170a-0403-478f-98cc-c89304cb3a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3cc1ad-1a96-473c-8698-64d6c15d60e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f953ad-b889-44d2-a2b3-48bf91a578eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c17e4a2-2667-4919-9f09-b6667521c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5d225b-9a99-4d1f-816f-18b95867c056",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d444626-ac11-41ed-931c-a0ed44283847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75c3f2c-8c8c-4b43-8386-2c399d17c5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac07b5d4-4d0c-4139-99da-ac52c950f945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "293aa803-4fde-4cfb-8864-c2a2c374dfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd99ed6-9078-431e-9b46-93beae66d43c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc7f1f8-8ff2-4f0e-800f-d3bd19488c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06aede0-7636-4c4b-b11d-caf026f3071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7980f46a-220b-4cbb-bf7d-737589938f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97525dd7-1100-4f51-a6d1-b7d66c15eba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08263be9-5c52-4c03-8696-2262a53da251",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dac241-7fe5-4662-b48a-ef9e109e8246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc80abe1-c7d9-453a-a100-3f7aa27c5d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13fcbcc-6e13-4033-86c0-24311012cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e96b412-276d-4a4c-ac65-a5c3bdb82cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88f6d7-3a2c-461d-aa2d-7c207ebaa84e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799672e7-d81c-4450-985d-39a65ca45ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506627c4-38fe-4155-a22b-4b9bd80a3c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3547f02a-75a8-4a8c-b40a-5cc94b43c263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7baffdfe-9f21-403e-9844-b53aabba7237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4cfe6b-9c88-4a8f-b180-37c41dfd7716",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf15f9-4621-44a0-96ab-1c91f719a957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809655c6-a1b0-41c7-b1ad-2f26b7e57979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805c6c2a-0fcf-4b3c-a9d7-6043e64682fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5af9f6-3e4d-405b-b987-55fe44b093bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae5c43-fb27-4ce9-86bb-79d2fc1fb955",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b41ff62-5e85-4629-a8d6-95ea5dfcb755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6762cff-ac04-41f9-9f2d-a1f5003e91bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81740782-ecab-478f-a244-071f225a3a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "590ff8e4-4ca2-4650-ad7c-5b1542dcdeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48da3f18-d84e-4e39-93df-46c80dbd5685",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1787f676-1a2c-40f4-9f14-df6dd5216ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b64d4e2-fcdb-4039-b200-d234c7468fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9e72c0-0755-45cf-a468-b38ba6707db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9326d4a4-b9de-49ca-baee-fad2b69098c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585328ed-400f-4f1d-b409-ba20ca52a6dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660ce851-9d10-4d20-ae8b-29a3458f6909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca2a5bf-9b14-4682-a587-a7bb03348a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21eb558-c013-4a14-a1e8-419493a40fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "777ae068-0b6e-4894-9a23-13232211dcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb656a6f-38cc-450c-9239-5cee15fdfc45",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3c5ebf-f6c0-47d9-8dab-09a57549880c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9807681b-a04d-4abb-8f09-b84ce94760d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98a69e9-d60d-440e-a7b2-f667f46cfb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69755e1-c7bb-4731-aeda-4b78cf3efa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e914b28-bd50-43f0-9883-830168db40fe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592bf2e7-cb93-402d-b7b1-01eca2640ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ef62d5-70c2-4728-910e-01ec683bdeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c5b30c-6f78-4349-b41f-5dab3f24bac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6167db-e753-436d-a7f1-1ef0002616d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed6e34d-c415-4ebf-90ff-48346a3716ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf16c82-15e6-480e-9fd8-5634b2fbacd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbda8ca-cd10-4e25-b608-b3435ed4068f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c04cd4c-a0a7-490c-b3d8-192c8da699e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5af356-2627-44bf-b90d-fac91f428753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48d2547-6a00-4d30-ad88-6c872cc93374",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd9b6d7-37f6-4d8c-9451-6b6de6adc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7c1ee8-2bb8-40de-bb7c-341307c1fd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd023f-f0b6-448d-bdb2-b4a2d5401e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08445b01-1082-4faa-8ba4-f388244213d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01edd32d-98f2-42d9-818f-ea62767e2ab6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d259e8ed-c092-41d3-904e-ea6ec365f319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abe86ed-4fa2-4565-901a-b544350c3da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28bff9-d895-4b34-92bb-ca539a9a5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7b4380-1748-412d-a6a3-f582ae6de483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde09ec-66c1-4088-bfd3-0569ad3c5f52",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b84f23-333b-43cc-a0a5-3eb6e0809716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46c597e-c8cc-44f4-bce6-bd10e91fe54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5352bb4-2a99-4a63-bf00-04a18f9ab052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b04911e-eba0-4c73-918a-3d2b16e9ad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35168818-928a-4062-b78b-6a6879477596",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d90684-35fe-4c1a-9b32-ab7725ca66ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038a17f5-44c4-4f90-9cd4-7a2988176fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c0ec9-ed80-4ec7-bba9-ede37e3211b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb53385f-3531-44b5-a490-c484c3a88fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205b53e7-0476-4756-b1a8-963dc9be50e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e4fc4a-f419-481f-a77a-218dbb4670d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a3e2b9-1cc4-4852-9993-9c01a18c15f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d2a577-d617-4d43-b15e-b05792e53c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e88ba9-897d-4664-80a3-68cc7ae0b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac541b-ec88-4832-ace1-ffb49a667034",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e6cfc5-dfc1-4ea9-9284-25f03b2838fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a994f53d-9f88-4f9f-aba2-28117184cae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cafe91-e7bc-49bc-a531-70ffab310eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80384b7b-2e7b-419b-a387-fc9e406f2567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1b258d-432e-494e-a2d8-a3b9c91af2ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf64aae-956b-42b7-9acc-ea1dc8be9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ca082c-c93a-4d55-8580-b4ce1acf08fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b52d01-c383-402e-bc55-688a403f1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6f4e6a-6e76-4e7b-abe0-948f12f14780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debcc803-8201-49b2-be01-3966143c43c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b84209b-acc4-42f5-afa3-a280d801bda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56874a7-2a93-41b8-837c-917f06098ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeaddc4-6a2e-4aed-add4-0b1d2dca9275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9598bb7b-3154-4c77-9eaa-42b0dc659d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f944d5-20ba-4442-9dfe-6eabdb9f55e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef3f772-e56e-4dc0-9803-bba863de1133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41acf938-3479-49dc-b952-34abe904e4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc9dbbf-c274-4ed7-a1d2-1e38ec73aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d0fcfe-563f-4cac-9186-2129fe07a1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d55e6f-a128-4bed-8c49-e8f080605c4a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9409cf8c-48ad-4254-b77c-cd7c032efb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451f6c5d-5f3b-4d96-a5e3-d655e432de1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e806bb77-95db-4cc0-a74b-dd26ec657fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1619c690-d13b-4761-bd52-f98635597976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7c74c3-dbc4-40a0-97f6-0a648b61a00d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ddf2fc-956c-429d-a082-1f6903ac7bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa3c9c9-5839-413d-a80d-d5a6e28b3d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ca59c2-3df4-4145-b7bf-8fe16d88e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9a1baf-9bfa-4be5-8f91-dbe09d7777d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60642905-f288-4051-8531-5f5b9f67010b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4091e635-5a2c-43bd-b124-22761f345405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2df296-da30-4240-9540-6b810c1e8dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea264e99-297e-4aaa-8879-5f68372a55f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b13784-654b-4eb4-b003-1bbf81a3539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7593ff98-a402-4710-a726-bd34dc097064",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f985ff-7d62-4b6a-a79f-ad97b27759a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22badd86-03b4-4e73-855d-81bf501fce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c164bb-c25f-4a9a-addc-69c03dd25c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7066199f-ea95-4027-b3b2-06a8ef875110"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "306cac40-cd08-49ce-bb9d-d5febaee95c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1969cba7-ae85-4d5a-8a42-497b517d7775",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe155b0-53e4-418e-8b70-d91699222e50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f52c5ea2-8440-4f4b-a362-4ef07c62b328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca815efc-a7c5-44d8-a7fe-61c50533fe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ffa75a8-4a19-41d6-8bc3-703927683986"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a674703-c32a-44f0-8c58-e9fa20ef7f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a76073b3-9664-4202-8e75-70e9ece2a8dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5294d019-c372-40a5-ac75-bc5ac5181646",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2622936-8208-4d6c-aa22-85a0c9d98516"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1d57537-f128-4a84-979d-4ff4e8ad84e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33138eb0-2e88-4ef5-9a0e-7bfd611f7120"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8fc4960-8461-4cf1-9423-173a3f3a8bff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f10ab8-0d6c-4741-928c-208469ce5c6e"
            }
          }
        ]
      },
      {
        "id": "d82c49da-ff23-46cb-aa85-d3875e8da8b6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8f7c2e5a-d8fa-442c-b831-602808daf321",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d85aaed9-186a-4428-be9a-4762ea795442",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f257f812-7200-4c7a-9478-aeb9c6ab4c6d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58c089a-d171-4e26-bb0b-1d95c2d95d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e57654d-4dc4-4203-9ec9-0347132d72f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594788a-8a5a-43ab-b75c-b00f7c1f6585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aabd2d4-c5b9-4e9f-930a-af26b2c1f4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a921e84e-b624-4a61-8366-8150cda2feaa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5858b116-1f1c-47fe-b4b2-fbc422db3cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3894828c-2caf-464b-ac9d-7637ac675462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e608504a-6b77-461e-9aa7-8bef6a76d088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cd1bb4-bb8f-4599-9795-0c7968cef058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49140ed8-3f62-4810-a1f8-458d739058eb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1713cab-64a9-4758-9d46-ef68dd7f19a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ec96d4-8eef-446c-a167-588b73378171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92069233-ee5c-43b1-bdc8-b5f5b14dede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4737b16-59ea-445c-84b6-dfb4fe75f842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41496953-ce3b-4478-a867-688a0dc1a29d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f3c903-148e-4e56-ab27-10d591e5e3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c916bee-4640-471d-b276-9522f6f3ecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e507ab52-8a08-4a2f-b969-36a285deb8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1055a58-1d87-4487-8301-228d003969dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadb1e8e-a46c-4a68-8a7a-1a3f244f41d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8db9b-a59e-4116-8606-078dc45d0321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac8c503-0db7-430d-84c7-228021896dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7f566c-7856-4a87-8346-624d1e4a947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "097a7652-f6db-4a1e-b0cf-b7179df3677d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce71701-18b1-4adb-81f5-18b1ce12a830",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6f9011-655f-4c67-a061-cb4e813323d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8998c7-0585-4eb0-bf1e-fdaa0b40d1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7152975-2bea-494c-8590-3979178c2403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4950f67-eb63-4d4c-9525-40801305c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0eb2bd-f223-4913-9bf7-bbc29883a849",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c30840d-8f9f-493e-9071-9fdceaa4a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484c61d3-b215-4cca-bdb2-4997bc26f495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25b2b3b-be29-401b-b209-6f222a2792a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09648e75-72c5-4419-9e2b-1fd1ec5fd5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e1657-6a68-4fbe-b68e-5b4820037c87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07431f3-45bd-4997-9c9d-3f008f851d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238cdd49-9e46-43a8-88cb-c933a0200422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cfa757-d050-497a-8d8d-60738cf31cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b607a924-63a9-405a-9a93-48eb61ab563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425aa06a-ef57-43a4-a8c7-7a92b8ba8429",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b08e0b-1230-4d82-9f2d-417399ff833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d68162b-2d50-42fa-9664-fb7386a7e13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734961c0-c72b-4c15-9b75-8cc41fcc6c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f875f9a5-360f-4633-af83-c86a985d8cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afe18cf-b0fd-4fa5-91d5-cbc6cdd004ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b292fd52-7acc-4acd-abe5-e1a3a0cc8242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dab28a9-c4a3-4ce4-869b-1d49b193dc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fd77e2-5565-4e90-94a8-ea26e26fe15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5829b124-b436-47b7-9d8b-966b1147915a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8858fc8a-abd0-4178-ae4d-0f7a3c1e6500",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64981088-1079-4f0f-93a8-69bf9d89db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d9312c-a292-4f3b-8128-89da879db341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7ca861-ab65-4c29-ab7c-4589896d7c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8da41af-d788-4db9-9d42-a0687d032c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333e2de8-5c19-4041-ba45-899e1dca62cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1a71d5-d99a-41db-ba26-0a5f250be87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688d79b3-dbf7-4718-accb-254ea5bf14d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e51fa-0de4-4592-b043-ee837cc23dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49f2f5d6-ff14-4635-8235-bac77e1f1877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f533a22-d0a0-4a02-b2ef-fe791ce87802",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2bf267-52e3-4168-a319-3f3838ea6fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53be1d4-6b0a-401b-8403-f9ad883f36a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56addb-99d7-4ed3-a4d7-a26296ec6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e96bf2a-274b-4a3b-ac66-568e233757c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c497451-7eb7-4b4c-b4e3-b39d93cf50c4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef45e94-7763-4d84-9451-eef97e0ae02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a297fc99-d033-4f7c-81fe-83967debb9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b49ca6-20a3-455c-b774-1acbd4e44f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00178b0-f381-401a-9021-2163d9d69d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8536cc0-11d6-4f71-9811-0b5660ae8be9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c9ce07-7d88-4a62-8536-ecd8c51634a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce92c795-f2a8-41de-920d-1b445f87dd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0109a1-ca9d-4584-a4a6-2ae06c3b3334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96cf5ca1-0d90-4b8b-9ecb-0f056c55de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c0f163-b486-4c79-97a7-54c6786d321a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d252a63-0950-413a-8b99-86e63c46eee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75546477-aecc-4d5d-b6d1-07925aba0635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ca0b27-38de-4324-bcda-1faf910686cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0794857e-d65e-466b-8cfd-77278187b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf9db27-17d5-4d2f-9469-206196322efe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f86e5bd-29a1-40af-aa46-6e79815647b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb47e97f-d988-4af2-b690-326509f3e1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e9c030-1140-4e61-bdc3-ffa4961cfe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "588471bb-7506-42e7-bf35-8c964765f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473a4b1e-cfaf-463a-88cf-ac6480950b7b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed137d4a-2dfc-46fa-b451-671b04f3b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43603cbb-a4e6-4438-9ae9-5fd8e928e25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e474ee37-ad8c-46d7-8247-ad5c9a856f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b960cc6-6fb3-4ae3-89fa-60d67ac2a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8748ed-064e-437f-845e-b5aa935d9a7c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3f7287-8209-494a-b6a8-3660a6d29468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b24b5fc-825d-4e82-a009-4a4b4bf27f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a67f38b-201b-43c3-b424-fc30b127ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7c7428-4433-47c1-9008-4bc2fd44ae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b8fff3-3d2b-4911-abb7-ac8dcb18140d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9043ca-7fbe-49cc-8b4c-1b73ba3f0fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bcaf46-ba0b-43ef-9d0d-88adf38bc9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7ad517-0185-4f18-8264-4f168290e570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44ad672-05a7-42b0-8100-d1831b94ae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46686c6-91a7-45a9-8826-e7e6150c8446",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21ec812-4f0d-4d98-b802-98214fba9003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ed4c0d-3194-481e-b597-c814f7392399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad10170-e75f-4dcd-90ba-5716d01cd264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4015da2e-6b69-4ddf-96d4-e4c2171194e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f516786-4be1-4a9f-be2c-b0d563c02c54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40877531-0da4-44af-bead-f9ee63924da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fb1e86-2011-49db-8bda-a93258062693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e51f63-aec7-4b96-84c3-b905d3144a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ffd4b8-3549-4999-8b87-0dd89913a29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7180e9c-d887-4486-ac6c-d2aef4371d0a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f82c89-6d6e-4e50-8085-ae89dd1fee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e1da13-0cd8-41de-ae69-99c4437e1e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3695ffa0-8d29-47c0-837e-1b6fca889267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5097d75a-de5d-4d96-9a4b-bfc14ddafa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e31d3-b65f-442d-b1c8-c70519ce211a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a73909-182d-42ff-819d-df579b3606a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a85735-ff17-4b9e-8cdf-f8cb3d139119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11251f8a-3621-4324-bc25-d49155cf9fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620e07b2-57b2-404d-aee2-21399f45a63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c9d499-769e-4335-8d50-a03c08be31ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b486a134-4c8f-4f95-97c1-d1cddb27b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4126cf96-fba7-47e7-b4c5-a7b9c8975f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075f9d37-5fe7-4000-8ad4-66b02cd78815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5a231e-d54d-4acb-b7c9-aa7fde679689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730558e8-6290-4c54-9380-a2b31e372543",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3046be5-502f-43a0-b327-184772567ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff801e3d-7ba4-4716-8546-e840e0248c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faa28d4-696e-4fcc-b969-5795ac9580f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b80760-5727-45ae-ba5a-c73c4cf998d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3323c98b-8ce2-43ca-88bd-86da7458eacf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f750d6b-3572-464e-8922-9c1b0f2f4f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca98fd2-6700-4271-9eec-6c99179afb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0176cf2d-4bbf-4a15-8234-625d27e4a067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db47c02a-bcb3-45cd-a484-d4a810bee3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab1927d-c229-411b-91e3-88a07f6aaaeb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e72e40-8555-4d92-9311-2d4582b27ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444059ea-97e7-4fe6-b23e-de2b14e84e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6069ee2-0384-4c85-a481-073655285ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec45ef8-0ea8-4c82-aea9-edd8d9c56cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017589bb-70a0-40dc-8779-ffdf1b9bb0c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf40e41-5d44-4c63-a676-53a8df92f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afa75fa-82ce-4d98-ac00-66329575612c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9737580-c38f-44d7-a46b-39ab7ced678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1766180-fc2a-4855-9bd6-bc8c4b7b7871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf5093-ec07-4335-9f93-94f05bb4a74d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c32303c-8973-4f00-b62e-02f896281d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c10cf8-15e3-4e65-a875-217717133b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca57e157-18e6-4952-a5f0-b03f976bc60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95e93ad-c18a-4674-8a2b-59fdf6548d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290d029a-b0c9-47c9-8a13-133c24657a87",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b41715-da84-4a1d-ae67-f6e0a83e4326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c44ae4d-4274-462e-a7d3-a3eb49f7621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca9b994-bebc-4f4c-91f5-8557c1774c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288bcb8e-c319-4d4c-86d6-1a8a5b411be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec8a7a-974f-4533-b39c-544851019000",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c816e3fb-1fe4-4886-9295-f585a218b719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e34d631-3c6a-4d68-a8c6-26f88dee622d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04672e3-3fc6-4f5b-b59c-fe6b3861b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6978138b-94d8-47de-a015-32ce59034cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6f03f4-62c2-469a-8a1f-80ff0d78ed1c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112947dc-44cd-4510-9b44-50fccdeaeebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92dcf3a-138e-4e41-892e-76073881d565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb06275-bc21-4ecf-9dbf-004c29c477c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5e2043-ffd5-4954-9c13-52000ca06f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5781b06-e2f5-4146-9859-2e97f1e4b4a1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e594df-4b5a-45b4-9ab0-190815e5d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0940283-d89d-4414-b1ac-810ab903f8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ab3ceb-039d-4042-8149-c277260cce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444c9260-2c17-4259-8ad0-d68be7e1c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fbe88f-32c9-4a22-b9cf-13f8561c5baa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67f129a-9611-4ff3-b10f-fd9734a26cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14936f3a-7cb5-49d8-b479-6275cc7563d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e838be86-e706-4076-ba48-a03841896120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97079411-073c-46bb-9e1c-b90c558081a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a299e8fc-8b56-4e73-b314-de35c4ba0216",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3b5d4c-deba-4929-861a-eac1775f181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5119453d-7e5f-4668-bd8f-28dd8845f7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49612d0c-9dcb-4905-9550-14e8e25c963d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884f79ea-fb8b-4786-8b38-f8c029c9fbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca07ebe3-3866-42a4-941d-8343647861db",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12a0d54-dd63-4aa0-9517-568039411a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc624ea-61dd-4d6e-bd5b-89ca5d208e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bb1e27-2058-4d2a-b75b-0dfad611c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3443a8e-14cd-45dc-9f40-6d8af14f2a17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79af2c6a-6a70-4119-af76-769cf210c9ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cebba2e-c730-4100-88b1-e024f9c55a45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2ce655-cec8-40c8-a31b-398efd1b1393",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f61153c0-76f6-46a3-800c-affcdb444510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620a91d8-401f-4ca2-a4c8-9b39f9f4df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ee06ba-c6a7-4edf-b364-ded5149eb3dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afb24efe-202c-4ed1-be65-ea75e3c35c36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24538109-faba-467f-af62-21622c3eeec0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b79957d9-0f22-48bb-b5d4-ec1733491930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b78824-c460-4a57-9d45-7d379f0c8a83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52424989-3da7-42ac-9497-55024fb6caab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2a443f7-2bd5-4769-93fd-410cbec9a7db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78359add-00ce-4ac8-af18-8f5354239cc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05224c2c-1812-4b58-8ebf-62c470345182"
            }
          }
        ]
      },
      {
        "id": "efa08c71-24a4-472b-9a88-7c05101dcd5d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6409a3fe-a73d-4c33-a0d6-211c5a750e4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0068bee6-3872-4262-846e-7f9d4a2b4fda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da1a7719-4914-4a95-a4b5-fb579e552052",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343deaa-0850-4abd-ace2-1dcbaf07ce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fe06c0-21af-4da4-b988-296a59d33699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e76ca-1f84-4c04-b371-a8d5b1e8925a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b911132-c30c-4b70-8d4f-450c36620f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6013ffd-502b-4904-a045-d1797cbe67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b3cd85-c457-42a6-a9f7-35392a940ae4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4370cd9-2ef7-4a0f-abca-8d6a9984962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e48fc5b-7e54-4265-b98a-679a4d8e54ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd6bc55-5710-413c-8bd0-98b3abae3f08",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf413d2f-99c5-4fc7-8cb5-4c03f8466722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4fd9da-ecda-4b35-9c28-dbf457d8b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702abec3-eeb2-4deb-9ffb-36378bf12e2e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609067dc-4caf-400f-818d-4870412260b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4955901-f59c-412d-822d-ab891443e807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db784407-fc39-42e5-abef-66ae95acdc82",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86b91eb-8e5e-4e7d-b574-04d9c5ae6be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b41230-533f-4c95-a454-1b046f9055e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8765734-9fce-4839-85a1-ce078eb0b07f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed70ae07-db38-481e-926c-a83f3f669c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23242527-c37a-4a1b-a4f3-b78678da5c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ae3651-6cd6-4271-b2d1-a3e990d39924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16096dff-c49b-49f4-a5df-6bcf9672e8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c0a83-d93e-4c8c-98f4-4121442287f0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa254d5-f7f4-4304-9fbf-32f9414fb1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bbf47a-c904-404e-94c2-6cf4ba49f359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eafca87-89ce-4d7a-b0cb-560cf9fb4d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebb34ca-9f1b-434c-a707-792915032957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2129803e-81e8-4a12-92ed-122e5f8d65d5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9b6660-b61b-4f26-a181-2125da507176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adccb2bc-6d47-4cef-90c4-37db191a13fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0b043f-6edd-4a8c-901e-0d1d42ab4148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ef63ec-a42d-41c2-bd5d-2de534bad799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747621e0-0540-48b6-a898-572783e52c68",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfcf0c3-69ad-4136-8e2c-35fd6ad8b69f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f9798c-b277-4482-a28f-5d3e9294323d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df4afdd-fb6c-40d4-9357-c3e4c2d8c126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bed0e0e-4086-49bd-b601-9fc9e4b06245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1b13c4-fd5a-4927-81a8-2aa3c81cf212",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e763c9-41a2-4cc1-b8ea-777926edc960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a0ad0e-11c8-4f7f-94e6-f6a4cdc84c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce48b30-1e40-46f1-9a1c-c9dc89ec759c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349f1fe3-6612-4e9b-9902-8f24e913f1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e09e51-cc6d-4f30-a560-5992fdaf329b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf2bc2b-9212-4191-af31-8cc71b4acfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0d747d-9399-43cf-a667-eda65fba429a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800cda83-8dca-4376-9729-90e33cf8e9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7a9fc0-b8df-4547-83fe-a1d78747b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0113b541-2c98-4cb2-9ea5-1557e134a81d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a359efc-5fdc-4d28-be4e-e77bbc227fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1128e4cd-dff5-4ad4-bf05-b775c27f49e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5a69b1-e484-4a52-acd6-4664be4f9432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baf4458-6e78-4935-960a-399060870196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c88e124-324b-4ec6-8e79-723d38dafe26",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfebae6-ac02-4a06-91b2-332e979243e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0493f615-de04-4ec0-a832-1eb701ebb5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1354a40-3b59-40d6-bef5-befcb3fc5650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e481865f-0b11-404c-bc51-8602971ce2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442c549d-f5b6-4eac-823d-e06ecd49844f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d0fe71-9f93-4a1d-b24e-9c79a4f2f5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b39f90-96e5-4844-bf22-b648dae3faf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e3727b-98e3-4774-8650-f43f390c4d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f25d425-44a4-4ff7-841e-ca20f732775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9553766f-406e-416e-9f49-8f9d938368fa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3210316-223a-4a4c-9d2f-48596b7fa8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff68a4d0-8ea5-4c69-97d9-0e9000b77ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21d8fb3-87aa-485e-89c2-3646c68b8d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2d3cf0-c427-4e54-a44d-7e6d41fc6739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9e4f07-91e3-43dd-bc5b-a5913115eb5e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94886de7-e214-4264-aad7-cbd40db157f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d768fdb6-2daa-48ab-af42-fcb44d5c1c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12acf36-f9cc-40f1-b68b-a84d7cdf992e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac1fe9a-d3db-482b-9ced-9e2c7e02ef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22cb198-9f1b-43c7-aa5e-3ff948caa600",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a6c851-ba57-4c5f-85d4-97c7fd630208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2271346-95e9-4125-b61b-b38a6744f076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1b0a45-2a26-4e68-8d87-425b2a128e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ae583c-2825-460a-8fb7-5e376e8d98ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcdc9be-f2d5-4e40-997f-f844ce81173c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0d3eff-ee6a-4959-973e-35989eedc384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8137a4f-71a5-46e7-988a-3014cdafb1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0a224e-8db5-465d-adf5-ef0f5b0e3524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695442f1-0c24-4694-a1a4-a5327b1ded9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34665aa7-31fb-463e-a125-928a80492cb3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc2a6f-0e6a-4de3-b30e-ee75444f714a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cceedcc-6901-42e6-bd21-c70ca16bd3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6529ac-b6a2-4c14-b3a4-2ccf85da282f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3b3dfd-02c6-4fb6-bcba-51f9b7d35e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8719c5c-e92f-4bcf-88da-d00fa3760800",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b40814-3f12-4924-880b-2415a0cc6092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b7ed14-c2d9-4c3d-a1aa-40a20633bd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf24d940-47cd-4d19-9595-ad38dc64022b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caa73b5-f904-4f10-9e9e-7b8aac567be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e632912-f6ee-46d3-badc-a029f1c7dfb1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640c7108-ccae-4665-9ac7-8201aaa3ce47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592f9e2f-8a07-447d-a1b2-2eb3e473929d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1326827-a16a-4085-b301-449b9d67929c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a85066-2043-4607-a2d1-3efa0ba0fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0ffebf-c2a1-4fc6-843c-39ac1016d61e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4501d09d-80cd-4c32-93db-33e97900679f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0298a3d-8041-41c1-b0f4-6113400e5640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cf523d-e9cc-49f3-9f52-f81fa2b5af83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c683a95d-f51d-4b4c-ad0b-ff37f3fd2d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f12560-a72d-4a5e-8c28-32b27ee1bc76",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d375be4e-c6e9-4b85-9abb-530b08bdd662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76155e49-23f6-40fe-a158-070862a56c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6365edf8-18d0-4be8-874d-e19f8c2efab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d342924-f76c-4f42-891e-70fa2c18a2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e4bec8-f57c-4e93-ae10-7c6bdd128f82",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b98ad3-5629-49a9-a8c1-5db65499fece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644692c3-ae7f-4a09-b5bb-09393a3dff2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0286d4-1722-4705-8e9d-7b2a8aff81d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44975c8a-6fa1-44ba-8a70-da738aa5ddbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f4efc9-3a93-4ca1-8619-2504dd5c628a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6f6ea5-69a3-4ef8-845f-b128c8a66d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7975d13f-ea07-4c56-826e-01925ec05de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a1062a-c374-438a-bf38-3a34ed24c0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2ee27d-9b0a-4d63-88d2-1d397225a7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1cc323-c7c9-43e8-a8f4-5d351ca79159",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cac00e-5c47-4972-aab8-f443ec26f239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a5e5ec-689c-449a-b264-9e57e9364263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ef5ea4-6239-4ddf-9434-dbbb40f65f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32797e9-d06b-4ae2-87f8-2f536e516802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf759e5a-4c60-4364-8783-19352d60c4c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b916f30-3b55-4441-8483-2345394da818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913ddbda-5c6d-4cff-880d-d69a4b0ee528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff34e4e9-34fd-4421-bb6c-0391603f31b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f45b7ad-f112-4642-aaa2-77c3b518bbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f185bb8-369c-4106-bf89-ccabca98ed39",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661d1e04-f6c3-408b-8c22-c7f91c4ad810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87cb784-ee34-4467-8c9b-5f8a3aa84b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e4815e-4ad0-4e15-8633-93364d99d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f00852f-a2c8-4ed0-9ff3-637bdd050b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21414c89-4a66-4cbb-8b0d-48354b0518e4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca0c02-ee17-49b5-a82d-ffabc41e0552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b908b89d-912a-4e73-8d55-2aa0a7e481fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2eb4a9-24a7-45e1-98ed-a03f7f78623e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8c0b3e-8b0e-4199-aa63-354b6bfc6103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6d05b9-a091-4e0b-94d7-8e6d7bd34155",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9920743d-694d-4ec1-a5f0-88c27d329605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429386dc-db27-4b3c-9850-d89ad205de61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c4f458-f85e-40ec-aa26-c9c5f021466d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fdc17e-a3b5-499f-8a3c-5bea7dd3c45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c733d9-c5b4-4e96-9670-3761e7d873ea",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaeea3b-7773-4a81-aae2-0711ac64d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40384004-a013-4cbf-9e13-0110795a4057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fde8ae6-d96f-46ee-9739-b3c3c68b623a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a603e8d5-420f-40a2-a83b-3df891951af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5f18e5-419c-4f57-9745-405daf4a05d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a95b09-fc4a-4019-94ab-594d400aa35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49135bb-8961-4edb-b9ff-b551d7889d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086149ee-4ed5-40bf-af6a-d8042999d0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2834ec-7352-4427-8cd1-46d91bc4557b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441986b3-fdc7-4cdf-9d58-4addbe6a3ed1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb5785a-706c-449d-aae4-e2b45a3d624e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c52047-2908-43b8-a252-93ba3ea682f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1f8c8-6eb2-46b4-a802-46c0d030989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8de956-9fcc-42d0-9f58-9f3358ea3179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5b6ed-193b-4e7a-b446-89b804948993",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37399c2f-a8ca-404e-9007-fe5d25af8fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebedf47-8d68-4a5d-b73f-2e3ca977a941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0053600-e7a8-4720-ac98-19484b0763f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ebc462-17c8-4600-8380-a1d079967777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ccc610-9146-4989-93c5-a14943d67e5b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b64e13c-c9c6-4d94-9b05-d3d20dd34418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432cc1e2-9a97-4c8e-82fb-3f72ad2954eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858fd61-e34f-40eb-bb0b-939163479eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031df71d-aeb1-4c37-90c2-d78993eb9814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3435e08-9f81-4cd6-93c9-4468c45955d3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d178e970-7665-4d32-b5ff-308c3272d918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6792eb9f-e735-4a5b-ab80-8e77494d9694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21441bdd-d9c7-4ad7-b742-8d5891ec5e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970334f1-97ca-403c-b4b0-0d8731e2d3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb4532f-a5d5-45b3-a622-f15b541dfb1c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cd6fd1-3383-48c0-852c-c395ce1a00eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d2ea7a-cca9-41bc-b30f-1f6ad30e94bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916dcf7b-a377-4f53-be97-7f38c2d1a583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4979d5-0082-417c-a187-7cb8113485b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a7cf25-c219-4b81-83c9-01a12235f0b6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3251f9-d021-4026-98a0-892e2c5a16e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1ea0c1-78dd-4e7f-9b52-8920a83de689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03aa29f-feba-463e-9568-7fecb529472d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391a7053-373f-4f7b-a093-734e5f3f15e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3f70e9-e360-4640-a83e-8f7769daffaa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ec841-d38f-4551-ba86-5b7d02910fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86da1896-d5fe-446b-9d0c-9a0769013867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7009146-e04b-4253-a2fb-55be1367512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2415a2b6-406a-4c93-bcb0-b05226b5e92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4aa529-2eba-47b0-a5fe-81bf1c099a68",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583e7e4-48ef-49b0-b298-892353c48e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe6d941-6e9d-4983-a344-7080221e6727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5c23ab-1b40-4562-b7bc-ef6e2656fa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6476aa13-97f3-4673-8d75-97c7857b7c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1ac9e-03e9-46ef-85ce-c4d19e4d1fe2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d284121f-21bb-404a-ad31-eca898ff0eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9e5065-5c6b-42ab-9c96-3e6ecb85f9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff324001-de95-47d0-a1ad-aadaafc5bec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19fe6fd-8d89-4b71-a7ec-4786375b35b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d033a2-0834-467d-9338-1fc73ebeb818",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6ad160-0cc3-427c-b8fd-e5e12cb56c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b142ca-b5d9-41c4-b748-c07318b9dace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d66433-b517-46cc-b9e0-d85af5a7bcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269f0013-438c-45b4-a186-be4074aabc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61109db8-7881-429a-99c7-949c8840b9ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f94ee63-3a5c-4b1f-8d80-ee74ec6a975a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb935d9-45fd-4813-a6bc-94ca150e8194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948b1707-9b24-451f-8e16-d58b7ed53bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bcc508-57e3-4f27-8a29-dc63e675ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba23c3-2447-4c29-ac6c-c22a9954c3df",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e3f43d-17fa-4abd-8945-d200b3d1252a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e494a94-39fd-4e9f-99e1-5df1ad62a607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db522d8d-aeda-484f-9dc7-263d86120616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a7f1df-0466-4a17-b189-ab8f7c1a92e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89680bd8-7e9b-4dfa-8526-1c6e6cfbe5da",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3ff330-80fb-4752-9896-c5c7c92118df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854a91dc-2647-4eb2-92d9-6088f82876b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e7caa3-6d22-4553-ac3b-28aab3e722ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693511de-66ef-4ff1-a803-a5d7faf6b375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c0bbc-4e4c-45a9-921a-44c00d3e5e5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728d79f8-950b-4cf1-94c5-79ee091ece86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652c34a9-272c-480e-a6d0-ac08b8d7819b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a2f9bc-9c48-4d97-be84-b2c78fa6c038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171c2630-6e1c-436e-bc07-d5348917ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c92401-be5a-4e63-98b7-07469b5007ef",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606c2ac0-972f-47a2-8f41-b411bfe1b6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448ad293-83c0-419c-9587-5fe84ccb939e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d68e9a9-0f01-4034-bb9e-44bba7380701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa6a1e7-05b9-48c1-aae2-47e607c041f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4398f8-636c-4d15-a3b4-b91127923d31",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff28c46a-1242-4c5b-ba55-cda34b2fca74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c2c87a-195e-41ef-b3e9-ab0ecdb3996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04511a3d-d235-4d06-a203-76341e320488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0c0483-8238-4d7c-87d8-3592c279cec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6a5a6e-bc6b-433f-a9d9-78b38f7f3097",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec21a77-adf8-4c0d-8e77-0427678f15b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2238921-ec00-4aab-b466-d82365a43942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9c99a7-8fda-4501-8e19-3a0bc6cf6268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f0b742-d0e4-4ceb-be95-121ba3a4336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0993dcf8-8e4c-4613-9a23-dbf129f19790",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6c172d-1cae-4864-b3a7-41724736cbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5bdcd6-625f-48c7-8dec-2c0d1dbadd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6821f7-3d0c-42e9-95bc-3c172802a49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d5f92c-4f97-4cd7-a641-eec041fd1e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d28d5c-e1d8-4b71-b032-18d89edebb55",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb7069a-36ef-4145-94cf-a742ed727441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6c225c-5b68-4ba9-85d3-c4ae3783477d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a360d-7c64-425d-a318-b062f538c45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f32914-a2dc-4929-bba0-98fb84240f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fca876-a95a-46f7-b623-f14b57a2a962",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c9b1b8-00cf-4ca8-99ca-fd967648b7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6667623-521a-4dac-9367-1fe25bc5d9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d890fba-553d-4915-bbd1-3800cc4ba7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470e68eb-d9a8-4751-8f54-2c4d9401dea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466ff19-68c2-484e-a8ca-b81934daa4ff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2a9370-2a8b-4e8e-b3aa-8563a9410bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f5086-09e3-4604-9415-6c172d3c4d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7dbbe5-e229-423a-9220-2727ac85d805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9edcc1-501c-43ff-a3fa-5538ba9e1a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b906238-53a0-4469-90b1-45c05faabdc7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccd3533-641e-4840-92cb-ae66bf2abe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83a678a-9f22-4d48-901f-197ef04e82e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa693e08-6772-48ed-b743-c9ca83e030a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cc39fd-1906-4da3-b03a-e1e90a20a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c4fc85-bcf2-4979-96ab-83e23aba0269",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5380a199-4589-45fc-89cc-b09e4492ceaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa518c98-16ee-4f3a-9b8b-7fbffb3657a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66d9a2-aa94-4754-9de7-5093c0099c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8b9e64-8ce2-4666-8a6d-281d7cfe6487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7955ac9-795a-4047-a871-825a663dd9e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1493abd9-f4f5-4357-b8da-de3cebfcdd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02b8aa9-3f20-4499-8764-ce59600877a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e05076f-d204-47fa-84a8-c209a1f8633a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d30baf7-8a10-4319-9281-7d5a6eb4b18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f739ef06-65d2-43bb-8feb-6191f2515231",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac0f190-9af6-40fd-898c-78b96e0492de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767bac84-7053-474b-a37b-0317a1d11763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70da6ac-7fce-4edb-9966-2bb7a7e769f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295c201e-cc5d-4bef-b506-e2e37ccb639a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf1eb2-e1c7-4672-afc2-bee62ee40223",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b48f8-a8c2-4638-b071-5bb5e5e3aef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec026265-4709-4e6f-9bc1-f9c28cb6377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10147fac-90aa-48be-8aa8-b0a31a6e0df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fd4942-72ee-45a5-b8e6-3f030649cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86faedd4-570d-4d15-a0f4-9cb4fc333f77",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f102ed85-6f7f-4524-ac24-7c8b6f0d8354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd20473-22d5-41e9-932c-164a93072afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8e277d-9684-497a-87c2-7878a78a2081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7af14ae-53d3-4c67-ba9f-719d5551d1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db769bc-8aed-48b6-9230-d6ec2105cff8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc64df99-9d5c-4995-981a-4e5f8ad0f8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4441f9b9-8485-44d5-bda9-66f2bcd1198d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205f1f1-cac4-4398-8e5a-0188dc5726dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9691d3-929f-434e-a8e7-cca77569b2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a42abdd-46d9-4fbc-b0c0-4c2a051817d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5108d402-d7ca-4942-b6fe-0512a6ca90f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73257780-e87e-4a11-84c2-cf207cdad314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb84fe2-058b-4498-872c-a9a66b6b2f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d905ae34-a15c-4182-b3b6-dae6034008d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88813f91-d9a7-459f-af9b-a53500a8abeb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a36f69-d209-40e4-8fd4-21eb8c0ae3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdd100a-5cdf-46f4-a52a-2db6f7a35a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08fc515-9e18-4fc6-9241-cc7449d61c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1485ba-baf0-4c51-8906-8a5256d283b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1050a8a-842a-476c-97fd-47bd89788f75",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56b23b7-4873-48a3-b844-872f97acc85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa37a8e-420c-48a8-9d25-d7a9e1d1f716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37cb865-3b9c-41b6-8d95-817a2b350172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7724742e-a1a4-4fbf-9e22-e2f8a89cc77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f27274-0f69-4ac9-8ff6-a1ca6994be8f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de53a559-200c-4e6b-8bc5-481b8b317914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c87b50-6155-456c-ba63-a26d820dc369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2907f935-170f-4462-9d64-8d160a90c7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b257efd5-0cfd-4384-9c48-674d59cfb5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e310d398-33ff-46fa-8799-2f05ca73ba34",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b700ce8c-c7ab-47a4-8929-ebc3d258241a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9e7f6a-fe0a-4983-8682-e4b631ac273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b190e540-ed83-4e85-8956-ac4648b78331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ee22da-8296-4e83-9522-5227fc99be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43976345-edaf-4dd7-946f-5952c3e4b59f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704757a9-d4c6-44f0-a48f-35487dcf003a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14077948-badf-4d24-ac0b-c5b0f69fd965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ede9af-5f46-4288-b919-65199751e4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bb50de-efdb-4ccf-a10b-c354e5d7f278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b61ebfd-25f0-4caa-88f0-2f746f06c8aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b127c5-6db5-4ec8-8b80-0dcaaac052db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63c44b2-5bac-4781-bb4e-46f2fec59789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac9b8dd-b211-4f86-b77d-3ac346994e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee59717-d85d-4257-b2f4-f31c0c868f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df47b482-e343-4212-8900-8cbbbd27f28b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bf0426-c045-42ce-8d52-a4c89147661a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5016ae-d377-4d1e-80ee-c4f5dcbac6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dd13e5-af20-4cb0-aaa8-81bf964286b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f38b884-1fc0-4997-bb4a-e74442bcdbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37464de-bed1-45be-b64b-7f9f62d323af",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21898a95-9abe-4267-a4c1-8832cd2a225f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f04bef-177e-42c7-a6b0-87b3a87ce9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0344918-3ddc-4245-92bb-7c0a26f4dd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105ca88a-e78f-4cdf-b27a-33c6b5ab7471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1747a81-6ec2-4119-81a5-ea10eefeac1a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e9040c-6182-4fc0-8dda-e9854c700984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a136aed-998b-49b5-ac2e-4fa1da0bc502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54495572-83c5-437d-8cb2-00d23554a641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114903d1-c666-450a-a6d4-30777a26ad35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d21274b-f633-4a51-bc7e-9941a212d6aa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fde504-65b9-49b3-aa55-40ce0d8fbee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c85233d-f49d-40ad-9858-12041873f9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1df98-d2b5-4433-b371-6694bb03ecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0593e233-d53f-44d0-80aa-ef163971415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8223f9-d1ab-41e1-919d-92ca24e21f34",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5719b82f-2a6c-4be2-9862-2993bae59161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33087df-dfb6-4031-b81a-e8462c729025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca092de-d3e8-42d8-8ab2-f1bacfec8f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97fb8f7-8e68-4216-88f4-2ac5c7abcf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a151e8-7ecc-411e-b33f-45fdcee582cc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9046ef81-6d82-4a8b-801d-97f5c6c24516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28302ec-d72a-4891-b8fd-0e3fdb5230a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b896f4ce-34a0-4fad-8114-280df6c66e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2c8de0-de32-40d5-8b77-da29e5926310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e08b873-7add-4cc3-ac25-81f3f8dd3006",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34fc523-9bd0-4085-9b32-8fa145a1a048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9516f6b6-5f27-4dec-87d4-1472089969d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e9de24-496e-4b7d-8c48-405470111a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb159e4-8403-401c-b8b6-9efcd8f1e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a39ac6-fd41-4d20-9096-55f8e0d42e16",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a331595a-46b1-4b34-9774-7a5d7834f739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c39899d-c45d-4ca7-84e2-40a15d027c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e7e9f7-26f5-4949-aa9d-2942da871998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1c615e-5e37-42f0-941a-f2486342debb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e6a750-87f2-49c4-aaaa-63e3aee65708",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31febbab-2690-46df-b8c6-5b4b36a06063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d72d491d-8af6-4bab-9e73-f22feb33f011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2900a05a-4342-4b40-8914-e9daf3e26eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dae758d-214a-4ffb-b762-6bbbe0265b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe82d28-b562-4924-b5e1-bc84ae88fa48",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c93e90-cc3c-4093-86ff-f627411d22e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16faabdb-ef67-40c0-b81d-7ab475c7b66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608fe39-cd14-4b29-8eff-672f02142e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f2737b-2e68-46e8-8921-bbab50594704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed23002-d49f-4b80-a01c-6e72786fbd30",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d781f6a1-6e88-487b-ba8b-3b5ee9d2ce19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265b8667-35bc-4ad4-9ee8-3d5b6fe87e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773d177d-f98f-410f-a0f6-7f179ab70b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe07297-d942-4fbd-8985-e2eef0796ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48704048-5e99-4d14-9151-d11423f19295",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdf1ce3-fa81-4a2a-81a6-4ed2808837d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ce4ca2-4bea-4ecd-ae47-68d41813c75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ff359-d95c-41eb-9d32-1399c07ae33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0d8016-4760-4b89-9a5f-da465dc3b4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8703863f-c0fc-4ef2-8f02-31e2ecfd76a4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7475cb-ae72-47a9-99a4-cac4d00d99a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0403f88-e5ba-4ec9-8a74-2675d128af90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91526a1e-49c9-4418-82b5-f7c35c4f1224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f67891-cd5e-4b9f-a517-530db58de28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4fa1ad-0b49-4124-803f-329e7ff45e81",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0fa8f9-6888-4f4d-963d-77333cf54d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9abea01-9fda-437c-83ed-b3c07fa0aecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8165b8ef-80d7-48ed-bc50-8b2afc854e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533efa7b-9212-4861-8332-dc1e5a38eecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba6086b-3e9c-4f1d-be9b-059c9a92fdf9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba7b967-1b4a-4352-af5f-c5ca430e730a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb04c56-d618-4eb5-b76d-a1d07376038f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd90b295-8d67-4be7-9ee3-2e9274f9f903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d39231-08af-45ba-b46b-8c1b86b6e678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d4fa0-ecd5-4ae9-839a-dcaf4992f09c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5bf204-ae07-4614-8e77-061ac79d6dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5369453e-be33-4a6b-91c4-73d0484ca904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8894d63f-a716-4d3c-b631-3138fa0f7835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b1d583-c806-43e6-b0c4-4c87ccb840f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5852ec-75a2-4c11-94d3-434cbbdbab75",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee151b02-ff4f-4ac4-8eb5-e9f9c4ec1409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48fc4a6-4119-4484-b860-e7be41e8b98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ff9138-7316-4460-8050-92128f611212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8226900-4532-4238-a848-4a5861984c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e1b9a-e753-467c-bf66-9ea4477edd89",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad268b99-0223-4d82-82f1-f24b4d088249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e38784fc-1802-4a2f-85ff-19dd24c4b3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076f2629-1a51-47a8-89b9-67d6250c51bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f9cdb0-e106-454d-865c-054c9546c69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a027c90-b6af-4030-842d-94dd128f10bc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc76d99-9c4c-4c8a-bbb6-85db18145482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f388b5bf-0fd2-45c6-a33e-c2f82e0dc465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e126c4c-688c-43f5-8131-8eb9a4d8a5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6434a4-4247-4a92-9fde-e55795eefcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16459fe3-6a0c-4729-ae32-6df62487302f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dd04a4-77f1-49bd-994b-93653d5f07ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4543f5af-bfa0-48e3-9668-1d03f6a63d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02472048-a32c-4169-b2b5-021125564e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78023339-af1e-4581-9a39-65fe9cdcd484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0dc94b-620b-4938-afab-4b270ab27d19",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c479aa31-38dd-442d-a458-6f2dc7f89d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c409d0-4818-4794-8543-0da5b06ffa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dab2967-be93-4e07-871f-d6a39df83041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c0e571-9e8c-4381-9a96-92b867dfad3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f747b29-adb6-4a3b-8f62-62c50e0432d2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ecaa29-c870-46fd-a950-458cc5c142b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15492e4-5afc-4d75-b046-2d59cc0f8f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b984a787-7a65-4ea3-a0c3-07385c8254d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fab849-5172-4d52-b09d-6d1616a14cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4341d768-4af6-4dd0-90b8-974bb1ba6239",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68d1f02-7746-429a-9a74-ea53b7fbefb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d71b0ae-93f1-4202-a52b-3b37e716a517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa5fe6b-8947-4d6a-a817-97606ad83344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58460b11-7308-4685-958a-61d3809e528b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e240e5-90a3-4f63-b35c-cbbf731231c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0bead2-06c4-4ed2-bf35-8e38f41abd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f2838e-7676-435c-b9cf-fa011f0e09ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749ca8ce-3d4d-4424-b63b-e366a158aa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ace2270-5fb7-4871-b699-7908fc4d7674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9b5cb-d894-43c2-a33c-de52c84650ad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6a2cb9-33a5-4514-be74-9b7985b0dd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "608f7d45-ce2c-412a-9522-5a134e755c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38faff4-111f-41f5-b820-be26579e1837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307d2fcc-33ea-478a-87c0-8db886f632f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894497be-ecc5-4cb0-8226-a54461b11e3e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee94f29-73b5-4b2f-a571-a643919dd80d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fcfb26-1012-425d-b177-c707195306fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d3a51-4ac2-4a0a-a183-9d64bed1a64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca43338e-100a-4938-a7ec-d7d095d6859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91b0d3b-eb63-4ce4-aa0c-c764ea3cdc7f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17d7699-af9c-4728-8248-db44a959b2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c69a1c-8606-4c03-be54-b9ea15576ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7e73c9-b333-4dcb-8304-75fc11935dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc58fee8-451d-47a2-b74f-75887509d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4962d200-902a-4729-9ddb-bd8e26a96e0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1dcca8-4289-457f-9fa4-e9d0bd9293db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249711d4-347f-4599-8086-b7e3775efb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2403195b-5599-48de-8f2f-f95dfa4db2f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7b4d0b-5e31-4003-a928-c2729666669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2250d34-affd-4095-b5c0-fcce5e2518d7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5f68f4-12bb-4c38-85ce-963b52394e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8905f3bb-5499-4748-b493-2a42253402e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd481f9-2792-41cd-8f1b-ecf5d4c985e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b04238-7acc-41e1-9b1f-9288c1511e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3c44f15-45f5-4c7e-b824-5f3c551d9412",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa520e77-18c1-480d-9a06-b89606230496"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa8885a-e980-4407-8452-b2b0174ffa77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09ccff2a-b6eb-453b-8ec1-d52370e23e86"
                    }
                  }
                ]
              },
              {
                "id": "36e69a6b-3f8c-4367-b2dc-629774e2a5c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fac016be-3da5-4832-a348-cbd265bcee26",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea02b00-d357-4eed-ac94-fad3466d1fec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5eccd71-6ed9-4a8b-9fa0-301cc28a08f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c876785b-4607-452a-a67d-da396a0e80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0352568f-c35a-46e1-b7b7-f5349993a3fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b53dab87-c231-45dc-8ced-908e46e25cf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6ed1b0-46a4-4cdb-8e2a-e41da9eba392"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9fc2aee-ab32-4169-970b-93ac292e6e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dce699e3-d5ce-4c46-a7d4-0968a6690443"
                    }
                  }
                ]
              },
              {
                "id": "1d39f235-2b3d-4748-ba2b-dbf19ca08b45",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0c131bb7-1936-4785-8529-ad3145c6511a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47efcf9-3039-4558-bd6c-cbae6aa63392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "10ee4d27-60bc-4cb0-98a3-6d5bc2bbbfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0e4ae-8a30-4382-b07c-357e0c8c9a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e0c6f9-0b06-4502-b8b7-013dcf1e11d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "214dcf0c-5919-455d-abaf-1c6c0e60df4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7f65d7a-576e-4c2f-98d4-eee3464460dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "839984cf-d5e0-4dc4-a258-0056c9ef070e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b7cc8921-1520-455f-aae7-15534ae7108c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3954744-961b-4254-9d14-d56e58ac097e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87651d12-e890-464c-be3b-5c752e957154"
                    }
                  }
                ]
              },
              {
                "id": "3c769513-2ff6-489d-a465-894c15e85a34",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3c8c538-162e-40e7-9a82-bcc4eafb2295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c850ae8-fb2e-4bd7-8744-a9f21f5365b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fbae52c-eaa3-45af-87c0-78f0b2fd7279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5baed70-6261-40eb-b8de-8f0394acf401"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c962440d-d98d-49ed-bf88-657aeb8fc2dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "477189cd-1756-4bf9-8f78-9895655d44da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d198b770-4bee-4a91-83b0-8f184421baac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e637ca5-2e4a-4ac5-ba52-a1edd13d1149"
            }
          }
        ]
      },
      {
        "id": "2bbaf47d-0454-4f95-93be-f8f5ca6bb3ce",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f94f0cc2-c0db-433e-96a8-422df9db3e70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d198e92-93d4-4c41-aa61-3a401dd61c5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0e18469-7ed2-4801-bd7c-0e86f91e9a79",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86f75f4-a763-4484-9a45-31c697246a01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e44eece-deee-47ab-9b95-556bb1377e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03face9e-c8de-456b-91bc-8afbb4bfec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08137991-be85-4a5a-80a0-fcd8a713ccba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28ed8667-50d5-40ad-a943-668ea4b9a88b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21051f87-394a-4a45-8b23-1c54a4730464"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3863bf-bc68-45a6-aab8-c41e6fe88b02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daee182d-8f05-479c-ab3d-c9df93f8cb88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6476bb48-5554-4f09-a82e-5713967f6c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "602bd301-37ad-4de2-b5f3-16b08a689c6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21e132df-2a99-4047-8a95-556b7c256f4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a8cb3dc-a6b2-4b75-a80d-0930e740b213"
            }
          }
        ]
      },
      {
        "id": "b32c72aa-adc9-4d45-b88f-d5ad5291b9a8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b5cac71-ee76-4b68-a8a0-dd5bf3777bd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d632191-9f72-4142-a937-0aa119111f5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa565de6-8226-4b8c-a50e-437234cf4909",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee36f8d-9775-462f-8cf2-20dfafda425c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b5234e-5121-47a5-9c74-39a727ece3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffa8572-fe53-4d38-8e9b-e11f710e2428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcda9498-7110-46f8-8492-88d9fdbf1103"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "967af104-eba4-4192-b62d-241bf52a8475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d803d776-8e75-4f74-9021-dd96ea2e52f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fda7c2ec-15b0-4194-a23b-753ed85cd0a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "438f66b6-491b-4bbf-97e2-7d758f0bd700"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2f6d013-03ce-4944-ab00-eb1c6440e0e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe016542-c531-460b-b6d0-64c88ad30253"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8fb86b7-ac01-45c9-8fac-30a67296e0b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "379cd81e-3a39-4f6a-9838-a6e2351554bc"
            }
          }
        ]
      },
      {
        "id": "a0761c35-276b-4651-ab48-f12d13b65079",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3833ca66-c3b4-487c-a787-4142b6d8e80f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e515a965-dd1f-45fd-a940-420ead40fdf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ab41f93-e520-4475-a56f-772abd69c2a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d1d440-a50d-4f9c-9d43-ec640f4b324b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b15bc7-a9fb-4d2d-9fd7-649ae4571fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d552c4-a5c5-4b39-ae4f-195d986d4dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad415ffc-1909-466b-94c2-dca9905d8c51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95f98f11-fdf6-4f4c-9c4e-1e52510f5d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f11cd9-05a6-4582-a8f7-ba08bdc0f5ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70839c85-4b4d-47b9-8c8d-a14233098741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d02b8bfb-badb-4609-85d1-1a277ff03ca3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5f7687e-698b-489f-8f7c-b9c553da9c83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13ea7083-8ba5-493b-9aa3-859860850076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "121a81c9-612b-4b56-8274-4495768e2e25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3babd2f-3c22-4e17-b785-d0311674cd59"
            }
          }
        ]
      },
      {
        "id": "09226390-6ed1-4eaf-8de9-daa5baff680d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bffcb04b-5e61-4f09-a7c3-4f59e2e6a2b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06dd80f3-223f-48e9-b074-7eb7d3f58b0a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "83c959dc-e4d4-45cf-a01b-20a911d6ff7a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86f61242-c96d-4433-ad4a-60cf26a3265b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6d62142-e302-4dd5-857b-d11e9d69a33a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.352112676056365,
      "responseMin": 19,
      "responseMax": 291,
      "responseSd": 23.696347012435965,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693787589197,
      "completed": 1693787610556
    },
    "executions": [
      {
        "id": "6c4633c8-f2d1-4071-8ea6-174e9d6a2ee0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32adf938-a666-4ad5-ac3f-b0011584a90c",
          "httpRequestId": "9fee03e2-3bc6-4036-8a56-df1ce8f04d87"
        },
        "item": {
          "id": "6c4633c8-f2d1-4071-8ea6-174e9d6a2ee0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b39b53a9-dd0c-4fab-9a61-678b0fa6691b",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "1bd47c21-6339-4751-932d-d74687af3955",
        "cursor": {
          "ref": "3a974ee6-8730-4ccb-b19c-6f2ed5224160",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "68aae57f-534a-48fd-b524-56f706a6bf1a"
        },
        "item": {
          "id": "1bd47c21-6339-4751-932d-d74687af3955",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "51a415f4-59e6-4bdf-b0a8-387a7ff491db",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "b97d7c8d-0653-4926-9b2e-655cbe96d04f",
        "cursor": {
          "ref": "768f62be-4282-4371-a16b-1a7f670db954",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd7c7bba-d27c-423f-8cd0-f31b5f77b6cd"
        },
        "item": {
          "id": "b97d7c8d-0653-4926-9b2e-655cbe96d04f",
          "name": "did_json"
        },
        "response": {
          "id": "8d647026-380b-427d-89ac-085cfacc1f86",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b51ba0-3cda-49b2-ab00-4ad930bceb60",
        "cursor": {
          "ref": "b7f75d0d-6bcf-4b01-9847-3012ce525552",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e0d6384-5493-472f-bdf5-66ad27bc5659"
        },
        "item": {
          "id": "f6b51ba0-3cda-49b2-ab00-4ad930bceb60",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3998eb4-4090-462e-97df-2f5eaa4efc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b51ba0-3cda-49b2-ab00-4ad930bceb60",
        "cursor": {
          "ref": "b7f75d0d-6bcf-4b01-9847-3012ce525552",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e0d6384-5493-472f-bdf5-66ad27bc5659"
        },
        "item": {
          "id": "f6b51ba0-3cda-49b2-ab00-4ad930bceb60",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3998eb4-4090-462e-97df-2f5eaa4efc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b735ada-646d-4a2d-8c25-e70be4f14928",
        "cursor": {
          "ref": "eb1b1762-9728-4cd5-89c7-b1c9d8ff6c11",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00633410-78e5-4991-95e9-5a63ccdfdec8"
        },
        "item": {
          "id": "4b735ada-646d-4a2d-8c25-e70be4f14928",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e32fd991-8a75-4d53-9e04-0d1fcb4ca9ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1df39-d369-4861-aced-6e4654280dd0",
        "cursor": {
          "ref": "782fe093-c5b3-4bc4-8a2c-4b1f9e1f41ee",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a8372fd8-fad9-46f4-ae5a-653d25dd7ea6"
        },
        "item": {
          "id": "8ff1df39-d369-4861-aced-6e4654280dd0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3849ba62-b398-468f-8136-ab7fae1312c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec9924e-be4e-44a7-a062-f455b6233bf5",
        "cursor": {
          "ref": "7227a3ea-8fba-4c93-8f55-bd70c6caedb2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "11de7e6d-08f0-462e-a772-d07a7f9e60e7"
        },
        "item": {
          "id": "1ec9924e-be4e-44a7-a062-f455b6233bf5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fcad9761-884c-4d44-a199-7fc5334c8e8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f943f7f3-3b76-4cbc-a3d4-d3dea03a14c3",
        "cursor": {
          "ref": "e6af02f1-af11-4298-a448-dacebc106623",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ef99954-15ce-4dd4-8bd9-aad61a896f01"
        },
        "item": {
          "id": "f943f7f3-3b76-4cbc-a3d4-d3dea03a14c3",
          "name": "identifiers"
        },
        "response": {
          "id": "88b7303a-e09e-4175-a0ff-16260896fc8f",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de4443e-a1af-4dc6-84f6-eff54b7c738c",
        "cursor": {
          "ref": "221c4781-07c8-438f-8c66-1eff28a77ce3",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7eb425f8-9383-4029-8ee2-9e7367a08fff"
        },
        "item": {
          "id": "5de4443e-a1af-4dc6-84f6-eff54b7c738c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a2c84b32-65f7-482b-b7d2-e9346fd359fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7666be-f464-446c-bf21-a958e61483d5",
        "cursor": {
          "ref": "8cf0e74c-6b6b-4dd8-8141-dd659c843e5d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "04fa1ae4-1e43-42c8-9c14-b09dd77f76ea"
        },
        "item": {
          "id": "6c7666be-f464-446c-bf21-a958e61483d5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0846fcd1-9d76-4ab6-8aa0-e36f8099b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba369b62-3a33-4c70-9208-36592a61f0b4",
        "cursor": {
          "ref": "0ecaba76-8495-442c-a333-5c7a62790741",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cef3d831-30d0-4a4b-8a3c-d1fbdc963d22"
        },
        "item": {
          "id": "ba369b62-3a33-4c70-9208-36592a61f0b4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "08411492-74c3-46c3-b4c5-eebef9d0ae47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f523566-e6c9-4573-998d-da32d34a46da",
        "cursor": {
          "ref": "b5a1c095-0537-4845-9565-dd5528f98cac",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "265b938c-990e-45e1-b01d-4ea0dfda992e"
        },
        "item": {
          "id": "7f523566-e6c9-4573-998d-da32d34a46da",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4981507-a179-47a7-91f2-bbc90bb28d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24eaabe-87e2-4cd8-af38-f69c5a1a11a0",
        "cursor": {
          "ref": "3c2a7145-5d69-4406-84d1-0122a4151bf8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2fdcdbb-8768-47ff-9890-b566f90af8ce"
        },
        "item": {
          "id": "d24eaabe-87e2-4cd8-af38-f69c5a1a11a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "274ac2ac-55df-4217-a42d-73fec586d166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3d2a86-5043-4929-b795-45090ad35ecc",
        "cursor": {
          "ref": "0af8d791-1aef-41b3-8c87-150a0d20e3a0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8e940a6b-da5a-4c9f-adfd-2a5e4d5987f7"
        },
        "item": {
          "id": "8f3d2a86-5043-4929-b795-45090ad35ecc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9952138a-ce55-4875-8e8f-0960673fe075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d043e2f1-e0eb-4d39-8fa0-b6bcd589d42f",
        "cursor": {
          "ref": "b21be06c-af4e-4494-8834-ce895b4f1bf8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b3283f5c-da0c-4a75-8808-d7e816da1754"
        },
        "item": {
          "id": "d043e2f1-e0eb-4d39-8fa0-b6bcd589d42f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5bcc87b9-167b-41a8-8eb5-2d1e664b243c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7c6aa-9d4b-43e5-935b-d1caeabfc0f0",
        "cursor": {
          "ref": "ed51cdbf-a4af-4b52-84e5-96f68f47ab81",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5a256648-e0de-4e0e-bbab-f259e83d9433"
        },
        "item": {
          "id": "9fd7c6aa-9d4b-43e5-935b-d1caeabfc0f0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9631f02-9940-424b-9e6b-6c1ec554ae01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac2ca7d-c71b-4602-8929-05029a3ad9d0",
        "cursor": {
          "ref": "c582ae10-3167-4b78-97da-bd601bdee375",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e8d45173-aabd-49c7-99a4-63a2a52f39e8"
        },
        "item": {
          "id": "9ac2ca7d-c71b-4602-8929-05029a3ad9d0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7ad8dabb-7ee3-4043-8852-476ab7889a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eba7bc8-d9d4-44ca-8996-bb8dbb4b236b",
        "cursor": {
          "ref": "2a0ba646-b022-41ce-8d6e-1108331e5254",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f3b5da40-8d50-4a1a-b990-9c36ceb3947f"
        },
        "item": {
          "id": "9eba7bc8-d9d4-44ca-8996-bb8dbb4b236b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "12e0cf65-2187-4168-88af-a24fa2c0012a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27783ad-456b-4779-9f97-e3777ac63718",
        "cursor": {
          "ref": "726f13a5-bed7-4008-be95-e6bd8a8a53b2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82bcc7be-51a6-41b5-b852-4708171e6bdc"
        },
        "item": {
          "id": "a27783ad-456b-4779-9f97-e3777ac63718",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9afc051b-c43b-454a-8d71-b1aff2214fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661505da-4c9a-418b-b3f5-dee6e28d0404",
        "cursor": {
          "ref": "5c881117-2def-4ac7-89df-93ee05720f23",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a9bfafd4-f239-4988-a64e-409dd31c821d"
        },
        "item": {
          "id": "661505da-4c9a-418b-b3f5-dee6e28d0404",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e8969a6-c772-4a92-9498-34759264b758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fbbc13-435f-488c-b822-ce6271708b46",
        "cursor": {
          "ref": "a04735b0-0ced-44dd-95d2-ccf226337918",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6bb3df28-232c-4cd5-a755-467d23e1ebce"
        },
        "item": {
          "id": "63fbbc13-435f-488c-b822-ce6271708b46",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "135b5abc-2c88-45e0-a11e-e1079a4134e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58600168-2d1d-4121-99f5-cab90fa489fb",
        "cursor": {
          "ref": "9d24347b-90b7-41b9-a72b-5ab8ed0118a9",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "51c8abbd-9081-4c24-90d0-84d43371d543"
        },
        "item": {
          "id": "58600168-2d1d-4121-99f5-cab90fa489fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5a7f8283-598a-4497-ada0-71fb40e19a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171214c9-8e0c-47ad-8c6b-ec1e5474e60d",
        "cursor": {
          "ref": "a62e5fc4-6eaa-4679-af1e-30279f470fa6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "be5d54b3-73b6-4a75-b8c3-5e8446c04c8b"
        },
        "item": {
          "id": "171214c9-8e0c-47ad-8c6b-ec1e5474e60d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "449ce850-de69-4b8a-8222-5ea7d8d300cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbacc834-6542-4f99-bc52-7af3f2916ae1",
        "cursor": {
          "ref": "016a3270-b367-412f-ba62-3c88f83d65f6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "05e949ba-5897-47a5-857c-4be11d04183c"
        },
        "item": {
          "id": "fbacc834-6542-4f99-bc52-7af3f2916ae1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bbd62882-3d8f-4f5e-9d3d-852036f590dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49703d8f-ce62-4fe8-88c3-eeb82c7fd7db",
        "cursor": {
          "ref": "852f01ef-1895-4671-9548-803855759763",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c2054eab-1f59-486a-9bb1-9794e5a9339d"
        },
        "item": {
          "id": "49703d8f-ce62-4fe8-88c3-eeb82c7fd7db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4bcc7208-03a9-4278-8755-3299fc7c7f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900b480e-490b-4ce5-9775-243613af5e85",
        "cursor": {
          "ref": "57125661-8c81-42d9-8df0-0305a8277b06",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4d95e0f0-8fba-4db1-b8a9-aa302f2eb4cb"
        },
        "item": {
          "id": "900b480e-490b-4ce5-9775-243613af5e85",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b6a52507-8bcf-4ce0-82b3-797eda97d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748b4e0c-0bd2-411b-8c9e-b1cdf5ca0556",
        "cursor": {
          "ref": "ee452637-c9bd-42f8-9b06-3a2e3fb23959",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "421406ca-d430-466c-8e40-696c6ff350dd"
        },
        "item": {
          "id": "748b4e0c-0bd2-411b-8c9e-b1cdf5ca0556",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c0fb182f-0633-49a1-8f75-b529e03c7362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c389aaf-952c-496b-9e54-a15698dd677f",
        "cursor": {
          "ref": "db7f3200-da0b-4081-a8ec-896a85239434",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cef36b19-c598-4ad3-8560-dfbe76994d71"
        },
        "item": {
          "id": "1c389aaf-952c-496b-9e54-a15698dd677f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bfe5e7fa-294d-4fed-b70f-875c93ddfe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31626c8-2b9c-4197-af83-7d2235eb8af2",
        "cursor": {
          "ref": "6d1a26ef-843b-414d-9ad7-1f25b4d5f297",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9dfbc6aa-c5d6-4a54-8cae-4083b720f2fb"
        },
        "item": {
          "id": "b31626c8-2b9c-4197-af83-7d2235eb8af2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "41c200f0-54cd-4d96-95ff-39fda0d52d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aaab4e-b06c-44f3-86a4-425d1e8f7859",
        "cursor": {
          "ref": "9ab7b029-7976-47ad-97e4-239aec8ca80d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "687be9dd-2c10-4e48-96c5-74b317108850"
        },
        "item": {
          "id": "e1aaab4e-b06c-44f3-86a4-425d1e8f7859",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "783d7e61-44de-430f-87ec-f8cbbdd4d406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd208d6-de83-4a93-a810-2db98ab60290",
        "cursor": {
          "ref": "bfdf294f-cb98-460c-9136-c710474a0cf7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7182c8e8-8679-422e-b4fb-ef08fac03c42"
        },
        "item": {
          "id": "2dd208d6-de83-4a93-a810-2db98ab60290",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4e976e4-92b8-4e9b-84cd-ffa48f8f727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7789444-4e31-4607-8dbc-4c935ca419e4",
        "cursor": {
          "ref": "8adbee2e-413a-49ef-9870-65b3ccd6caff",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ca91ba65-ff06-4c50-987b-32912fe57579"
        },
        "item": {
          "id": "b7789444-4e31-4607-8dbc-4c935ca419e4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e1cb2c36-bfcc-418f-b79f-52601e50a378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a0f230-d9f7-45bf-b8ca-8c5ccbb916bd",
        "cursor": {
          "ref": "99846f73-91dc-46eb-8492-c1045b36fcba",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1cddebfe-c1ff-4f1d-aa67-e4fe4ee22857"
        },
        "item": {
          "id": "f8a0f230-d9f7-45bf-b8ca-8c5ccbb916bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "59afc710-52c8-4784-8d3b-1b08dfe3e809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e51a1c-5173-428c-baca-b5bda47cdec6",
        "cursor": {
          "ref": "8cc715a7-91a8-48bd-9298-af2e66f7c088",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9d695632-ebe6-4ac8-9d92-4441acf239a8"
        },
        "item": {
          "id": "91e51a1c-5173-428c-baca-b5bda47cdec6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f8ab7801-b8ac-477d-99b3-062810e1bb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cd6b4d-568e-4d4c-9430-de299dd98f2e",
        "cursor": {
          "ref": "2df3eea1-ede1-4588-b188-0ce9a3e816df",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a9c5b75d-12d5-4527-ae0f-108643754cd8"
        },
        "item": {
          "id": "74cd6b4d-568e-4d4c-9430-de299dd98f2e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "219b3a93-6da1-4955-900a-a449333f4050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d85a6b7-830e-486d-a56a-403957c1fea8",
        "cursor": {
          "ref": "ab5b918b-ac6c-4b80-b759-12921ad668fe",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18c6efb4-4c43-49b0-aa81-cbd01bfd4bfe"
        },
        "item": {
          "id": "9d85a6b7-830e-486d-a56a-403957c1fea8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "981ceb3c-f2f2-435b-ad57-b80f304cf2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20da484-6e2d-40ec-85df-72961e83584e",
        "cursor": {
          "ref": "0a18fd42-a9df-478c-a9c2-9437a5711198",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "587e1554-f46f-4061-8635-b606b6f7a759"
        },
        "item": {
          "id": "a20da484-6e2d-40ec-85df-72961e83584e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e8115422-0d39-4451-ac8e-e519be0d2373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20aa5b4-6ef2-4142-ad81-fac7136bf4d4",
        "cursor": {
          "ref": "46a7294a-5ba0-4bae-8888-ccc1a3cd1002",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c88c9b6a-c122-4c3b-9836-821922b1b3d9"
        },
        "item": {
          "id": "d20aa5b4-6ef2-4142-ad81-fac7136bf4d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d0cd731-a961-4cc7-83c1-01b3c35b45a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0580441b-3227-4d11-83a4-5b9b04e810f1",
        "cursor": {
          "ref": "518fda6c-f0e6-4678-8085-1d5dcbf08ee3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "276c5aed-7006-495a-b52e-d70f6418605c"
        },
        "item": {
          "id": "0580441b-3227-4d11-83a4-5b9b04e810f1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cf19892b-1314-4346-a1e5-bb8ad3240441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d923e9-7ada-48f1-a5fd-409950a2fa5f",
        "cursor": {
          "ref": "ffac6bd9-798f-43f8-b7f6-e75e42765eac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9ac3ccb0-6c8e-4050-a604-9d400d04a891"
        },
        "item": {
          "id": "b3d923e9-7ada-48f1-a5fd-409950a2fa5f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6b2ec965-6f11-4d17-b3a9-b82943b7c3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b47532a-6177-48ba-b9dc-a961f7dbb5db",
        "cursor": {
          "ref": "963e8305-18ff-4b21-b172-c0cf89957a09",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "28cb7122-8b0a-4e29-97ea-926d85f13149"
        },
        "item": {
          "id": "1b47532a-6177-48ba-b9dc-a961f7dbb5db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd3b7f58-b5ff-49c9-a28c-08c59d3fe42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65775317-6427-4684-90e7-297ce727ba4f",
        "cursor": {
          "ref": "29a857b8-3231-4daf-807a-ba167db7744d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "73dd91fc-a41f-4d22-820b-35515546c91d"
        },
        "item": {
          "id": "65775317-6427-4684-90e7-297ce727ba4f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b7db2724-9efa-46c8-a9c9-6386cbfd2ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6696e605-c1b2-4f39-98e1-b659a887c8ae",
        "cursor": {
          "ref": "051518c2-47f7-46cf-8d3c-666b9aa5777e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "901379e7-116d-4eec-b0ec-d422010afd19"
        },
        "item": {
          "id": "6696e605-c1b2-4f39-98e1-b659a887c8ae",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "60177d5a-7f73-432c-b15f-c2002c303354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc69277-1437-46d6-8ceb-5fd3cf17751f",
        "cursor": {
          "ref": "5f938859-aa53-429d-8777-0d9ebbf52a34",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "21f66cb2-6def-42cc-bc0a-18b96cde641e"
        },
        "item": {
          "id": "dfc69277-1437-46d6-8ceb-5fd3cf17751f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5cb66162-f14d-4cef-b519-320febc38b48",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c1084-9bd9-4124-baad-97efac67f76b",
        "cursor": {
          "ref": "d3d8aea3-156b-41c9-a74e-698a9fcd1337",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "70d47ab4-578a-46d0-9166-516a1675d7de"
        },
        "item": {
          "id": "ab8c1084-9bd9-4124-baad-97efac67f76b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "635db704-7a37-4667-9b0d-6bf5bc561a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebe0cee-06ca-4fe3-bee9-59e65bcac50e",
        "cursor": {
          "ref": "3c49d46c-4701-4b0b-9664-0a52124e7d3c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "87ec8acf-52bf-4b5e-80dc-9743c6f5b143"
        },
        "item": {
          "id": "6ebe0cee-06ca-4fe3-bee9-59e65bcac50e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "86956f09-245f-4a24-b822-57ba202f2e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db606e-d294-4414-be11-771bb5741f09",
        "cursor": {
          "ref": "6888b1c4-02df-490a-9b2e-ffbe94ebd2a9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "463fba2b-805d-4831-a864-c2311e1cdf0b"
        },
        "item": {
          "id": "75db606e-d294-4414-be11-771bb5741f09",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7cac587f-2693-47aa-a45f-583f33db7667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7605650f-383c-4b83-b2ff-e7460f705e82",
        "cursor": {
          "ref": "12839504-9add-4b3a-8cbe-5a722c67b262",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0191a46c-70fd-41c5-8f75-7fc6ad982f64"
        },
        "item": {
          "id": "7605650f-383c-4b83-b2ff-e7460f705e82",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61ee9412-82f4-452d-a57b-59cfbe461990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9fff2d-a55a-4fa8-8eed-43b6fb6e3740",
        "cursor": {
          "ref": "073becab-f303-42b7-904e-a5ec461e7b13",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10bfe444-edb9-404a-9707-4304c34a8abe"
        },
        "item": {
          "id": "2b9fff2d-a55a-4fa8-8eed-43b6fb6e3740",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5840c6e0-e053-4d69-9fef-15bca493930f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5789124f-63db-4c4c-9d26-f027f4e72a58",
        "cursor": {
          "ref": "c8d8cd5b-19b3-479e-9da5-3384830aef2c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d2885fc3-954b-4296-89ac-413d29008276"
        },
        "item": {
          "id": "5789124f-63db-4c4c-9d26-f027f4e72a58",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e4a087d0-ace1-438d-80df-6e641eae0697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0bc7f8-5952-4746-b916-0a1d0a8eb7d6",
        "cursor": {
          "ref": "421521af-1d63-4ce9-8d8e-b81be1131d5d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c299136d-b8f2-4d44-a013-484832dbd8fd"
        },
        "item": {
          "id": "ee0bc7f8-5952-4746-b916-0a1d0a8eb7d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5615623f-63d1-4caf-900d-22e70602fe67",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184086cc-f962-4382-ab4e-0489f44bd247",
        "cursor": {
          "ref": "3c9166de-1a8d-4cca-b548-b3605fa1e094",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b63fdf41-6eda-44aa-9b87-a092d52022e8"
        },
        "item": {
          "id": "184086cc-f962-4382-ab4e-0489f44bd247",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c14bb3fe-a601-48b7-afca-90d9cb4304d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81622173-eb14-4f47-a0d7-20a56006d959",
        "cursor": {
          "ref": "7aeba4b3-aa5c-4efc-8991-42625070bad7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4fb2be04-6080-411d-832e-9e514853c00b"
        },
        "item": {
          "id": "81622173-eb14-4f47-a0d7-20a56006d959",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b5ad52c0-5468-4417-b869-e9ced79419c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346c98bc-31ca-41cd-bd48-039037e0d82e",
        "cursor": {
          "ref": "25d303c6-aad2-4fe2-bb39-e3856c673118",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4a7ba377-6355-4411-a8d9-0c514d2dee54"
        },
        "item": {
          "id": "346c98bc-31ca-41cd-bd48-039037e0d82e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "077657ea-71f9-43ee-85ee-e5552643cd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b60cc63-24db-4910-8ba5-44555a0ce574",
        "cursor": {
          "ref": "e7df6c12-7bb4-4c1f-80f9-5616051aa3c8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "276a27f2-83c7-4ad3-9eeb-e4e0ff9e1668"
        },
        "item": {
          "id": "6b60cc63-24db-4910-8ba5-44555a0ce574",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "42f5ea79-71cd-4f3c-8044-9a4480b148fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa636556-8f3a-4a56-a596-429c89db6b15",
        "cursor": {
          "ref": "c52e4a93-d80f-4021-9cbf-1c050c179a11",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b25773a-d57e-4463-81a4-3f305aedb6f6"
        },
        "item": {
          "id": "aa636556-8f3a-4a56-a596-429c89db6b15",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7bb7f6a-5372-455e-aebb-b13c8ef00e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef6ede8-f604-4cc6-98a1-3ce8f7a4f59f",
        "cursor": {
          "ref": "42b4d3e5-d930-493e-bfc2-44d712a4e978",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fb7870da-1333-4807-abca-1a645384b74e"
        },
        "item": {
          "id": "8ef6ede8-f604-4cc6-98a1-3ce8f7a4f59f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04659b6b-3f1b-47cf-bf3e-3beb1530b0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03252a82-799e-499d-8c5a-abd91792013d",
        "cursor": {
          "ref": "8aaec251-7f3d-474a-b47e-82a557c7bfc4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13262aec-cf47-4839-826b-aeea5735a39e"
        },
        "item": {
          "id": "03252a82-799e-499d-8c5a-abd91792013d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ccbe90e8-7d4d-4fad-8f19-8392521044e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dffcad-1187-4975-97e5-f65a9ea551b5",
        "cursor": {
          "ref": "d115d782-0867-4849-b63b-f82bb47e4082",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7229b488-28c6-4aa4-852c-cab17d1122db"
        },
        "item": {
          "id": "38dffcad-1187-4975-97e5-f65a9ea551b5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "50726dae-78df-4790-a355-2cd06a0c0119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f834043-808c-409e-87a4-9dd931b513bf",
        "cursor": {
          "ref": "5ba17e55-19a5-42d8-aa1e-8de5ad4c3f4a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ea92166f-8f6c-4d6c-ad89-ca1e1fc24ef7"
        },
        "item": {
          "id": "4f834043-808c-409e-87a4-9dd931b513bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1f55bcd3-64eb-42d0-b21f-08014e3bdbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42e7f89-3cd1-49dc-8f95-f4e6f3217b4d",
        "cursor": {
          "ref": "48c06de0-23b3-464c-9734-d7a3a842f12a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9b6fdd50-e456-4267-861b-f2eab9f09cc3"
        },
        "item": {
          "id": "c42e7f89-3cd1-49dc-8f95-f4e6f3217b4d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2ed76da2-1142-4b88-ab88-073a6a87b93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d4130-64b7-494d-9708-b9d6a306a282",
        "cursor": {
          "ref": "fa3eedd4-7bcd-4714-9999-7afef9289e46",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e4c248a9-4881-4f0a-a056-7f4887ab90c9"
        },
        "item": {
          "id": "758d4130-64b7-494d-9708-b9d6a306a282",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "777810a1-1c4d-4c0a-933b-01e06d27df6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42419f9-c9db-4f3b-be41-242826c56dc0",
        "cursor": {
          "ref": "2e400492-03e7-492d-a729-8bd5a6dbf44d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d4bfd630-33a0-4c74-b80d-e8b974827d7e"
        },
        "item": {
          "id": "c42419f9-c9db-4f3b-be41-242826c56dc0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21221b78-80bc-4737-91b1-1ac116bcac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c10c6a-53fe-4f2c-a7ec-ca694923a9fd",
        "cursor": {
          "ref": "a2c8971b-2d86-434b-868e-69a1f946df59",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0340fe8f-f35b-4c4f-92db-46017d561b0b"
        },
        "item": {
          "id": "42c10c6a-53fe-4f2c-a7ec-ca694923a9fd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8126066c-4fa1-4717-b21d-668b691547c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b860d35a-4762-4841-b24f-3679e9f9a638",
        "cursor": {
          "ref": "de81258d-31a1-4a6d-aa42-aa47fc3c6205",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b8db311d-9ce7-4299-8c52-fd02486d4240"
        },
        "item": {
          "id": "b860d35a-4762-4841-b24f-3679e9f9a638",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "56f5b3da-5489-4580-8662-11f067fcc2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c217cb2f-12b8-47c7-ab09-aaf37aaf67f7",
        "cursor": {
          "ref": "b538b9c2-3aa3-4b8f-ba92-3b394c35fe16",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "85767c66-e59b-462c-a87f-90ec6718970e"
        },
        "item": {
          "id": "c217cb2f-12b8-47c7-ab09-aaf37aaf67f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c6108f03-c66a-4644-8482-785fcdd27974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187e665-c6e1-4341-8552-f50eed593a25",
        "cursor": {
          "ref": "2ce3b809-a687-4821-9286-7b8e89a9e54c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "145bb3a2-5f7e-4f2a-90b6-b4172015000b"
        },
        "item": {
          "id": "4187e665-c6e1-4341-8552-f50eed593a25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "64c0c215-633d-4c5c-b0f8-c81c53b0cc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f8621a-bc98-49a2-bcc6-101d3dfc2dbf",
        "cursor": {
          "ref": "85860972-2f7f-402f-ba7c-a4559e3ec7e7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46bcfca4-5ff4-4036-bae9-4c93e76c0b56"
        },
        "item": {
          "id": "11f8621a-bc98-49a2-bcc6-101d3dfc2dbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "70cf8f39-3f64-4775-a31a-9ec658281aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cd6b96-4178-4732-b3a5-ba0a68721576",
        "cursor": {
          "ref": "8b80f747-a2f8-4ae8-ac9a-3e5b9c1ffc22",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b1d2ceb-cc0b-49c2-b774-aa33cf47aeb4"
        },
        "item": {
          "id": "14cd6b96-4178-4732-b3a5-ba0a68721576",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ff471caa-c9cd-4ca6-a130-f7be00f8b2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a2ba01-1a95-455d-a552-574bdc82cd09",
        "cursor": {
          "ref": "6f841dbd-154a-423d-8bd7-f695415558f4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d1a76a5c-15ec-4e51-867f-7a1e9e0f3b06"
        },
        "item": {
          "id": "b2a2ba01-1a95-455d-a552-574bdc82cd09",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5c9a9efe-646f-4cec-a6dc-03a5c28d48eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be4e68-85c2-4ad7-9680-2f1afc9adb83",
        "cursor": {
          "ref": "c0c58433-f680-4574-aa20-8f03efd46be5",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7246b5b2-d08b-414b-8d45-c1fea6735d80"
        },
        "item": {
          "id": "32be4e68-85c2-4ad7-9680-2f1afc9adb83",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "73b76988-c9cc-4e68-abf9-a0e9cc9737ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b28da-79eb-4b45-acc6-a06270f72acd",
        "cursor": {
          "ref": "4f803db1-79e6-4695-89b0-77409fe9a693",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ffe4112-f09d-40db-8484-f9fda8133439"
        },
        "item": {
          "id": "4f8b28da-79eb-4b45-acc6-a06270f72acd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8ed507b1-786c-4df2-b1a2-aa5f6f44c5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de8f7f9-9bb4-497b-b6c0-1298fd66efc4",
        "cursor": {
          "ref": "eda1d4ff-6f91-4c69-b024-82800842527c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "39d2dfed-6c8b-483f-9a64-c77081c4634f"
        },
        "item": {
          "id": "1de8f7f9-9bb4-497b-b6c0-1298fd66efc4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49b4bc0e-7f62-466d-8dae-17facaf4fa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f488e77f-91fa-4611-b445-8a2e29435aa5",
        "cursor": {
          "ref": "f39560d5-a604-4d74-8dd6-d8199964a47b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "21b8ebf3-329f-4f91-92f5-6eee5dbbbe90"
        },
        "item": {
          "id": "f488e77f-91fa-4611-b445-8a2e29435aa5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "288b1188-69e3-484c-bb4b-e0fbca046b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a91e57-6601-4621-b435-4605b1942d19",
        "cursor": {
          "ref": "f560ed7a-295f-4414-88d0-181b7e22ae35",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6bfa551-1ea7-4718-99a9-b71424032bbd"
        },
        "item": {
          "id": "a6a91e57-6601-4621-b435-4605b1942d19",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "328f139d-faa5-4863-8b10-8401f055a377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a8d542-0ae3-4f79-aa6b-e138cba876d5",
        "cursor": {
          "ref": "ed986d94-6db5-4028-aec7-8454ae125247",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80649f63-1d03-4263-ba71-61230291d33a"
        },
        "item": {
          "id": "42a8d542-0ae3-4f79-aa6b-e138cba876d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "87527b43-c2a0-4238-a110-df9727195e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8960bf6d-4fb2-40c4-a8ac-9b9238c9ef32",
        "cursor": {
          "ref": "26f517ea-ed7c-4b88-9016-efb4b011b1cd",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "34811dce-9859-43ee-8745-84d21dc38137"
        },
        "item": {
          "id": "8960bf6d-4fb2-40c4-a8ac-9b9238c9ef32",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d672efc0-2a79-46c0-bbf8-330be2ad7b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec815179-1160-43dd-a87e-4e5d21a69cc9",
        "cursor": {
          "ref": "eadac9bd-d1f1-4e84-af26-676034d6aeab",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ef3af49a-47f1-44e6-93b7-20d8781efdea"
        },
        "item": {
          "id": "ec815179-1160-43dd-a87e-4e5d21a69cc9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4f9f0596-321b-42ca-a37b-5f799f32d455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7f04e1-b1a7-47f5-bb03-1fddb74e46fd",
        "cursor": {
          "ref": "eba468b4-8e5f-45b1-aa85-442dea4b7007",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dffa51f4-6e25-4edb-ba81-4bd19c707516"
        },
        "item": {
          "id": "ea7f04e1-b1a7-47f5-bb03-1fddb74e46fd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d23b5f7c-aa05-496e-b8fe-7ceaf80ec662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271a5282-98c6-4364-bba8-a01997de4c58",
        "cursor": {
          "ref": "270fdba4-3def-403a-8160-cd8aa96d25b0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e93509e8-c766-43a0-b15e-88e2f8c82e6a"
        },
        "item": {
          "id": "271a5282-98c6-4364-bba8-a01997de4c58",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e31992b1-7648-4a5b-af41-68ff9f8a7bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c07905d-c61a-411f-94dd-17f4ed2ceb83",
        "cursor": {
          "ref": "2451149c-e390-42b7-956e-8042982d6d63",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cea02e86-2abc-41ba-847c-8db16b702b49"
        },
        "item": {
          "id": "1c07905d-c61a-411f-94dd-17f4ed2ceb83",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "062d3b12-692b-47f2-a533-0eef4b7fcac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253f5cbb-0899-4023-9256-60b0c34f4867",
        "cursor": {
          "ref": "b2109682-57d6-4fad-9b57-21f576931b57",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1b59bf63-5ce5-4fb1-b203-dc80835fcf29"
        },
        "item": {
          "id": "253f5cbb-0899-4023-9256-60b0c34f4867",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e538c321-0f64-416e-b851-94c783d9467d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3068ac-06de-49e2-84c2-17ed34d65dfe",
        "cursor": {
          "ref": "27ffc67c-7e0f-4d6a-ad9b-a67bc7ffbd72",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d80be785-e1cc-4d0c-82f9-9559c6e885da"
        },
        "item": {
          "id": "4a3068ac-06de-49e2-84c2-17ed34d65dfe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5f8a2bde-d165-471d-a4ce-900611b6cf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad268fea-8ec5-49ae-bdf2-0dc6c6bebfce",
        "cursor": {
          "ref": "b31785c1-85c3-4593-99d1-c746684c3d4e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3117e988-194b-45fd-8377-1dead4ef2f95"
        },
        "item": {
          "id": "ad268fea-8ec5-49ae-bdf2-0dc6c6bebfce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ee2cce39-99d1-46c5-b46e-65317fd2ad86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d3730-55d9-4b0e-9b45-291656ed97c9",
        "cursor": {
          "ref": "a3f07bac-621c-4fca-b0f4-337f03d3a02c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c66edbad-eaab-4457-89e4-4833c84b7618"
        },
        "item": {
          "id": "907d3730-55d9-4b0e-9b45-291656ed97c9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98f2d1a0-37d2-4b67-8801-eb8f14991780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b3ee0b-d646-4583-bfd5-354456304806",
        "cursor": {
          "ref": "b04c10a2-12c2-4229-9106-d6c5df794cac",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ed61042f-598b-458a-b647-6206d9ea98da"
        },
        "item": {
          "id": "55b3ee0b-d646-4583-bfd5-354456304806",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "626879f8-314d-46a2-a740-4faf34a32bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebd25c6-e440-449b-b660-ba4be4bc5f14",
        "cursor": {
          "ref": "d24920ff-77dc-4338-a7bc-70e85242e06d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f768d985-b6b2-4a02-8996-a501468ed031"
        },
        "item": {
          "id": "7ebd25c6-e440-449b-b660-ba4be4bc5f14",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ea9483d-7c0e-4488-bf6c-5028c0eb0f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a9d17e-3fd8-437e-a2f9-f8cb11c1f2b6",
        "cursor": {
          "ref": "d072d0a7-aa8d-476a-bd09-153e47c05e87",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a40b853d-953f-4791-bac8-28b9950f2327"
        },
        "item": {
          "id": "66a9d17e-3fd8-437e-a2f9-f8cb11c1f2b6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a1a30807-69bc-481f-8d90-70c9033cd260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e40d8a-4136-42c3-b4e4-c138f7b5dd73",
        "cursor": {
          "ref": "8c334927-5feb-4627-a320-576abe650e6a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "734961ee-2f85-4c28-8992-d5ba718aaa83"
        },
        "item": {
          "id": "03e40d8a-4136-42c3-b4e4-c138f7b5dd73",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a010f2b-6098-44e4-8680-c832ef119ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998177cf-875b-4b2c-8003-e28542ec9edc",
        "cursor": {
          "ref": "f347fcae-19b8-4cd0-863d-c86c96db6688",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5ea3642c-04d4-44c5-9f33-3453ae27eb57"
        },
        "item": {
          "id": "998177cf-875b-4b2c-8003-e28542ec9edc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "419dde8e-7464-4a65-882a-d0e4fcdbbc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f2ff64-ef7c-4a2e-b84f-fb3a55ada3de",
        "cursor": {
          "ref": "87507f2b-011a-42ba-a19a-48cb4636f9c1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9976021f-5908-4045-8913-df5bbbd37ade"
        },
        "item": {
          "id": "37f2ff64-ef7c-4a2e-b84f-fb3a55ada3de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f7994f95-cf11-46ed-bd8f-b860bf76372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ed59b5-4d24-44d9-b6d7-92ec216cc87d",
        "cursor": {
          "ref": "65d25e06-d481-48c0-98ef-c8c478000442",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "45828005-02be-4947-8665-48661ad89ddf"
        },
        "item": {
          "id": "41ed59b5-4d24-44d9-b6d7-92ec216cc87d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "114b5f3c-48ce-4055-982c-1b09f9aa4f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1998461-aef6-45d8-80c5-0fc83bdfcb34",
        "cursor": {
          "ref": "62f1e096-0a2d-4aaa-a2f9-0da725bd3c20",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "554d2e55-18e3-40f5-8f53-9ecbcc286707"
        },
        "item": {
          "id": "f1998461-aef6-45d8-80c5-0fc83bdfcb34",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d7b09a70-52f1-45e2-a1b6-1ebc854a0929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04834cf-0b09-432c-8295-3d5cb97b52fe",
        "cursor": {
          "ref": "6cb61c2d-5f55-4ddc-9bf6-2881f2d7e5eb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "af4fe6d4-b158-401d-8259-ef697cdfcfe1"
        },
        "item": {
          "id": "c04834cf-0b09-432c-8295-3d5cb97b52fe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eabc6b05-0b99-4028-85ec-fcae67e2c1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180e47df-5962-4bcb-b95c-6c6346bfd176",
        "cursor": {
          "ref": "f4c7aedd-ca05-4e36-a0d3-a72b555a90cc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "04e756cb-8bc8-48bb-8fd5-f81dac8e6ee5"
        },
        "item": {
          "id": "180e47df-5962-4bcb-b95c-6c6346bfd176",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "012db343-fe06-49e4-bf74-f8b60aaaa7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825cf518-64ff-454d-8d5e-fcd6d930597c",
        "cursor": {
          "ref": "5cb2f31e-cd85-40bc-bd63-d5c842a4006a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b7435859-3e71-4284-a303-7834c47a7676"
        },
        "item": {
          "id": "825cf518-64ff-454d-8d5e-fcd6d930597c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3df813ce-a2e4-4582-af5f-5d409e9abc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a8354-0f37-4594-b8b7-8f06e5428acb",
        "cursor": {
          "ref": "b31cddc7-d4e8-4231-9225-815cbc3ec236",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9b41fab6-6495-451f-876b-72ba13b609dc"
        },
        "item": {
          "id": "d42a8354-0f37-4594-b8b7-8f06e5428acb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "46829042-3a1e-4f34-afd8-6c05cb2bc1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df051a02-db53-4d55-8edc-08fe49b6c0c4",
        "cursor": {
          "ref": "7e585246-1fd7-49a4-a767-914f21130905",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84490198-f6e2-4c8f-9f89-0bfa68f99c3f"
        },
        "item": {
          "id": "df051a02-db53-4d55-8edc-08fe49b6c0c4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "28dde1a5-c4b5-4183-8a5a-21de711ffca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51500b56-d73c-42d2-88f5-88ff7bb4ff93",
        "cursor": {
          "ref": "c257262d-fdea-4f12-89b1-9f328a1985ce",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0639ab1-ea77-46ed-9c1e-1cea8af2af24"
        },
        "item": {
          "id": "51500b56-d73c-42d2-88f5-88ff7bb4ff93",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "df86e12a-8bc5-466f-b067-30c3e0056a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70f776a-c79f-4d0d-8a71-93d2fc7b2eed",
        "cursor": {
          "ref": "6f41b344-4117-4330-85ca-9176eea28a9c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9fa10835-31a6-43be-bb7a-8ee1ed706acf"
        },
        "item": {
          "id": "d70f776a-c79f-4d0d-8a71-93d2fc7b2eed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1354ff23-65ba-4682-a78a-d9c5b35aa751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6adfc28-ae0d-485e-a9f2-cd62ee8f3089",
        "cursor": {
          "ref": "6bb34013-80c7-4961-bdaf-ee00a9490d52",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9801720f-e33a-4196-a7c2-099540144abe"
        },
        "item": {
          "id": "e6adfc28-ae0d-485e-a9f2-cd62ee8f3089",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "23888da5-46d9-4492-87f1-d9e02e3d747e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3113fb2d-b2b8-42fb-890e-35781abeafe4",
        "cursor": {
          "ref": "936cb798-5ea5-4692-ab28-5c348bd22c27",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8d84229f-8f0f-4558-9f2f-d5a69ddff6b3"
        },
        "item": {
          "id": "3113fb2d-b2b8-42fb-890e-35781abeafe4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d51b4dff-a3dd-43d2-a3fd-5a9bf0cecc17",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7d747a-94d5-4459-a37f-584519043b76",
        "cursor": {
          "ref": "b70f1d95-1897-4d69-bc95-f028f6f2639d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49bebb5b-c8f3-453c-a6c0-59b0cc32a0e3"
        },
        "item": {
          "id": "aa7d747a-94d5-4459-a37f-584519043b76",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1480b3b1-69f0-45ad-8253-174e123aa5ad",
          "status": "Created",
          "code": 201,
          "responseTime": 263,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f3ce11-c523-4214-90a6-d6fcf6dedb79",
        "cursor": {
          "ref": "fd9d2eb2-4c85-4aad-8922-e8c1173e34d9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7d0065e9-b70b-481d-a7e7-e6230924e8b1"
        },
        "item": {
          "id": "d4f3ce11-c523-4214-90a6-d6fcf6dedb79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a20f097-c7a6-4c11-902f-f7a56581520e",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "734db0c5-abdf-4a98-ba42-f986029e97da",
        "cursor": {
          "ref": "0ee3aa40-020f-4ae1-a5f7-0edaed968ce3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42ce9772-938b-4962-92e3-2b277752f0b7"
        },
        "item": {
          "id": "734db0c5-abdf-4a98-ba42-f986029e97da",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "57dd26c3-234a-4d9a-9c86-03c4978c6e9a",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7276bc9-c758-476e-b9e0-43c1206b1c55",
        "cursor": {
          "ref": "e9d98841-53ed-4420-be12-cf1656fdbb3c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7f480e78-f205-4ed4-8b03-eb1030a2b9f8"
        },
        "item": {
          "id": "b7276bc9-c758-476e-b9e0-43c1206b1c55",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20268885-43b7-45e4-b57f-39886a94f72d",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe744a7-4736-4582-8694-12696e27c683",
        "cursor": {
          "ref": "c0db0f5e-3809-4c4f-afbd-d29167f65072",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "22e1e37b-6182-4b12-99f1-bb7ec43d77b1"
        },
        "item": {
          "id": "efe744a7-4736-4582-8694-12696e27c683",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4189e539-a3bf-42ab-b4c5-ad1ec0991696",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98fd1c1-e3e8-442b-a641-9e282e13d84d",
        "cursor": {
          "ref": "fbeb1393-5d7d-4bce-ab1f-e112c7b22e10",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e1ba40d0-4074-44c5-b08a-80352692641c"
        },
        "item": {
          "id": "f98fd1c1-e3e8-442b-a641-9e282e13d84d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8548c67a-62c9-4462-8ead-096345db8bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2620c551-f796-4fe8-aaba-eca650ad0093",
        "cursor": {
          "ref": "8fdcab23-ef8d-4726-bae8-c9bd4c86fbf7",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7b64d9bd-894d-4d82-b854-85c5069004d3"
        },
        "item": {
          "id": "2620c551-f796-4fe8-aaba-eca650ad0093",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2422fae0-a3a2-46c2-b766-51a34cae25e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a076a8-dc7f-495b-a0dc-54291f9984e0",
        "cursor": {
          "ref": "b605f2a8-f563-47a2-9f13-47088c22755d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a8cc142a-5af1-4313-8a5f-f31f1b547bf1"
        },
        "item": {
          "id": "58a076a8-dc7f-495b-a0dc-54291f9984e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "70e98dae-43c7-402c-8f12-8b3659b32559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00e374f-33f1-4701-a96e-2ef102aee55b",
        "cursor": {
          "ref": "55d243c2-1514-4339-91dd-c2c331351700",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9238c34-e89a-4a28-8c36-997b2dab3270"
        },
        "item": {
          "id": "a00e374f-33f1-4701-a96e-2ef102aee55b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b788e0c-cc9d-45fc-b23e-aec7fcd3a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f7dbeb-04c5-4578-b657-de03b8f68f82",
        "cursor": {
          "ref": "9202a2e9-897b-4d33-93b4-55b83c0b213d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ffa8a59e-1c1f-4e58-ac33-54b0ac67ce43"
        },
        "item": {
          "id": "07f7dbeb-04c5-4578-b657-de03b8f68f82",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5952e62c-001a-45a2-ae46-351c356e6136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daff9243-ecc3-45a8-9916-0caaf7ec6db9",
        "cursor": {
          "ref": "e9b81834-5872-4886-9517-0059b5ebadf8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6733a8ed-f91d-48b9-8538-9dd72f1b8e18"
        },
        "item": {
          "id": "daff9243-ecc3-45a8-9916-0caaf7ec6db9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d869ca9f-e359-408a-b201-4440327e6726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31dcb22-1af9-46a5-aa96-e7b196599ca5",
        "cursor": {
          "ref": "2048140f-8ec5-43c8-a792-e2389af8710a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "485162a1-0b4d-4255-8d5b-97551dfd770d"
        },
        "item": {
          "id": "b31dcb22-1af9-46a5-aa96-e7b196599ca5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b924327f-ee40-47ee-9612-401989f9568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb30364-444c-4ada-9265-0aae16d14d7e",
        "cursor": {
          "ref": "351d08d6-4af7-47c3-afcc-a1362cda0f77",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b30b5c1f-0beb-49b5-9eb6-890643fac256"
        },
        "item": {
          "id": "ffb30364-444c-4ada-9265-0aae16d14d7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5a187da4-5b46-4194-9688-bb47bc81c5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5d225b-9a99-4d1f-816f-18b95867c056",
        "cursor": {
          "ref": "7a43060b-862c-4294-8b29-a1be90d0fc58",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "193630b4-4080-4dae-8a89-30e5c91f2596"
        },
        "item": {
          "id": "3d5d225b-9a99-4d1f-816f-18b95867c056",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2e9d30c6-b8b9-4400-a26d-da25364d6270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd99ed6-9078-431e-9b46-93beae66d43c",
        "cursor": {
          "ref": "72d7ade6-0f9e-4a03-90b1-58129ff08e17",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b10b25d7-0c05-4d8c-aa94-fbd657e7923d"
        },
        "item": {
          "id": "dcd99ed6-9078-431e-9b46-93beae66d43c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6f374a71-0302-4558-9ecb-0b3d2690de04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08263be9-5c52-4c03-8696-2262a53da251",
        "cursor": {
          "ref": "0408c6f1-f13e-4dce-9971-08d4f5c42c9e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "522382b3-4749-4251-adba-f16e01d44fa6"
        },
        "item": {
          "id": "08263be9-5c52-4c03-8696-2262a53da251",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "67ede49f-2927-4a9b-a246-1bd0c2ed7ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88f6d7-3a2c-461d-aa2d-7c207ebaa84e",
        "cursor": {
          "ref": "8b6d04a5-9370-4830-9865-3ce3fe7bd44d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d5f1cdb1-84d1-4ca4-bd5b-dd19c221989d"
        },
        "item": {
          "id": "dd88f6d7-3a2c-461d-aa2d-7c207ebaa84e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c50afcf0-9624-462b-8b2f-e28422f4e871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4cfe6b-9c88-4a8f-b180-37c41dfd7716",
        "cursor": {
          "ref": "46af0d00-7d18-4af8-bf32-c1d31e75dc60",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "67ca5587-5ec5-47fa-97a1-d7b2f8c94f6a"
        },
        "item": {
          "id": "1b4cfe6b-9c88-4a8f-b180-37c41dfd7716",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c6da41a-66d5-4b22-a4d4-6cca150757f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae5c43-fb27-4ce9-86bb-79d2fc1fb955",
        "cursor": {
          "ref": "db55022b-5333-4523-bf36-04df019e9268",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0721781-04fe-4032-b730-14e1511f7158"
        },
        "item": {
          "id": "82ae5c43-fb27-4ce9-86bb-79d2fc1fb955",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ef4907c-736e-4a5a-b65c-fbc60f27afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48da3f18-d84e-4e39-93df-46c80dbd5685",
        "cursor": {
          "ref": "df782282-cf00-4f9f-83ef-2e11bfffb640",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f0553df-06aa-4fc7-b23b-d00904eb7ab5"
        },
        "item": {
          "id": "48da3f18-d84e-4e39-93df-46c80dbd5685",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f5c2c909-3f4e-40c7-bd35-c421e131fc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585328ed-400f-4f1d-b409-ba20ca52a6dc",
        "cursor": {
          "ref": "c56ddab9-4f07-4748-9c95-db58becfdda1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3459a090-671e-4805-b78c-9474a9547534"
        },
        "item": {
          "id": "585328ed-400f-4f1d-b409-ba20ca52a6dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e1912e6-d272-4bca-970d-55c2c725a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb656a6f-38cc-450c-9239-5cee15fdfc45",
        "cursor": {
          "ref": "43a92c38-c0eb-446e-8313-ba30714d2478",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a86220eb-c4c3-402c-9c30-c278d9b955f6"
        },
        "item": {
          "id": "cb656a6f-38cc-450c-9239-5cee15fdfc45",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5d4b59c-b25a-4aa9-b35b-4c3badf2e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e914b28-bd50-43f0-9883-830168db40fe",
        "cursor": {
          "ref": "4f14602a-45f6-4e8c-9b12-5584a8e7bd5c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2243fd2-fc45-4fdc-93a5-224c76c223c4"
        },
        "item": {
          "id": "3e914b28-bd50-43f0-9883-830168db40fe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62bc1d39-d6f5-44f4-90ae-60d4f51d34b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed6e34d-c415-4ebf-90ff-48346a3716ed",
        "cursor": {
          "ref": "ad5062e0-1cd3-4953-ba5e-3bf4d3e5c7f6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "37897488-32a7-4bbe-a5ed-957b3da57ff3"
        },
        "item": {
          "id": "1ed6e34d-c415-4ebf-90ff-48346a3716ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9fa6cf04-af61-4863-a9f0-2a2647baea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48d2547-6a00-4d30-ad88-6c872cc93374",
        "cursor": {
          "ref": "c235cd5b-9266-4fe4-91c5-0e0af4f36bc3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "08f78a65-1090-4056-be18-f3cb4e4782a0"
        },
        "item": {
          "id": "e48d2547-6a00-4d30-ad88-6c872cc93374",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "532c5396-bc36-4548-a2ef-992be8fe5e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01edd32d-98f2-42d9-818f-ea62767e2ab6",
        "cursor": {
          "ref": "bb1c9409-5ecc-45e9-ae2b-648ca7b923a1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c03c0ae6-c90c-4e3c-a76b-ff6f0878b4ae"
        },
        "item": {
          "id": "01edd32d-98f2-42d9-818f-ea62767e2ab6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f9f1a23-9859-4e7a-99fb-4266546fac0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde09ec-66c1-4088-bfd3-0569ad3c5f52",
        "cursor": {
          "ref": "baee3ab7-e63d-4120-9158-e962fc505577",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8714a882-c7f7-4e51-b739-a94d571c8f65"
        },
        "item": {
          "id": "5bde09ec-66c1-4088-bfd3-0569ad3c5f52",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c335d594-4f1d-42d9-bfd4-42eb02248f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35168818-928a-4062-b78b-6a6879477596",
        "cursor": {
          "ref": "a5d0bbfa-e3f6-4c9b-bffb-77d1ced72d40",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "552a7aca-992d-4e05-a616-c46fc46c72fa"
        },
        "item": {
          "id": "35168818-928a-4062-b78b-6a6879477596",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3eb40ca1-086b-4b23-9261-51e27d7dd39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205b53e7-0476-4756-b1a8-963dc9be50e2",
        "cursor": {
          "ref": "e8bb3892-0f8b-43fe-bb17-d3ad6d655840",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5076050a-b363-4e43-ba16-9e7fc1f17ed0"
        },
        "item": {
          "id": "205b53e7-0476-4756-b1a8-963dc9be50e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b24df5cb-3914-49fc-8977-31b70dfac418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac541b-ec88-4832-ace1-ffb49a667034",
        "cursor": {
          "ref": "bb66ff16-7c91-433a-bb74-d07a4e8e058a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5ebe643-81ef-4e2e-a423-87672fdc4219"
        },
        "item": {
          "id": "aaac541b-ec88-4832-ace1-ffb49a667034",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bfde57bb-a43c-4829-a428-c45c74414d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b258d-432e-494e-a2d8-a3b9c91af2ca",
        "cursor": {
          "ref": "0f39b478-990c-475a-9ed3-c0a8de8b053e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "58c85892-68dc-4159-bf6f-1ac304b5b2d6"
        },
        "item": {
          "id": "3c1b258d-432e-494e-a2d8-a3b9c91af2ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16c5b14d-2984-4fc5-90fd-504b3a25586c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debcc803-8201-49b2-be01-3966143c43c7",
        "cursor": {
          "ref": "8a8d0f77-f57a-4f75-a44c-860dc232c6e5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77815983-7d8d-437f-a37d-d06ba99921bd"
        },
        "item": {
          "id": "debcc803-8201-49b2-be01-3966143c43c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f2ad1689-e4d1-409a-ae4c-048338d0df79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f944d5-20ba-4442-9dfe-6eabdb9f55e2",
        "cursor": {
          "ref": "bedd27b0-bf6a-4bd0-a01e-49521d19afa6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e55cdfe-f68b-4325-bc60-83eb7c07d296"
        },
        "item": {
          "id": "02f944d5-20ba-4442-9dfe-6eabdb9f55e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4a123b0a-ebd0-4412-a6d0-451e37eafaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d55e6f-a128-4bed-8c49-e8f080605c4a",
        "cursor": {
          "ref": "3502267c-a989-460b-9e94-9285b7fcec66",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fd1a0505-3987-4828-975e-224dab8b8284"
        },
        "item": {
          "id": "65d55e6f-a128-4bed-8c49-e8f080605c4a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10571e6e-0865-4e6c-a4aa-4f217a611e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7c74c3-dbc4-40a0-97f6-0a648b61a00d",
        "cursor": {
          "ref": "b36cdcc3-153c-40c1-af3c-146d91b37e56",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "32efe03a-aefb-484a-8560-13b6e84da6d1"
        },
        "item": {
          "id": "0f7c74c3-dbc4-40a0-97f6-0a648b61a00d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23c666df-b691-44fe-9dea-8d53b07547aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60642905-f288-4051-8531-5f5b9f67010b",
        "cursor": {
          "ref": "912db03e-8f93-42d3-a538-97b3250e2c9c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f82bbce-2f10-4cd3-a095-f1dfc0160abd"
        },
        "item": {
          "id": "60642905-f288-4051-8531-5f5b9f67010b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "55ea1c49-f21d-4e68-9f1c-e773442b71e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7593ff98-a402-4710-a726-bd34dc097064",
        "cursor": {
          "ref": "f2744fe3-863b-4366-8681-40babe1bce9d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "19558ec4-0b15-4807-830c-6acdb534fb47"
        },
        "item": {
          "id": "7593ff98-a402-4710-a726-bd34dc097064",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a62ea7bb-5619-46d7-8ff8-2a0f195fb613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1969cba7-ae85-4d5a-8a42-497b517d7775",
        "cursor": {
          "ref": "6873cfbd-0409-472e-a7af-00521fd55112",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "60845503-5bdd-4499-bf80-74486202d4b9"
        },
        "item": {
          "id": "1969cba7-ae85-4d5a-8a42-497b517d7775",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "31f12a6c-eef0-4738-8796-3afc14824a9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f257f812-7200-4c7a-9478-aeb9c6ab4c6d",
        "cursor": {
          "ref": "e112ee26-9ed4-492f-ad53-3b977b6b340c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5e9a89f0-4e73-4f03-b81b-16562dfaf272"
        },
        "item": {
          "id": "f257f812-7200-4c7a-9478-aeb9c6ab4c6d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60e95ba2-376e-4eef-8023-5f4b210d0d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a921e84e-b624-4a61-8366-8150cda2feaa",
        "cursor": {
          "ref": "bc2cf164-04ba-493d-84fa-ec04f4183dda",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92003d19-6e34-4125-9e06-5b2aa3e3dfad"
        },
        "item": {
          "id": "a921e84e-b624-4a61-8366-8150cda2feaa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7803acf-1037-4c7c-85dd-9697973e5b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49140ed8-3f62-4810-a1f8-458d739058eb",
        "cursor": {
          "ref": "a9221d4e-e93a-4ea5-b203-673c74cf005d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "88a40f9a-2c1c-46e5-bca4-ef194407ea07"
        },
        "item": {
          "id": "49140ed8-3f62-4810-a1f8-458d739058eb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "48c181fd-74de-481a-a3e8-120d59b797d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41496953-ce3b-4478-a867-688a0dc1a29d",
        "cursor": {
          "ref": "b93f7728-826c-4c79-a2fd-b2233ff903ec",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5bcb2dc1-3204-4a21-bb4a-c8bc3d19b7f9"
        },
        "item": {
          "id": "41496953-ce3b-4478-a867-688a0dc1a29d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f054d3cf-cb62-4d8a-b6ae-6b020673b220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadb1e8e-a46c-4a68-8a7a-1a3f244f41d6",
        "cursor": {
          "ref": "9f539342-357f-48f4-ae97-d4b82fe96520",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "82ff20a7-33ee-4403-85ee-35736190ffa4"
        },
        "item": {
          "id": "fadb1e8e-a46c-4a68-8a7a-1a3f244f41d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3d0a750e-5764-4d45-99bb-ce30ebf82de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce71701-18b1-4adb-81f5-18b1ce12a830",
        "cursor": {
          "ref": "76b00962-3af5-4947-807e-202921274f3f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e4f46f94-6616-4ccb-8bf5-14f8d1bde3ae"
        },
        "item": {
          "id": "cce71701-18b1-4adb-81f5-18b1ce12a830",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d31c7a2-ddbf-4b84-9693-2549e9b88849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0eb2bd-f223-4913-9bf7-bbc29883a849",
        "cursor": {
          "ref": "fccf2689-6c15-48a0-96e7-b26c4d7de8df",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "64b647f8-4387-4f33-8e20-f71c126bb0e2"
        },
        "item": {
          "id": "bc0eb2bd-f223-4913-9bf7-bbc29883a849",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f36d0b57-1101-4954-880e-432837bf8cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e1657-6a68-4fbe-b68e-5b4820037c87",
        "cursor": {
          "ref": "ed4d6666-f16d-4f55-a1a2-3ba032ed9d0e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e4c3a273-49b7-4fa8-bd59-b16afbe6d212"
        },
        "item": {
          "id": "467e1657-6a68-4fbe-b68e-5b4820037c87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cf71c025-b854-485a-8ff1-1ec11ae8e172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425aa06a-ef57-43a4-a8c7-7a92b8ba8429",
        "cursor": {
          "ref": "adcebd0c-c3b3-4f65-8bf6-b53691af45d4",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ecbce20-1786-4ede-9e1f-9267e615233d"
        },
        "item": {
          "id": "425aa06a-ef57-43a4-a8c7-7a92b8ba8429",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "14c33d2c-8e56-4c61-8ff8-214a1eb47252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afe18cf-b0fd-4fa5-91d5-cbc6cdd004ca",
        "cursor": {
          "ref": "5707a8c1-5700-4ff1-a304-2f9ce6cf0828",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9e6c278-76ef-4efc-bfa1-a4b43106a13b"
        },
        "item": {
          "id": "0afe18cf-b0fd-4fa5-91d5-cbc6cdd004ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bdd875ad-297c-4904-a7fb-493349490a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8858fc8a-abd0-4178-ae4d-0f7a3c1e6500",
        "cursor": {
          "ref": "5d3b93b1-6366-4bdc-a1ca-793619abead3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8be5b7b9-fe30-4247-b7d8-112bad6348ab"
        },
        "item": {
          "id": "8858fc8a-abd0-4178-ae4d-0f7a3c1e6500",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c5c562d9-4860-46a5-bca5-7a4621b2d881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333e2de8-5c19-4041-ba45-899e1dca62cc",
        "cursor": {
          "ref": "dd96cd83-27e9-49a6-8183-ff965bfc77b6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0f570f94-764a-43f4-92d9-8a0c7dfdf331"
        },
        "item": {
          "id": "333e2de8-5c19-4041-ba45-899e1dca62cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "366d8af4-28e0-4663-b64a-f18774a28077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f533a22-d0a0-4a02-b2ef-fe791ce87802",
        "cursor": {
          "ref": "52e30333-9994-4f50-8295-874a731f4dce",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f18ace33-a705-4e52-be45-fa91138f0916"
        },
        "item": {
          "id": "2f533a22-d0a0-4a02-b2ef-fe791ce87802",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "563a0204-426a-462a-ae1d-bfb1bdbdc28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c497451-7eb7-4b4c-b4e3-b39d93cf50c4",
        "cursor": {
          "ref": "e85b5846-7bec-4a44-91c2-a669bbcdea6c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2cc1c499-c215-4ad3-a413-212d6736bec1"
        },
        "item": {
          "id": "0c497451-7eb7-4b4c-b4e3-b39d93cf50c4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec0ab7f7-740d-4585-83b9-45aa6fa45e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8536cc0-11d6-4f71-9811-0b5660ae8be9",
        "cursor": {
          "ref": "dde725e4-1310-4170-baf5-a542553ee48a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "89d98b51-399a-46ed-b6c8-b3f6a9383ea7"
        },
        "item": {
          "id": "d8536cc0-11d6-4f71-9811-0b5660ae8be9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4ed609c-22ac-43c2-b94f-831ad8b8641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c0f163-b486-4c79-97a7-54c6786d321a",
        "cursor": {
          "ref": "79c50657-5d0b-4478-be26-4e8d9aa286ae",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "752048ef-864d-409b-8e35-eb6fbec4fcbd"
        },
        "item": {
          "id": "90c0f163-b486-4c79-97a7-54c6786d321a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "96866dfe-0c4e-4d36-bcce-f1801d7384ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf9db27-17d5-4d2f-9469-206196322efe",
        "cursor": {
          "ref": "de0ae529-fe62-4ff6-a6fe-e48ab0f5d28a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "85f4ec2e-d1a2-434b-acc6-9714a2daf5d1"
        },
        "item": {
          "id": "faf9db27-17d5-4d2f-9469-206196322efe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9492098-c56d-4532-b267-a963c37852bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473a4b1e-cfaf-463a-88cf-ac6480950b7b",
        "cursor": {
          "ref": "c40a0257-9703-4c8b-901e-ab33c0f3784f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dd17c67c-b34c-4050-af06-c12fbf757bc4"
        },
        "item": {
          "id": "473a4b1e-cfaf-463a-88cf-ac6480950b7b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4a9904d3-eae4-44e8-8ebd-b7e36ce13481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8748ed-064e-437f-845e-b5aa935d9a7c",
        "cursor": {
          "ref": "e0fadddd-8755-4757-a74b-a857811fe392",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "112f9c4f-3153-470d-a7c6-cfdff2080153"
        },
        "item": {
          "id": "0c8748ed-064e-437f-845e-b5aa935d9a7c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "48805380-4489-43e4-ad93-986e0ed8e77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b8fff3-3d2b-4911-abb7-ac8dcb18140d",
        "cursor": {
          "ref": "267a9ae8-0a83-4469-85da-7612bb406bb6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "76705985-a717-41c7-a0de-7d861529ce0d"
        },
        "item": {
          "id": "32b8fff3-3d2b-4911-abb7-ac8dcb18140d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "119425ea-a4b8-4dc7-a4c5-2fb985e57119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46686c6-91a7-45a9-8826-e7e6150c8446",
        "cursor": {
          "ref": "714eaff1-ee55-4edd-ad0c-5e37eb1ea596",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aab45479-f46d-491f-9093-f92cf29ae727"
        },
        "item": {
          "id": "e46686c6-91a7-45a9-8826-e7e6150c8446",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "124c0b98-cc1b-4f36-afac-0d17e3f8f805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f516786-4be1-4a9f-be2c-b0d563c02c54",
        "cursor": {
          "ref": "da64bcf4-6ae3-4564-8c24-1dd5ea7cfeae",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e7da1c65-60a9-4d9a-adbe-d3ddf1b0d7cb"
        },
        "item": {
          "id": "3f516786-4be1-4a9f-be2c-b0d563c02c54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e150163-14cf-4061-aada-7122c4bffc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7180e9c-d887-4486-ac6c-d2aef4371d0a",
        "cursor": {
          "ref": "583fea5d-9cd9-4f3e-986a-865d220ff81f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "48181c12-94fb-4c24-bd4a-4d6bc0fd3c3b"
        },
        "item": {
          "id": "c7180e9c-d887-4486-ac6c-d2aef4371d0a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78777a44-47b9-417a-8ccd-de2050441e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e31d3-b65f-442d-b1c8-c70519ce211a",
        "cursor": {
          "ref": "4ad38e26-7487-4118-b51b-d44ed177a79d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c5e6953c-02ab-466a-b758-ae29e7474a28"
        },
        "item": {
          "id": "db1e31d3-b65f-442d-b1c8-c70519ce211a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4295063-2d05-4c7a-a3e4-2bb3ce0e30cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c9d499-769e-4335-8d50-a03c08be31ea",
        "cursor": {
          "ref": "cc8aa714-51c2-4ede-b100-7440307044ea",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d13bcb0e-6f91-4e33-9393-beec33e4520f"
        },
        "item": {
          "id": "b6c9d499-769e-4335-8d50-a03c08be31ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e7fa95fe-02b4-42e2-ad0c-88e53b86a486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730558e8-6290-4c54-9380-a2b31e372543",
        "cursor": {
          "ref": "e0aefbaa-a8e4-40be-9813-8ff676238d46",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1fa589bb-81bb-48a2-b4ba-f6eb845d19fc"
        },
        "item": {
          "id": "730558e8-6290-4c54-9380-a2b31e372543",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88a46588-af4b-47ab-a43c-9bc371292cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3323c98b-8ce2-43ca-88bd-86da7458eacf",
        "cursor": {
          "ref": "a451a393-2eba-4a67-a277-de471ad621c9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a2da9d02-2028-4bcb-9224-9f029aadb5cd"
        },
        "item": {
          "id": "3323c98b-8ce2-43ca-88bd-86da7458eacf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5cc1a707-f014-4a23-bab5-24d14f7bbee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab1927d-c229-411b-91e3-88a07f6aaaeb",
        "cursor": {
          "ref": "741eea80-73ad-42eb-ac48-1aa8033dac5e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ba07402b-f716-47bd-aa4f-9c9d7e3827fa"
        },
        "item": {
          "id": "aab1927d-c229-411b-91e3-88a07f6aaaeb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f52cfb5f-0bcc-4197-8924-efecb81b03e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017589bb-70a0-40dc-8779-ffdf1b9bb0c6",
        "cursor": {
          "ref": "81af034f-e49d-4618-bfa7-2a94c429f472",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "505e2865-0ffe-4f19-b90e-3ce94ef383ba"
        },
        "item": {
          "id": "017589bb-70a0-40dc-8779-ffdf1b9bb0c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4a05b81e-7942-42bf-891c-e4956659445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf5093-ec07-4335-9f93-94f05bb4a74d",
        "cursor": {
          "ref": "04fc42a3-23e1-4fc9-9f43-f161a7b21723",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f1d947e-cdbe-4ec2-86db-0ab15dab1fbb"
        },
        "item": {
          "id": "16cf5093-ec07-4335-9f93-94f05bb4a74d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6a970ade-9d08-444e-a4ba-d2335eb244d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290d029a-b0c9-47c9-8a13-133c24657a87",
        "cursor": {
          "ref": "5698bba0-6822-4eb9-b316-d297e45dd86b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c281877-763f-4e89-a89a-26e0c3a2eb51"
        },
        "item": {
          "id": "290d029a-b0c9-47c9-8a13-133c24657a87",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "44391047-c507-4024-b23e-231a3161ee5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec8a7a-974f-4533-b39c-544851019000",
        "cursor": {
          "ref": "4f54042f-2201-4bf6-9483-93c7ef71a70c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8bb66c87-b892-48a3-b640-28b1870c5a68"
        },
        "item": {
          "id": "8eec8a7a-974f-4533-b39c-544851019000",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b48cfbaf-e51b-4f20-979b-95e94be1d0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6f03f4-62c2-469a-8a1f-80ff0d78ed1c",
        "cursor": {
          "ref": "50c1025b-1bc2-4ad5-add8-0954e6f9d74e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "448d375f-075f-4793-bc89-6fc6795a7491"
        },
        "item": {
          "id": "0f6f03f4-62c2-469a-8a1f-80ff0d78ed1c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "84f02eb4-8f23-4ce1-904e-3f72dc16f1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5781b06-e2f5-4146-9859-2e97f1e4b4a1",
        "cursor": {
          "ref": "8415a6d2-aea6-4511-8e65-c7ce36a72489",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "03ddc37a-8e49-4624-addb-5587d6c299d9"
        },
        "item": {
          "id": "e5781b06-e2f5-4146-9859-2e97f1e4b4a1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cdb28bc9-fa5c-44f2-8fdb-120033ebfabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fbe88f-32c9-4a22-b9cf-13f8561c5baa",
        "cursor": {
          "ref": "b0b8c84f-b8cd-4f20-9249-53218f0e3da2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69f4e921-7cbb-47c1-a1a3-db9c6791956b"
        },
        "item": {
          "id": "a0fbe88f-32c9-4a22-b9cf-13f8561c5baa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "67225560-929d-4bf5-b482-686f13a055db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a299e8fc-8b56-4e73-b314-de35c4ba0216",
        "cursor": {
          "ref": "0c58e66d-ce94-4453-b74e-2e17b0a817db",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "61146fe7-b5c5-4e11-ac8e-6fb0c224790d"
        },
        "item": {
          "id": "a299e8fc-8b56-4e73-b314-de35c4ba0216",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5ba96fe0-9d5d-4579-af9d-0d9e4fcc475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca07ebe3-3866-42a4-941d-8343647861db",
        "cursor": {
          "ref": "89f2faf8-394d-4f01-9cc4-29d133771be7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a7ba0afc-9b0a-4f8a-9c1f-9be8059f5776"
        },
        "item": {
          "id": "ca07ebe3-3866-42a4-941d-8343647861db",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6f7ae622-9ebd-444b-98ab-8b74d06fdf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cebba2e-c730-4100-88b1-e024f9c55a45",
        "cursor": {
          "ref": "376cdd56-4496-4e60-9607-40220d448e64",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "421b9902-31e2-4fa1-b247-bd41c2480484"
        },
        "item": {
          "id": "1cebba2e-c730-4100-88b1-e024f9c55a45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7321ba32-5652-4aa0-bd15-35ae2712afa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1a7719-4914-4a95-a4b5-fb579e552052",
        "cursor": {
          "ref": "9e8761e3-9120-443e-82f3-eb6975503594",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a6142684-8d14-471a-9950-0b80c10bacf7"
        },
        "item": {
          "id": "da1a7719-4914-4a95-a4b5-fb579e552052",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "595474f6-864e-465c-a3aa-a53d2cdb94c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e76ca-1f84-4c04-b371-a8d5b1e8925a",
        "cursor": {
          "ref": "d689f372-093e-4c5b-aaf2-7e491b83d44f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "70fcf09c-9ef0-4d77-8397-daa4b31bcd7a"
        },
        "item": {
          "id": "597e76ca-1f84-4c04-b371-a8d5b1e8925a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d1fdc648-93de-46bf-8de0-9c99e7d0892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b3cd85-c457-42a6-a9f7-35392a940ae4",
        "cursor": {
          "ref": "5f7c1da5-4aa3-4c9c-8857-7b941e4a6a65",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "530398e5-bbf1-41c3-b8c9-78f516028038"
        },
        "item": {
          "id": "59b3cd85-c457-42a6-a9f7-35392a940ae4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ce3a947-b79a-4cb1-b302-451423bead35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd6bc55-5710-413c-8bd0-98b3abae3f08",
        "cursor": {
          "ref": "21e75e8f-7e20-4682-9dcc-d983c21594ec",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c082c42f-97c4-4642-aa50-6794c9a76824"
        },
        "item": {
          "id": "fdd6bc55-5710-413c-8bd0-98b3abae3f08",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81820a0b-fdf1-4249-b73c-8cb6289701d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702abec3-eeb2-4deb-9ffb-36378bf12e2e",
        "cursor": {
          "ref": "2979cfbe-8bf4-4f64-ab4f-e4d153970192",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "61eb94c0-d468-42cc-a2d2-057e57daa77c"
        },
        "item": {
          "id": "702abec3-eeb2-4deb-9ffb-36378bf12e2e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ba5c50dc-e328-45ed-9f51-3af276bcf3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db784407-fc39-42e5-abef-66ae95acdc82",
        "cursor": {
          "ref": "32cc834e-d5b4-42d2-ad0d-cc594231b76c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5b079284-c5f9-4c68-960c-38af085859f1"
        },
        "item": {
          "id": "db784407-fc39-42e5-abef-66ae95acdc82",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43501c71-072a-42c1-998d-a3f6afeb2b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8765734-9fce-4839-85a1-ce078eb0b07f",
        "cursor": {
          "ref": "dd9f33a4-5419-4286-9b06-3cc7966552f9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5441956c-f5e2-40aa-a729-7ed35ffd5efa"
        },
        "item": {
          "id": "b8765734-9fce-4839-85a1-ce078eb0b07f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e5a8dc20-153b-445b-8978-c0ed7e579e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c0a83-d93e-4c8c-98f4-4121442287f0",
        "cursor": {
          "ref": "7da20576-7801-4ca5-b4af-dd622ce3bf50",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa0f3604-4270-43a7-9fb9-14983ea5ef30"
        },
        "item": {
          "id": "d02c0a83-d93e-4c8c-98f4-4121442287f0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a1a6ade4-64ce-4f89-aab3-ca93ff273a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2129803e-81e8-4a12-92ed-122e5f8d65d5",
        "cursor": {
          "ref": "09a65cf3-01fc-44cf-83ad-05ce0f95256e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c15978c2-e86f-445b-b6a2-c76440c5b560"
        },
        "item": {
          "id": "2129803e-81e8-4a12-92ed-122e5f8d65d5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "88081f32-fa5b-44b6-a380-b67e3fd5201a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747621e0-0540-48b6-a898-572783e52c68",
        "cursor": {
          "ref": "72c93d03-aff9-44c8-bbd2-db63c9ce3ec5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "78e6b3f1-6c26-46bb-8277-226f7583b16c"
        },
        "item": {
          "id": "747621e0-0540-48b6-a898-572783e52c68",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "49d9d46d-b157-4f99-a8af-68ffb043427d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1b13c4-fd5a-4927-81a8-2aa3c81cf212",
        "cursor": {
          "ref": "e4e1aeab-20a0-4925-a5ad-85265d9135ad",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f05e09d8-5937-4cb9-a3f9-a0fb95c9d3e7"
        },
        "item": {
          "id": "5d1b13c4-fd5a-4927-81a8-2aa3c81cf212",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6761e605-df5f-43d7-99db-85c86803fbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e09e51-cc6d-4f30-a560-5992fdaf329b",
        "cursor": {
          "ref": "bf431ec5-0d63-457c-8c69-23e936dfc277",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6f0f7b13-0761-4c41-9d1b-58c510260da0"
        },
        "item": {
          "id": "13e09e51-cc6d-4f30-a560-5992fdaf329b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f9a2d81-2b16-478d-8c12-7230123d399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0113b541-2c98-4cb2-9ea5-1557e134a81d",
        "cursor": {
          "ref": "56cb0301-9088-4414-9f11-2af597b0795c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "de3854ab-b2c5-4af5-a7c6-b41af766c608"
        },
        "item": {
          "id": "0113b541-2c98-4cb2-9ea5-1557e134a81d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9ebf82b9-7793-45de-90b4-f0365f750f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88e124-324b-4ec6-8e79-723d38dafe26",
        "cursor": {
          "ref": "e36211e5-e342-4c39-a17f-3bc28b55590e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5a0e21fb-12a6-432b-bf8c-350acf7efea4"
        },
        "item": {
          "id": "6c88e124-324b-4ec6-8e79-723d38dafe26",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "59af6292-f901-482c-b37d-1764bec87461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442c549d-f5b6-4eac-823d-e06ecd49844f",
        "cursor": {
          "ref": "22f0acf3-97ea-4207-aab0-1f2b722c88de",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a2433460-4b35-4179-b5a4-357cedd7347c"
        },
        "item": {
          "id": "442c549d-f5b6-4eac-823d-e06ecd49844f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6abe197-019e-43bc-b9b0-2f723f99578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9553766f-406e-416e-9f49-8f9d938368fa",
        "cursor": {
          "ref": "6e26d41f-5492-4606-a879-1d25d1fa4d38",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "728092f5-2219-4d37-8497-ba0122cc7946"
        },
        "item": {
          "id": "9553766f-406e-416e-9f49-8f9d938368fa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f281d2f0-ef46-404a-adf2-ecfe4ceb481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9e4f07-91e3-43dd-bc5b-a5913115eb5e",
        "cursor": {
          "ref": "1b0cd79b-5e53-4649-b8ab-c51227f0eb26",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64bc485d-3ee9-4499-a5d6-2133efb24156"
        },
        "item": {
          "id": "0c9e4f07-91e3-43dd-bc5b-a5913115eb5e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "724335d4-173c-45e0-aab3-f8baa1e5e624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22cb198-9f1b-43c7-aa5e-3ff948caa600",
        "cursor": {
          "ref": "f3b9d6ea-92cb-46d0-b45b-80ee128d770c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0ad2354b-e6fa-480f-adbe-40a543ebd323"
        },
        "item": {
          "id": "c22cb198-9f1b-43c7-aa5e-3ff948caa600",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d62d4158-07f7-4a6d-b018-ea2e92804f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcdc9be-f2d5-4e40-997f-f844ce81173c",
        "cursor": {
          "ref": "282623ad-8746-4530-b65b-fa22d18cddb1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "984e31d8-0ef7-4450-9093-cdd4fb6cc130"
        },
        "item": {
          "id": "dbcdc9be-f2d5-4e40-997f-f844ce81173c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f3b6286-e220-4d4c-87d6-6d1d56284cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34665aa7-31fb-463e-a125-928a80492cb3",
        "cursor": {
          "ref": "f33d5cf5-8493-46a5-b21d-fc79232d7ff6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f95ee77d-8961-4be9-bb7b-efbda0df225c"
        },
        "item": {
          "id": "34665aa7-31fb-463e-a125-928a80492cb3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04b1df91-d72d-4e4c-be9b-7db03ca4a7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8719c5c-e92f-4bcf-88da-d00fa3760800",
        "cursor": {
          "ref": "abc59c8f-2a61-4d12-b189-6f5efb8143a3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8239a1b5-028b-44f4-9255-c1a6a56c4a6a"
        },
        "item": {
          "id": "a8719c5c-e92f-4bcf-88da-d00fa3760800",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c98ee47b-1f6f-47ae-85e4-15471283482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e632912-f6ee-46d3-badc-a029f1c7dfb1",
        "cursor": {
          "ref": "e46cafeb-ae59-4081-82d8-6408751079a5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0de25ca4-a6d9-4763-82ee-dda93d8de108"
        },
        "item": {
          "id": "8e632912-f6ee-46d3-badc-a029f1c7dfb1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd199654-cfc2-4678-8be0-3003e604a1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0ffebf-c2a1-4fc6-843c-39ac1016d61e",
        "cursor": {
          "ref": "8d7418bc-b665-41c0-9f7f-64e203e655a0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5f584b6-be99-45b2-a1f4-7b732a08ff03"
        },
        "item": {
          "id": "6a0ffebf-c2a1-4fc6-843c-39ac1016d61e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b7fec144-9b56-4d3d-9183-e877213beb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f12560-a72d-4a5e-8c28-32b27ee1bc76",
        "cursor": {
          "ref": "ebbdef67-67ea-4ed0-bab6-fc179c1e8674",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "abf77412-e730-4507-be10-65c7fece1c9e"
        },
        "item": {
          "id": "b0f12560-a72d-4a5e-8c28-32b27ee1bc76",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3793c25-6e09-46cb-82d0-fa58bdfea3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e4bec8-f57c-4e93-ae10-7c6bdd128f82",
        "cursor": {
          "ref": "92f75cc1-7c30-43bb-9dc1-eecc539e85b2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5a8c3167-c8c8-442e-9925-b614f95c66f4"
        },
        "item": {
          "id": "97e4bec8-f57c-4e93-ae10-7c6bdd128f82",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e0bbb681-aa74-47dc-a927-723425f5772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f4efc9-3a93-4ca1-8619-2504dd5c628a",
        "cursor": {
          "ref": "b1b5afce-cb2d-4317-9924-f3e96c8655d3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8987bd7f-c7c0-46a8-89d8-9731813ff785"
        },
        "item": {
          "id": "b9f4efc9-3a93-4ca1-8619-2504dd5c628a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d2002ac9-af80-4106-8bd3-2a29ee5aaed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1cc323-c7c9-43e8-a8f4-5d351ca79159",
        "cursor": {
          "ref": "819be671-e570-4800-9c2a-ab655716a066",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "492dada4-9f0a-421c-b2b0-596cbbd91c1c"
        },
        "item": {
          "id": "6b1cc323-c7c9-43e8-a8f4-5d351ca79159",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "330d626c-e728-4db1-b7ad-1201c69b27e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf759e5a-4c60-4364-8783-19352d60c4c5",
        "cursor": {
          "ref": "00471ce7-cc7a-4c4e-be68-a6ed716efcce",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1c8a2d86-dbd5-4b78-abeb-3328db0d54d8"
        },
        "item": {
          "id": "cf759e5a-4c60-4364-8783-19352d60c4c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "79e2fb3b-9094-4823-9456-7152ddbdae8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f185bb8-369c-4106-bf89-ccabca98ed39",
        "cursor": {
          "ref": "68c03f82-a757-43eb-bda6-51c9fb671bc2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c075b8ba-0b27-4192-bf50-1c9856713133"
        },
        "item": {
          "id": "4f185bb8-369c-4106-bf89-ccabca98ed39",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "92716240-6321-46df-9e9d-cd2eb36d34a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21414c89-4a66-4cbb-8b0d-48354b0518e4",
        "cursor": {
          "ref": "10685c0e-f411-4c0d-9caf-c3d54bab87ba",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56792873-814e-4a24-aedc-f677036e1822"
        },
        "item": {
          "id": "21414c89-4a66-4cbb-8b0d-48354b0518e4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9ce1bc46-3eb6-40ca-9f74-2cd6aab33558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6d05b9-a091-4e0b-94d7-8e6d7bd34155",
        "cursor": {
          "ref": "4f167ab0-1dda-4c73-b258-fbb71e7f853d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5612daa8-d5c9-4b45-965b-b43e38b739bb"
        },
        "item": {
          "id": "ab6d05b9-a091-4e0b-94d7-8e6d7bd34155",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb220305-37ea-4c4f-b253-0813b5a7e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c733d9-c5b4-4e96-9670-3761e7d873ea",
        "cursor": {
          "ref": "ab27de02-1e3c-43ec-b37a-18e986ccad61",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5821f110-0528-43eb-9fbb-e369836c290e"
        },
        "item": {
          "id": "19c733d9-c5b4-4e96-9670-3761e7d873ea",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3730b864-0302-4d45-b2fc-bd9b07884e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5f18e5-419c-4f57-9745-405daf4a05d7",
        "cursor": {
          "ref": "ace1c179-c2bb-4920-bdb3-3dba2389abc3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af67d2e2-0567-4758-b0ff-11261c81249a"
        },
        "item": {
          "id": "7a5f18e5-419c-4f57-9745-405daf4a05d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a1b3757a-5d5c-41c2-901f-dcadf41d7d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441986b3-fdc7-4cdf-9d58-4addbe6a3ed1",
        "cursor": {
          "ref": "572e79ec-9986-489a-a11c-6bfc21ba185a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6686c905-1db5-41c6-955b-4f6954e75b06"
        },
        "item": {
          "id": "441986b3-fdc7-4cdf-9d58-4addbe6a3ed1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57d13344-46ca-4c23-b06f-0a165747e16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5b6ed-193b-4e7a-b446-89b804948993",
        "cursor": {
          "ref": "c3e38c15-ae87-4450-9194-0d4f3683cc1d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bc79e9fe-ebcd-4f73-a59c-4d73ac28a45a"
        },
        "item": {
          "id": "a1f5b6ed-193b-4e7a-b446-89b804948993",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "99295948-6f14-45d9-b25b-f56a7960abda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ccc610-9146-4989-93c5-a14943d67e5b",
        "cursor": {
          "ref": "6238f4d1-5eb9-4e64-8f82-0569a09af69c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e3a5f6a5-a2b9-4e4d-99ef-35bbea0057d3"
        },
        "item": {
          "id": "25ccc610-9146-4989-93c5-a14943d67e5b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc782412-f084-4797-9527-36275d1ff21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3435e08-9f81-4cd6-93c9-4468c45955d3",
        "cursor": {
          "ref": "b3c49170-beb4-42d3-8830-6bbb0a9669fd",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "17b3cad5-12f3-4638-8979-2b5f32a2d882"
        },
        "item": {
          "id": "f3435e08-9f81-4cd6-93c9-4468c45955d3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "38cc566b-5690-49ec-b36d-7df3ee1671b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4532f-a5d5-45b3-a622-f15b541dfb1c",
        "cursor": {
          "ref": "2fd506db-61d8-4481-9a85-8c03cb5bcaa1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c12c5026-e04f-4078-9e19-05591001b23f"
        },
        "item": {
          "id": "9fb4532f-a5d5-45b3-a622-f15b541dfb1c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "010c4c66-5fd7-4a32-a4db-578e05a26b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a7cf25-c219-4b81-83c9-01a12235f0b6",
        "cursor": {
          "ref": "b20ecff9-6fe7-46db-ad63-4eab73c257cc",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8404783b-4022-43ea-942a-f8edc9f790de"
        },
        "item": {
          "id": "b1a7cf25-c219-4b81-83c9-01a12235f0b6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "573c7239-5d1a-4ba2-90aa-5da83e758c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3f70e9-e360-4640-a83e-8f7769daffaa",
        "cursor": {
          "ref": "69a8030a-07a1-44fe-90ab-d229383d7776",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "51093116-4de2-42c0-8a62-a953bdd6f6cd"
        },
        "item": {
          "id": "ab3f70e9-e360-4640-a83e-8f7769daffaa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "551e1c68-b923-4d94-bf51-04de731a8d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4aa529-2eba-47b0-a5fe-81bf1c099a68",
        "cursor": {
          "ref": "334460ea-f719-4092-895f-9feb74259f8f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "628838e7-206c-421c-ae5d-57be3fbac22e"
        },
        "item": {
          "id": "eb4aa529-2eba-47b0-a5fe-81bf1c099a68",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cc1cc233-d367-40fa-9275-0a3f6a33e2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1ac9e-03e9-46ef-85ce-c4d19e4d1fe2",
        "cursor": {
          "ref": "de1edf3e-3bd0-4aab-8099-19ce37e272ed",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "12747fd8-7374-4eeb-8eb6-005fa8b1ab99"
        },
        "item": {
          "id": "28d1ac9e-03e9-46ef-85ce-c4d19e4d1fe2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87ee42a9-50bb-452d-9f82-efb3b6c9b8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d033a2-0834-467d-9338-1fc73ebeb818",
        "cursor": {
          "ref": "574e381d-c113-49ff-8a0d-1864e3eb7ec4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "88377aee-a0fd-4fac-ad94-337609973e43"
        },
        "item": {
          "id": "b9d033a2-0834-467d-9338-1fc73ebeb818",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "636e0a31-48dd-4644-8ec9-527f21419eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61109db8-7881-429a-99c7-949c8840b9ce",
        "cursor": {
          "ref": "600196e8-ddc3-424e-ab9c-df528b0221b2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db9c74a3-340f-4b1c-86ba-ab5562724775"
        },
        "item": {
          "id": "61109db8-7881-429a-99c7-949c8840b9ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d9e8133d-821e-4e42-8b41-039e9f30fdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba23c3-2447-4c29-ac6c-c22a9954c3df",
        "cursor": {
          "ref": "7fafee64-24d1-43ba-be1f-052dbdb3c802",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "735f5b03-4b26-46cc-ba3b-3f1f6e1a724e"
        },
        "item": {
          "id": "e9ba23c3-2447-4c29-ac6c-c22a9954c3df",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a057bdc-4fe1-4090-80ea-b8cc0107548e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89680bd8-7e9b-4dfa-8526-1c6e6cfbe5da",
        "cursor": {
          "ref": "81dc2ca3-daf7-4a61-a877-5e4be4965ef9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7113490b-0ab3-424a-9b34-c023696165ad"
        },
        "item": {
          "id": "89680bd8-7e9b-4dfa-8526-1c6e6cfbe5da",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bff3b56c-a91f-478b-803f-c3ab4c87e58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c0bbc-4e4c-45a9-921a-44c00d3e5e5d",
        "cursor": {
          "ref": "913f10ac-67b5-4bc8-a401-8ce4cd5366fe",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a20fbdc0-8354-47fe-b2cb-8892da5ecb72"
        },
        "item": {
          "id": "620c0bbc-4e4c-45a9-921a-44c00d3e5e5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d2493923-c0dc-49d9-a95f-26de373c6aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c92401-be5a-4e63-98b7-07469b5007ef",
        "cursor": {
          "ref": "b86f0c5f-ce8b-4599-a85a-baf0ac7d2098",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8bd1cef8-1145-4304-ba24-3a4f4c2b48fc"
        },
        "item": {
          "id": "b8c92401-be5a-4e63-98b7-07469b5007ef",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "01f952a7-89a5-4ca2-ab28-8bbd7acbe8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4398f8-636c-4d15-a3b4-b91127923d31",
        "cursor": {
          "ref": "a5dd2298-e9f1-4c37-87fa-b4c4694152b7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c51596bb-7524-462e-a0fd-502e0e37477a"
        },
        "item": {
          "id": "9c4398f8-636c-4d15-a3b4-b91127923d31",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c2c2a023-3585-4659-96ae-1890e1271942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6a5a6e-bc6b-433f-a9d9-78b38f7f3097",
        "cursor": {
          "ref": "24864a62-74f1-4098-b9a7-c34e1b638f21",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "74a21e08-b04a-48c2-9c00-47419c96a270"
        },
        "item": {
          "id": "4a6a5a6e-bc6b-433f-a9d9-78b38f7f3097",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2551e5ed-4eff-4708-a5ac-372014e3eb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0993dcf8-8e4c-4613-9a23-dbf129f19790",
        "cursor": {
          "ref": "848dc975-2b3b-4e81-8d05-c40e66c8bb31",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "de811631-c18e-40c1-a273-1a617bce4fee"
        },
        "item": {
          "id": "0993dcf8-8e4c-4613-9a23-dbf129f19790",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "426ebd47-6948-49b2-a451-e99e4ddcead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d28d5c-e1d8-4b71-b032-18d89edebb55",
        "cursor": {
          "ref": "de0b09c9-51d2-4edf-8271-0b5e911febb4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fbc9963a-be2a-4da7-acb6-7ec5efd35c30"
        },
        "item": {
          "id": "d3d28d5c-e1d8-4b71-b032-18d89edebb55",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6130c6e7-0b4b-4094-a568-78ca5d59dc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fca876-a95a-46f7-b623-f14b57a2a962",
        "cursor": {
          "ref": "20d7a5cf-d669-4c32-a71f-0f99ff44f5e7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "931dfeec-d96e-4283-97cd-72a4bc2e637b"
        },
        "item": {
          "id": "59fca876-a95a-46f7-b623-f14b57a2a962",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "24224287-c5d0-40b0-9a67-8aed622cdb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466ff19-68c2-484e-a8ca-b81934daa4ff",
        "cursor": {
          "ref": "87f09eb8-22c6-42cb-b961-740131470c9e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ef9d6a39-b930-456c-b620-5b87c5df8d45"
        },
        "item": {
          "id": "9466ff19-68c2-484e-a8ca-b81934daa4ff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "502ca026-133a-4773-be88-9d1deb622e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b906238-53a0-4469-90b1-45c05faabdc7",
        "cursor": {
          "ref": "930e0a2c-3250-4c21-83b8-387ade146f4c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b6201717-8caf-45d7-9983-ee5780a6d07f"
        },
        "item": {
          "id": "2b906238-53a0-4469-90b1-45c05faabdc7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "29748a90-bbc1-495c-a48e-50632dcfa322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c4fc85-bcf2-4979-96ab-83e23aba0269",
        "cursor": {
          "ref": "81b94c76-9b05-43a0-9e9e-4b7b137a1853",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea015e94-f9a0-487b-829f-f0283ba6d55f"
        },
        "item": {
          "id": "b4c4fc85-bcf2-4979-96ab-83e23aba0269",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dfd24a5a-f7a0-4f3e-925d-f083ee21a46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7955ac9-795a-4047-a871-825a663dd9e9",
        "cursor": {
          "ref": "e567ed9d-98a2-4e3d-8f2b-a5667beae73f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c240b4b2-9fcf-45a6-8bb2-56f97f8ec6fe"
        },
        "item": {
          "id": "f7955ac9-795a-4047-a871-825a663dd9e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dee3327c-7c04-499a-b432-15c2a8c912c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f739ef06-65d2-43bb-8feb-6191f2515231",
        "cursor": {
          "ref": "3b8d5fe6-7fb5-4683-8d07-5f9cb8be4fb3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c9082203-3725-49ea-aaec-71b40fcfd227"
        },
        "item": {
          "id": "f739ef06-65d2-43bb-8feb-6191f2515231",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e5581255-ee95-465f-bdae-cf3a219377ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf1eb2-e1c7-4672-afc2-bee62ee40223",
        "cursor": {
          "ref": "211a14f8-0d57-44a9-a90b-128c3566148b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d0605418-668b-456e-9eda-c3a5ba1009f2"
        },
        "item": {
          "id": "20cf1eb2-e1c7-4672-afc2-bee62ee40223",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5c975d2-c32a-441e-939c-ea77e90f0511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86faedd4-570d-4d15-a0f4-9cb4fc333f77",
        "cursor": {
          "ref": "f5685e76-4a65-4075-8433-60542d2fd527",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e7f174c1-6b7f-4b52-a4fb-e96c3bdc3d4e"
        },
        "item": {
          "id": "86faedd4-570d-4d15-a0f4-9cb4fc333f77",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0925955-f50b-41bf-a19e-e26f3f88e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db769bc-8aed-48b6-9230-d6ec2105cff8",
        "cursor": {
          "ref": "19380512-a89d-4a8c-8d48-4145b068aed5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f3b8194-2ab8-418f-8c13-3657e9dabd9a"
        },
        "item": {
          "id": "5db769bc-8aed-48b6-9230-d6ec2105cff8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "be5283af-9c3c-4641-ad45-6bc45f78f6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a42abdd-46d9-4fbc-b0c0-4c2a051817d8",
        "cursor": {
          "ref": "3f6fc5b9-950a-424f-9583-79822be96a4a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0f83ea93-9061-4d86-a5a9-cd1b8e33e36d"
        },
        "item": {
          "id": "3a42abdd-46d9-4fbc-b0c0-4c2a051817d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "51ef0227-5254-4753-9c3d-87d32f90ff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88813f91-d9a7-459f-af9b-a53500a8abeb",
        "cursor": {
          "ref": "4c29634f-b4b1-4e7c-bb86-f0c67f3f70ce",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "65f69096-4591-4e95-9eca-96cb5fe86315"
        },
        "item": {
          "id": "88813f91-d9a7-459f-af9b-a53500a8abeb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e58c3be8-673c-483e-bbde-ad852c5184bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1050a8a-842a-476c-97fd-47bd89788f75",
        "cursor": {
          "ref": "013c8e26-3f34-481a-bf01-f9ebb5c75115",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87db6da9-f2f2-4229-aa40-8d2c8d8ed064"
        },
        "item": {
          "id": "e1050a8a-842a-476c-97fd-47bd89788f75",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ef4b6e9c-9813-4d0a-b737-9a6781f66042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f27274-0f69-4ac9-8ff6-a1ca6994be8f",
        "cursor": {
          "ref": "f95da5b3-8745-406d-9fd6-ad2187ef7c76",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "277fb885-9bb8-4501-bf13-907a7ee0d2d0"
        },
        "item": {
          "id": "61f27274-0f69-4ac9-8ff6-a1ca6994be8f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d2b5b76a-40b1-4765-a7b3-890bfabed8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e310d398-33ff-46fa-8799-2f05ca73ba34",
        "cursor": {
          "ref": "4ba450a8-7495-4740-a3e1-fa0f58acd5b9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a14664c-3a62-4352-91fc-b10b6253007a"
        },
        "item": {
          "id": "e310d398-33ff-46fa-8799-2f05ca73ba34",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4cfe745f-4269-4560-ac2e-95926d31c9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43976345-edaf-4dd7-946f-5952c3e4b59f",
        "cursor": {
          "ref": "1b6ba06f-96b2-4b75-a689-ddbe375ee74e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "622ef2cf-e11d-408d-a5bd-8d50c1fa50a2"
        },
        "item": {
          "id": "43976345-edaf-4dd7-946f-5952c3e4b59f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5d5e5e2c-556c-4c4d-9a93-e2160faabd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b61ebfd-25f0-4caa-88f0-2f746f06c8aa",
        "cursor": {
          "ref": "7f8938c7-0ccd-40a9-b32c-06c7fc076afc",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dd2c42e6-28f0-4ae5-95cc-af140acc2b6a"
        },
        "item": {
          "id": "6b61ebfd-25f0-4caa-88f0-2f746f06c8aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b341e399-4af6-4cc9-80f3-f37041d25e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df47b482-e343-4212-8900-8cbbbd27f28b",
        "cursor": {
          "ref": "471b25ec-dc0a-4724-b6da-39deee86fae7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6ac4f91-2696-4afa-951d-aa1ade94b45a"
        },
        "item": {
          "id": "df47b482-e343-4212-8900-8cbbbd27f28b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1806fbc4-ebba-427e-a275-da4e45e88f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37464de-bed1-45be-b64b-7f9f62d323af",
        "cursor": {
          "ref": "333da03e-7de3-4476-b58d-4eeeab77af51",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cd9f3afa-8ea1-4064-ad0c-e1db84cb719b"
        },
        "item": {
          "id": "b37464de-bed1-45be-b64b-7f9f62d323af",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c6eddff-5451-4bd6-96ab-2e8b056b412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1747a81-6ec2-4119-81a5-ea10eefeac1a",
        "cursor": {
          "ref": "978fa229-b59e-4b9d-b48b-b7626cca938c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "83a77f8f-9543-4246-8b2d-771a002c9f8b"
        },
        "item": {
          "id": "d1747a81-6ec2-4119-81a5-ea10eefeac1a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "369dead7-aabc-403c-a898-c2d7ff2020da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d21274b-f633-4a51-bc7e-9941a212d6aa",
        "cursor": {
          "ref": "cdc30a10-1aea-41a3-92d4-23132a109049",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5839d72e-dfda-4f90-befe-01ba4d7eb018"
        },
        "item": {
          "id": "1d21274b-f633-4a51-bc7e-9941a212d6aa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "75696835-7a07-4c43-9690-7178b3767cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8223f9-d1ab-41e1-919d-92ca24e21f34",
        "cursor": {
          "ref": "aaa1b574-8079-4887-8848-2a1101e35abf",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ec949121-6a2f-4ec1-b9fc-7c2b7b956009"
        },
        "item": {
          "id": "0f8223f9-d1ab-41e1-919d-92ca24e21f34",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "45f7824c-2e0d-41a2-ae7d-166e755356e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a151e8-7ecc-411e-b33f-45fdcee582cc",
        "cursor": {
          "ref": "5a6bce0f-a358-44bb-8395-957316b56529",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bfd53dff-d9c2-414d-b328-b63d61476fc9"
        },
        "item": {
          "id": "94a151e8-7ecc-411e-b33f-45fdcee582cc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f9facb40-0f49-407f-8491-0b74c74fedd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e08b873-7add-4cc3-ac25-81f3f8dd3006",
        "cursor": {
          "ref": "f709ff36-aaad-4e1f-84bd-ffd984220c2b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "18365dcf-60f0-4841-a5c2-4dc7db78e2f8"
        },
        "item": {
          "id": "8e08b873-7add-4cc3-ac25-81f3f8dd3006",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3409ca45-a3c1-495c-b7fd-fe29d5ba2d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a39ac6-fd41-4d20-9096-55f8e0d42e16",
        "cursor": {
          "ref": "d65b20f1-3107-47f1-aa2e-2ac06097688c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e94acd4-4fff-49c3-aac4-220994c54322"
        },
        "item": {
          "id": "15a39ac6-fd41-4d20-9096-55f8e0d42e16",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92261885-c817-472e-9971-500a48209c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e6a750-87f2-49c4-aaaa-63e3aee65708",
        "cursor": {
          "ref": "b12c81fb-da7b-4c74-878f-e61e3ddad827",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ddbb1f1a-fa9d-49cf-b1cb-5517046f24c8"
        },
        "item": {
          "id": "e2e6a750-87f2-49c4-aaaa-63e3aee65708",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5f84522a-ab13-45d6-a6fc-b126398de0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe82d28-b562-4924-b5e1-bc84ae88fa48",
        "cursor": {
          "ref": "bf2fedd8-8872-4678-b5d4-48edcf5b1dde",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a9d3cb08-40b3-4c97-a7fc-a7bd7afa195d"
        },
        "item": {
          "id": "ffe82d28-b562-4924-b5e1-bc84ae88fa48",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c1451767-8af4-4e5d-897f-c36225422bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed23002-d49f-4b80-a01c-6e72786fbd30",
        "cursor": {
          "ref": "47be4985-963f-4bb7-863c-416adff50ce2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7da05f3b-6aca-48d9-9dcb-c1b9292083b2"
        },
        "item": {
          "id": "fed23002-d49f-4b80-a01c-6e72786fbd30",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4241f743-f559-4a60-90fc-fa89f6b8d2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48704048-5e99-4d14-9151-d11423f19295",
        "cursor": {
          "ref": "da636345-466b-49b5-a6bc-e228712c56d5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8c296991-d4fc-45ad-9bd1-fb53eafccb7e"
        },
        "item": {
          "id": "48704048-5e99-4d14-9151-d11423f19295",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8f145eb-9372-44bb-9eb3-2e4c7dfa345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8703863f-c0fc-4ef2-8f02-31e2ecfd76a4",
        "cursor": {
          "ref": "b27055e5-311b-42a8-b40c-646a4de68e9e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "244e5b76-e7e7-4bc1-b99e-0717945b6b2a"
        },
        "item": {
          "id": "8703863f-c0fc-4ef2-8f02-31e2ecfd76a4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4ce31d18-d50f-4b0d-a535-4d60a95752cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4fa1ad-0b49-4124-803f-329e7ff45e81",
        "cursor": {
          "ref": "c2b36278-c135-47a6-87a8-7940489dff77",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "46d3d180-ed26-43ca-80c6-ea73c9be4264"
        },
        "item": {
          "id": "de4fa1ad-0b49-4124-803f-329e7ff45e81",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b65b4f07-8d2e-4547-842a-094d14fd94b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba6086b-3e9c-4f1d-be9b-059c9a92fdf9",
        "cursor": {
          "ref": "617925d6-e649-4a61-a3bd-3a0943b56567",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eeaeadd4-3caa-41c4-af1a-4159b9289b0a"
        },
        "item": {
          "id": "6ba6086b-3e9c-4f1d-be9b-059c9a92fdf9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ef389e44-8852-467c-a9bb-5c8cfe20be7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d4fa0-ecd5-4ae9-839a-dcaf4992f09c",
        "cursor": {
          "ref": "1341ab8c-f385-411d-b9b8-6f988f7012dc",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cd118378-462b-48f2-b2dc-f7fe3efb684f"
        },
        "item": {
          "id": "775d4fa0-ecd5-4ae9-839a-dcaf4992f09c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "03c2d183-63d0-4c90-89a3-ce20f3bd0fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5852ec-75a2-4c11-94d3-434cbbdbab75",
        "cursor": {
          "ref": "6b8b83cb-b87c-4362-aa9f-24023e20b414",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "699100f0-e5db-4e0e-8c8d-a4dcf29ce437"
        },
        "item": {
          "id": "ac5852ec-75a2-4c11-94d3-434cbbdbab75",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64db8dc9-7036-425e-9e0a-b44f5a916df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e1b9a-e753-467c-bf66-9ea4477edd89",
        "cursor": {
          "ref": "71acf276-6214-4d5e-9b12-2d869e9d31a1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "98a2b9d9-6c0c-4c65-b3e3-78c77caaf43e"
        },
        "item": {
          "id": "a97e1b9a-e753-467c-bf66-9ea4477edd89",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "219c8c62-a1da-4154-baa0-44c8a3f727e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a027c90-b6af-4030-842d-94dd128f10bc",
        "cursor": {
          "ref": "ded31574-6bc3-4bc0-b819-9e71a32182ff",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "50300ccd-7e0c-42ab-ab2b-831da9c7d672"
        },
        "item": {
          "id": "9a027c90-b6af-4030-842d-94dd128f10bc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36509ba8-b718-4aee-9101-7dc723913cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16459fe3-6a0c-4729-ae32-6df62487302f",
        "cursor": {
          "ref": "2307796f-3fee-494f-abc9-a4ba5f8e6631",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3f940860-dab8-42ed-8525-027c968c883d"
        },
        "item": {
          "id": "16459fe3-6a0c-4729-ae32-6df62487302f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "77211277-e733-41a8-bc13-7b072e4d3c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0dc94b-620b-4938-afab-4b270ab27d19",
        "cursor": {
          "ref": "f4d87081-36c5-41f2-99a9-75d929d170c1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ffa18670-7723-4199-b337-63bec24987c1"
        },
        "item": {
          "id": "7d0dc94b-620b-4938-afab-4b270ab27d19",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0bf855e9-26a6-4d50-a893-76faf61482a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f747b29-adb6-4a3b-8f62-62c50e0432d2",
        "cursor": {
          "ref": "d72d9c12-bc12-40ca-8dce-cb1364f68c28",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e06ef73c-f2e7-4ff0-9699-781ecd085d5a"
        },
        "item": {
          "id": "9f747b29-adb6-4a3b-8f62-62c50e0432d2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ffe5adfe-f927-437d-a638-189a296ce481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4341d768-4af6-4dd0-90b8-974bb1ba6239",
        "cursor": {
          "ref": "10968c20-2b56-4a39-b97d-7fd2fe968c82",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ae55eb73-8e0e-4144-810a-003c000c3952"
        },
        "item": {
          "id": "4341d768-4af6-4dd0-90b8-974bb1ba6239",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d84fb390-9e25-43fd-8cd1-a460776bd6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e240e5-90a3-4f63-b35c-cbbf731231c3",
        "cursor": {
          "ref": "bfaf7475-38b6-4544-9fbc-91a347075573",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "72f615e2-1278-4d6c-8a13-05a155080a5c"
        },
        "item": {
          "id": "94e240e5-90a3-4f63-b35c-cbbf731231c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a5166675-b2c7-4374-ab60-359180adef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9b5cb-d894-43c2-a33c-de52c84650ad",
        "cursor": {
          "ref": "55f05a76-b5c8-4d03-bc4c-e78cd3e02a4c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0a4d9143-148b-4317-ada6-a82ab4052b36"
        },
        "item": {
          "id": "36a9b5cb-d894-43c2-a33c-de52c84650ad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b5a124b0-dc88-4ae2-a2a3-d1e34809f13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894497be-ecc5-4cb0-8226-a54461b11e3e",
        "cursor": {
          "ref": "54775e43-1d2e-4c96-a3b8-180292d7e7fc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c732fc49-675f-46e3-9b75-cb82da1158b2"
        },
        "item": {
          "id": "894497be-ecc5-4cb0-8226-a54461b11e3e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fb96f233-e34f-409c-868f-a9c2d6607668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91b0d3b-eb63-4ce4-aa0c-c764ea3cdc7f",
        "cursor": {
          "ref": "f117e342-2233-44cb-a72f-1646df49d903",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a59d213b-feeb-4f77-b338-a39760a5330d"
        },
        "item": {
          "id": "a91b0d3b-eb63-4ce4-aa0c-c764ea3cdc7f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fa3bff75-b984-42db-bf08-7607ce46b8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4962d200-902a-4729-9ddb-bd8e26a96e0b",
        "cursor": {
          "ref": "e09c7c9e-dcc4-4eb2-af6f-4a417c18346a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "03c598bf-e9e8-409d-b4fc-238c7aac928a"
        },
        "item": {
          "id": "4962d200-902a-4729-9ddb-bd8e26a96e0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c568c3ad-2258-4f61-900e-3a8a20ad754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2250d34-affd-4095-b5c0-fcce5e2518d7",
        "cursor": {
          "ref": "e95fe660-c9f5-4401-9894-bc7aa0196fe8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "daf47706-ace5-4d99-af19-a76de30fb708"
        },
        "item": {
          "id": "e2250d34-affd-4095-b5c0-fcce5e2518d7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f1f261d7-dd46-457f-a9f8-82078f92d9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac016be-3da5-4832-a348-cbd265bcee26",
        "cursor": {
          "ref": "a2083822-89af-482d-ae64-b7a356b369d6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7fcdb8dd-aaa7-42c0-ac95-bbc288a1940f"
        },
        "item": {
          "id": "fac016be-3da5-4832-a348-cbd265bcee26",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "299fd453-9246-44e5-ae3b-d9c063b7ddb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c131bb7-1936-4785-8529-ad3145c6511a",
        "cursor": {
          "ref": "ce89a92f-7b41-48bf-a049-ce8599e74083",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c0a226b2-6b7d-45e8-9b19-8a660e4fa952"
        },
        "item": {
          "id": "0c131bb7-1936-4785-8529-ad3145c6511a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "695ca605-8d59-461e-a83e-55b421abd1c3",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f65d7a-576e-4c2f-98d4-eee3464460dd",
        "cursor": {
          "ref": "0c6005ba-7ca1-4208-8130-e12e2bfb3e88",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "24192878-b006-4598-8d25-0fada81bff60"
        },
        "item": {
          "id": "e7f65d7a-576e-4c2f-98d4-eee3464460dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "70972815-74e9-45d4-8499-32c85d61ba61",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c769513-2ff6-489d-a465-894c15e85a34",
        "cursor": {
          "ref": "e3db385b-e689-4fcb-81e0-33d24ac06a63",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "14757170-534b-4b5e-ba5c-2f53ef82f182"
        },
        "item": {
          "id": "3c769513-2ff6-489d-a465-894c15e85a34",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a77e0f21-787d-4747-b7a3-26ad6e3700db",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e18469-7ed2-4801-bd7c-0e86f91e9a79",
        "cursor": {
          "ref": "2964b94c-e009-4207-bda6-3780ec345fca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "881cfc46-5c46-44ee-b39a-a33549538c50"
        },
        "item": {
          "id": "e0e18469-7ed2-4801-bd7c-0e86f91e9a79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14a75648-667d-46c2-be95-6dd306837085",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e18469-7ed2-4801-bd7c-0e86f91e9a79",
        "cursor": {
          "ref": "2964b94c-e009-4207-bda6-3780ec345fca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "881cfc46-5c46-44ee-b39a-a33549538c50"
        },
        "item": {
          "id": "e0e18469-7ed2-4801-bd7c-0e86f91e9a79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14a75648-667d-46c2-be95-6dd306837085",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa565de6-8226-4b8c-a50e-437234cf4909",
        "cursor": {
          "ref": "c23b8d54-1895-4dcd-92ac-954407a5a92f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8be8c02d-e2ca-4aa1-9b7a-9e42578ca2c8"
        },
        "item": {
          "id": "aa565de6-8226-4b8c-a50e-437234cf4909",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e91c84f2-a159-4871-a1d9-f87aa40d437f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab41f93-e520-4475-a56f-772abd69c2a1",
        "cursor": {
          "ref": "d860d1e3-bbf9-429c-ae9e-a5180c5721a1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a9c1755d-042b-431f-9d67-b22df9eae48d"
        },
        "item": {
          "id": "9ab41f93-e520-4475-a56f-772abd69c2a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d5909aaf-aa34-4117-a4a7-af03da42e90f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}