{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "11c2c12c-04ae-4c43-b913-955a54712d48",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ec1516c8-540d-4b90-85aa-bf7e056c9b9c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3da74590-d860-42e8-b472-58ad991db086",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a7a1e0b-c5cb-404d-ab4c-0ecd9efc380a"
                }
              }
            ]
          },
          {
            "id": "dbef3015-0053-4f2d-a046-ff6ec4361d70",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc1b08b8-092a-4f47-9efe-b9e5110daf77",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42ab5daa-9246-4624-a941-723422233c15"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df1fa661-59a2-40c2-91c0-41dd0b543035",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bca2a98d-79cb-4dbe-bcb3-391d6a139c06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f6be3e8-44a9-452c-b902-452cf0fd1af6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7390917f-04da-4947-a90c-8a9e4cfe8030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e48c4bd1-2842-41d5-a3f2-92fc6dd32e92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e02accb4-cb9b-4edd-8210-0278e702e037",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39348948-3e87-4dab-a418-5509cab7a6aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5de7e25-6905-4f8d-82ee-ad479bcf0f20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a9d4ff3-4f2b-422d-9977-f4e2eecf06a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe44abe2-0bc0-49d4-afcc-6d57782d2edc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9d78fe5f-7bd4-48b5-8b1a-4ef9e2db2dc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0338e7b-f9e7-4e4e-a3fa-aee50371400e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ca3b3be-9523-4a7c-a5f6-5dff3b712412"
            }
          }
        ]
      },
      {
        "id": "8dfdfbe0-240d-407e-83b0-9016c5da3737",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bfe34938-7e09-4786-abd6-d0087c80312d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cb13353-0376-41ff-844f-21c236e06433",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9e23a81-23b1-4c9a-b34e-4469fb374f34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba978b1-338d-4432-b745-18fd1f5ee82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "944a0d66-7c79-4f86-987f-aa3ed2882b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ffa7c8-00ba-4ccb-8beb-dea9d5b5a7e9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a762de7-ff00-4ae9-a1a2-405ac1751565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0045ec04-7ad6-4414-9796-1a90420cdbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d5cfa5-23ed-43f6-bbe8-ef4d1b66cf0f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02e4c2-fe16-4c15-b934-5a2507f2805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d21862e-ec57-40ac-b265-c6ba3627731e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04497bc7-d4d7-4484-bfc8-0f5823e190a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dff5ad1-da5f-40c1-b61f-8d6307844fec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffc92de-8b6a-407e-b765-ceb819b411b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dd0402e-edc5-4b9b-84a8-5e55289c75aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e159f0-2522-4882-969d-97cf79891dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0093be8-a116-44ce-807e-7fae41af9f02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e6e682cb-69ca-431f-ac57-93408e7ee6aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b05aab52-af92-4d81-aa2c-7749f48015b2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05219184-f70d-4160-b6ad-034dd6900d8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c9e98ba-e0e3-4aef-ad92-74921b6b541d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17bacb72-6133-417c-9f07-47f3b9aee915",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5a857d21-dee0-4e7d-80a3-98e9339f0a93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6548b2ff-26f3-4f94-9c83-4fabfa18e5cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e5345c5-6360-4c94-9acd-906b15cd5b9d"
            }
          }
        ]
      },
      {
        "id": "5f7d5895-9a6d-4c29-8c32-504e48a2e252",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b2ffae1c-7e2a-4698-a040-78ddc41aab75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f57ce39-94bf-4493-b1e1-94781bc499be",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60e34403-3d4d-4f4a-8751-069446940f09",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5cfb62-46cb-4b9d-bd86-c8441856946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769cbf17-0f49-4d87-bc8b-01b48ecd0e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383aa6c2-78cb-4732-b409-9b5a56f6a944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17ce0373-7595-47ab-9693-fcf219a37055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c443fab8-97cf-4471-9d7d-4ac4b03f68d5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddd3770-0c22-474b-9e54-b2f60c679d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facf84ab-5771-4f5e-8a0f-088dd00e7b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106252d1-080b-4cd2-a1e9-ecb5919cd015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdc3da84-8de4-4415-8962-cfb18342ac02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b00c071-a5c0-44f3-9add-4b5da25d1358",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0a09b7-5b40-4bc0-af6f-fde1bdbcc66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6129ee69-ca04-49ba-acc0-419b8f27bfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c485d9-4fb0-414f-ba8b-3b94517c923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0216e48f-8543-4123-a674-c5db705e411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb6c314-6e7f-4db4-a146-f193149dd415",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a94b92-5ead-43d0-8322-67a5c80a73b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0334e6-dd93-4a70-b992-6a7f6e4bde11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e53f4f6-97d3-4366-b38a-1c85a5a2ae49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e4d4c7-4dc4-40c6-8862-c3f78a498cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192d6bd-e526-4c5d-8f41-7c65cbdba0b7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7022337a-43bc-4baf-a6f6-ff0379b93a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0378e61a-2477-4674-af2f-0910e35f0164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f02d2-4f80-41a2-9ed8-c80202649103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e91032be-7e1f-48b5-a9d6-e16dd179340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0dae65-782f-4573-bd32-1ea87e00cd79",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47e97b-3e0f-4ac8-ac82-a7a8c5506405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72534f33-d7a8-4a75-a041-fb11e53081cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d342d8c3-4a72-405b-808a-8a6fb097b902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b9697cf-ef49-4dff-acd2-c1605f85e8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec08d16-c0ca-4e00-ae38-6bc761cad481",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3b53f-221f-486e-abef-80cb7301cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcebe278-ed84-4495-b6ee-dbeb152e51a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e216c7-faf9-44cf-8522-24b745181edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15dc9c4a-7de0-443d-8fa2-4bcf20076cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536a7d75-41eb-438d-ab24-e0b453a99eb7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600459e-2aa0-44ae-860d-3510662a8da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734f9b4d-9292-458e-a654-2664f2f768af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225f6077-57fd-478b-98a9-e72c396c57f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13c9f861-eff5-4060-9ad2-b32e0ca5d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4dbba9-43bf-4b01-bf34-542771915e62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa631e74-9b53-4dae-a9f2-c0eb89353040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da72ef7-e1d2-4ba2-8709-d68473cfc045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ef84fd-b7c4-4616-9a17-67b7679e13e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "658bd7f5-c8cb-4b79-9936-c94330f63798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adf7f1b-7449-4094-9542-fbc0b2f6637e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0934260-2851-425e-bcb9-e6a4af345c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a79044a-ba44-4c63-ae82-6f877aa25413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015dc2d7-d0da-47f6-94e0-bb7887b6e33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "670b8ba0-e9ec-4a08-987f-72ad6ab1c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cefb6f7-40cf-4023-ab5a-ed7282308690",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf18412-a9d9-472a-bf3a-a46d4ea88071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05760b4-9395-4306-87bf-059b72570960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a444ee-af23-4c21-ae71-f73fb0e42793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cd53911-9764-4b02-94dc-522b2c45f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3441067-5a21-4926-ba42-44a3e425e877",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd7e91-63b1-4a7b-9b6c-bf51a4287e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0585ac-215e-42c1-ba2c-461ee38a1f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1531bd-d6b0-4a31-bf56-8647fd3cf603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72db1dff-2a8f-49af-bd8d-bedb5bc024e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280ca573-23c1-4876-8f2d-85547db745eb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24d6108-d2ac-4168-8045-99d97b1ab2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbb7ecd-c9c5-426e-91fa-ed8c029c0fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30320c3e-fb9f-4d69-a57c-b9d6a7099c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317ea0e9-1edb-4946-82eb-e4ffc824ff13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb912b2-1bdb-4b31-ac97-dfd24a7d0abe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fb900b-44b6-424e-89d1-43b8461ab338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd3906f-924f-43c3-a693-26c5647061de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8f8a59-48b8-43f7-815a-884dde09f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f6f436c-e8de-4c69-85ae-2f49d7c178a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac0f32-9fe3-4b05-81fa-a39aa8febdc0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6790bf73-6540-4d44-9847-3fdb4c5a37f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8887f5a5-c12b-4473-ac8b-17796092befe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b4480-5521-4b53-a844-3ea061610166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea750ad-0622-4c38-be5e-df3d150ec6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f380cc30-0cf6-440c-8d4e-536a43af8a58",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6bb441-a491-4108-9bb1-ee320f4d04c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe14b2b-04c4-4a51-86e2-17c64b24264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d6d09-4f29-47ca-8b26-054d00e93464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b4b880-051d-42d1-8f2c-837b3b4b990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e4afda-02a5-4300-a6a4-a8c4b9b9d9a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc37336-2b28-4fb1-a10d-034f6ddd923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3723ce-46b8-4514-81d1-b36ce5dee595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28043a43-6d70-416f-95e8-677ab28206a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd33a0a1-7781-43ad-9af4-02e02e0dc8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae2720a-82aa-45e9-9f82-f9d9901a8913",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1340cd5-047e-41d6-bac2-173c5fd3c91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e407002f-4ad5-4365-a1f3-c2ef2d106acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b89527d-970d-49d1-a8e7-b3fa81554346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff9c680-b22f-407d-b9d4-dab17972ab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b8b098-9c96-4c21-a271-5eee61af0a38",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836d518f-c299-4954-83ab-55052f9d0b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce5b496-4598-47ea-ac22-f8c64f3781d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4efee8d-4168-4a8a-9afc-9e5f34c695d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "225d6c81-3fdb-430c-b27b-d4e9272f3e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f88e3a-f175-4026-a548-b744b348fbb2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265ad48f-a00f-4840-96fe-6b083ef67e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb74014-00ad-40a1-8620-3d76069db44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9803b4eb-6084-4bf4-9a7d-95fc22e6dfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "823a9dbd-026f-4e22-9aab-213df18b502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b390be9-fab4-4df7-9c5a-815e420f0e8a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a029580c-4e86-4718-8aae-234563f97960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881907d9-ec5d-48ae-acc6-b8a724bd0282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171f14c1-138e-4bc4-a962-28ec4ca76145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88d9031-0d87-476f-a129-6ef30f984ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8079da-3f0b-4265-8893-67b35c50610b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaac4db-835d-4292-83f5-25d06f0eef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f478cd-5dc9-4568-bab0-47768c4a5071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd53743-20fd-410a-9307-f95264a3a717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4587cb-1342-4c38-8c08-87f4848382b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69017754-9ea6-4646-98ec-5114206bda59",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5a35a7-0d2a-4088-89e4-d90d12ecf08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2249b0-b580-47f2-a48a-f7e3d3433b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d6bd28-597f-49fe-a002-1d6da34e1b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02cb9795-0d9d-4cb3-96e5-2232e16f8862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab5e841-088b-4f2a-9eae-2cb2ad9e1e78",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539c5f9-ef5f-4d01-92d2-3ca4180cc93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae04f732-00ef-4ac2-a858-7f03b308a796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6837eaef-241c-4db1-bfbd-8179b06f3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "740d7c3c-7b5d-463e-85de-6a67f800fc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947f5cd0-c5d4-4164-92d5-556400bd9c11",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89315b26-4d8f-49c7-87f6-63fa04d1b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c9bda5-e2ef-4b18-93ba-d254f9a0e260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43a260-776c-4048-8629-2f16120e86a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2013080d-f9a6-4cca-a07c-5ab51b691dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae847a8-5e12-4a54-845f-643ccdd8216c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd0591-5bb6-4fb9-ba9d-7a3234cb3bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b21419-e53a-4ab2-b3ff-083e57604ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f7c08-3d28-4d22-8327-b50871ed3ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc577c4-22b1-43ac-982f-d52a64dbeb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a6f0d0-5214-42a5-b66c-5ccb4e68ab5c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36685bd6-7434-4464-bb61-5bfc3734a217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2ac791-a318-41a9-a61f-a228a6c467ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba640f8-91b0-4228-a1ee-d0cbc4b02390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d002d053-bf7e-43aa-9c28-d659153b5a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df711d14-9e73-4ad5-98cb-c92eacddbc25",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1cce8-6aa2-495f-926d-726f46b0646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13cb44b-065d-47fb-b389-58e1fecce429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b603120a-5350-4a76-afd6-3c4b502fb969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07acebaf-7a17-4a87-9b9a-06382b76399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d721c3e7-f9b5-4c9f-a680-35f036271325",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f6a28-fc64-4a21-a697-cd12e39c8187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816ddf62-2f52-4fca-9550-e2576fa17aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6055e6-a0df-4515-bebf-88b84451e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c895ad04-1c5c-4f87-b52c-278e74d052ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d546b90-5d4b-49b9-8a92-5ea434cecee8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29481f78-dcbf-42eb-8e6f-09a6e36c3e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5c64db-7f60-4139-8967-90f3a293916d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50938285-706d-4d3f-845a-6235ec470826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8026c56f-f2bb-41e6-91ea-1fcc07d0b75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47395c44-1e8d-4a44-bd75-51a23962d405",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f64f3d-eb17-4563-81ad-b12cb366da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36ec36f-d180-4ad7-aedb-256581e00e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3219aa-6bff-4bd7-8a22-20bac133dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4320b9d9-f128-4dd1-968c-0a604883917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e05ecf9-3576-4211-9802-79ed6a62e9b0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dcad33-b4c9-479b-8bf6-3d7f8ddb827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3729c295-d011-448f-b96a-dc692a74d614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a3f16-c1e6-4ad7-8c41-ef387ce157de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bed8bb1-516f-46ad-9b0a-c4fadf4483ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e57a215-2b43-4995-82c7-86981b11c9ff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf373a0-b7d5-4f52-b01f-1bd59c3b8d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ef2af7-e515-4aa0-a500-a5c87ce2288f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be5f566-e9b4-4426-a73f-58c47b92d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a529f1-8f49-42fe-bee8-37f2c63b93cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50204a21-6dae-453a-a586-c7ba36f97d86",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c932209-30ac-48ca-851e-c1736cade893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246a104f-f484-485b-9e2a-2d973c1ef4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a3d34-afba-4895-aae5-85294d6f3930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebe3e1e-1ecc-417f-9b3b-d5325ec8989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7190f6-bc96-4151-9ed6-37a2baca28ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb8d161-19c4-4556-840a-82b24659f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90584605-fd7a-4092-ab69-06fd60b780ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29496ca-ed38-408c-bec5-aac2257dfe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed2262c-51e1-45d2-8cbd-fcc9433f7257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea0837-87b2-4710-a09d-98921bd8b0b1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6034c271-3444-4c19-8bc2-9e4092812cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79a8c459-ff82-45e5-8a8b-0b02de951577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff63cd4-e91d-4529-81d4-91b24c3007d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "595620dc-489f-4adc-9359-2084b8a7c6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c4216a-8fad-4576-8406-2a211bede4c0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892486b0-cdeb-4b78-9dca-aaf2ef09a037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a73a567-0cf4-4253-85b2-55131b1189b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8690f2-726e-4409-b68e-2f12b2abbb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa78569-3715-433c-b4fd-20296e1ed2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96acfc69-41ef-4f96-b636-170d5061b85d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a188e5-549d-4863-9aa2-237509ed58ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529695fd-b585-4875-955c-147dc0690f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdead17-4e53-408b-b3f5-8e5e6ea05d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fddf81ad-0ccf-4fdc-bb2a-d518bef2e98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b0214f-8336-4b76-960a-56004fb142d2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a36990-f2f3-49f6-b9f0-9402f45ebceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8defed-0591-4390-8ff5-298e725277de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c121ba-7a44-4fc3-998d-18c05fbf69de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dce7121-6987-46db-a277-db14d0114a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1b82e9-7e25-453b-8fb8-e436d943a883",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a43ac4e-223e-4f1c-8520-7fe896069db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2e9635-6d9e-4462-9353-826345e81b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9894093-f25f-43b4-891c-cb664887c115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe828f4-016e-4a64-ae0a-b843c39a29c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf70fc7-7ccb-429b-a517-0b942e393a92",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733ae932-6c62-4a4b-8f2b-4998e6c95689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9660bfdd-fe3b-4933-a5c8-65d30621a708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b22617-d0c4-4b6d-9398-3f1598e37dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c406dd9-329a-4fe0-beb0-34af484b001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a97092-3c23-4bde-b9ec-014a3d43cf6e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8799efbf-46a4-441d-a04e-63b48797d709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa8cb33-6297-4998-8a4a-2eb489b6bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bf2156-8b50-4369-a658-a24ddd8237a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f74717d2-4f17-4035-9135-9b0e375903ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0890e2e9-540b-4889-913a-b5d24402ed9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35f5819-4481-4845-968e-328524ae5cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3e9751-c61d-4a27-bb36-24a848ff34a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42548af-b5ac-4a4b-ba89-49150c924b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0342460-a959-4c90-b1e7-3c3551b0614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10566e-d331-47a6-bc4e-a4a82de91541",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6853861d-ee07-4ff7-8fb2-2138be399b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4573a813-2dd4-4811-aab7-1ff84d09393d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48465c12-c867-4596-a586-ba5a7bfaa78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "918e4ece-2bf9-4b7c-b18f-70c14f7a6161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe0cc7-2953-4047-be42-373c40d713ea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8254bf1-28f2-4ef4-8af4-43a4d0a6ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2cfa8c-91fd-4e51-ba0f-29c47adac0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3268fe88-db5b-4cf7-b179-5b88fc2e2992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2142f027-edf6-4791-8e37-5b13e2ba0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a102429-74bd-46db-b7a8-00c26beb07e4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79db76fa-073a-4f23-b003-022c62ae653b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce2f4f1-d8b9-43f5-bdd6-74e1ce135a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b95488-926b-4605-8b75-f798416a03a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "304b90e4-b54c-45e5-bf5e-56a867fc48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4026c9d-5279-42d6-b9c8-7696a62d26bd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f8d322-9b2f-4937-a7e4-f0ac305229d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1494816-7730-46c0-8c1c-8c5a0c02b5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349296a0-2dcd-48e4-9dcc-3367bd33a5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8660e5c-543e-4b63-9cb5-79fe0d104b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4567d299-7748-481f-8780-db5dc441199d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89276d17-1efe-4046-82c4-dd066b933d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a95cfad-4769-498e-aa69-d1db3a9a8c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdafa5bb-8edb-486f-a56d-383ecd24211e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d0370e-8375-4503-9ce7-1d17d78519d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fd7a41-4537-49b5-927f-e6b61cb4c081",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4457991f-f295-436e-b590-20e20aaf5c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2a98cf-5a87-4034-b431-57f48f47e1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6febc252-26d4-44a4-83f7-cebb3054a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00dfeda4-b981-49d9-a410-f50eab472926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2c6714-666e-4531-870f-9e277a35118f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd292a0c-b76e-4ad7-8ad0-b36a27a48648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794fcd35-6c15-454c-9627-aabdceda89d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9cfc68-091e-4c23-a383-de7dc3cd6d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43e95151-00f0-4f6e-a322-dc929569e83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e38a5e-1227-4438-9caa-08e02fb55166",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715576e3-a29e-4f1f-8b24-a9dc242852c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4876e5a-3a6d-4a6b-8d8b-a89fd7c3b675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec8c28b-4a8a-497b-892f-846a1d87250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e15da4-3bbc-4b2d-83fe-742c87d73caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb40b6e-0582-4801-a99b-12e04d93b363",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3999661d-5c17-4acf-b807-c098d4e5e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dab86e0-2ed9-4071-8b77-cc30940c751c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d49f43-7d94-40c5-b371-bda6bd4aab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abd7a88-bd0c-40ab-bc33-3fbdcb49b678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453c936-abc4-4d44-840e-d1ee6f6f1f50",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912083d-9f5a-4d78-84d2-55f2408fae7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ab2a1a-182a-45eb-acd5-55cb302432a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97c387f-6a73-4c04-af10-c1a9c0e6849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef28edd3-01c0-4328-b45c-7faaeb4d0d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8da468-0f21-41bf-9c17-39c93684fc6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8ec8a-c288-44d0-bff0-2fc65abbcc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e854fa1-3a8a-436d-9250-f5f3eef4f206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535d7f9d-5702-4478-a3e5-58f2140a7a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41221d8a-6dd2-4d3f-bb96-1fca6d9eff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b1201-56fc-4f9a-81d5-a4d6ee3d2ed7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ef3096-4ad3-48a6-8b3c-8a0de39d472e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d357d53e-d5e7-430f-9ceb-e974a915e1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e95f3-2e97-4382-a6de-f6cf839d58ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5305c23f-b18c-4610-90c5-b7e932382bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6673ee-e9c5-4216-99c5-f1ffa6801777",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dc2da9-b65b-44ad-8e3f-bd086f11fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58db9a31-54f2-4142-bd93-4486f234699a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ec53ad-d3b4-42cd-ae3c-65aece8361e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8e66a8-1a00-475c-b1ab-2db0c5d0b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8dcb2a-600e-4769-9293-c6170445b642",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda63e1-2bac-4f9d-b2dc-b9685568bd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab737037-5210-4670-8f10-816bf4e1c48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591174d9-c7db-4352-bb8c-2f1dece3406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "452fe229-c4ea-4970-8730-763599a9f920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88bb1d7-5dc0-4682-8967-f0f983cf059c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d350c4b-282d-41f7-b8d1-3405fce73e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b260f14e-18ea-4d6a-b7d4-ddd44663cd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269546a-92d0-4421-ae91-5a91bf818222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e00ca74-c498-4d62-a5aa-764e7dfe5cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad35e8aa-0f94-4757-bd2c-f9a870a883f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba4bd80-db06-435f-9e1c-d47b0fc26fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cf2dad-b6a1-4b3d-9c6e-b05b4747c1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a392d3e-475c-43a6-8360-4ede3583a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44cd976e-bc5a-401e-95a6-b9592218ac13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65592c56-ea4a-45f3-9ba8-244019978899",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5a74a4-0054-46ba-82f1-f9779cba418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60f1d93-4a1d-4af9-86a7-d323c8be7b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c568eb4f-6776-499d-993a-68ec7dbecc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "499a137a-b44e-4515-adf7-89ffdc80e285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cc7358-8e21-48ee-9a06-c895969403cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaeb29e-3505-4ee3-99e9-67021fda7c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ec02f3-96b6-4143-a157-70717d489b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dd0bcf-019d-491d-8bdb-2b7161a53750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc489ed-fde1-4a02-9225-e7b4155120c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e730d-86bf-4c76-8963-0198184e8e35",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e12a7d-ba84-4087-b85b-c560262416ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87142359-7ff1-4b27-91fa-724176e41f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ae6d48-fe05-4970-a7ab-72baecaa2dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a25f01e-1466-47a7-95c6-1721eac62c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d264f0-64cd-4c67-8781-d66a39e7f1dc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270ddbcc-c2a4-4cc1-a2d5-6aebae468b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4cb618-47f5-46b3-8320-21d0a81baedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23a6868-efdc-46e8-bef1-16e0eafbece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43a2d05-624f-48f1-84aa-c0f42f495524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6395bce0-306f-4a12-8144-ae5099857402",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a7003c-7a37-48f2-89ac-009c2848114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5507cea-86b7-452b-a086-4585a7f5a6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a1a8d-fa02-4626-8bab-b9e0364a4ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03dfad62-982c-4295-9771-6fd1022298fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142a111-10cf-460f-b1b8-80cef8b02fb1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d3f78c-ba35-4e51-81ec-2d8f584b9fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7739099d-fc96-4ad0-80bd-517eb1f788bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a2510-948a-4297-9c34-4eebbc3788cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4c77f2-baaf-47f7-bc7f-78c54b85c872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865d6c0e-1cde-4b3b-9384-15b0d1820697",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb7797d-c068-4fd1-a96e-4b39056213ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97043f1-73ba-487c-a028-6eba9adb9da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534611c4-7240-48ba-9421-2673e550f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ba3684-9580-4eae-ba63-60b93fcfdadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc2acbb-cfc1-407e-adca-1a38289e9d0f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab13afc9-c5d7-4d52-8be3-71da9a63110e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c395a3-ae8b-45fd-aca5-471e7174900a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40cb833-035f-431c-b3b0-e0add39e0862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e52bb3d-0d63-49a8-a5b5-8d46cf388d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d008f5-2e11-4a7b-b54b-97b0574f35ea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d501af-8a87-4751-873b-7dc286436b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d813c89c-9e93-4efe-9917-71c9a1770c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20615ff5-477e-4ee0-acbf-b0d82608d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "656ce30d-34b7-4923-bd01-e115db435dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562d6f48-2aae-4068-a823-c040b99110a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeba375a-03fe-4f18-8b0d-7dde7e1195d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a1026b-e6cb-4889-bb17-74e2a5bc3142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c92306-c9b8-4a1a-9472-3f49bd6b02e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79558784-4435-40a2-a156-ab6a96e4a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b9520-fc72-4fe2-986d-166e4286db56",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb82b77a-c807-4021-b181-356fee9c193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c540ce6-8639-45f0-9bab-dd3fbfcdfb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cc2e0c-01fa-4bc3-99af-681d0c7e1753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d17a33f-943b-4c23-abf0-70beddf47a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b116c2f1-b5bc-41c8-99af-f328fbe24895",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc56836a-e4bd-4310-9f3b-8b9d4e68ef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab55f1b1-b22d-4366-afa2-e11473f6744d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21933566-1ce0-4e53-a930-66b5ec938de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b9f079-62d3-439c-8a69-aa543b5b78ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f3f87d-fa72-479f-b802-67e65e5049b1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0af5388-bd05-45a6-bedb-24fccd7ca59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd58f0ab-8ad8-4c61-8f74-77dc424b66af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9df60bf-22ae-4d4b-8020-554dae906d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61752863-b90a-4a51-a7f0-0c63f417beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc5e5e3-cd1e-4397-a905-2c1944ecff4f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbe506d-9510-47c0-8421-029ef61ca14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeb6733-4175-4c14-92b0-a641376a3403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe52ef6-f226-4e10-a8f1-8c52a3da116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7845df01-1561-4e51-9bc0-2cdf6afe37d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dff17f-ae45-4442-9eff-ddef508fd099",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9a33e1-8ce5-4184-9a57-e764bbdccad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2827279-8789-448d-801b-111364e41b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d9f2c-549d-4eec-b69c-d5396ac38009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4016fa8d-9f7b-44b1-9b65-5df5640af08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572b936e-30a3-48c9-88fd-89d91c8880c4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240abff6-5f87-4180-82f5-4d44417df17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa0fed8-ca69-4017-b4af-7310934fb5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6928cb-44c3-45ca-b3a2-ee3c140b91af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d7aa6c-f04a-4bcb-bd3a-1d4713470f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2d1589-6084-4d0b-bdeb-acf40fe63fae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adff477c-ba15-4cd2-97fe-11a8e196fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea03765-28a0-43fd-91c6-c4496c5c2d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361d4c3b-7a37-40be-9992-e11e69106c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d85c8b-ff02-4b0c-a655-e12ca0e5d161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d07c4dc-70b3-4496-9c9d-98eececc0ac8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde89e85-fc02-40b2-9c7d-1426f9518095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa195cd1-1444-4ad3-88d7-65174b08e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f38f1b-90cb-4c1b-b8bd-dcb9042b5d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb64870f-03e4-41f5-8260-b3228ffcf206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f81b3dd-2379-459e-aaf0-2392f53dcdff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df7af46-1766-4aed-b725-c54f19e84df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51b4ee5-aeba-41c3-b510-95483aa4bd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f8e097-2d70-4f37-8a12-eb0493d7230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d389d345-6cb7-479a-95a7-5c6ec04688a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48336a5-4c48-41e0-b878-3531be71c354",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a739a1a9-2aaf-4d4a-890c-e42ed6d2c7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b4207d-9852-46fe-ba8d-83534544e1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56e182a-a881-4103-bbed-0dc809127945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f5b8a0-55dd-47ca-a85b-7ec540089ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30edb492-dd79-49a3-9a0f-d3be6ec3388d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb99e07-635e-456d-89f4-5a621877331f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c89707-8e32-4527-b4d8-b2e05dc0df23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fca735-f4c3-4de1-aebd-0191193c6de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22e505db-4af4-45a2-be0e-fd147355ff7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933bf91-c183-4afe-b56e-0056b77b5101",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827cfbe5-7534-4ace-a6ba-629e444c99e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027c1c4f-cb3a-4442-a180-5e097a890ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a960cd56-8c03-4101-8a80-55e2cadf8c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b327e1d-ff91-4d2e-9f97-f084f3d341a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862ec63-0389-4934-8d5f-57b41f353bbb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d4f5cf-ab43-4bb0-b9fd-a3b55c4173db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16369e2-96cb-42b6-847b-f54201a93158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a469dd-c627-4993-8de4-c5ac433606db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b6c7fd-0961-4664-a6c8-36f8ff1e9930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d042eac-57a0-4b58-a623-dd20d8112d78",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6da95a-4707-4b63-807d-f2d7e8ea1978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0350d7da-a0ae-4e1c-9f6a-c273a7a8b813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2115784e-a8f3-4e74-ba99-9c3ec5211b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cde491-1625-41ed-a7f8-60dd4a423559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9224dce2-a545-4607-b83e-0ec1d7052190",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cb451f-2046-4810-aa1e-a56ec343bd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fbdc79-f307-4786-a808-b35695a67c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6dae35-b89a-4c16-a8d2-42cb0d32abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6f8b32-bc9b-4282-8013-e5e770f8c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e70d36-69e6-49b3-b460-afa275c70a4d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f649cc9-98db-4e9d-8c19-1345b09b0952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567cf372-8bdd-4e74-bb7a-9d4ad632d336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2418c4fe-0ca7-4746-8f1d-0f622113b808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08b59416-77ce-488a-9076-443d68693fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3f0cf6-ce83-4f40-8dd2-3a67c8d81cb8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c677772d-bd55-442b-bbf8-ba23dbe657f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2759cc3c-d4bd-4e33-b3c9-bfb694adf5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bff8f-b72a-4388-9f79-7b8517584b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b720ad1e-07d3-4376-b294-540eecf3000a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd36848-b723-4e30-9380-0414e7fdeb38",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ea4e0f-dae1-41e0-b307-e56b6c1ce1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd74bdd-d48b-4b8d-9ffd-11ebf7dc0977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ff89d-1d35-4bb8-987b-54aa3d69490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9301b6-3b3e-43af-ba82-fe3758125c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbce680-5250-4d20-963b-bc4cc86a969a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3039e9-a18c-4f25-ac06-d672b400c1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4156a1dd-1b91-4193-a72f-d1359264cb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5331839-0f94-48eb-87b5-191cc679f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f12c3e-4ccd-491a-91f9-b94fd733a9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31072287-7169-4e73-9589-e719ba9b70eb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73f97cd-a350-4945-be3d-2796c110bb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9302501b-8be2-4472-b0c0-60ff413124f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4d6dd2-4762-42de-a113-ab769c837cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0adce8f6-c822-4606-9c3d-c1280167f04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa023c6e-2d77-4c0b-a3c0-109d89732939",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e02796-e419-4465-8a6e-3adf9c773cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d37bf-4eee-48c3-bc26-1a965f0a7be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59855604-59b7-4eaf-b7d3-78f4de114180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06b9d277-dd41-4dff-9ff8-6b57ce059526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb0f873-791d-4d67-84d8-3782427c1200",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d2abb0-5902-4005-8969-132350c6e1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83d1920-59e1-4805-be53-b949c9fd82f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7058606f-522e-4531-97cd-370791ebed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75a91d1-9be8-4351-a2d1-2dd60b886a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bf2765-0890-4704-9311-53d7ebca84ad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a242cc-ecfa-46ee-a0a7-a7c5a0b38a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a750b939-c2bc-4922-852c-92ed030287f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eb0ef9-3b75-4035-98ca-8f4c3ee33b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d98a82-7968-4b0e-8d13-0b7f92d323ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d253acb-b165-45d0-9b3a-433f47ffd398",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aabd1154-b66e-45d9-ac66-c58860d4ef45",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccbbb38-ec65-41b1-a69c-2c552aeca55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d38f0e9-a5d5-4e98-9c7a-671a92a2907f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cbc038-a9d2-4074-a9fb-a73b48c4d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8273ce-b333-42ae-939f-caca1ea2be84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20a08563-6520-4e5b-bca8-d9d2401eada1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41654285-7788-4175-8291-0b8497a4b3e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae6908c-84d5-41e3-8a2a-55bdf0f03b23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03afcbbd-7d39-4874-8a75-883221c25005"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "177a8abd-0ef1-48c1-9a7e-0350715d013b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b403b9c2-90d8-4535-b97a-ad626557d3af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4348ba4d-70b1-40bc-92ef-c9f50d720072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39013afc-d769-4264-a6fa-02c6adccb2db"
                }
              }
            ]
          },
          {
            "id": "53753967-d1bc-4ca7-a761-c452ab0d9c44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1697535-d8e0-40e6-83a4-913f24b7cc9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "813f2ce2-4383-4d22-b3a9-b6b98e20a4b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91bc7b05-2350-4bb5-a215-507f9514525f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40191598-a5e1-42f1-9360-8e0a60bd3e61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9429f26-75fd-494f-aa1c-b2c26f364674"
                    }
                  }
                ]
              },
              {
                "id": "3513d664-34eb-46cf-b045-34d6b6e50286",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "242afd71-1857-42f4-8cfa-84b6d002eb64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7d6d22a-149f-4725-ab1f-c329a030386e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f2be19c-99dc-4860-83de-2b950b238fc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "719508a3-b33e-4e38-a803-8491f30bbf90"
                    }
                  }
                ]
              },
              {
                "id": "dc49cf9d-eff4-45bf-a94e-f024d1741c75",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffca4d2e-f7c8-4aa8-baa0-2a2e08182bb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c165017-b9e1-499b-9ad3-89b9ea8ac51d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d49feb09-c97e-4f8d-8ddb-1566dd1ffb92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20b1aea6-69b5-4345-b4d3-31ffd36c61fe"
                    }
                  }
                ]
              },
              {
                "id": "218f3bd0-dd9d-4239-b7e6-b378fccccbf5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e41ba8d6-c42a-4189-ad22-84e8239d1785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "318b2b75-acea-4e22-bcc4-00ad9f87515e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6baee97-e46d-4275-b8b8-0d9a4ff1d907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b26e1bf-9f5a-4f02-a2a7-78a28c46ab68"
                    }
                  }
                ]
              },
              {
                "id": "b14945b1-c120-4e50-beab-cf7e98c0cad6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b278861-5a93-4ac8-9ee4-b93049f844c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b901d186-b243-424f-aded-57eafdcd687a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e46f7fc6-0caf-492f-93c8-d38120e7c628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dec4a238-7764-4974-bc5c-26a28355b28a"
                    }
                  }
                ]
              },
              {
                "id": "633698b0-b356-43ff-b39c-541508070607",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0bf6e04-85e7-443a-8d44-0d94ef7f77d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa433db8-b3b7-4318-83cb-b3af47bafb3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef6745bd-7122-4a5d-9233-4028c72a4822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad67016d-0d4b-481c-a516-8c8d7a11805c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ed7cba7-7ccc-4ea8-8122-38deed6af56e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "741c9f5e-3a65-476c-b71f-db98fb69a4c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "184f1431-570b-4772-941c-27b3e162a3a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d76c4ddc-6d76-461d-b4c7-e713634698bf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99724bfb-c155-4579-9012-1a87b394f835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "74dc4dde-c2a8-472f-b8db-4f0dc5f612cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "549a45a6-3a40-4e4e-8cec-ae27921ec778",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b585f8e7-5de8-47ad-a969-36674e6a29e0"
            }
          }
        ]
      },
      {
        "id": "3a24a63d-174c-4f9b-906a-a8144fbde92c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6546d24f-cc82-4c05-adbe-9680d708b8bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d6fca8f-1125-46a2-a829-e3468b2d173d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54b2c749-f3c7-42bc-9bbe-2951e01427c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed3f507-d75a-4d87-89e4-17ae0984c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862de2fc-06bd-4a25-8ff5-bb8fcfc4c3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf01e5-c9b3-4297-8455-a3be095cd6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bea1068-a54e-4ee4-af4c-374440dce489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fda41-c565-4e4a-84e1-179a75a6f59e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bbee75-a22d-48ab-a4d9-08b08425dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7082ff5-1bba-4c95-8396-4a0e05df2e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5037a76f-12e5-4df4-8ab8-aa0a986a50e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ea92fb-a9c2-4a0f-8a14-3eba80964471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9b3ff7-a8cf-4377-ba7f-e35048b6671a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5ae00-e0fe-49ce-827d-185efc120358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b7c017-3682-4da3-a252-983fcd0860e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007f27f1-e94f-4d71-b436-69e09f06cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5daba97-37b8-4e3b-a04f-a52c0c18bc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de4a94f-7dff-428d-b38d-4ac491ad9042",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffa7805-a56a-491b-96ea-71c231a36ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fec729-cf46-4570-89d2-b4c672fa202f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41564f17-2e6a-40a2-951c-77cab19bfb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05f2240-04ec-4a65-ad3a-fac057497a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2db412b-c878-421b-8176-b8369ae7dbd2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc22b89-dd52-4673-a624-286d6ca2e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd176842-a894-4e32-aa8e-23aca6cd9ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dec7794-0842-4f42-9a2e-2f6de682a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c3956-941a-4407-922b-de974cd4c002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0765a3c-c50f-49c3-ba78-bba30f91ea94",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70557b-15af-4545-b0f9-a65d87751152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91adf1a0-acce-4cb4-a426-00df35124c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def05432-4b4b-4e7f-8f21-055fe7b27411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a749aa-585f-47d3-9e43-c25c32b8d925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88672c47-0efa-417e-a6d1-645978082643",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa7d04-a646-4f47-aeee-c97d12d3f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bd6cba-2e42-4a2d-af38-50dfb55444d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fce9748-6513-4c59-9b11-e4e0f486d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ecd764-e495-4c72-8503-467f23aa0840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dce362-4b30-48e1-b92b-c5974e13a776",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab8312c-1b84-4130-a80c-d2b81218ed22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3740f45e-a11c-42db-bd7c-19578230f89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9899b0-9536-4d1b-aacd-4dd205548357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a56fc1-9030-4445-a8ca-f69a8285cf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d675784c-8d10-4af8-8851-cfd4be13784a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f7a57a-37fd-45c7-9e3d-bbe215947284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ee5d34-9f6e-4061-bb80-dac5e0486c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e627cdfe-bbbb-4322-9b0c-eba4e59f73c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "086705ad-226d-4fdc-825d-15dd97ff8b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125eee54-e298-4ae0-af61-dc0536ae2666",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e007f223-2689-4c70-a200-b178225be531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465495cc-b0e1-4826-ad0e-e937818c33c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3380125-c228-443f-82d0-710867ac3942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfa348a-4259-4ff8-bf76-d10b7cc006f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21541b2-f744-4178-beb9-ecea89175b8c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c6d6d6-cc78-4cc0-a816-efa8d25d403b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c2bfe8-7cd7-4b94-9123-4bc77a4e1296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38d0371-dd69-4a9f-b552-2bc6e5d860a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "565e25a0-e698-41f9-b09a-79439f14d56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32099466-2614-49b2-b360-a203f3801f0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b361214-a04e-499e-acbf-51bc2de8963d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff1b445-3f72-4c93-9296-53164dfbff95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30160936-a6ed-4523-b7c8-dc9c8cb1b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac69835e-715c-43b1-ab84-a7401e4954e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfccb5e2-513b-4298-95ed-5bcb62d1ef75",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9875f026-1e3d-4a6c-8b90-e50a4c441bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76d0d4d-e359-45c0-8ad6-e54477d68898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7a4104-913f-4d64-a9b4-7a6dc95fd7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d5bd1d-adb1-48fe-9b3d-1e755e83348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50f483-97f8-4a7b-9a83-68eeeb037bf3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea3d75-d370-444f-a2a7-26cb15d098be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcf93c2-64d1-43e6-8ebf-b02065885222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962b6d3-f3e9-4920-8c2b-e8255e4bec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f145af-0a04-4ea8-8fcc-b52a69e3b4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e571c8-416e-4c92-8872-7fffe3e81232",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7037b0d-86b7-46a1-a0e4-033106ba291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3f4db4-17fd-4c92-85ff-b68044b7e94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14529edf-aaa8-4260-90b6-622e671cbaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f04e78-27c2-420a-9a42-5b62c65a6685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c3504f-460f-495a-8cf8-f9458df53c18",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f578dfc8-be33-4fe5-a3dd-e39b14b9f1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8009fcb-ca46-45ec-9d6e-872ae882c95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035216db-d480-4d92-a676-57b9fbd63e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9259d3-800a-4f20-b933-e50345ae6389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee777c2a-a981-46dc-8c1f-b597ab74c272",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9486264f-e5d3-4646-ab2c-c4c54c9b9e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241f36a9-4e16-437e-95a6-b182204cfd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f122a4-d26a-4424-9120-c8e9aa535174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fedacb-654d-4d76-bc9c-98acd05e9bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a3a2c-0147-44d0-a49a-0edddc729511",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b5bcb4-2c48-487f-9612-75e5335c5af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa4a0e6-d4df-4426-8907-4ca5a16c15c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f057988-3b65-40b4-8479-80f01fafe9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff63a09c-e360-4a50-a4a3-c1bef0c6f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157f7771-01fd-4e3d-b3d6-7da4ba0c2893",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5885cc16-a637-42d1-a035-8a2976641a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9874d526-37fd-4620-a166-4b25475e2c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49621ed-caa1-41cc-a1d2-d20e158e7368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "377c4954-3bb6-4e3e-a514-d5325bf373ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ebc951-1dfe-4494-b833-ce3098d618c2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fd7bad-7f03-4f76-a95f-b1c4ae060126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99895920-3aa2-4de0-8745-3d7f400a62c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b57b31e-e0e5-4e4c-9ff1-2324dcfa16f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9618f28-b6bd-43a1-9003-4e93b3ca6e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b21adc-8a9e-4170-aa77-0c91ca48b061",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241b785-2b04-4be7-8965-a12acfff575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d09e97a-1ee2-42f3-a9ff-0f081e570737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9671bcc-cc35-4bce-95ea-c59ab2202e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ebc41b-6db7-41cd-980a-979286c604a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75260929-d068-4609-9085-44086d97a07a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83df69d8-22a8-4f71-bcdc-a110f70ffd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8de0b4-e29c-4548-a7ae-18f3df58f5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205487f8-9886-43f3-ab03-d81d67437374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d07d961b-71e3-4232-a6c8-41d9f5c8b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e0480e-b303-4404-b0d2-62d266e4bfee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8345cc-f1f2-4e5d-bac1-3a8f065bcc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185fefad-6056-43f6-b1c5-c16d68a5cfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d430f6c2-b13b-4c1c-a8ae-e2103e2e1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc415d2-2676-482b-bfe1-64192351fdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87758ca7-5265-409e-a6fe-38217d66edb9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8256ec1-d330-4c6d-817d-137d1fb704a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc7a788-78f1-4372-aaab-1fcbf28b9f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b2b45-4915-4034-bcaf-da37dfe8a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff38760-2cbd-4280-80fc-7bc46c45bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30af0fe1-09f5-468f-8eb7-a47d42c81a10",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85edfbb2-e2f8-42e3-96b4-c39231cb37a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c81d7f2-fc52-4d84-a283-341db395e110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00791903-b3d7-4835-b89b-a991be4bace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7c3838-1a86-49e5-b2ff-4db1962e8edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6882ee79-4246-4baa-9f79-3bce43f99e59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78827119-e3c9-4a81-bca4-270fc092e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cc92f5-e2b2-4cd0-8a29-a341973e3daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769d9d0e-d916-46ba-a6dd-abd1e9b5541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46af93b2-81f4-4245-8460-e6fc05c79d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69429ef6-ef68-4ae3-946d-84aa454d6745",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e859a-17e9-4378-83d1-e30958cc6c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fe49ce-8aed-45bf-9bf9-5e8ef0649e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcbd03b-e0c8-49c5-aa84-2414ff7d49d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98d6f6b-10a1-4b35-b4fb-a556701abad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfacdcba-cb9b-4024-9aba-f0b33883e1d7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e038249-20e4-4313-a64c-ed8d3eeba37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f88c486-a235-4eae-b3c0-98b31c764f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59917b2-a1a6-42b0-83df-7cc81d3d3905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb6e861-49e2-4121-8b0c-24b1376822a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2b5d1c-c0a0-4a6d-8467-1594b8750bff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9203e3-27c4-4b0f-9281-21fd0045f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdae0537-973a-4312-b45c-4293ed7ddcbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f326f3-9c37-4888-bddd-0892490c0a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e822d826-ec24-4c2c-a5a5-b7c545c63c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70458f5f-a3af-4868-9355-272e7020e9d3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8ee29e-1740-49a0-907f-d2d55d8fbbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7233e5-3c77-46a7-9c0c-160e50a80bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab539a5-9ed1-4430-9835-c12b9f35042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4835848f-ca03-4d64-97b2-032dddbf75f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a8e8a5-c2ae-4f42-9c4b-fb8344545747",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4d8b6d-8aed-4a44-9b40-004819f891bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c37ca6-badb-4d61-ab7c-8ce71e809bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea5ddb7-9914-4fb8-b131-8af63383d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ec2d4b-a085-46fb-a4ac-7c953cc83029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfac9bee-edeb-464d-9b08-75c74a02e2bc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a79eb7-f9a6-402b-bca0-03ff858f0e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738a2a49-4fc0-4c91-8bd9-a54aac57a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5d17b-fbf4-4d40-8cf5-14475199ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a7f10c-8e9d-4b52-9bd9-94d1a269fe52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3a7d94b-9661-4652-8cc0-c6b14a856324",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95d1d0f6-ad5c-4ac8-9cb7-a35a083b470e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a3393-19f5-4a7c-a947-5ad5279f067a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "72cfcc40-1bad-4f3f-aff3-2d57a43b32a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721855da-bd44-424b-89dc-39241b587c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91d8cd3e-f894-4369-b0c5-0a74ffd2ec3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a198d80-4edb-400e-b838-6c71a98b0d43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25779936-b959-4b84-819f-99b586a3932f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c26fa4dc-5642-4643-af65-4ac8250573ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0068a514-b7a4-431b-bd33-7360ffc7448e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "890aedfb-5cc6-452b-8890-d456bf6a1a99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16b5b832-74c6-4bcb-a345-e913b21bc23b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0bc04e7-a7f8-4212-8f3b-e3ae42e81929",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94a54244-cb70-4714-b1a1-6091bc0cdb71"
            }
          }
        ]
      },
      {
        "id": "b63b059c-186a-4f52-985d-1aff3b6babce",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4872a650-c995-4cf8-9a90-03585d512cff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dc3eff1-89b4-4aba-bd88-a96d14b54dfd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "856dc315-49f6-4303-96fb-07123ee7c726",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fec536d-fe88-4ca1-a2f2-0727cec73c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174805c1-53af-417b-9793-314ac2fae81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8de41ff-9aa1-4fab-85f9-6a79ff5e4a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8fc659-3a7e-4740-b6a1-e45faca7de27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65395ee5-fb46-4fce-9a05-1ada3839f444",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8733e32-4637-468e-8daa-ec2752c9a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1212cfa-149c-424c-934a-a05f300e3006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb35106-5bd8-4dcd-8f0b-2150f1e12bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "766221f1-90f7-49f0-9813-f95d11f6a6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015c29e3-b6d0-4087-af21-642f5c9d9010",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cf2da7-4979-4068-b6ac-94101f29776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35905b21-d50e-4b3a-87ca-e3cb4ff1466e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a72129-2060-43a1-b2ef-e8214e6705e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "104ef0a1-7a97-4130-a290-28f7878fa0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3961afd8-4d4a-4f33-b0fb-3a74c812406e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418169f9-6515-44f3-befb-24b746388605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbdf5a9-d1aa-4864-9845-f2964117e2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b213a6a7-835f-4121-ab6e-706d85701d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "289f2d77-dfa8-4aa4-bde3-488cc46a68cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c59e7a-f778-4d14-b749-2f40bf061fa2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9d520e-08c9-424e-abbf-5ff67cc5b851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be08d35-fb55-480a-970e-b4089e903953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9075be-5b72-48d9-ab64-07f84b12abc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15801191-ccfe-4a38-9478-abf7c9556742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fb4058-0eaf-43f8-92cb-505019418a81",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af2556f-fbde-4a2c-9436-32c332b39c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443749a0-32af-4081-bd1c-3119a3622881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48a310-34d0-4b78-bdaf-a381a0d6e0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1ca9c4-dbc1-47a9-bfb2-e72564689515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d0f694-686c-4ba2-869a-38c20748a01d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a76b28f-3225-43db-bc30-a2249836a0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2116c0-f4de-4cc6-b5db-a9198741b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65530cf5-a290-4390-a24d-db56444ee47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "df112959-4e02-43e4-95e4-9c8c3eac5755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003aa85c-4686-4485-bffb-7d5c876182e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db7184-029e-41e9-a914-17aa5ff7f8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b5d048-677e-4d5e-8845-e1b8d0101500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1fd4c7-8ffa-402e-b0a9-e4fb350c0039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f8f170-0759-4cea-b606-d93519b17c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ee7d35-0991-4cd7-b45c-328cbc572428",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb833d3-6dd5-4728-ac40-fbec75a2e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a935410-e31a-46cf-b5a9-ff78f8064abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e44be-51fb-433a-a622-9456a58ffab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1e4190-cd27-48ef-a34b-14d9f06ce305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07886f82-199a-44f0-8f42-7baf06aa1992",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe994900-e275-47b2-bb12-d8715d5542d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10d815a-009f-4d2e-b691-ba434fbf0289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82894f58-620e-4c86-904c-3bc11581518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76512a92-f3c4-464c-9305-0cd7aed13bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2140483e-e8bf-4a89-8b4f-3ad7a9442ff9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707a975f-223e-49aa-9c5a-2559a60dfdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a9c15e-964d-42a7-8255-aa73e4c30caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12022fa5-cbf4-47d8-ade1-a4a725b19c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "abe8830e-fd36-47b5-afed-cf39b567e2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d189e-4d7d-40f3-9403-d7e3a11a8707",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1227a2-2997-418f-9c89-a2ce28ff4a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506aa9dd-025e-47b7-9170-1fdd086d8bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c40dad-7263-44e2-a900-c0421dd68c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c628dc40-ee2d-4ceb-9e01-ab55c633bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bbb381-9d17-4da1-8647-3540fdcb7621",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7b57a-f305-457e-bc01-ed2a7367def7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1023651c-badf-4128-ac3a-ecf54ca3853c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0313b3ce-e866-48f7-97ad-c216cf29f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5f650c-2d74-451e-ad1b-d2eba50180ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd9275d-aa20-44f9-98c2-d572baa411f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b70f871-3f3a-4ca4-9409-42c820deef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173390c0-93ef-4f2c-a249-5dcab7cb237c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a844f81-3599-4d2f-9b21-44b7c06e44f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb663989-a742-4720-b178-76806c8e15c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b2038-2c16-44fa-90f2-f6d11d72f2ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d305ae92-53ea-4e7f-a7e5-148daf415714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facbcf56-b328-4b2c-a911-8c41e87b3a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aa7aea-bc77-4e55-816a-74f6f4c9346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeacadc1-5183-48bb-a5a1-8943f443dde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2cb3e1-2cd2-46dd-b92a-ca73d36a9771",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b619da8-332d-47f7-b4f1-f70956f61d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d7aff0-092a-481c-bf15-88783cb9729b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a59e3a-28d1-40b0-9a31-6f15ca33b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8a38cd-143f-4319-9481-48adba7fc0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db9fe6f-c2ce-41fd-b753-231526b9fae2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bedd2b8-3d43-448b-994d-ec055e480098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005da593-5ad0-48be-8535-fadd2f3ee9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2ddef4-341f-419b-9ed6-eb1962e23466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db2a7ee-3fe8-478d-becd-7ba474e7c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5b168-c183-4b78-a597-97f5b153c734",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f771ab31-e128-4161-9b46-156fa6e129c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6874b2-fcc5-487c-afb6-8b4de519582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3ffd8d-b296-43d3-a33d-745c592aad8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0285f05-d993-4cf5-b20c-d4e11f719a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7238491b-6183-433e-84e5-6eeae0466d18",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bad0080-9aea-4e07-84e3-2b4e190af5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2932f6e-a1c6-4745-bd25-0597437a0a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a71423e-0fd3-49b7-88a9-0d9940718899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6e9c6e-c424-449e-b19e-daa2947000cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c16f54-a2a6-4c85-a114-317e86e99ba4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae06cc95-0bbb-4fa0-83cd-2a2dea84261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b68f161-c109-4e50-9190-18ab0941ca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e0b172-70e3-4cc8-8b7a-cb27b84634e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f301511e-a144-4a74-b941-92409465005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfef2a5-db1b-44c5-9a8d-6500fbd07bc4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111dd24-4d8c-4fe3-9f50-63515d399ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115a1d85-e5d2-4fd8-861c-efa830a30415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa31b0c-b32d-44bd-9595-0ae595050ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1ca0b4-b45f-4dd8-9388-fbcaf8e0bb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e2c4f5-345e-4326-94ae-0ad47b72f823",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaff74c9-8f12-42f7-84f0-0bd28718638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0770ea7-ce6f-4c1c-b487-886585cfc7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1104d7e6-f439-4568-a1d0-b1288bcb328f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03da8698-a26b-4151-b4b8-5e46543a9992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71fe3e2-8160-4b16-8282-3d00721ea2d8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa960c0-5a3c-4729-b718-75df5fda7316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddc5036-e49f-4d1f-8c0d-32a273b18785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ded0d6-c3d5-4c34-8a2a-8d59504d4bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e43d29-d943-4bae-ba0c-db42ce397f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3291ba1a-4606-474e-8cc8-a8b9dad1d203",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8df2dfc-59c6-41a6-8994-e4617e24079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7464e7f6-1608-42a0-97b3-79c0c97f0dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227dcbe-5831-4e7f-8d36-b65a4b39c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933b2d88-9a0b-4c05-8465-2cc6171c3788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b99d68-da92-43a2-a54a-16fc0448f794",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c531a4f-7bd6-4e9b-95ca-dfed17195b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fed8eb4-d936-46e1-9d5e-b39850cf7123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d860774-c998-4582-9d81-85a2104ecfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2505690c-7f36-4a43-a8ab-9c0e7bdd3eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fedf7d8-74e5-4ad7-a662-0fc826f9c996",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35205f57-c758-451b-b2fa-5674d16fa4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614b454b-7fcc-4b3d-8d4d-2e51b29eb956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabc0a66-95fb-461a-a19b-a5d134f320bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576324fb-923d-4fde-920e-a7e87deb68e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b47e21-c145-4677-8148-182b6394999e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1cca9d-6651-4a17-8a6c-1daaf692b577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e014647c-685d-47aa-b569-899ffca8ef40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1c1729-5d75-499a-8414-df5120dddb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "109baf7b-f66c-44d3-a4c5-7761d814b03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264bddd1-20fb-4254-8c2f-5c6a82f7e8a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91b133b-e1f4-4533-8d03-8f630cf30429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37245280-5a10-4a63-a6ef-96d924395e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b96a20-c505-41d0-819d-a26ca25f8c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f506f5f-9299-4930-a552-5b2457c706df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fb20ae-3290-4f21-b040-597a874db4d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7210c3-8aa7-4ff8-bafd-f149eb67a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72357e1-2f93-4c8c-a90b-7e9e4226ba15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22359f25-7112-45cc-b0e0-c2cf9a03c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af89df2-b6e6-4a9e-a3e6-e65bb327b873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b894c792-c138-49e3-919c-41773d437606",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbec34bc-c7c6-4ab6-8e54-d193d28f5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f4089c-3a48-4591-b8f0-cec625eefcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a1ffbb-0ef7-45a1-bd5e-d5054ebd22b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4bc935-ad39-4050-b82b-4a397190eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c124f-eb8b-444a-a303-1a53324d8394",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4241e25-3609-4ba1-a84c-c90153f2dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dc0cce-839f-4fe5-aad5-dfe90e99fd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc78e8-bb71-46e5-89f9-23a2855dd507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "090baca4-509d-42f6-a747-7a263c63b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f131f19-39d5-4e7e-bafe-ed99c052e62f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eff91c-a12e-4193-bdc3-16874e1c003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac287c2-416b-4008-b6e4-3f5cd6d59f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a03388-23fb-42ec-b0b2-2e3203af6f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5762c41-4156-4db6-b8a7-c7ace8831349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bc56b4-4f79-460e-bf7b-5cbecceb5e23",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e4b924-ecf9-4de0-9669-cef265b9458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88c5f17-68cf-4965-90ac-96e2a1bc6ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172aea0d-293a-441f-b09c-60e310d03680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14971661-3158-4a4b-92d3-480eb3fb9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d1b24-79c5-42f0-ae7f-e2b6518f585b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49ec5b-833e-42e1-80c4-056438f1525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428d5051-c52a-4019-9c12-e8b863de2efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874c3ae9-1a47-40d9-be47-5f42d660ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b53577-80da-4c97-b656-fa8120319de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c26001-60d4-4a55-85f0-5ce2ba78558f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83ce794-ad5f-4990-91b1-3540aea030a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c05848-0515-4342-83b0-5275671b0e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0572a571-2b48-480d-b7c9-de498d8d9d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d70549-c77c-41b2-b00c-859bfab3c4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e76637-5dca-4213-9a91-62fceac804a7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d720acb-5fd3-43f1-80bb-b4d66ac91231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd47b3f-ba53-4f85-8cb3-2873cd6270ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d821263-23a2-4f14-b80e-db0340ecacda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7f96bd-c50a-431e-92ca-7638f77ff921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080fb974-78c2-4d46-820c-aefc9d7cfaf2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3829f05-a028-4205-a956-17349ef0dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248cde7d-0909-4486-aa74-490978d00d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90042eea-74a4-4001-9aa7-83c127468dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659659d4-b7d6-4e20-989e-226de5bcecf6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17267f41-c409-42bf-b0a9-63475677fa5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec78716f-5916-40f5-8edc-55fb445c33d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdb9660-330c-4995-8f69-251afa52b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98f99328-5df7-4e4b-bca8-e4d26559e6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309ab686-28f0-4a7f-a8ca-a026b630fdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86759576-abbd-406e-b739-fee5d8fd8930"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b083a28-57ad-43b1-b554-695c12f727bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82c78da5-791e-499f-95df-e44bc0d4d735"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00cb4e23-6738-4485-9658-ed9b6c5ccb24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7cd4e2d-efa2-466d-917a-8c2f9f788597"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffbb96ca-1d69-4e1e-b9ff-4eeb8b2a7f20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8f8f5e0-7f6d-43bf-a099-2c0a69839a4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a1e6bb9-2475-4a76-94b4-8ef008fcd3a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c23765d-0e2b-4c19-9b19-f26334d90300"
            }
          }
        ]
      },
      {
        "id": "533921ba-7adc-43b0-ab2e-3bbf0f0edf57",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dddaea72-61a1-479d-9d63-b679343266f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9eea40db-d383-4f71-a048-45f7867be1be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a09fe8b2-366c-49ac-aca3-2636b9b5f129",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de715c9d-87bd-46b4-affd-7d2b35caba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d0e424-2825-41e6-830d-0996deea223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bb3d3b-1ce3-468f-876e-c6791a0b5136",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a83972f-6df9-4f7a-9414-1a982e92a3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b7fec7-d064-4868-97e8-a969965b8326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aa0d99-419d-418b-a745-242c0e4cc832",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22568041-6e62-46ee-ac4d-510d6c1d0f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a89dea-1c12-451d-ac1f-7eb49b668594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb811a6a-6b0a-43cf-8ff1-243190081725",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30093a1e-bc34-479d-a7b5-186d42ece917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f214ae66-2e0c-48a8-ae00-461a3491266f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a262d77-88c7-420b-9757-a1aece8e717e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63740cf3-7f41-456e-a0aa-df9931ddab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ceafdf-421b-40e5-b0e0-5359736d6541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f48bc6-7d3c-4e57-87c4-06657c512517",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d69c54-c31e-484b-93af-b5f47b2fb7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c01c3f9-c414-4ef3-8018-0cd53cc5d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da2fde2-95b7-4b5f-9d0b-7154dfe3c782",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd8e421-b338-4ab0-ab7c-4ffa04512760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e710a54-4698-46fd-a9bb-84643eaf1865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b494e-a10b-4961-9dbe-d5246675593f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a302ffd-3d69-4728-b27f-72a2439ee329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64f8f86-40b2-4568-94c1-365ab029e323",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9aa9c2-b0ee-4e6e-a12c-1efbaf42e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8a3207-ac62-4222-bae9-03720a5a4689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971c6ee4-809d-43a0-bd18-33df658baca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf7f36-76dd-4c3e-a0a5-f52352f497c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9af76e-31d7-4e59-97e0-b1d77cffc1ff",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57047fd-fbcf-4248-badd-60a268429661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2750a67f-31f0-4ff3-9337-eb664f1bc837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a2f1cd-3daf-4f5e-80a7-ba0610115d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6349314f-1887-4d4a-9159-11690eeff09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b152df71-9a0c-418d-9b4d-5d57b07c5586",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9a0ef-92e3-4228-bd08-7ba1b3c52a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68489c2-6cef-46e9-b6d3-9bf9b19dde12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99dc2e7-1e6c-44d9-aefd-5b46fa5b0d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f4882f-1345-4231-8abe-2253e00fd3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dd20e2-2fff-4f2b-9b3e-9159b832f454",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf95f5c-5e64-46a5-868a-b508fca372d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd0f145-0264-4cd8-9897-e2ccbb4f7db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6594cf0-7999-4ace-bf0c-9846a67ffeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58073fe-ccf5-4aed-9a81-022e12f419b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3591261a-7da5-4b1d-a8b6-0e021c18e299",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc9efaf-0d6c-44f5-b2ed-556b47994c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff1e2e-e694-4c23-8ff4-19b8d45cab2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0739798-bd3f-42d4-8036-333f98c33642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6600e720-9c6c-425f-a176-45a56e837924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112255b4-fcc1-4cd7-b776-5c5d560192a1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facebb4c-05b7-4926-a220-3cb1c77b2c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d75e692-5c5d-448f-8e32-b60f8914a90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47404f38-0fc8-400b-aae9-948a663aca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa2ab32-a21a-41a7-96d3-73f1a83851dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87eae98b-be7d-4e30-8111-3c0b8c505cc6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b808f5-51b1-4a37-9983-6f9b34b2ec8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92992037-4452-47af-8cbd-5502ccea6397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ffe01d-59a4-4036-a63e-50f9abb87945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ee3f77-ed9d-4ee1-8f8d-295a7be8d7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbab2a09-4d71-417e-a615-31b0067cc252",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece8e7ab-d8cc-4e7b-9d8c-b68d2231109e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bf5b0f-c6f9-423c-bc78-4e2676980270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036a8d59-d946-4304-8e31-68f489101dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b033d-ba47-497d-8d80-ed3a4d0efc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2378edcf-7649-4954-918a-4252cc5c7f58",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86db49b-a5bb-468b-b0be-8166cba07f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739e9ca0-c5a9-4b7a-964a-862390ac2eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7345226-78ca-48c2-a7aa-431c1c286ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58e601e-8286-41ab-bdd4-a40c8121b795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac38212-9ddf-422e-84d0-f90e13419f67",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef396221-e039-4a0e-a09d-a6f20df10038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946a6f47-961a-4bc8-9600-3e7cbf94e262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dbec7d-b341-43f5-a0ec-a2c26b9a02a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f786e6-61ce-4cb9-b497-adf436370157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64899d9b-7730-4023-92ad-a704e0ddb50b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64bc43d-74dc-4117-9054-40a0bb0ddc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b8361b-3a62-4dbd-8247-50497b1d7f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43284806-e250-470a-a031-bc630a470ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baef763e-1313-4198-b051-796c125db844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb50ea80-7e44-4794-b46e-4df41bf7fe82",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd7cba-dc7d-4871-858b-2e123e228e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a709b2-027b-4250-9992-e7a45491157d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93454aa0-0e4f-4d8f-96fe-cdaabdc29374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0826475-0f13-4369-be03-89c082b8cc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc609d-b2c3-46c8-bd04-e5e27063b785",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec5341e-464d-449a-b104-a99197782ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e7911b-2066-454f-9476-5212048dc384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649111af-4105-449e-91ed-3e86a6bf715c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9efa189-9a07-4760-ae18-bf28f7799cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8b0dd0-5b4b-4480-a720-c6580532a101",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799003c-71a8-4623-8645-76cd8c90a517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116601bd-5a77-4f6d-ab06-fee1a28226a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f40d31d-54e3-4455-ba74-113841d0b918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49470ad-10c5-4cf3-9768-f68e15a95f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627219ca-80a2-4f5d-a432-44dfb7425f32",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27f24f-0d9d-4a64-9e1f-1203c193c717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e3e084-2463-4af1-9c36-b91af8a705b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121445e4-2376-415b-bbd1-3ea21fdf813c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aff45e-4262-4574-924e-3a79199def17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcbc225-d10b-4b99-a42b-d4a61866162c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe1d107-50fb-4b09-bd29-0037e7b87ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a319667-aeda-476d-b948-e00547e8d122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a9c1d7-b06e-4225-b70c-8392bfc23465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c336fca-15a1-472d-8379-db6b3d291e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd9b8c-fb5d-4cc4-a505-2193273ebf19",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732bf60e-4579-4801-b62d-e8459e9258af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c52bd0-54fb-485a-9c77-4a8c76d6fd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf483284-1bf7-4fa2-b859-3441d3124941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff9835f-83b8-4e53-b480-088f4e2f2ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc81dd-0590-4b99-b6e7-edbd3132acad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98d328d-d8ef-4623-829d-4865bfad953c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c025c7f-f5da-4873-8795-cd07404c2a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f0c6fa-90fc-4565-b06e-b2b3b4373b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cda1d94-0bea-45ba-b78f-fdb5b3fe8e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baecbbd-d442-465d-9c97-3593812ab108",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e84864-6df3-467e-a760-fab324444a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9819b5-371a-486e-8721-aba5f616f048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756cb0e-0935-4d31-80bf-b4f62048788e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70cc61c-7608-41c1-9416-77b12bfe179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5cec1f-89bb-4019-97ab-b74c9f159c63",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89775c2e-ccfa-4591-9329-1c222a02ed01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cfc863-4d38-42e0-8156-29a8c4317957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089314e5-b9e2-4f37-b25a-d07932b98e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644c6078-971f-4c0a-994b-0da3f288e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a07ee-8cbd-4c87-80d3-830e903b10c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86379ab-d67c-495e-89bd-1f8a3f59b636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0820e72-8f50-4b4a-a287-3ae62351c9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6190bab3-e44e-47c7-b75b-681ae61d6a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cf5d47-adb0-4515-8319-d5522d21d76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605816a3-e042-4d2b-a621-abfbe9c02f76",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7c65ce-39fd-48e8-bd87-52b85c0271a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82643344-0dff-45f1-9fb9-aa652c4fb6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e078814-cfbd-485e-9a66-e291c79473b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d713068a-9195-401c-9634-0166dd24ef82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da45c46-4890-42ea-8706-369caaa0a80a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19fbc53-fe74-4007-bba4-5bced3256041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfba6d58-2aaa-451e-a025-beb4b466bc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a3dfe8-22ef-44da-8cb4-0e2ee7e70d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218782ce-e076-4731-b074-29967fd713fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd6ed23-ef53-4711-b8ac-497abb21e31d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ac7bbf-fad0-4c47-b0bf-7dca9bea9cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe3c7b8-7647-4ffb-bd62-e2f445497bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd9f038-076d-4543-a968-e7ac9fd660a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb5bb45-70ca-4944-bc32-9419646ef612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d3828-845f-4234-b399-7e31b2f811ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b351e1b2-3eb6-45ba-8995-0bf81c7b1d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4f21a1-6645-4ee6-a0d4-c498a5946152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476b4b25-f2a1-4930-9e27-7dc21d77d053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f41a47-19db-4da6-b3f0-8fd3615b4327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5812e381-c43b-4549-b516-dabcf2bda32b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cd21b6-b8e0-4efd-9fbb-384d03e4f556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e64e75-3d3b-4121-a643-003f4657e3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf2197-28fc-4a71-91d9-f8345c90d7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87358834-00a7-4483-81ba-e31ef5821498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8db8b25-14ab-48f8-ae93-925930009c19",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a9cd5d-2625-40d7-b919-d5695756313f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a156ad2-423d-4381-ab2a-7d2c4501c06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de1be70-5f1c-4840-9788-f38dd7208630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21425c39-7c8d-4d6d-80dd-3e4dc7fb9d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c30ea8d-6500-4b60-bb9a-871237d2ca45",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf817fd-b265-428a-84a9-ec1106a9efa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d97acf-2213-46a3-a247-abd8379d46be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a5664-611a-4f67-a233-04f7253046f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2434bce9-5874-4090-9fbc-47b9b472efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab8cdff-fb1b-4440-87ad-df701ce23522",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec784592-fee2-4601-a4dd-7f60a368a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018a0805-3b46-4ada-bb1e-6d6a9c906d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352d06b6-49ab-4f2c-b6c2-8f838869c80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c87d8c-33e1-4b33-b850-4d808ec6a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0ecd9d-09fa-4ad5-9b9d-9932541f2e40",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a1c85-57c7-4fd1-b280-44dddb8bb3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a7692e-e36e-4660-a3e7-50dad69dafc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b44747-7545-498a-ac5a-e88b0fa405ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9030cf2a-5427-423e-a542-c282efe70556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918e4b60-1c28-4518-9303-6615545f2278",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70b5bac-dd77-46dc-8a6e-68456a3b6072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc19a61d-6acf-4afc-80c9-3d51cf6d42e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d9a8a7-66f2-433e-a851-0adde4027587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1d793a-5ed1-4c1a-9daf-3cc47ba15b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b721acb2-3279-497c-b504-dcf3cebd5db8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dcf873-f7ea-485c-9c7c-2ff96ab17d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e65c72f-93ab-4b1e-b2c6-cdc7f9f6f669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901780b-23d3-4a03-a9a6-9ce76653b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af0fec6-f877-4aea-9501-90c6ea55ec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41cc04f-2dc3-4844-ad42-995c7ec2f43a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac7144-8aaa-426c-b2a0-76c9ed2de126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed4d6fd-a34c-4aef-b52a-0ab30d917ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e211d2e-58cc-4e94-8f73-70d6a84d6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af713d2b-7f57-4d9a-8eac-2da3b86c8b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d95921f-5b55-49f0-a20c-46870d9b74f0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5851c325-2cb7-4ee8-92ec-dc1048e63be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e14dc25-8e2c-44d8-88d6-10f3b509f44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba1155e-7e90-4706-8a6a-c82a07ab48ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f36bb4-8d11-41cf-a90c-9ac710e2db3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb3c508-83eb-4d16-8d5d-398790761ce4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5094a9c4-58ce-4157-a378-736342424a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e3782b-854e-46c8-b7dc-22a4cb18b71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bf0f9a-7ed4-4753-9f0e-50cd89b87190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893fc8a6-296c-4b5f-8cbd-1917045b4321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b63f9f-cb44-410e-8fc9-ef0d47b6ff4f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb9fd00-31a2-4462-b973-85f6c5a3ed07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335fd6cc-a6ef-4826-a96d-e0d5d1d1035e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3ebf9e-0885-4029-b5bf-35b23a39e536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a734fb0-2682-43e9-b01d-5937d13654da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a583a8-13d3-43f4-adc3-3e163aba5bff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c5ceba-29bb-4a33-863d-4da63ab531fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66a8027-f606-42b9-a6b9-d503b2188eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97beee0e-3f89-4a1a-9e9a-45685d32110c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a5e61d-ad60-4245-9f03-06673ceca929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb630fe-775b-4911-b365-75abb17159cf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b0817d-289a-4e56-a264-b65e17912d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8671ee-c0bc-4130-8b77-fd47bdbf51a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3312bbac-8817-4197-8faf-250cf5a74efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3143d088-0385-4f03-a21d-1b9a744ae964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb0e608-f99f-465d-84d1-2e290c9b140e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3755bab-dd55-4a4c-985e-d14a82f31790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9483f1e-0ab4-4a63-8a80-c201d31de0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbbd21d-4726-4f87-b5d1-04f8d254d4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597fabc-9464-4c0b-9041-5b2982f4caeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823712a1-9427-42a3-af50-79690722001c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eedbeca-1f50-4923-8299-8e71f9fe8005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f14f5f1-bf78-4aa7-847f-b9de7ff71708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fbb2f5-e474-4f2f-8b0a-124ac63dceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9d1c67-e047-4e8a-8014-6bbb53e903f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf3e25f-6a69-401c-b86b-4f97efc24769",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eed2082-4854-4503-88b5-f692c510dee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17334537-79f3-4296-b2fb-4ca8919fcc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ced59c-1fcb-43b0-a596-94efc8dfeeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39850ca-e97b-412c-8ce8-3d9e8a3ea1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb675d59-f496-489e-9442-a57152cb8ff3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d82d5-821b-43ea-8afc-8ee111a91df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b136c06-9821-4f54-a700-f2b1ab9c1151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17722a49-312f-4cd4-a5f5-93e3f525b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a4c3d4-e5d8-43dd-9203-ca472765b9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4e06b0-fe14-4917-a8fc-d98fd6f38c13",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4b7220-b50a-4241-a03a-238306dc89c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a1504e-3d32-4f17-ae34-86e035afb6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea78959-72ee-411b-9bb4-70cf8ea7a4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f03be2-448c-4da9-8bad-a155557cf366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461366e0-3480-4dd6-9389-9ab08e86d8e7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730ed228-bc82-472a-ad3c-d31af0d2a7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d54ccbe-6c4e-4ea1-b0b8-8df7f5f8ffe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd680bdf-8be7-4410-a4a9-010a81e010ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cdae1e-d29b-4b90-8a0e-314a15f52a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c8ee4-d3e3-41aa-bb92-6c9447dd0e24",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63bdc02-7be2-4d4c-b4d7-8806d9532ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20263e4-badd-48ae-b3ac-9ab1339caeac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c657a377-3d0f-43cb-bf81-f4d88b8ba7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23345a5-d1ae-4f5e-b272-03c1ff12c8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe397c77-8d6d-418b-a93e-5f686994128b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd29bde-a190-4274-8eba-f026f67785a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18a6df6-a90a-46a9-a322-40797beaefa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6459f9a-6bf5-4b2d-a1e3-d537dba32117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86320606-a2a0-4502-b7be-a0f946b4fa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5399d115-80e5-4709-b094-d20f0b24802c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5d20e-766d-4064-b7da-fbc861bd2b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00940a85-866d-46b9-bbcb-cc40a28f79b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b277f9e0-8745-49b5-8e26-b7c5e7635c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2746ee37-6f11-4cad-b7ed-4d24b6b1ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8ff512-aa5a-4777-b6c5-068260f6c3f3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65085c3d-97d3-43b9-ab1d-35e9cfb78d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889287d8-2432-41e0-8df3-fd156c84303d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd033ff-6524-44a6-80fb-f81915667281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c69b4b-512a-43ac-8bda-c8740e8acd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d3077d-f023-4ea3-b8f6-2288d94c697d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856c4e69-f8af-45e4-80db-d3247f3993d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df33fbe3-3628-4787-8e0d-1b2b387d842e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8ee20f-5d3b-40a7-8f6e-126d0d7f722c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9eca3d-8ecf-4182-bffb-c97739072823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a652d69-4c89-4b15-bdf2-b2a5226047ec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a54e26-0bc2-4dd3-bbde-c058341599b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4789451-7209-4d31-bee0-aca9f21c7873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721492be-c529-48e4-bea9-15f00d1accea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c02c448-2fcb-404d-866a-dd6dc6dc7556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918a4e63-37a9-4b12-82f5-bfb40cda180f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece26277-8d44-414b-a5fe-902ee43f5d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86636a1c-b1df-4a81-8878-6daab90403fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a45112-112d-40fa-a41a-89b3914e431e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffe7d91-8b80-41c8-8165-b095b540ee8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a0bd04-8afd-4793-a292-03b3c25ea165",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700d3a3e-7e8d-40b7-a832-92c228ff189b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd475ba-a4b7-481b-9c56-a7614df6ff03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6406ca-ca90-46be-910e-d44fd097eca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6125f69f-3b22-449e-9b74-d724a9e4efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f05b8f-3383-4f3a-8dd6-f5c677dff394",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ac94bb-956f-4cac-beea-860fea0caeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6f555-1025-42ff-82a6-d2e060eb3960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a04ff9-c8c4-4a84-bb14-5b028392126e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a52dc2b-4980-4200-b014-3e2e66e7b888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d18fa5-e243-4214-9038-3a8254c67466",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a22585e-cac7-457d-8962-2792d067ef5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d200f2-0cf2-4d8d-a3ee-6661a737373f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c91219-ae09-492a-a5f9-28f27f965e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b89ece-2720-4e1b-b96f-76bd94a3cd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b0cd49-e980-4e4d-a36a-2c9092d26ffd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf36872-6725-4473-9cdd-e58f80aaaa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1956902-2ef9-4c7b-8002-20051387107e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f4d91-6dff-43e4-88e8-6f99e8b07f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b6a6cd-4ffd-46c4-98d3-3d3fe4daa01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3cc989-f72c-4c9a-af4f-dfa9cd334e07",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400f186-5078-4c8e-886a-77db0c00f766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec77f895-d19c-491a-b0f4-1ff4a03294f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d72e11-4578-4f3b-b7bd-a46cc8e62fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1181673e-613f-4801-8c08-736c51551b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3de7cff-40a8-4ef1-a101-7db15a4c24c5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221f4ebd-65f2-48ba-a13c-0d12b0c9a72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e58efa44-98c3-499f-ba2d-f3d9252d2eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2c5882-d200-4f20-9386-ad4502571957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92f792e-3943-4fc9-98de-7d8150e129f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f525d0f3-6af0-4e42-ac92-0ee04db273ab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ac67aa-710d-4e81-8569-a7ffddd6a44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b57205-41a4-4b22-990a-76bc67f38d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34210238-df92-4c99-82e3-abab662709e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a635ee16-0b38-412d-b199-97953f14ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43522b5-e205-42c7-9fde-f84aecdb2817",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe156ee-08a1-4e67-b3a9-4605845c292d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017c6c5c-4fed-48b8-be89-db23d21f7eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18146f12-fe31-43c7-8c55-56a7d8bf8da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b903cd14-bdf1-4757-889d-a4b532bc268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a24afa-f86a-4190-85b2-9c16f2584b1e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72824c22-19ec-4332-93b4-35d76f1f8bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a27793-61da-4cb1-83ab-9a6d4cbf331a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a271965-0dc8-4575-af4f-ead723e1c6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f3e329-63f1-44c3-b85d-e98107c48fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb219dc4-c4bb-4600-aef3-2c6a554bbccd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b72642-bc96-4654-9201-e123eca313ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13df7033-51bc-4e0e-8524-0bf9c9eb8ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a46227f-acd8-418e-b68f-97042fbc94f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20060cf0-76d8-4bb5-83b5-b6880aa4b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d259fa6-11f5-46d4-84cd-46cf43246084",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ec645-0e81-43e8-beac-09405979cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f53d6c-9d4f-4704-a9a9-bf823e51ed3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da7569-e899-4668-a329-d2fb12a4efbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a10563-886d-48c5-852d-3d195cfa7bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbe8f81-8728-4b21-858c-5b99ff7bccd6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c796d-7ea8-4143-961e-01682fb90091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1821dee2-27fc-4b2a-87cf-433538d4c246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d49e75-e1ad-430f-9c09-e9b0fe681fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3cd1d3-381a-441f-9dfc-5b6d2e51acf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351f395b-2134-4e31-8458-7fefb672da95",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c536db-e237-4bcd-bd87-229706a411ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4ec097-b00c-4357-a906-21b4c2226bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ba825-e159-45c2-ade6-03bbacdbe706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d19358f-5c10-4647-a29f-91afbf884efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed8096-e909-4b95-b54e-8da940816ff9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcefbb3d-1f8c-421b-b84c-677526509a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60501d2-100c-4956-a958-30883507a538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0e019d-e145-4bbd-a0c7-cc1496884c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8084e991-24c4-464b-ac38-bf2bf1356b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c72e227-09e7-448e-921a-cbb998fd8fab",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6825958-a20a-45b9-a720-b8eff89a8184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d45377-3dc5-4b46-837e-c0144cbacbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743a0f1b-58ab-4379-b663-166e5fbf27f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56d31df-0904-4517-94ac-093f1a5afe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a656ddc-5454-4c18-aef4-966c79b16a04",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c655276-73bf-4d68-97d6-738c6a1880a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fddd375a-4e42-43fc-9f55-e66529a253f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88218f97-af3d-4b5f-afe4-ada468915d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25d5fe1-965c-47f6-b832-993a2a17bcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8760b87-9372-4ae4-85c2-3bb6539e95f9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527f4178-6d02-409c-b568-57346a0ab2eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1888f6ea-fc2f-4394-ac3a-3b9c04dead23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bcb154-a581-452e-9c0b-2466348569fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f584715-4f76-4147-aeb5-1b6f9af7efb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a1fee-6770-4f35-9457-b0d4398aacd7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce72975b-45ac-4c36-b81c-47dcee9ccbe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e091b3-59d0-4099-99ff-0fbecec01303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87a761f-7c99-4236-a062-b059c8cae3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e4e2fc-95b5-42d4-a340-54aaee742e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f151005-7a4a-441b-99eb-09dc25496b61",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e2214b-8e09-477e-b198-04df48e1e72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd7b531-3aff-45dd-9c16-24d279ef97ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06893762-7637-4b3a-85b9-2b51c919b4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87556026-6f3e-4f63-999d-b102513f4b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548f2222-70ee-4a64-90db-cc8689519a8d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78039180-ddee-49d3-a839-52426308b2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd53d77-86e3-4174-ad2c-3fc59be641d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cbf39e-7894-4a9f-86aa-10c469c4ccec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f69d114-d5d6-47eb-b553-ebff0abbaa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ebef6f-450b-461c-aad8-dbe3d8ce8cc2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1178e61-4bcb-4865-b4f9-8874f7907a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3eb020b-e01b-4ea6-ab83-3cc5155a2842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bda72ad-cb92-40aa-af8f-a73b2d998efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a987e2-bbec-4bee-adde-856394dc338d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a4f1b7-eed9-49d1-9ca9-c52d7f75eac1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4086e354-e8b2-4bb6-b9cf-6dd27ff66ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5d3891-81ea-455e-89bf-32a10ba110cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65809097-8c13-4ae2-a940-c6508a351b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ffaf92-efab-451b-b4e3-2dcd252bb407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d73d3f-a4a6-4c80-87a9-47be601354ff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7a6d03-8d95-4f6f-8fcc-1c24ec656589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b82f884-71c6-4e48-8b00-70812f81eb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800ace9-afe8-44c4-96da-6d60c3b8249e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14033103-7793-487b-81c4-036d1863018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f61493b-5693-4819-8669-f6e883ac6775",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f76a2a2-ee13-44f7-a74f-bfcd2658d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f3d55b-8f97-4374-9b19-dbe31d2ac866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb012dd4-6270-48c6-b207-8fa4ae02ce04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d109de9-bee7-4164-879c-176787208dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6966719-b9f2-4cd1-92ea-a6f99e3ad70b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60961ac3-db04-4fcf-801c-da1949dd77de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ca2fa4-362c-4245-a7ab-1e6408c16758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a474c7-1cb8-4583-933f-9e8fa3927285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814aab06-c590-44b7-96a8-1ccd92235607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31479a75-a085-4df1-a290-8cd3ba7181d2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9053f808-b64b-490c-8e0d-c9800eef6366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e563d4d-57a2-4998-b93e-044ca9a4f47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50744109-8790-4502-a27b-dafa4812ce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3663f0-21b5-4dd3-b017-0dfd27457f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba488be8-4350-47cd-b8a7-6b2c09a30c32",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4989f-5a69-4f95-87cf-3d999505fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be71551-e75a-4872-b800-ea27c5072100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac48c3b-a350-43c7-94f3-332d2a232661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d662f12a-d222-4011-9313-ced4d623ccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a6066e-cbf4-42a3-a966-b3d297051229",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b13023-2df1-4f02-b893-e023d9cceb9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc483f7-13d2-4807-9a23-eb70eae9dd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95cda13-d2f9-4044-9411-b1b75ed95ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d76cd2-7b27-4353-8c30-d8f89c296c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f611e399-18d6-4827-b2cb-1bdf85809de6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e9da90-f5ab-4255-8806-c39880b176d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f11f88-86e7-47be-88bf-d954d8575cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a83041-9522-4963-b6d5-420cafaca756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac547feb-3015-48e0-96c1-dd9a5b7a76ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26bb242-9b02-4a33-add0-2402fc87f851",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49a87dc-a578-44ae-8336-4009554cffb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94263dc8-84fc-4e6f-aadc-637c2665fcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d58d8-9b3e-4f4f-acde-fa8b2a901a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb910aa8-af3c-4032-9adc-427b9328585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e2c86e-1337-4448-b906-1117e06fdad2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924f27bc-313b-49c8-b7a3-82f0eb095178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d950fd07-a32f-4135-8e7b-fe476dfa92a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c9f705-d939-4259-b753-ac108d3c8c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833dd0a1-4b90-4c25-b14d-7b8a4d493d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810a772-1f2d-4229-8bfc-7bffbb7a9764",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fe2fa7-ca18-4b69-9980-de889319b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38a57c0-a5a3-4733-8933-8086567f9400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbf0e0a-9cab-4ab4-b7e5-9b910dc42e29",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fbcd9a-e5dd-4634-a593-335369445c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a3f6e6-0181-454f-972a-047d921c47f2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb34f900-2e01-4a6e-bd11-d0e428866a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf814dad-8a75-4a10-b0ab-3bafd20f1377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23661b15-45a1-4085-9bda-84221386a7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f7e5a0-5ac8-4443-9d4c-fc3e6ec8acdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e804055-1298-437a-af6c-3b3b028ba486",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b175ac-6765-4bfe-a4c8-5f7dfbee0371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec85536-1358-49d3-8602-4bb7585f8eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cd05ce-5161-4a04-8ded-5d1da74ab05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d270d5-a182-411e-8330-c2aeb3f61638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5713821-fa92-47f3-936f-f4fe628e3ad2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c381c-e3f8-40eb-bab4-590526d64bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff348de2-2da9-4bb6-8182-adc5232b85e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd3d9d0-4234-4d47-90da-a51159039f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60aba749-015b-4f2d-bbe4-8e25b04ae547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3379d83a-9eec-4b55-a0a1-3f9ec4f17f4c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71a7c6b-c189-4676-82c0-175120e01777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5926af6e-094c-4b35-8f3b-b30f504c63d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eb7d60-0bdf-46c4-8fcc-ba5670fc4324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8ae07d-a76b-405f-8ca7-637e79220eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75867ff-d0a1-4459-8603-77e501bf9d48",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263815e9-7e8f-412f-b975-7df217163414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755afd7e-d26a-4617-8859-fa150bf4ba75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970c6b9e-756b-4bd9-82e0-52f88ea8da9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33ebf5b-78bc-41ff-a2c6-d3fd33fe890a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd70055-1bc3-4c32-af77-d567b9954ede",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3c4e07-f135-4979-8db8-640e20ad200b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab06408-cb58-4c88-908d-899c93372bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e8712-65dc-4cc2-8f21-52c53757de25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8ab7fd-644b-429d-831c-877cc7cae5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c92572-c771-4db7-a38b-bcccb6ec8e1f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8980f497-3eb8-467d-91aa-853c3df42787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a800dd71-20b1-4a83-9c8f-82eef9ccd5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865b5fc-1f8d-4e01-ba0d-958e2891fbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9044b678-7eec-4f69-8ecc-d65555610e86"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a087901b-10ce-4408-8e3b-eb307c873ded",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "395445ea-7131-46f1-91de-938333397652"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53033702-1499-448a-8de2-5b7a1472d905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71f97d76-84a0-4461-9101-bdac73afbe64"
                    }
                  }
                ]
              },
              {
                "id": "2401d8f1-cc75-4b84-91aa-0fab19546fbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c7e5ebe-3df3-4f6a-aa06-bc70d0f58b70",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b5187f-8ccd-4750-8a11-642599e7d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d2f838f-bf3b-412e-a123-b03f4191bb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c25cca-6a95-429b-99a6-5f2b05919a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ee39a16-bf77-4e86-8d53-33cd57a0d4e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72a11ed7-2120-4812-86b7-83075b6903d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c48254ba-e83a-4939-988a-22b469e0af29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3761d9b2-1aff-4076-9e1b-5f7f12637526",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36dfd6dc-be6b-4975-8825-feab8296bfd2"
                    }
                  }
                ]
              },
              {
                "id": "36a964a3-4982-4122-80ee-5371770c4c70",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d9d1e832-3b50-42bb-ac44-c4257f307e6c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e895d09-a55c-4eb7-ade7-52084c766937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "126372ba-020d-4208-a3dc-624c7186913e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fee584-826a-4c24-bbe0-ce18b86c2459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2785567-2790-4dc0-9cbd-62be0b978d29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff67ff69-4842-468b-9e2b-74b2e1945255",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83374811-7a51-48fd-b8bd-a867ff7f9382",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d11c8dc-694f-4dc1-9a93-f6fc399d9381",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "217dba42-6cae-437b-96ea-16ad2eaacefa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7385b833-ae03-411b-a8de-3779223825ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc449057-e8cf-4d7b-960a-3db97e0dfa80"
                    }
                  }
                ]
              },
              {
                "id": "b235de1c-31ad-44e2-967e-aa2cc4024ce0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02d8ef04-8131-4c5b-b9f0-74f61b18015e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d80c27b-0095-4c87-9466-7ce702d453e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b20abf-ed32-4db0-a368-51b1a45235c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f448217a-440e-41f5-a74f-ae9d50486346"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5990c57-1953-45bd-a439-f0193152ce8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cb931557-faca-4719-93c6-21c2795f5e31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bddee26-8480-4952-b6d4-d293094316c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe0d41fa-e092-40f0-a273-f16aeeef9d26"
            }
          }
        ]
      },
      {
        "id": "af877441-223d-4106-aa5e-2094298ae5b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c536eb0b-e313-431f-bb5a-8ae7fa99d6ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be166852-3dfd-4051-8f41-332c4d0cfad8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "139c353f-4765-4cc0-a7e2-4a1f9923c345",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687cce8-6c8c-49db-8755-122c746dd375",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7384e36f-b89f-4e38-835a-fe19984b576d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d7fbdc-f05c-435b-8818-4f1a9ccf4427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba9a207a-6b4e-4008-af71-656d003675d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58b9fed1-ef62-41ab-82ee-51d130a6b768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e292ba55-a535-4f7b-b79b-d4bf21fc3232"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b886e5a2-52b0-4305-97a4-a5fdc8017e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645f78c2-2f26-4dd8-90b0-30bb76380905"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3583d800-426c-4597-b0e9-24bd6b0181ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a1971a0-9e5c-4dab-bd96-7d0a1a37e509"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae38a3e2-43e7-4193-ae44-e6fa842d6c69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "795284b8-896c-496a-a535-f0f02886472e"
            }
          }
        ]
      },
      {
        "id": "e3b8ea11-9d3c-4547-be3b-d191c20ac175",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed3834fc-db30-4ec5-b5ab-b3ada78019e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b6373f3-db01-4a8a-96bd-2f5c6f9abead",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "379409d5-059a-4fa1-99ca-313df83e16bf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a4a3c-284e-4b9e-bc0b-db1bef1496d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "661b562f-34a7-4b20-b706-0443d418ff17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc1580-521d-4d37-ac49-d7f4b53d5cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98189265-7f9f-41bd-96cc-5de1565511bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09d71b4-da84-4379-9880-2c923fe9fd0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d350aa0-8a56-4d37-8f20-f982a8543015"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a5bc354-2769-46cc-95e1-449f8ba77046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2480031-6e5d-4823-b958-2e17608fb2c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f13aee1b-3077-4a95-b31a-1f13fdf93ca8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca891ad7-6307-414a-ae31-cd0fd238e5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86dad1c0-9173-4254-b55e-e4cb359e51f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54b32d2b-ce13-48a8-ab88-0354332ca0b8"
            }
          }
        ]
      },
      {
        "id": "92608ede-677d-4d7f-824c-4979a9cbd58a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8a31a16-fb4d-4f93-92a2-3a3dc8e8fe05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebbcfd9c-2d1d-4c1e-be41-4e15247a816c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4fbd1f5-8c4f-42b9-8a3e-f78cdaf73999",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b10ada1-5017-4ed9-8612-4da282fef7e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a52d483-b950-4452-9e04-6b22c1947c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3735c1d-16f5-48fc-8b81-59c1f5ffc857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34739f06-8c6d-464a-9b7f-317164a50a15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8afdfac8-bfcc-4c26-8028-9215ca99fc8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1df15a-6d46-49e7-9678-e7243f2797e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d91d964f-0080-4c50-b1ee-0177c91f32e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37b7c52a-af58-4d81-ae21-be03d543deed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "920f927b-8c93-4ec6-9f10-126950e40f89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f797b97a-3e3b-4e4d-b134-b49ab4ef0e0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56f4c915-6f1f-4140-96e4-98cadb4cb612",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "433a1df7-f1d4-4835-9652-66322b81970d"
            }
          }
        ]
      },
      {
        "id": "d6c34ac7-d2fa-4aa3-adad-c74164221b75",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "527ef26b-8748-4fe3-893e-0c5014c44dae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9178f360-b9fb-4c16-98c3-76ae3d0472af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2c922f38-2f9e-472e-9e8c-0241a4c360a3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b8e018e-5162-40d2-8f85-b35455111e21",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df43424f-db12-413d-875f-55681ac45c15",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.89788732394366,
      "responseMin": 11,
      "responseMax": 4787,
      "responseSd": 418.032110258057,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696379639130,
      "completed": 1696379685557
    },
    "executions": [
      {
        "id": "ec1516c8-540d-4b90-85aa-bf7e056c9b9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3844072c-5b47-4a17-8323-42c0f9c057f5",
          "httpRequestId": "b7a0fd1e-8203-4c77-8726-3d88ff2670be"
        },
        "item": {
          "id": "ec1516c8-540d-4b90-85aa-bf7e056c9b9c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "58cacc5f-32d5-4911-9953-9baf439861ba",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "dbef3015-0053-4f2d-a046-ff6ec4361d70",
        "cursor": {
          "ref": "520986b4-4ff4-4a42-a0af-a9718f6749c6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f0bb1f10-0751-4684-bcae-b59549f0bdd7"
        },
        "item": {
          "id": "dbef3015-0053-4f2d-a046-ff6ec4361d70",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0d17e858-4a23-4f14-805b-d10d7b90cd88",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "7f6be3e8-44a9-452c-b902-452cf0fd1af6",
        "cursor": {
          "ref": "b5fc75e0-1f2b-47bb-a2f9-0c738663ae6c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "491ce11b-eea1-4b1e-8348-43baef8bd496"
        },
        "item": {
          "id": "7f6be3e8-44a9-452c-b902-452cf0fd1af6",
          "name": "did_json"
        },
        "response": {
          "id": "6eea324a-34dd-4645-ba61-3c5c802b3ae5",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e23a81-23b1-4c9a-b34e-4469fb374f34",
        "cursor": {
          "ref": "123bc0d5-8462-4473-820d-c4c5aaf1e956",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f53846ae-dea1-41ca-acdb-8d39106130f5"
        },
        "item": {
          "id": "f9e23a81-23b1-4c9a-b34e-4469fb374f34",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbee862b-d40a-432d-a52f-0f7a9a1eb2f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 683,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e23a81-23b1-4c9a-b34e-4469fb374f34",
        "cursor": {
          "ref": "123bc0d5-8462-4473-820d-c4c5aaf1e956",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f53846ae-dea1-41ca-acdb-8d39106130f5"
        },
        "item": {
          "id": "f9e23a81-23b1-4c9a-b34e-4469fb374f34",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbee862b-d40a-432d-a52f-0f7a9a1eb2f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 683,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ffa7c8-00ba-4ccb-8beb-dea9d5b5a7e9",
        "cursor": {
          "ref": "87fc0953-316d-4cd7-8173-b8c9bf1e8a48",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "111bd373-98c3-4451-beb3-75c06d4941f6"
        },
        "item": {
          "id": "98ffa7c8-00ba-4ccb-8beb-dea9d5b5a7e9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "50e2e716-887a-455f-9467-40025cca004c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 20,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d5cfa5-23ed-43f6-bbe8-ef4d1b66cf0f",
        "cursor": {
          "ref": "f6e866ab-6b2e-49a2-a163-55dfb78969e3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8b0c5cc9-e3c0-4b97-b2ef-8c80cbedc7fb"
        },
        "item": {
          "id": "a7d5cfa5-23ed-43f6-bbe8-ef4d1b66cf0f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13bb3bba-3729-45f5-a9ff-9363f07e1a8b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dff5ad1-da5f-40c1-b61f-8d6307844fec",
        "cursor": {
          "ref": "d90793a6-9423-4594-8df2-9bc52a9f79d5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b52b839b-61c7-4929-b3cc-10beb9136aa2"
        },
        "item": {
          "id": "0dff5ad1-da5f-40c1-b61f-8d6307844fec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1af58d38-5599-4fd3-aeb3-064253473f50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05aab52-af92-4d81-aa2c-7749f48015b2",
        "cursor": {
          "ref": "1029c2d6-0780-476c-87c4-41add0c696cf",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5a6213dd-2068-4dd7-9887-4d2964f3a3d0"
        },
        "item": {
          "id": "b05aab52-af92-4d81-aa2c-7749f48015b2",
          "name": "identifiers"
        },
        "response": {
          "id": "293dbc82-1470-49d7-a6d3-b18feb669523",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e34403-3d4d-4f4a-8751-069446940f09",
        "cursor": {
          "ref": "ba080608-a082-4eb5-818f-738461f347ea",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f9690e11-4f16-45b4-bad3-f8b6f1ce6217"
        },
        "item": {
          "id": "60e34403-3d4d-4f4a-8751-069446940f09",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3854c627-214c-4d50-bf9c-d43b3e317ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c443fab8-97cf-4471-9d7d-4ac4b03f68d5",
        "cursor": {
          "ref": "e4a2b653-609f-4b0d-960b-69588b4998bf",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f54c30cd-b7ba-43d1-a32d-7d39928f4b8e"
        },
        "item": {
          "id": "c443fab8-97cf-4471-9d7d-4ac4b03f68d5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "62188145-bb8a-4544-94bb-c2dfb4541595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b00c071-a5c0-44f3-9add-4b5da25d1358",
        "cursor": {
          "ref": "8495ffaa-7e38-404d-be3d-29b05fdd83f1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "de4e3143-93cd-4355-a5ce-42699435b40e"
        },
        "item": {
          "id": "0b00c071-a5c0-44f3-9add-4b5da25d1358",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ff151494-ebe1-436e-bbf8-10d99d967e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb6c314-6e7f-4db4-a146-f193149dd415",
        "cursor": {
          "ref": "a4942676-0d86-4435-a096-e492b05e2aaf",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "26920395-cb47-414a-99c1-12666e7cd428"
        },
        "item": {
          "id": "4fb6c314-6e7f-4db4-a146-f193149dd415",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b69c7417-7171-4cfa-aa17-7a6af7ec57f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192d6bd-e526-4c5d-8f41-7c65cbdba0b7",
        "cursor": {
          "ref": "667c9fa0-207e-4d8b-98b2-525df5d1010b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "47559f6b-579c-4299-be63-af4a0ce0156e"
        },
        "item": {
          "id": "a192d6bd-e526-4c5d-8f41-7c65cbdba0b7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d8af548-bef5-4954-9d36-c200e31b6551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0dae65-782f-4573-bd32-1ea87e00cd79",
        "cursor": {
          "ref": "2f41848e-ff06-4622-8aa7-8fa94fb858e2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a13c565-f030-4800-a89f-2b6eaecd447b"
        },
        "item": {
          "id": "ef0dae65-782f-4573-bd32-1ea87e00cd79",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b8cb2127-a966-4919-beda-1522e7fa105a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec08d16-c0ca-4e00-ae38-6bc761cad481",
        "cursor": {
          "ref": "d654f6cb-562d-4456-8c3b-578bd9609834",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "229298e6-aaaf-4342-8a6c-f3bd55fc84b8"
        },
        "item": {
          "id": "3ec08d16-c0ca-4e00-ae38-6bc761cad481",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d501d95c-a4f3-4e8c-9eb5-05098900edbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a7d75-41eb-438d-ab24-e0b453a99eb7",
        "cursor": {
          "ref": "9cfbb14e-e947-416a-9469-3a3719361af8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "75da4191-1e53-4321-8a97-c93f98e7267b"
        },
        "item": {
          "id": "536a7d75-41eb-438d-ab24-e0b453a99eb7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dadfeaba-18d5-4587-a2a8-9abda9fd286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4dbba9-43bf-4b01-bf34-542771915e62",
        "cursor": {
          "ref": "aec67b31-c17d-4f2e-9f78-9e4e92dd7370",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9433eccb-c3e4-4560-a681-b0fe570c2de7"
        },
        "item": {
          "id": "4a4dbba9-43bf-4b01-bf34-542771915e62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "938074db-c76d-4bc6-8f9a-dfbd70dee63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adf7f1b-7449-4094-9542-fbc0b2f6637e",
        "cursor": {
          "ref": "ae1274dc-ce0a-4c1a-93d1-844008ccd027",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e8e70865-b060-4272-9df2-243a4cf17db3"
        },
        "item": {
          "id": "7adf7f1b-7449-4094-9542-fbc0b2f6637e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7e28e575-c83d-4109-86ed-7f75fd1ea2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cefb6f7-40cf-4023-ab5a-ed7282308690",
        "cursor": {
          "ref": "e84e6ca8-fe00-416b-9b6c-2584c4481f5e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1666212c-94af-453b-b76d-0a3120c3007c"
        },
        "item": {
          "id": "8cefb6f7-40cf-4023-ab5a-ed7282308690",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2c180b2a-162c-4711-b992-b2896547843d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3441067-5a21-4926-ba42-44a3e425e877",
        "cursor": {
          "ref": "a2f5140d-2276-4466-941c-1867420a3a7a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f64db5b-70cb-4601-ac67-d4ccf6a6ee26"
        },
        "item": {
          "id": "b3441067-5a21-4926-ba42-44a3e425e877",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5fad2e06-61c1-4047-9781-bf37ab388f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280ca573-23c1-4876-8f2d-85547db745eb",
        "cursor": {
          "ref": "07b9dd50-e1ab-463d-be4b-2bed359c3f6e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ff10a333-bedc-4cf2-9f89-ea6cd95b6d35"
        },
        "item": {
          "id": "280ca573-23c1-4876-8f2d-85547db745eb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95ebbede-f3de-49b4-8d56-f8cfd8c9a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb912b2-1bdb-4b31-ac97-dfd24a7d0abe",
        "cursor": {
          "ref": "94a0f432-1d72-4159-bd3d-7e9aed9ce145",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9da8790a-bdf5-44a0-8651-fa3a1814f57b"
        },
        "item": {
          "id": "5eb912b2-1bdb-4b31-ac97-dfd24a7d0abe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f6996677-3f88-4b35-a1d4-692c832199ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac0f32-9fe3-4b05-81fa-a39aa8febdc0",
        "cursor": {
          "ref": "79b58478-a467-4c96-b4ee-72702777f9dd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0750e815-0da7-4e15-b036-f835eea1494d"
        },
        "item": {
          "id": "9eac0f32-9fe3-4b05-81fa-a39aa8febdc0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2a2d21e6-7afc-48d9-9217-1558e86ceb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f380cc30-0cf6-440c-8d4e-536a43af8a58",
        "cursor": {
          "ref": "ff7a153f-6ea6-441f-8b3e-d16411450c1a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ea2fa0e1-f44e-422a-87ac-7a9d0daa78b3"
        },
        "item": {
          "id": "f380cc30-0cf6-440c-8d4e-536a43af8a58",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c6e91290-aabc-452c-908c-282886641a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e4afda-02a5-4300-a6a4-a8c4b9b9d9a3",
        "cursor": {
          "ref": "62f970b4-2fa2-4c4c-826c-95487b7a0478",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a56fc415-7e48-406c-bcc8-c2ad30bf46c8"
        },
        "item": {
          "id": "73e4afda-02a5-4300-a6a4-a8c4b9b9d9a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7cbe5e62-2c11-4f89-b4bd-9d1a740bacad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae2720a-82aa-45e9-9f82-f9d9901a8913",
        "cursor": {
          "ref": "7bcdbfa8-8cc7-4e87-afba-05cb915dedb2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "45464b91-eb32-4d7f-be7f-b4007a2ee4e2"
        },
        "item": {
          "id": "0ae2720a-82aa-45e9-9f82-f9d9901a8913",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bd9d172d-b72b-4e0c-80ec-55344aa30538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b8b098-9c96-4c21-a271-5eee61af0a38",
        "cursor": {
          "ref": "f3bd41f6-9a14-4e0d-9be9-5153a031687f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f726fa6-8043-4574-8247-930b23da78e7"
        },
        "item": {
          "id": "e5b8b098-9c96-4c21-a271-5eee61af0a38",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "531405d3-0e04-4730-8318-11c2ba78832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f88e3a-f175-4026-a548-b744b348fbb2",
        "cursor": {
          "ref": "5a4adfa2-16e4-468d-b4d3-d38dcf3377ff",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08dbf73e-b60e-4631-b049-37eda2c63adf"
        },
        "item": {
          "id": "35f88e3a-f175-4026-a548-b744b348fbb2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c05c6134-d4a2-4e06-9f83-cf218c7c01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b390be9-fab4-4df7-9c5a-815e420f0e8a",
        "cursor": {
          "ref": "598c220c-2e49-42c5-8dbf-728454ae86df",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7a3b90d1-b52a-49c1-a517-89c8f10ea2de"
        },
        "item": {
          "id": "1b390be9-fab4-4df7-9c5a-815e420f0e8a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f9de0465-fb93-4ee9-8150-65315d9fb5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8079da-3f0b-4265-8893-67b35c50610b",
        "cursor": {
          "ref": "3612297c-8ee2-46c9-ac9c-870c99a0427d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c3d72cb-67ae-4c79-8a0a-aa5f0911c340"
        },
        "item": {
          "id": "2b8079da-3f0b-4265-8893-67b35c50610b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ab8c872a-e11d-426d-9312-1f02ebe7e7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69017754-9ea6-4646-98ec-5114206bda59",
        "cursor": {
          "ref": "11f99b10-6285-495f-aca6-05f9356db119",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "94cce4b4-2105-41b9-90d7-e29686e44351"
        },
        "item": {
          "id": "69017754-9ea6-4646-98ec-5114206bda59",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "15b2a6de-d6eb-46d9-bbb7-cd549967ca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab5e841-088b-4f2a-9eae-2cb2ad9e1e78",
        "cursor": {
          "ref": "1be512b4-4e0e-4b69-b0f6-b5faf157a42f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9faf14b7-128c-4f3f-aaa9-d066e802bdb4"
        },
        "item": {
          "id": "cab5e841-088b-4f2a-9eae-2cb2ad9e1e78",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "09bc1a65-cfd3-45ac-b5c0-886a12e0de6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947f5cd0-c5d4-4164-92d5-556400bd9c11",
        "cursor": {
          "ref": "396c7e15-f643-446b-8eae-3cfc24043bfe",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42a8a894-59b9-4d6d-b876-c5efcbeff3cf"
        },
        "item": {
          "id": "947f5cd0-c5d4-4164-92d5-556400bd9c11",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "49a89c92-3f4d-403a-add8-5370927d25d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae847a8-5e12-4a54-845f-643ccdd8216c",
        "cursor": {
          "ref": "b4242835-a5fc-4069-be83-1c652f95639f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bec66c62-29a2-49d6-b0cf-64cae591f512"
        },
        "item": {
          "id": "9ae847a8-5e12-4a54-845f-643ccdd8216c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a605b20b-f6b9-43f5-8811-51de04a55523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a6f0d0-5214-42a5-b66c-5ccb4e68ab5c",
        "cursor": {
          "ref": "68a955a7-9f4c-487f-baa3-f5fda73a174b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d62e0557-9612-421d-85b4-257902169ecf"
        },
        "item": {
          "id": "b2a6f0d0-5214-42a5-b66c-5ccb4e68ab5c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1d83b2bc-a86e-435b-849a-5507d392d2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df711d14-9e73-4ad5-98cb-c92eacddbc25",
        "cursor": {
          "ref": "74d4eb0e-c0fe-4bbf-9e4a-51e125995c20",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fb8cb72c-db99-41e3-a298-59356e4c779b"
        },
        "item": {
          "id": "df711d14-9e73-4ad5-98cb-c92eacddbc25",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8db6f668-9b76-43db-95df-89e11ba79b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d721c3e7-f9b5-4c9f-a680-35f036271325",
        "cursor": {
          "ref": "679d7a54-c08a-4294-ad5b-734bbd003861",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3bd81952-9d90-498c-a7ec-c1f0309ee10a"
        },
        "item": {
          "id": "d721c3e7-f9b5-4c9f-a680-35f036271325",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df9082a3-69a7-4ac4-bdb5-52e0f6820afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d546b90-5d4b-49b9-8a92-5ea434cecee8",
        "cursor": {
          "ref": "24f7d88b-0124-4c1e-9b8e-aac47ba886cf",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fdfd4269-1b17-4481-b6d5-eb92a6e9a352"
        },
        "item": {
          "id": "0d546b90-5d4b-49b9-8a92-5ea434cecee8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "48f68852-8685-4bde-b83f-d68cde061a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47395c44-1e8d-4a44-bd75-51a23962d405",
        "cursor": {
          "ref": "27457f4d-a6b6-4a18-a80f-e5100464b94a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "daf547c7-e48a-4729-b3ce-2f14ca25f54f"
        },
        "item": {
          "id": "47395c44-1e8d-4a44-bd75-51a23962d405",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c42908e-04f5-4bc5-8190-87a08f98ca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e05ecf9-3576-4211-9802-79ed6a62e9b0",
        "cursor": {
          "ref": "160eef76-7e59-4087-875e-71b0c401a990",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2dcc3a6b-470c-49d5-b92a-bb91fdeef40d"
        },
        "item": {
          "id": "3e05ecf9-3576-4211-9802-79ed6a62e9b0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "945392bb-8e3b-4af0-8e3b-e288a74816f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e57a215-2b43-4995-82c7-86981b11c9ff",
        "cursor": {
          "ref": "4e03adb1-d286-469a-9e3c-3d6054ec3840",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2495525f-c700-4131-86c2-e49c4dd50115"
        },
        "item": {
          "id": "6e57a215-2b43-4995-82c7-86981b11c9ff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0cb18188-8bb7-4da9-b044-daa0b94b70e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50204a21-6dae-453a-a586-c7ba36f97d86",
        "cursor": {
          "ref": "b335b609-ef48-4837-8bd3-1faf873f25ba",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "601069b9-45ba-4902-a214-d6596d079273"
        },
        "item": {
          "id": "50204a21-6dae-453a-a586-c7ba36f97d86",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a32645a-ade4-4eb7-8ed9-cadea6d4251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7190f6-bc96-4151-9ed6-37a2baca28ea",
        "cursor": {
          "ref": "ae358277-4c3c-4e6c-8fdc-374c2bd39cd8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c38d71de-ece0-4108-a857-775d207c1a2c"
        },
        "item": {
          "id": "fc7190f6-bc96-4151-9ed6-37a2baca28ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a0fc4a7c-f3b8-4734-91b7-223f4aaedef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea0837-87b2-4710-a09d-98921bd8b0b1",
        "cursor": {
          "ref": "fee34c4c-234d-460f-9a3a-852929dcdace",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "61c21442-71a6-4992-b0fb-0fcc773d3ce9"
        },
        "item": {
          "id": "a6ea0837-87b2-4710-a09d-98921bd8b0b1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dd73393d-9064-4134-91bf-dec65bfea1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c4216a-8fad-4576-8406-2a211bede4c0",
        "cursor": {
          "ref": "2f203da9-f352-452e-884d-74fd81454769",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43065396-22a7-466c-b7b1-913adc4336e9"
        },
        "item": {
          "id": "69c4216a-8fad-4576-8406-2a211bede4c0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6826fe92-2f47-4f53-8b4f-38695410cf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96acfc69-41ef-4f96-b636-170d5061b85d",
        "cursor": {
          "ref": "bf9e4ee2-e975-433f-9fc5-9b57fcfd357e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "35320fc9-10c7-4c11-8f3a-482fb7d6d888"
        },
        "item": {
          "id": "96acfc69-41ef-4f96-b636-170d5061b85d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65c6b73b-300e-4be7-92bf-71f368c3c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b0214f-8336-4b76-960a-56004fb142d2",
        "cursor": {
          "ref": "23829fe3-1d01-4cc9-bd5e-2bcd48032568",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e34b551a-2d49-42dd-8e6d-a3c6e194094a"
        },
        "item": {
          "id": "09b0214f-8336-4b76-960a-56004fb142d2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "87df1ade-63c8-468b-b36e-cd5cb7a0009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1b82e9-7e25-453b-8fb8-e436d943a883",
        "cursor": {
          "ref": "7baf79aa-62e8-4263-a8d5-2d2de6d1445e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8965fa79-1632-4fea-99f4-0bbcd2f10ba7"
        },
        "item": {
          "id": "4d1b82e9-7e25-453b-8fb8-e436d943a883",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8e273e01-0c36-4acf-b8e5-fbe83f670206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf70fc7-7ccb-429b-a517-0b942e393a92",
        "cursor": {
          "ref": "6e1286d6-eeb6-47f3-8838-20d6c50b2c7c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "78ec005e-d292-40b6-9c40-c5173057d51a"
        },
        "item": {
          "id": "fdf70fc7-7ccb-429b-a517-0b942e393a92",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "10ab7a0c-1763-4824-bafc-c9da3ca19089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a97092-3c23-4bde-b9ec-014a3d43cf6e",
        "cursor": {
          "ref": "62c29ab8-25a1-48b1-954b-babefd2193ad",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "82de8262-4121-44a8-a362-52d821c71e5e"
        },
        "item": {
          "id": "05a97092-3c23-4bde-b9ec-014a3d43cf6e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d9dda544-a29e-4ab4-936d-44416599aa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0890e2e9-540b-4889-913a-b5d24402ed9d",
        "cursor": {
          "ref": "00c52bb2-a65e-4b67-beb8-3b5a65a9eb25",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db0fd8ee-0279-4b0e-b614-c4da038356c0"
        },
        "item": {
          "id": "0890e2e9-540b-4889-913a-b5d24402ed9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "92be4e6e-9f16-4d10-a63d-8c8a030ee588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10566e-d331-47a6-bc4e-a4a82de91541",
        "cursor": {
          "ref": "2953f312-17cc-4dd3-b211-fe947ed0fe53",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1809997c-3ccb-401a-a24a-8b18357d4bf8"
        },
        "item": {
          "id": "5b10566e-d331-47a6-bc4e-a4a82de91541",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d59c5136-7ee7-4f72-a756-1afe00649a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe0cc7-2953-4047-be42-373c40d713ea",
        "cursor": {
          "ref": "d7972f83-72b9-4583-a2e9-5396bda44579",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bcbc925-e915-4d1e-af39-e681b98c0b53"
        },
        "item": {
          "id": "b0fe0cc7-2953-4047-be42-373c40d713ea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fcdc4206-3ef3-42a9-94be-16a3bab9db68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a102429-74bd-46db-b7a8-00c26beb07e4",
        "cursor": {
          "ref": "ceb0fd06-1667-40e9-9cf3-eb50846d7750",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "88679817-ab26-4556-b357-5ed829639b50"
        },
        "item": {
          "id": "6a102429-74bd-46db-b7a8-00c26beb07e4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d27668ab-7059-4153-96a2-33e762b3fc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4026c9d-5279-42d6-b9c8-7696a62d26bd",
        "cursor": {
          "ref": "2a1ecc04-45e9-47a3-9ae6-22abfef3a1ff",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "493925fa-d269-456e-abe9-0d6011369fdc"
        },
        "item": {
          "id": "c4026c9d-5279-42d6-b9c8-7696a62d26bd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47de1be4-d8a0-46d9-8bdd-aff2c266ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4567d299-7748-481f-8780-db5dc441199d",
        "cursor": {
          "ref": "dc28b453-3c46-4d47-949c-1c75b2508f43",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "817025b6-de57-4c79-a56e-d991077df6ac"
        },
        "item": {
          "id": "4567d299-7748-481f-8780-db5dc441199d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0a92232c-a707-4609-9d38-db5c913a04f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fd7a41-4537-49b5-927f-e6b61cb4c081",
        "cursor": {
          "ref": "bd24b72c-9939-45b9-8005-5d4aa4698948",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a86666ea-29cd-4106-8dfe-0528ecaead9b"
        },
        "item": {
          "id": "82fd7a41-4537-49b5-927f-e6b61cb4c081",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c52abfb2-34a1-40ec-a528-23a70bac09c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2c6714-666e-4531-870f-9e277a35118f",
        "cursor": {
          "ref": "70e32876-a045-4478-91e7-531d6a849b30",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3a2b18dc-b073-468a-8f9d-8ef6b249ac5c"
        },
        "item": {
          "id": "ee2c6714-666e-4531-870f-9e277a35118f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "18979379-82b6-4b4b-a5b2-65598bd81e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e38a5e-1227-4438-9caa-08e02fb55166",
        "cursor": {
          "ref": "7faa53a1-9c29-404d-881d-5ca5c3a7deb9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e5c0ecdd-09bd-44bb-9e87-7bf3e82a9345"
        },
        "item": {
          "id": "46e38a5e-1227-4438-9caa-08e02fb55166",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64ede0d1-d871-4fd6-ab69-f20a7672ae0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb40b6e-0582-4801-a99b-12e04d93b363",
        "cursor": {
          "ref": "12e4bf6b-261c-44b7-9d1a-3a252cdf5540",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a26698ed-a4e3-4fbe-805c-67f0818e427f"
        },
        "item": {
          "id": "dcb40b6e-0582-4801-a99b-12e04d93b363",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3deed69f-4c1d-42af-8e9e-725259f3b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453c936-abc4-4d44-840e-d1ee6f6f1f50",
        "cursor": {
          "ref": "f063c958-30f8-46a2-ba77-ad5c0b08712a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4e7d906-a3c8-41d3-abce-dfdb677d59e7"
        },
        "item": {
          "id": "8453c936-abc4-4d44-840e-d1ee6f6f1f50",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e91c7bcb-3dac-428d-8c31-87ffbaf7818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8da468-0f21-41bf-9c17-39c93684fc6d",
        "cursor": {
          "ref": "48695d4d-c8ce-4826-af9a-573df29085b3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cdbf5485-3544-4eb4-9065-3247618a0aac"
        },
        "item": {
          "id": "8f8da468-0f21-41bf-9c17-39c93684fc6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1bc2133-b883-4a8e-ab37-b48d6cedd4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b1201-56fc-4f9a-81d5-a4d6ee3d2ed7",
        "cursor": {
          "ref": "48a41371-4efc-4fb4-99ef-cde1be7813bc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "166623bd-9592-401e-9d4a-24792491a11d"
        },
        "item": {
          "id": "578b1201-56fc-4f9a-81d5-a4d6ee3d2ed7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "48026d4c-6dd6-4887-89c3-2a7e316614d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6673ee-e9c5-4216-99c5-f1ffa6801777",
        "cursor": {
          "ref": "e2f45be5-1a87-4720-9288-8d5276515160",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9bcee3b4-03ec-422b-ae51-5961f08a23dc"
        },
        "item": {
          "id": "9f6673ee-e9c5-4216-99c5-f1ffa6801777",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5e515820-fc5b-4eff-b9d8-e770090b2ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8dcb2a-600e-4769-9293-c6170445b642",
        "cursor": {
          "ref": "82160de2-aebc-45d5-b1ab-f604ec15b378",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e119717d-97ed-4fa6-8ea6-ca1e23246707"
        },
        "item": {
          "id": "5d8dcb2a-600e-4769-9293-c6170445b642",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "318d982b-42c4-411d-bdc5-b023c36ac177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88bb1d7-5dc0-4682-8967-f0f983cf059c",
        "cursor": {
          "ref": "4e68f5ea-a1dc-4981-81fc-a71652f0ee0e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "24563d9f-ffd8-48d0-8799-17a601261576"
        },
        "item": {
          "id": "d88bb1d7-5dc0-4682-8967-f0f983cf059c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ea98c903-685d-4549-b660-cdf4aa887646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad35e8aa-0f94-4757-bd2c-f9a870a883f8",
        "cursor": {
          "ref": "8665a9f5-eed6-4a16-8505-daf2f998040c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3b0d9a4c-1cb9-48cb-9668-9cdc9f6f7e6a"
        },
        "item": {
          "id": "ad35e8aa-0f94-4757-bd2c-f9a870a883f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6fdca55b-1107-459d-8c1f-9b5d9a85a4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65592c56-ea4a-45f3-9ba8-244019978899",
        "cursor": {
          "ref": "9a1eb169-66d1-4fae-9aa3-2b874c4db3e5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "24810593-abd0-4f3c-9b70-968d68ef2676"
        },
        "item": {
          "id": "65592c56-ea4a-45f3-9ba8-244019978899",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "18b0d3b2-e3c0-4208-bbf6-546b5b481a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cc7358-8e21-48ee-9a06-c895969403cf",
        "cursor": {
          "ref": "d450538b-bb6f-4f34-8791-c0ae18e81ed6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d1e0e43-d137-44a7-b95d-70c754c8e55f"
        },
        "item": {
          "id": "99cc7358-8e21-48ee-9a06-c895969403cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3117963a-e727-41e6-a58b-c6f4ff4f6d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e730d-86bf-4c76-8963-0198184e8e35",
        "cursor": {
          "ref": "17721a7b-8505-4549-bb4e-e01e109845c1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b276f41e-13a7-4c00-9226-18626bda2bc8"
        },
        "item": {
          "id": "ad5e730d-86bf-4c76-8963-0198184e8e35",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8c302bc2-92fe-4be3-9fb0-9fe9c66ae320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d264f0-64cd-4c67-8781-d66a39e7f1dc",
        "cursor": {
          "ref": "08f7ffab-131d-45b3-9f29-41e2db7841df",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c6ce35b0-3bf1-4c75-9ade-20269506c9bc"
        },
        "item": {
          "id": "d8d264f0-64cd-4c67-8781-d66a39e7f1dc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8f4bdabe-2c7f-4f24-bb99-0d12664316b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6395bce0-306f-4a12-8144-ae5099857402",
        "cursor": {
          "ref": "01a9ac38-b2c8-43d6-92a0-0f399ecf6ad6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7cbcf722-77ef-44ce-9f4b-b6eea0b609ba"
        },
        "item": {
          "id": "6395bce0-306f-4a12-8144-ae5099857402",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6ff6241a-00af-43a4-b06b-071b26e2163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142a111-10cf-460f-b1b8-80cef8b02fb1",
        "cursor": {
          "ref": "f40a0bbb-ae93-43e7-a953-8916c79e0f8c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f3f6fd08-a268-4d20-915a-6a33f111a7bd"
        },
        "item": {
          "id": "2142a111-10cf-460f-b1b8-80cef8b02fb1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ea9347f2-0e7b-4e15-b1ec-2d3c196bb39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d6c0e-1cde-4b3b-9384-15b0d1820697",
        "cursor": {
          "ref": "32fec76e-df5e-4b7c-99dd-4c405a40a1e7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "857ffa4d-f151-4ed7-9886-ea9de72f2d29"
        },
        "item": {
          "id": "865d6c0e-1cde-4b3b-9384-15b0d1820697",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b6fd368c-89a0-4643-917d-a1bb6f04e2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc2acbb-cfc1-407e-adca-1a38289e9d0f",
        "cursor": {
          "ref": "c6a6af79-8938-4128-96d3-c7f02da304b0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0b7973f4-179a-4542-b9ca-8b941e967c95"
        },
        "item": {
          "id": "7dc2acbb-cfc1-407e-adca-1a38289e9d0f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e1c81eff-0df4-44b0-a7b7-e764248dd773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d008f5-2e11-4a7b-b54b-97b0574f35ea",
        "cursor": {
          "ref": "9ecdda2f-c81f-4d7e-9a40-edfbbdf490df",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bde159f8-0844-42d7-9ad9-cfbe021f4cdd"
        },
        "item": {
          "id": "a2d008f5-2e11-4a7b-b54b-97b0574f35ea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66fa63a1-4cb1-4224-9ca5-03bac623262d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562d6f48-2aae-4068-a823-c040b99110a1",
        "cursor": {
          "ref": "59629abc-53b2-48df-aeaa-cf43df7d88f9",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b126d685-bb50-49c3-9052-7cf90dcadf03"
        },
        "item": {
          "id": "562d6f48-2aae-4068-a823-c040b99110a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8205a7d5-1177-47b3-8e2a-566bba38635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b9520-fc72-4fe2-986d-166e4286db56",
        "cursor": {
          "ref": "fa49d437-05a2-4bda-93c4-2c4d03ab3176",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c69a9d2e-8e38-4971-98a8-0f5179dde971"
        },
        "item": {
          "id": "9d3b9520-fc72-4fe2-986d-166e4286db56",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cc62b8c2-050e-420d-bdad-3733c8e32058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b116c2f1-b5bc-41c8-99af-f328fbe24895",
        "cursor": {
          "ref": "9140877d-ebe8-4e1f-9929-8d9d3e8f9fbb",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5365a76-5f9e-4d0d-a333-2bb0dff8d289"
        },
        "item": {
          "id": "b116c2f1-b5bc-41c8-99af-f328fbe24895",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "639b259d-ca7e-4fcd-b811-39f3ed4a5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f3f87d-fa72-479f-b802-67e65e5049b1",
        "cursor": {
          "ref": "f7cc7fd9-23cd-4b20-9593-33d1db3b1413",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6bdc442-e018-44a1-9e04-1e0c278ed651"
        },
        "item": {
          "id": "92f3f87d-fa72-479f-b802-67e65e5049b1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f72bf584-314e-4784-9170-5aa99cec40c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc5e5e3-cd1e-4397-a905-2c1944ecff4f",
        "cursor": {
          "ref": "e26b27da-0a9b-4605-9cf2-bc00438e2aea",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e0b1e635-e863-4893-9cdc-d6c4803d00a4"
        },
        "item": {
          "id": "9dc5e5e3-cd1e-4397-a905-2c1944ecff4f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8d9d63f2-3e1a-4ab1-ab28-0ff894ea5eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dff17f-ae45-4442-9eff-ddef508fd099",
        "cursor": {
          "ref": "7ad29b2e-453c-4b09-ae23-255ea7fd17ab",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "18173bef-9029-4175-99e2-3675ccfb12b6"
        },
        "item": {
          "id": "f1dff17f-ae45-4442-9eff-ddef508fd099",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "16116bd4-d267-46e9-b296-398a09be8786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572b936e-30a3-48c9-88fd-89d91c8880c4",
        "cursor": {
          "ref": "a9a1c07c-dd0a-4a56-b278-c4f41c7fd4ed",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95177659-5cf0-4745-bf9a-13fc781ab1ce"
        },
        "item": {
          "id": "572b936e-30a3-48c9-88fd-89d91c8880c4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c6f86cb-347b-4637-8a29-ab3c59ee1fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2d1589-6084-4d0b-bdeb-acf40fe63fae",
        "cursor": {
          "ref": "43e512dd-8021-4457-9538-35e3bbd1a0f1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a40b7fb4-ad1f-4548-84ef-ec35bca85d4e"
        },
        "item": {
          "id": "af2d1589-6084-4d0b-bdeb-acf40fe63fae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "60d38bc9-3ea7-4e1a-ba02-496d7d9a9ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d07c4dc-70b3-4496-9c9d-98eececc0ac8",
        "cursor": {
          "ref": "b8c8d3cb-f7d2-4945-892e-1625d1a99b90",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2d611a5c-72fb-4e73-beab-b4d798761e46"
        },
        "item": {
          "id": "3d07c4dc-70b3-4496-9c9d-98eececc0ac8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e570378-023b-47f1-a231-e30da7056ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f81b3dd-2379-459e-aaf0-2392f53dcdff",
        "cursor": {
          "ref": "2002f357-f442-40c7-a11a-e5428f3fb2ef",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0fc7f6f8-05a3-443a-8325-ba12214b6aaf"
        },
        "item": {
          "id": "4f81b3dd-2379-459e-aaf0-2392f53dcdff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "42484a77-1b4b-438c-a69b-814320486b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48336a5-4c48-41e0-b878-3531be71c354",
        "cursor": {
          "ref": "88ab2063-2ad6-486d-a779-5e92d8d9fbb0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "519f36e2-6941-4360-a970-9e4a6a3a9f66"
        },
        "item": {
          "id": "c48336a5-4c48-41e0-b878-3531be71c354",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f6f55bd7-dcf6-4322-a4c7-151a07d31bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30edb492-dd79-49a3-9a0f-d3be6ec3388d",
        "cursor": {
          "ref": "ee856cef-838b-449e-88fc-6d2951aeb278",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "15505dfa-1900-4956-9e2d-538cfffb31e4"
        },
        "item": {
          "id": "30edb492-dd79-49a3-9a0f-d3be6ec3388d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7d77b24f-b718-47f1-8969-a275b6052712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933bf91-c183-4afe-b56e-0056b77b5101",
        "cursor": {
          "ref": "8808f5a0-34a6-4f26-8df2-07af8212894d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7f340917-31b4-49ce-bb08-01817f6c117a"
        },
        "item": {
          "id": "f933bf91-c183-4afe-b56e-0056b77b5101",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e349a82b-82fd-432d-a577-7640e29ddc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862ec63-0389-4934-8d5f-57b41f353bbb",
        "cursor": {
          "ref": "588e7790-9062-4c1e-9951-7b322ec88bf1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "39ba4973-fed5-48a3-9e75-42957e323fc0"
        },
        "item": {
          "id": "d862ec63-0389-4934-8d5f-57b41f353bbb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59519ef5-4cf3-4308-9688-742102574f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d042eac-57a0-4b58-a623-dd20d8112d78",
        "cursor": {
          "ref": "53a45959-4e2a-4cf8-921a-e89bccb8fbed",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "346cc617-b9c6-4285-a048-7fae8184bb53"
        },
        "item": {
          "id": "7d042eac-57a0-4b58-a623-dd20d8112d78",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2a1087d8-42c0-426c-a4c9-2b03de526e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224dce2-a545-4607-b83e-0ec1d7052190",
        "cursor": {
          "ref": "6da9ccdc-013d-4748-88bd-6e73ef85e7db",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "354aa840-9708-4bcc-baf6-4d78ee9c15a0"
        },
        "item": {
          "id": "9224dce2-a545-4607-b83e-0ec1d7052190",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "319d7df7-fc62-4421-9d3d-faf2c935a250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e70d36-69e6-49b3-b460-afa275c70a4d",
        "cursor": {
          "ref": "9b9a0e30-eab0-42c2-b25f-3195f91c5f6c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3efc8b7f-cbb8-45c0-9002-570b837279ff"
        },
        "item": {
          "id": "a3e70d36-69e6-49b3-b460-afa275c70a4d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "039d1aab-b433-4213-b2a7-adbf205ea4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3f0cf6-ce83-4f40-8dd2-3a67c8d81cb8",
        "cursor": {
          "ref": "31e28197-d445-4018-8d6c-56bda3848c03",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f8aa1c90-a966-427c-8050-c4f3ec95b9d8"
        },
        "item": {
          "id": "bc3f0cf6-ce83-4f40-8dd2-3a67c8d81cb8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c092b209-6fdd-488b-a3b6-aa5694d0ac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd36848-b723-4e30-9380-0414e7fdeb38",
        "cursor": {
          "ref": "ad6424d9-f383-40af-9310-cea830513c58",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b682552a-0144-4cb8-a598-1b144245a83f"
        },
        "item": {
          "id": "9dd36848-b723-4e30-9380-0414e7fdeb38",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e6eb86df-352a-4812-be9e-72f4fe7f00c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbce680-5250-4d20-963b-bc4cc86a969a",
        "cursor": {
          "ref": "41a1c5fc-4186-443b-b4c0-87c8cea727fa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "44fe0949-9902-4f1c-a0c8-0a9f1680da77"
        },
        "item": {
          "id": "edbce680-5250-4d20-963b-bc4cc86a969a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2a01c651-720f-40f7-bc10-da78eefbe7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31072287-7169-4e73-9589-e719ba9b70eb",
        "cursor": {
          "ref": "448911ed-c73b-459c-ab9a-3347612c0c7e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "69a482fb-b5da-4c0f-b288-8c74ba9f48ec"
        },
        "item": {
          "id": "31072287-7169-4e73-9589-e719ba9b70eb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9b9202bb-9f20-4dd4-984c-be50ba96d1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa023c6e-2d77-4c0b-a3c0-109d89732939",
        "cursor": {
          "ref": "5f953381-8724-46a5-8c46-4ec78399a621",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eae83c40-f34b-4f2c-967d-5bfe8cdfc24f"
        },
        "item": {
          "id": "aa023c6e-2d77-4c0b-a3c0-109d89732939",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a2dca6d2-b280-469f-ba83-76d6ce6b5a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb0f873-791d-4d67-84d8-3782427c1200",
        "cursor": {
          "ref": "365ede5f-8342-49b8-a208-b014b8cf3773",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18f4e61f-bf41-4ea6-89b5-41b18dd85f80"
        },
        "item": {
          "id": "3fb0f873-791d-4d67-84d8-3782427c1200",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "360addcd-3d7e-4a2c-894a-a5a87528d5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bf2765-0890-4704-9311-53d7ebca84ad",
        "cursor": {
          "ref": "b351ce2d-c0cb-4a22-a186-34fc74c14310",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4dd91ec0-2131-44e0-a6d4-a9c8f1caadc8"
        },
        "item": {
          "id": "28bf2765-0890-4704-9311-53d7ebca84ad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "32deb10f-50c3-43e9-85f6-2af7a13b0072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd1154-b66e-45d9-ac66-c58860d4ef45",
        "cursor": {
          "ref": "7d88f97f-a35b-42ce-bd3c-5a4da5c32cd7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "95f6bbac-34b5-4ca4-b578-b186b0f50b61"
        },
        "item": {
          "id": "aabd1154-b66e-45d9-ac66-c58860d4ef45",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "48ffa86e-63fb-4cbe-b58d-a79587457188",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 16,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1697535-d8e0-40e6-83a4-913f24b7cc9f",
        "cursor": {
          "ref": "98bb1271-70fc-49f2-b7dc-3806a1d6606b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8465a9c1-d160-418e-9273-7f87af02c7b9"
        },
        "item": {
          "id": "d1697535-d8e0-40e6-83a4-913f24b7cc9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7d21d101-faa7-42a7-a1c0-7e90e682307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "3513d664-34eb-46cf-b045-34d6b6e50286",
        "cursor": {
          "ref": "b2345852-d8c7-4524-a319-e16981cc0b05",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9ac24361-a094-4fbe-b2b8-d98dd2f8123d"
        },
        "item": {
          "id": "3513d664-34eb-46cf-b045-34d6b6e50286",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "374f0933-cb6a-482d-bb97-1615cd2bca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "dc49cf9d-eff4-45bf-a94e-f024d1741c75",
        "cursor": {
          "ref": "fa2e71b0-47b6-451a-857e-b3e2c7c9577f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0e5dec40-eab9-49de-87df-ebe2ba933e84"
        },
        "item": {
          "id": "dc49cf9d-eff4-45bf-a94e-f024d1741c75",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "90e83f6d-ca54-42ab-baba-cbe188f01365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "218f3bd0-dd9d-4239-b7e6-b378fccccbf5",
        "cursor": {
          "ref": "22aa2019-45e9-409a-bf68-3ad9c2ecc367",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a063f855-72cc-4b9c-a266-66500704e88e"
        },
        "item": {
          "id": "218f3bd0-dd9d-4239-b7e6-b378fccccbf5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f959b5e6-47a9-4f1d-b4b4-b8360ed21ff0",
          "status": "Created",
          "code": 201,
          "responseTime": 4787,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14945b1-c120-4e50-beab-cf7e98c0cad6",
        "cursor": {
          "ref": "13d76354-9f8b-45b8-950b-7eabf02efd16",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "273a420b-fd92-4707-949c-7fde199ef73c"
        },
        "item": {
          "id": "b14945b1-c120-4e50-beab-cf7e98c0cad6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cbe1426a-1647-4f97-ba11-ca3f801e996f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "633698b0-b356-43ff-b39c-541508070607",
        "cursor": {
          "ref": "215942a2-3559-45b0-95d2-4daaf20afb78",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29dda32d-eb16-4c66-9fd9-1bb4036b61be"
        },
        "item": {
          "id": "633698b0-b356-43ff-b39c-541508070607",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b3a3a766-3664-4f28-a05d-228b809c5e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "54b2c749-f3c7-42bc-9bbe-2951e01427c0",
        "cursor": {
          "ref": "c3fe16f1-6842-476c-ae29-1daa2a5e257f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5b8f0665-fa71-47ee-a7fb-c092f46f55c0"
        },
        "item": {
          "id": "54b2c749-f3c7-42bc-9bbe-2951e01427c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8df3b62-5ee7-475e-b5b9-00c2d9e1de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fda41-c565-4e4a-84e1-179a75a6f59e",
        "cursor": {
          "ref": "053e5559-1399-4092-b4f0-0563fba3508f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce33ba56-ee6e-40b1-9389-2704fd5d9656"
        },
        "item": {
          "id": "f24fda41-c565-4e4a-84e1-179a75a6f59e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c31a94ca-78f8-45a1-81a7-a089741e5686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b3ff7-a8cf-4377-ba7f-e35048b6671a",
        "cursor": {
          "ref": "bc0efa7f-c1e5-480b-b437-d4de39995ee6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0b763413-0323-4c57-991e-7a02f6dbaf10"
        },
        "item": {
          "id": "ce9b3ff7-a8cf-4377-ba7f-e35048b6671a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e5b7c32-05b4-4d47-bd9d-be7b0902c3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de4a94f-7dff-428d-b38d-4ac491ad9042",
        "cursor": {
          "ref": "e3c63b78-50d0-4a93-860f-37f0c0d6c878",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75e19009-9f2b-43b1-bbb1-4ec1fa6ba84f"
        },
        "item": {
          "id": "6de4a94f-7dff-428d-b38d-4ac491ad9042",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "92e8d152-1510-43f2-9f94-e406f22bbb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2db412b-c878-421b-8176-b8369ae7dbd2",
        "cursor": {
          "ref": "f337c826-c80e-4edb-8262-065dad20d608",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1f0c6ded-4214-4e1d-ba46-3d31b10f175d"
        },
        "item": {
          "id": "b2db412b-c878-421b-8176-b8369ae7dbd2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f053ad7c-a797-47a6-974d-1908010d125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0765a3c-c50f-49c3-ba78-bba30f91ea94",
        "cursor": {
          "ref": "e97b3d5d-566c-4d79-90a7-829d56201c55",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1fe44469-43bc-4fef-865d-10d12c7702f2"
        },
        "item": {
          "id": "d0765a3c-c50f-49c3-ba78-bba30f91ea94",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0e1620c-764f-4f08-bd84-9ccd2a1acb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88672c47-0efa-417e-a6d1-645978082643",
        "cursor": {
          "ref": "60de5e6d-4c42-45a4-abb1-eb7ad76af185",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12e70599-2b25-4ead-9db1-6606363b13de"
        },
        "item": {
          "id": "88672c47-0efa-417e-a6d1-645978082643",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52c1af68-e722-4514-8ce4-ba0806e822f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dce362-4b30-48e1-b92b-c5974e13a776",
        "cursor": {
          "ref": "747a50a0-7cc9-425f-87d0-0301309dcd60",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f2c3468-f263-417c-94fe-ff66bab4672b"
        },
        "item": {
          "id": "c2dce362-4b30-48e1-b92b-c5974e13a776",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c069479c-9da8-431e-9c36-3b178810b13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d675784c-8d10-4af8-8851-cfd4be13784a",
        "cursor": {
          "ref": "bd6a7b9f-3f4c-4988-a7d9-bcfc0805e444",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "961baa7e-4734-43ee-a7c0-de4ed912741e"
        },
        "item": {
          "id": "d675784c-8d10-4af8-8851-cfd4be13784a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55a54351-c579-4732-bc73-a4cdd280b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125eee54-e298-4ae0-af61-dc0536ae2666",
        "cursor": {
          "ref": "c0b2ea56-978b-4b4f-9816-5ce8d22f0adc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a4b5ed7-3566-4ec8-9876-266b35561198"
        },
        "item": {
          "id": "125eee54-e298-4ae0-af61-dc0536ae2666",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "686106e9-d9ae-41d1-b9c8-d2f0ad725d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21541b2-f744-4178-beb9-ecea89175b8c",
        "cursor": {
          "ref": "93ccec3e-30ce-4f13-9977-05e2b5958b65",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4b7ad69b-1180-4147-a1f4-fdd07f6ae959"
        },
        "item": {
          "id": "d21541b2-f744-4178-beb9-ecea89175b8c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bde4666f-0b4f-43de-aa1b-9f81461060cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32099466-2614-49b2-b360-a203f3801f0a",
        "cursor": {
          "ref": "a61437a0-5884-46da-99d0-dfac5b9c15c7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "335893e3-dd1a-4116-82ab-22b5fc2fffb5"
        },
        "item": {
          "id": "32099466-2614-49b2-b360-a203f3801f0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6def099b-c7a1-474d-bb39-84e3dab5880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfccb5e2-513b-4298-95ed-5bcb62d1ef75",
        "cursor": {
          "ref": "6b66a230-a040-4510-9234-904fa5d80c6b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af7e4d93-e30e-476c-803a-073f8d7f8c2c"
        },
        "item": {
          "id": "bfccb5e2-513b-4298-95ed-5bcb62d1ef75",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55fee57b-412d-4a27-a6f1-a3c98df5772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50f483-97f8-4a7b-9a83-68eeeb037bf3",
        "cursor": {
          "ref": "03e47b2b-0ae6-49c5-b839-dc430c8a5299",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "968c0bd2-f0c5-4b9f-af18-bfa0253fee76"
        },
        "item": {
          "id": "da50f483-97f8-4a7b-9a83-68eeeb037bf3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e416faf-5891-4f19-bc08-217a17d59444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e571c8-416e-4c92-8872-7fffe3e81232",
        "cursor": {
          "ref": "f9e26f5a-2da6-4d23-aad5-b6bacfa9551a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3b1a2c8f-09ec-4c99-8ffd-498fa1245de5"
        },
        "item": {
          "id": "03e571c8-416e-4c92-8872-7fffe3e81232",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd071bd0-d27a-42b4-b40b-37f168b7f1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c3504f-460f-495a-8cf8-f9458df53c18",
        "cursor": {
          "ref": "717f59b1-f54a-4bb2-a7fc-ce28e59c18fa",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "60c3773f-e8ae-414f-a05e-a13790acd7cd"
        },
        "item": {
          "id": "68c3504f-460f-495a-8cf8-f9458df53c18",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb2a59dd-a8e8-4c33-9726-d6f0ac914cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee777c2a-a981-46dc-8c1f-b597ab74c272",
        "cursor": {
          "ref": "283afb57-797d-47b0-9716-176f2ffcff71",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8720e0e8-9131-4ccc-822a-3a83dbc736cd"
        },
        "item": {
          "id": "ee777c2a-a981-46dc-8c1f-b597ab74c272",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dcd2f4a5-1a43-4983-8ef4-bf8febd591ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a3a2c-0147-44d0-a49a-0edddc729511",
        "cursor": {
          "ref": "22b9a6da-d8ae-4461-a997-dbb172b41977",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "267d1e79-16ab-4bfa-b02d-e41cee9b46e9"
        },
        "item": {
          "id": "ad0a3a2c-0147-44d0-a49a-0edddc729511",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "658b76bb-6160-4059-85b1-f6493ef0748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157f7771-01fd-4e3d-b3d6-7da4ba0c2893",
        "cursor": {
          "ref": "70d9ecca-0f51-4139-873c-9123a9d050ba",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "aba680b9-9188-43f0-a823-dd68518a58eb"
        },
        "item": {
          "id": "157f7771-01fd-4e3d-b3d6-7da4ba0c2893",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1218211e-180f-4b59-b4a0-edf2aa5a0824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ebc951-1dfe-4494-b833-ce3098d618c2",
        "cursor": {
          "ref": "9a53c6dd-e800-4653-80ee-8037ede0b4b0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "78714492-269f-4188-973b-03c469e2d99c"
        },
        "item": {
          "id": "36ebc951-1dfe-4494-b833-ce3098d618c2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f271b435-25b4-4f64-a243-65a63f5517a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b21adc-8a9e-4170-aa77-0c91ca48b061",
        "cursor": {
          "ref": "c5b3b4df-7d8e-484a-9db9-d7e8cb541654",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2d32c535-3a38-4b84-9a1a-e5f3d61388bc"
        },
        "item": {
          "id": "d7b21adc-8a9e-4170-aa77-0c91ca48b061",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "87f60428-af8f-4a8f-8f3b-9c7d7b94bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75260929-d068-4609-9085-44086d97a07a",
        "cursor": {
          "ref": "3bb53f4f-4e4b-4114-90c9-e78b9f53c6b0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f20b93d9-e575-45e4-95f1-1e539e58c02c"
        },
        "item": {
          "id": "75260929-d068-4609-9085-44086d97a07a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c79fcbdf-e2d8-4348-abf6-1bca818ef2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e0480e-b303-4404-b0d2-62d266e4bfee",
        "cursor": {
          "ref": "195d9c99-df23-4316-b57b-a5cf10b6bf7d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8aa8bac2-9bf4-4964-a38d-e114814b068b"
        },
        "item": {
          "id": "56e0480e-b303-4404-b0d2-62d266e4bfee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0e9bd9d-6003-4ac7-92f1-8467bd78d195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87758ca7-5265-409e-a6fe-38217d66edb9",
        "cursor": {
          "ref": "b40e7542-1f69-43b5-a1b1-ab8557a428c6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1ebce23c-7aa6-495a-afec-0c216a60b96a"
        },
        "item": {
          "id": "87758ca7-5265-409e-a6fe-38217d66edb9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0273c58d-798b-40f8-a9a1-321686c6ca5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30af0fe1-09f5-468f-8eb7-a47d42c81a10",
        "cursor": {
          "ref": "c5c3c960-5fd9-441d-9351-54a91a2c9e98",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9a49e397-f31e-4cdb-b5b0-1b90f3f24a8d"
        },
        "item": {
          "id": "30af0fe1-09f5-468f-8eb7-a47d42c81a10",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f5663fa-c147-4370-b26f-fd7317aafc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6882ee79-4246-4baa-9f79-3bce43f99e59",
        "cursor": {
          "ref": "f701bd0b-ea51-4eb8-a256-0757ce552b43",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "efd60c77-a0dd-424c-b1ef-53fd03bbc2e3"
        },
        "item": {
          "id": "6882ee79-4246-4baa-9f79-3bce43f99e59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "695b3b9d-8e3f-4997-bd5b-2a4c305e2303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69429ef6-ef68-4ae3-946d-84aa454d6745",
        "cursor": {
          "ref": "d570bdff-0aea-47e6-92d3-402c2dcbdc65",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "576c1615-a56e-4a4e-bd16-507e348e4559"
        },
        "item": {
          "id": "69429ef6-ef68-4ae3-946d-84aa454d6745",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c6dc06b-e3b7-44d4-9604-083a5de629b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfacdcba-cb9b-4024-9aba-f0b33883e1d7",
        "cursor": {
          "ref": "d416f551-1dc1-4989-b3bf-873a26fcf301",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d24b46bd-8a95-4b98-b40a-e88b55f38a3a"
        },
        "item": {
          "id": "dfacdcba-cb9b-4024-9aba-f0b33883e1d7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c6596a1-524b-4e26-aa87-35f7d1ed0064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2b5d1c-c0a0-4a6d-8467-1594b8750bff",
        "cursor": {
          "ref": "ab080290-d77b-40e9-9ee7-b97722435583",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b88577a4-a655-4746-81ca-da57e90207f5"
        },
        "item": {
          "id": "6d2b5d1c-c0a0-4a6d-8467-1594b8750bff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3c08021b-91a7-4f6e-9b07-f2b86e5f02b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70458f5f-a3af-4868-9355-272e7020e9d3",
        "cursor": {
          "ref": "22efc8cf-8116-4965-b6a8-c021544bf182",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3fce1881-9d0d-4b75-a060-0d2fcf36964a"
        },
        "item": {
          "id": "70458f5f-a3af-4868-9355-272e7020e9d3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "695d3e93-6f8d-47d4-90cb-ae30a2ff84df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a8e8a5-c2ae-4f42-9c4b-fb8344545747",
        "cursor": {
          "ref": "acfb7d9e-de66-4c54-86ff-0428d4d95eff",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5a8aab1-ea0b-4974-a51b-26dc6f7fb66a"
        },
        "item": {
          "id": "b6a8e8a5-c2ae-4f42-9c4b-fb8344545747",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "139616c8-5426-4e1f-9761-5c29695aadb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfac9bee-edeb-464d-9b08-75c74a02e2bc",
        "cursor": {
          "ref": "2c3780d5-f954-4a9f-95ac-fe26783e48e3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eb38afb3-97f6-43ad-bcb6-a151350abdd1"
        },
        "item": {
          "id": "bfac9bee-edeb-464d-9b08-75c74a02e2bc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "83aafadb-c4be-45bf-b2db-2aa5b7e1514d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d1d0f6-ad5c-4ac8-9cb7-a35a083b470e",
        "cursor": {
          "ref": "39ba14eb-d355-416e-8ebb-5efbe2f8aed8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "acbaedb5-db23-42c9-860f-e0b88734525c"
        },
        "item": {
          "id": "95d1d0f6-ad5c-4ac8-9cb7-a35a083b470e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1059d986-0654-4d1b-b509-555ff9a1d193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856dc315-49f6-4303-96fb-07123ee7c726",
        "cursor": {
          "ref": "8a11c12b-88bd-41ae-863a-6134f8a33b6a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "090c3d62-3349-4263-a914-a56297a85d80"
        },
        "item": {
          "id": "856dc315-49f6-4303-96fb-07123ee7c726",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4f79a654-9a8d-4201-aea1-f77698d486a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65395ee5-fb46-4fce-9a05-1ada3839f444",
        "cursor": {
          "ref": "d8945f96-1686-4e30-aa37-0f05bfb8d2ea",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "725fa230-08fe-4457-a428-7e15e7952092"
        },
        "item": {
          "id": "65395ee5-fb46-4fce-9a05-1ada3839f444",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f13ff48b-20b7-4e8d-8d8c-9ccfbe8217a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015c29e3-b6d0-4087-af21-642f5c9d9010",
        "cursor": {
          "ref": "fb46ae0d-9691-4cd0-9340-aa37bf94409d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4f0a0fc2-2913-4ccb-9205-f142bb51c741"
        },
        "item": {
          "id": "015c29e3-b6d0-4087-af21-642f5c9d9010",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f4ebfb8-c1f6-4139-b5a8-3f8a8bb0adc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3961afd8-4d4a-4f33-b0fb-3a74c812406e",
        "cursor": {
          "ref": "3acb712f-d458-4c64-b5f9-76f88ebe1e8b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "95fe9eee-e85f-49ab-bfc6-1fbc205156a5"
        },
        "item": {
          "id": "3961afd8-4d4a-4f33-b0fb-3a74c812406e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dd88d0b2-a5f3-45d7-9600-98161457a794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c59e7a-f778-4d14-b749-2f40bf061fa2",
        "cursor": {
          "ref": "ef6b5805-0f77-477d-9aba-f2d05704d905",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4fb75b8-10a7-4ca3-b8b4-cb098f51da3a"
        },
        "item": {
          "id": "11c59e7a-f778-4d14-b749-2f40bf061fa2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c8d7e67-896a-489d-b7bd-b94a13f5c92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fb4058-0eaf-43f8-92cb-505019418a81",
        "cursor": {
          "ref": "0e25702b-407b-4515-b420-8c436c6e9e39",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "56a05983-30cf-4c28-b095-e5752b1c8453"
        },
        "item": {
          "id": "b2fb4058-0eaf-43f8-92cb-505019418a81",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "119610d0-5712-4f16-bebf-5269c72ef80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d0f694-686c-4ba2-869a-38c20748a01d",
        "cursor": {
          "ref": "8b01869b-8fd2-418d-8c5d-daabd950e484",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "201afebc-4e73-4ed2-ae90-2253e6de0588"
        },
        "item": {
          "id": "b4d0f694-686c-4ba2-869a-38c20748a01d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3947a9ee-55ac-44c5-97e8-712382f3c2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003aa85c-4686-4485-bffb-7d5c876182e4",
        "cursor": {
          "ref": "0fc03b04-6595-4060-a2f2-92a9723193e9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "54ccfa32-670c-404d-b4be-b5c833642a6c"
        },
        "item": {
          "id": "003aa85c-4686-4485-bffb-7d5c876182e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b58f353b-1472-4848-8800-1fb7fc7c0f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ee7d35-0991-4cd7-b45c-328cbc572428",
        "cursor": {
          "ref": "7850228c-d9d0-4130-bdcb-3f6e4961f12b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0506ef23-7ba7-4229-ae43-f0c78d2c25d7"
        },
        "item": {
          "id": "59ee7d35-0991-4cd7-b45c-328cbc572428",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7d2066d5-a9c5-4315-89ba-ee9bed2651b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07886f82-199a-44f0-8f42-7baf06aa1992",
        "cursor": {
          "ref": "a35bb7fb-a229-4f38-aea5-23008b4f7dc7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b2b5478d-0cca-4691-9a9a-1ecb86a651a1"
        },
        "item": {
          "id": "07886f82-199a-44f0-8f42-7baf06aa1992",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "02d8f821-17f8-4d29-b24f-3d46051b1296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2140483e-e8bf-4a89-8b4f-3ad7a9442ff9",
        "cursor": {
          "ref": "9675e0c5-68a6-474a-b30a-98545c3cc24b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "54f97468-a481-4a01-9bc2-c8ba4f85ec2d"
        },
        "item": {
          "id": "2140483e-e8bf-4a89-8b4f-3ad7a9442ff9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "085ffca4-d820-42bb-87a5-bb007c00c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d189e-4d7d-40f3-9403-d7e3a11a8707",
        "cursor": {
          "ref": "d419c2cf-6678-4e0e-a1e9-49ce0d02382d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e074b441-c10e-4c03-a53f-5a3af2a79a5a"
        },
        "item": {
          "id": "3c4d189e-4d7d-40f3-9403-d7e3a11a8707",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d3d0a27-070b-43c9-ac15-2f70ed55bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bbb381-9d17-4da1-8647-3540fdcb7621",
        "cursor": {
          "ref": "bc42f3fc-e4e6-47fb-b554-5a099d84763d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87f9f693-cb8d-4771-a674-e0027d29c453"
        },
        "item": {
          "id": "e5bbb381-9d17-4da1-8647-3540fdcb7621",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a65f2235-71f2-488d-a194-7d8a094180c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd9275d-aa20-44f9-98c2-d572baa411f1",
        "cursor": {
          "ref": "9fdbf06d-61ef-4a9a-9477-141ef1d3a57e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "991fe01f-facc-470f-8eac-36cbd2b7d56b"
        },
        "item": {
          "id": "5bd9275d-aa20-44f9-98c2-d572baa411f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d02e7d17-a39c-4fe0-a842-c793d0acd10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b2038-2c16-44fa-90f2-f6d11d72f2ec",
        "cursor": {
          "ref": "5e7492a3-980a-477c-892f-cac5c6fb2852",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "617e334e-90e1-4b01-8b1d-6fd8e8019681"
        },
        "item": {
          "id": "1f6b2038-2c16-44fa-90f2-f6d11d72f2ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "48a23c0a-ba6d-4689-9ce4-770643755294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2cb3e1-2cd2-46dd-b92a-ca73d36a9771",
        "cursor": {
          "ref": "8d5e9f5f-c2ac-4656-91d4-dc97fe9540ef",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30f3930b-dbf5-4bcb-b4fd-d3e01fa4ad3b"
        },
        "item": {
          "id": "8f2cb3e1-2cd2-46dd-b92a-ca73d36a9771",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e1aa798-7e54-4c65-94f1-f99b13744cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9fe6f-c2ce-41fd-b753-231526b9fae2",
        "cursor": {
          "ref": "9ebe23c5-1bca-4b44-b9ef-dca956472681",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16695fe2-2393-4416-bbf0-a3945930b4bc"
        },
        "item": {
          "id": "5db9fe6f-c2ce-41fd-b753-231526b9fae2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d2252e39-93ca-43de-b801-a891e95ba863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5b168-c183-4b78-a597-97f5b153c734",
        "cursor": {
          "ref": "af2ea61c-77c7-4508-8d83-87eda46fd316",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9eb1c76d-266f-471b-8ff4-197437d9c267"
        },
        "item": {
          "id": "2ae5b168-c183-4b78-a597-97f5b153c734",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f0b26222-c0e0-4001-b59a-d9e34f91f68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7238491b-6183-433e-84e5-6eeae0466d18",
        "cursor": {
          "ref": "3493a160-12ff-4040-92c3-e028e4288dc3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e0a8151-ec9d-4e93-98a9-255521a29bcf"
        },
        "item": {
          "id": "7238491b-6183-433e-84e5-6eeae0466d18",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bed0bd8a-ae0f-44b3-8250-e3694bd03291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c16f54-a2a6-4c85-a114-317e86e99ba4",
        "cursor": {
          "ref": "a4c81a02-e18c-4d5d-8493-d7eddf7bc6f4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a169e29-6b8c-4627-a98f-a2ad8ec3c5a5"
        },
        "item": {
          "id": "68c16f54-a2a6-4c85-a114-317e86e99ba4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3aeba335-6e22-4bd2-9808-34cc391a636c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfef2a5-db1b-44c5-9a8d-6500fbd07bc4",
        "cursor": {
          "ref": "8295469e-a4cb-4b5e-a230-e5a5632b0e06",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "44dab08a-efb6-4f7f-b1b8-822ba44eb05a"
        },
        "item": {
          "id": "2dfef2a5-db1b-44c5-9a8d-6500fbd07bc4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9fc589e2-4888-405e-9e3b-69b32fc6d450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e2c4f5-345e-4326-94ae-0ad47b72f823",
        "cursor": {
          "ref": "771230cb-6455-4d20-b78e-0650b0433f31",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d7bfcc60-6e56-4b55-b811-1c307b05b0ff"
        },
        "item": {
          "id": "08e2c4f5-345e-4326-94ae-0ad47b72f823",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7b3c5380-b73a-4622-9153-26181a4dc14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71fe3e2-8160-4b16-8282-3d00721ea2d8",
        "cursor": {
          "ref": "080de558-3c33-44b3-8cd8-eb0fdf29df30",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f1cc53a-7cea-4785-80fa-296ca8fc7807"
        },
        "item": {
          "id": "b71fe3e2-8160-4b16-8282-3d00721ea2d8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "067dff51-2460-497d-81d0-c7b32b541aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3291ba1a-4606-474e-8cc8-a8b9dad1d203",
        "cursor": {
          "ref": "4a45473e-0780-488e-85f7-4e5207c208f9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b50a759a-6f2c-49c2-9f96-c0e3c21a6a42"
        },
        "item": {
          "id": "3291ba1a-4606-474e-8cc8-a8b9dad1d203",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aecc0ee5-6faa-4938-b08f-dac771497fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b99d68-da92-43a2-a54a-16fc0448f794",
        "cursor": {
          "ref": "1c5de311-bd6e-4d9d-a602-8bdc0ddbfe6f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1a3f4b65-cfc5-4ad6-92ed-979b6444c180"
        },
        "item": {
          "id": "11b99d68-da92-43a2-a54a-16fc0448f794",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eee39e4f-fc9a-462b-b456-2ee1dfce811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fedf7d8-74e5-4ad7-a662-0fc826f9c996",
        "cursor": {
          "ref": "977516ac-66e0-405f-b93e-76b05cffb5c4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6a14d7cf-29de-4ece-aaad-defb2e02e6cc"
        },
        "item": {
          "id": "4fedf7d8-74e5-4ad7-a662-0fc826f9c996",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bddc2ee-d4eb-43a8-b18c-b55755b6b2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b47e21-c145-4677-8148-182b6394999e",
        "cursor": {
          "ref": "634c0fe2-1a5a-4b0a-adcf-08956d491ca0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "de13b0e2-3003-44d0-8a25-0c7c289e72fb"
        },
        "item": {
          "id": "75b47e21-c145-4677-8148-182b6394999e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "37b8e33d-35c3-4f73-bacc-e7d39e1da3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264bddd1-20fb-4254-8c2f-5c6a82f7e8a5",
        "cursor": {
          "ref": "80d5082e-29b1-4463-b1b5-f47b82156b46",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56d9318d-5703-4ca2-a46c-726642ce5a38"
        },
        "item": {
          "id": "264bddd1-20fb-4254-8c2f-5c6a82f7e8a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e5accdb-eed2-4583-9136-0ddd43b66b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fb20ae-3290-4f21-b040-597a874db4d0",
        "cursor": {
          "ref": "8678a315-ff62-4faa-9c0e-cabcbaa9a5fe",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6e6506c2-b37a-418c-89eb-f1bd45e09928"
        },
        "item": {
          "id": "08fb20ae-3290-4f21-b040-597a874db4d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "491c3785-5543-4b40-b142-b0996849dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b894c792-c138-49e3-919c-41773d437606",
        "cursor": {
          "ref": "75f16859-7e0c-4325-8e0d-09bcb4385497",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c49e9ecb-7470-4563-91bc-348181611cd0"
        },
        "item": {
          "id": "b894c792-c138-49e3-919c-41773d437606",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aae8e4ac-f135-48ab-baef-17f5323acc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c124f-eb8b-444a-a303-1a53324d8394",
        "cursor": {
          "ref": "1ec64c6f-a7cd-4bd9-bff2-acdbfdcfeb56",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "94066792-5244-4b20-85fa-c3dd774876ff"
        },
        "item": {
          "id": "424c124f-eb8b-444a-a303-1a53324d8394",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6c7f2784-5ba7-462f-8487-ade516670977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f131f19-39d5-4e7e-bafe-ed99c052e62f",
        "cursor": {
          "ref": "411f0670-2a0f-4025-82a4-611703e92cd0",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "901e9fa2-1abd-4be3-8b97-4b6f8ed32419"
        },
        "item": {
          "id": "2f131f19-39d5-4e7e-bafe-ed99c052e62f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "db612a37-9a0d-4989-b2a0-7b435bd091da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bc56b4-4f79-460e-bf7b-5cbecceb5e23",
        "cursor": {
          "ref": "052dfd50-262c-4620-9815-5f25fe6c93c0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9fa8ce4f-f18e-4285-914f-46c53125e057"
        },
        "item": {
          "id": "a5bc56b4-4f79-460e-bf7b-5cbecceb5e23",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f27878a8-10f0-412b-b3d6-5459348d7197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55d1b24-79c5-42f0-ae7f-e2b6518f585b",
        "cursor": {
          "ref": "0b4b28a6-e5db-46d5-bf7c-09aa53689587",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fdd6599f-702c-4e6d-ac22-178c76288ef2"
        },
        "item": {
          "id": "e55d1b24-79c5-42f0-ae7f-e2b6518f585b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "070fe3ee-0311-485a-b95d-3f17c228e6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c26001-60d4-4a55-85f0-5ce2ba78558f",
        "cursor": {
          "ref": "71a675fc-7775-4ff3-9ca1-6cbac64d7fa5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "280f3f32-d158-4d35-8eb7-ed13a7d30f00"
        },
        "item": {
          "id": "c5c26001-60d4-4a55-85f0-5ce2ba78558f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a7c51468-80f8-4f3f-afb2-14f9b8fd9d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e76637-5dca-4213-9a91-62fceac804a7",
        "cursor": {
          "ref": "1f51cc03-2bba-4241-bef9-27562c05caba",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ca6d2bfc-0e53-46cb-a86c-dcdc77413a87"
        },
        "item": {
          "id": "43e76637-5dca-4213-9a91-62fceac804a7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "abe58805-1596-488e-84b7-84ff61fe92f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080fb974-78c2-4d46-820c-aefc9d7cfaf2",
        "cursor": {
          "ref": "70460f8b-b150-4b67-999e-e4cd2d8aa3db",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11d175d5-e268-49bd-a67e-83b3901c7e3d"
        },
        "item": {
          "id": "080fb974-78c2-4d46-820c-aefc9d7cfaf2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d144f443-9671-4e87-b2ad-58bd21381cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78716f-5916-40f5-8edc-55fb445c33d8",
        "cursor": {
          "ref": "1bdbca42-d073-425d-baf8-016c06637c3a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "055f39f1-c3d1-4e63-930c-ed88b581425e"
        },
        "item": {
          "id": "ec78716f-5916-40f5-8edc-55fb445c33d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79c15b78-7bcd-4684-879d-8c275ab1da01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09fe8b2-366c-49ac-aca3-2636b9b5f129",
        "cursor": {
          "ref": "e3788894-4dd5-46cd-b3b3-ade36a2747e6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3cc8e19-a272-4f26-a589-c8b5a251fdfe"
        },
        "item": {
          "id": "a09fe8b2-366c-49ac-aca3-2636b9b5f129",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "35ef9c6c-40bf-445f-9e17-88c4a40b1cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bb3d3b-1ce3-468f-876e-c6791a0b5136",
        "cursor": {
          "ref": "1a32c6dd-c8ec-44f3-9bb2-890884dc4829",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0aa2f2f5-5641-42f8-b93e-26d825b02468"
        },
        "item": {
          "id": "50bb3d3b-1ce3-468f-876e-c6791a0b5136",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f527d545-c955-4796-a9e3-5693c2d02da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aa0d99-419d-418b-a745-242c0e4cc832",
        "cursor": {
          "ref": "526b38eb-f4a0-4f78-bc41-3185ec045873",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "792006d1-cfe4-4bfb-872a-e2aa778fa996"
        },
        "item": {
          "id": "48aa0d99-419d-418b-a745-242c0e4cc832",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "782a9d9b-f644-4b7f-bcee-35f5aa6dc8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb811a6a-6b0a-43cf-8ff1-243190081725",
        "cursor": {
          "ref": "05d39796-e600-4962-9773-bb0aeac5051a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "370ca210-6a20-408f-ac0e-9232ab933784"
        },
        "item": {
          "id": "bb811a6a-6b0a-43cf-8ff1-243190081725",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9aed176f-f341-4955-8a3a-29700b6e76e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a262d77-88c7-420b-9757-a1aece8e717e",
        "cursor": {
          "ref": "da8bed93-3b4b-41a2-889b-10ac46250871",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cf07ad41-5fb6-4b42-8154-e90f67d1ed5b"
        },
        "item": {
          "id": "2a262d77-88c7-420b-9757-a1aece8e717e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b41ce2c3-ab29-436e-a169-4fa09b94d76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f48bc6-7d3c-4e57-87c4-06657c512517",
        "cursor": {
          "ref": "7382ea2a-d9a7-4888-b7dd-7dd33a102a9f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a358ba15-9619-48a5-bda0-6c7379f90e5d"
        },
        "item": {
          "id": "90f48bc6-7d3c-4e57-87c4-06657c512517",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d24145f7-90c8-4914-85ce-fedb1c83d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da2fde2-95b7-4b5f-9d0b-7154dfe3c782",
        "cursor": {
          "ref": "de0524de-ba5b-473d-b1a5-f713e21aaa20",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1175a6d5-7213-4a2a-ac70-b6c2a89bcc1c"
        },
        "item": {
          "id": "3da2fde2-95b7-4b5f-9d0b-7154dfe3c782",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "75958692-e7bf-450d-a99d-bc132a2f8dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64f8f86-40b2-4568-94c1-365ab029e323",
        "cursor": {
          "ref": "0fe34d9c-7c15-48a5-821c-502041a2bda5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6fa4fa34-1572-49eb-86e1-0bb0012de610"
        },
        "item": {
          "id": "c64f8f86-40b2-4568-94c1-365ab029e323",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a433761-b12e-4210-bf15-73801ad8ec79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9af76e-31d7-4e59-97e0-b1d77cffc1ff",
        "cursor": {
          "ref": "176729f6-e0d4-4f5c-832c-fe7177b4cca0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d759c946-0beb-4f69-ad44-266563266dc5"
        },
        "item": {
          "id": "6a9af76e-31d7-4e59-97e0-b1d77cffc1ff",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62b6850c-e45a-4486-8573-8e695883a49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b152df71-9a0c-418d-9b4d-5d57b07c5586",
        "cursor": {
          "ref": "b9f3feab-3802-4cf1-bec9-c91e7cf0f0fc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "615c1518-430c-4582-b39f-d0946bddf254"
        },
        "item": {
          "id": "b152df71-9a0c-418d-9b4d-5d57b07c5586",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a2023336-5c64-4b5e-a308-0e2b62b09ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dd20e2-2fff-4f2b-9b3e-9159b832f454",
        "cursor": {
          "ref": "3e6f5612-3771-473a-a5d9-00497dae7e5e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4f2406a4-26f2-4ea0-a3f6-d6d71612e743"
        },
        "item": {
          "id": "86dd20e2-2fff-4f2b-9b3e-9159b832f454",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3db8f772-8a4f-45e9-9ede-4a0b9f617a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3591261a-7da5-4b1d-a8b6-0e021c18e299",
        "cursor": {
          "ref": "48d7cfd7-79a5-4358-8c81-47d98e055e3f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "85966c32-156a-409f-a095-dd1fc9a9ca47"
        },
        "item": {
          "id": "3591261a-7da5-4b1d-a8b6-0e021c18e299",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e40a6ef5-c508-4673-98c2-63b50b6faecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112255b4-fcc1-4cd7-b776-5c5d560192a1",
        "cursor": {
          "ref": "04cb8755-3f26-409f-a7e2-b4d13773766e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "473615ae-6057-49d9-9d1e-bfe9b6c400f2"
        },
        "item": {
          "id": "112255b4-fcc1-4cd7-b776-5c5d560192a1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "849f7384-2882-46d8-994c-c16a8e4eaa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87eae98b-be7d-4e30-8111-3c0b8c505cc6",
        "cursor": {
          "ref": "905cd34d-380a-4546-b96b-6ab080d40c20",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0c2cd75c-5e73-483c-bb9d-dff5c094444f"
        },
        "item": {
          "id": "87eae98b-be7d-4e30-8111-3c0b8c505cc6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1d21e04a-6f4e-4bf1-b1a1-3fb8500053c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbab2a09-4d71-417e-a615-31b0067cc252",
        "cursor": {
          "ref": "896e05ab-7b18-4e6f-bdfd-04bfd229134e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8b8e93d7-75d1-4fcd-9ad7-08576d28485b"
        },
        "item": {
          "id": "cbab2a09-4d71-417e-a615-31b0067cc252",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2042542b-8f54-46bb-88fa-ed4e9526078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2378edcf-7649-4954-918a-4252cc5c7f58",
        "cursor": {
          "ref": "024a65c3-1a37-4cf1-aaef-4a913ec87385",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cda94424-ba3a-43c9-bdc6-ee16e3393f9e"
        },
        "item": {
          "id": "2378edcf-7649-4954-918a-4252cc5c7f58",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "88851804-8253-4474-bdc9-10932303d910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac38212-9ddf-422e-84d0-f90e13419f67",
        "cursor": {
          "ref": "d811cf8d-4300-4156-9fcf-fa0507a19dff",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f2166d3-ead4-4e55-a3ec-bc557b0c45cf"
        },
        "item": {
          "id": "9ac38212-9ddf-422e-84d0-f90e13419f67",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "62f50029-340f-41cc-bcaf-c7cd5c6cece7",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "64899d9b-7730-4023-92ad-a704e0ddb50b",
        "cursor": {
          "ref": "22550caa-e9b3-4d3b-991f-ab072e7b7579",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "defa5562-fdb8-4510-9e9e-720a5de97fbc"
        },
        "item": {
          "id": "64899d9b-7730-4023-92ad-a704e0ddb50b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cb00f2fe-1ab1-4e07-9087-f7bfe81428eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb50ea80-7e44-4794-b46e-4df41bf7fe82",
        "cursor": {
          "ref": "e0018279-002e-4aed-9931-344cc41491c0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f1321e6d-17b7-4601-af86-ac877199618e"
        },
        "item": {
          "id": "eb50ea80-7e44-4794-b46e-4df41bf7fe82",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c90a75e-ae5e-4ebe-8acb-1482243648a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc609d-b2c3-46c8-bd04-e5e27063b785",
        "cursor": {
          "ref": "888ee2bf-d761-4194-8750-08ce65ad8a52",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "46c370d9-014d-4c18-aa67-4bdbd917e205"
        },
        "item": {
          "id": "e4dc609d-b2c3-46c8-bd04-e5e27063b785",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7e7f70e9-b76c-4afd-aecf-f32069ed07ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8b0dd0-5b4b-4480-a720-c6580532a101",
        "cursor": {
          "ref": "94ba9b5f-a2b4-4291-9dc5-aba9102aebfb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "918e10f3-32f6-4b8d-adbb-3a80e08e6451"
        },
        "item": {
          "id": "9d8b0dd0-5b4b-4480-a720-c6580532a101",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f9418ab0-19c0-4325-9671-0af2196a5943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627219ca-80a2-4f5d-a432-44dfb7425f32",
        "cursor": {
          "ref": "3d2cd20c-a50f-4a45-aab7-07aa1506e38c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e76d1379-d519-401d-bd54-fc965639ae91"
        },
        "item": {
          "id": "627219ca-80a2-4f5d-a432-44dfb7425f32",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a08b4325-a478-4b40-aa40-15dee0eb31dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcbc225-d10b-4b99-a42b-d4a61866162c",
        "cursor": {
          "ref": "f68f2bb9-2db2-4bd0-87f3-e3df8a5c2ea4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "912eaee9-c2ff-426e-aaad-c6b6bf367a87"
        },
        "item": {
          "id": "ebcbc225-d10b-4b99-a42b-d4a61866162c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4aaee0e-d323-496d-8325-4589de7dd08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd9b8c-fb5d-4cc4-a505-2193273ebf19",
        "cursor": {
          "ref": "5628f609-7b0f-4baa-bc88-17d3ef4acd17",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f6f9e015-b309-420f-a319-113e904bd0c5"
        },
        "item": {
          "id": "45fd9b8c-fb5d-4cc4-a505-2193273ebf19",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f94fb323-105f-4d2d-95eb-b418c7820dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc81dd-0590-4b99-b6e7-edbd3132acad",
        "cursor": {
          "ref": "e1fc553b-ecd2-40b0-b239-b4f0ca2e900d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f1b575c6-a5bc-415a-939e-940406f245d1"
        },
        "item": {
          "id": "85bc81dd-0590-4b99-b6e7-edbd3132acad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c9483e0-f5bc-4d32-a53b-bdb6775d1659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baecbbd-d442-465d-9c97-3593812ab108",
        "cursor": {
          "ref": "7549ef54-8473-451b-be70-2266274231cf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cead8b7f-f1d4-41d2-94ec-a66f3046a2f4"
        },
        "item": {
          "id": "1baecbbd-d442-465d-9c97-3593812ab108",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "197f2b81-81a9-419f-8e90-ae56c65b9428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5cec1f-89bb-4019-97ab-b74c9f159c63",
        "cursor": {
          "ref": "b828a8f1-3de4-4bc8-9130-0eda25a68745",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f57fa94c-8541-43e9-84a4-6fe0e4cede9f"
        },
        "item": {
          "id": "0e5cec1f-89bb-4019-97ab-b74c9f159c63",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "edf0920a-c01f-4ad5-9744-8aa0e49d2b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a07ee-8cbd-4c87-80d3-830e903b10c9",
        "cursor": {
          "ref": "081a004a-2486-46fc-802c-163ade9e49ee",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "451edeff-cd4a-40a5-8c36-a8dec10de82d"
        },
        "item": {
          "id": "886a07ee-8cbd-4c87-80d3-830e903b10c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20b42e40-b055-450e-9bf6-22ff007857d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605816a3-e042-4d2b-a621-abfbe9c02f76",
        "cursor": {
          "ref": "d1a4399f-6851-4bd1-8d39-76ec1d1c9d6f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5ff13497-b216-44bf-a963-555d2d8ae6d9"
        },
        "item": {
          "id": "605816a3-e042-4d2b-a621-abfbe9c02f76",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9cbb9136-db36-4d0b-bff0-59ebab050981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da45c46-4890-42ea-8706-369caaa0a80a",
        "cursor": {
          "ref": "417eaea7-2b4c-4cdc-8cd0-7732840db1ac",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd53199b-5652-4484-a774-1a4c45f2fb2d"
        },
        "item": {
          "id": "0da45c46-4890-42ea-8706-369caaa0a80a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb1a5ae4-3afb-4e4e-8fae-f4ba282b3b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd6ed23-ef53-4711-b8ac-497abb21e31d",
        "cursor": {
          "ref": "5df7d121-854e-41c1-8d24-1655188def75",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3def4192-2d55-4eeb-8861-058c082b0402"
        },
        "item": {
          "id": "abd6ed23-ef53-4711-b8ac-497abb21e31d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "28e2f909-b22c-429d-bd6f-411d65be1bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d3828-845f-4234-b399-7e31b2f811ca",
        "cursor": {
          "ref": "ade0f09b-5d42-4c3d-bd5a-d6772d7d1ed1",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "873ec433-92f0-437f-b952-e80e5c9fd7a8"
        },
        "item": {
          "id": "1c8d3828-845f-4234-b399-7e31b2f811ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b03b0379-0459-47a4-a9de-0c40bac46463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5812e381-c43b-4549-b516-dabcf2bda32b",
        "cursor": {
          "ref": "734ded8f-a02a-4e63-bd90-c8bcb337208d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e726b803-867e-4320-b994-ebb80d1be5a8"
        },
        "item": {
          "id": "5812e381-c43b-4549-b516-dabcf2bda32b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5562f3ca-ebe3-474c-9e2c-2775c3684b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8db8b25-14ab-48f8-ae93-925930009c19",
        "cursor": {
          "ref": "9b65868e-2eec-40d6-855c-92c9fba65971",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e8017365-e74b-4808-b830-c082c6712f91"
        },
        "item": {
          "id": "d8db8b25-14ab-48f8-ae93-925930009c19",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cbe8d27e-dd28-45ab-82ab-fe64804d49c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c30ea8d-6500-4b60-bb9a-871237d2ca45",
        "cursor": {
          "ref": "b5aa9ca2-e7b9-4a88-8de9-32533bf74deb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "11008df8-dfae-4f81-8357-d9facf519bc8"
        },
        "item": {
          "id": "5c30ea8d-6500-4b60-bb9a-871237d2ca45",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "12753914-5499-4b03-8f40-c4d16c7cb874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab8cdff-fb1b-4440-87ad-df701ce23522",
        "cursor": {
          "ref": "b4f19e3d-f45a-492c-97a0-21d65ea7efae",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "11ed98f1-2393-4c58-b7ed-0ce49d257f75"
        },
        "item": {
          "id": "3ab8cdff-fb1b-4440-87ad-df701ce23522",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "06eb55a7-07a2-4e89-992e-e4191b2a7406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0ecd9d-09fa-4ad5-9b9d-9932541f2e40",
        "cursor": {
          "ref": "a1045333-6b7c-4cd7-8855-23347f008c54",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b64f207f-6ad9-4768-bd4e-8cf5b3284ba9"
        },
        "item": {
          "id": "fd0ecd9d-09fa-4ad5-9b9d-9932541f2e40",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e6b5da0c-81f6-4fa8-9fa5-ec56c17fb9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918e4b60-1c28-4518-9303-6615545f2278",
        "cursor": {
          "ref": "a650b17a-75c8-42ec-8bcf-8322c6eb49c5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4b19df44-ed9f-44dc-ae8b-c75da58d69c7"
        },
        "item": {
          "id": "918e4b60-1c28-4518-9303-6615545f2278",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "098ec0db-ba4b-4b4d-84fd-07600bfee7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721acb2-3279-497c-b504-dcf3cebd5db8",
        "cursor": {
          "ref": "ef8c083e-9c07-42ae-a223-de88af6646a3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "38ddb79b-7653-4f5c-8053-9d7b20315bf4"
        },
        "item": {
          "id": "b721acb2-3279-497c-b504-dcf3cebd5db8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bb816388-494f-4cc3-b80e-b898438a91f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41cc04f-2dc3-4844-ad42-995c7ec2f43a",
        "cursor": {
          "ref": "25bced6c-bc20-4035-9d73-0cc368fcc842",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3fee224c-0552-4765-b25e-9c3ee4c3337f"
        },
        "item": {
          "id": "f41cc04f-2dc3-4844-ad42-995c7ec2f43a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b9f69cb-ac6b-4082-8a6f-9a47da7a7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d95921f-5b55-49f0-a20c-46870d9b74f0",
        "cursor": {
          "ref": "96dea5fa-99ec-4a4b-bc90-332de4a5dfde",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d411661-2a70-4d49-b07f-5ab92b47280f"
        },
        "item": {
          "id": "6d95921f-5b55-49f0-a20c-46870d9b74f0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1bff9e19-8791-4a35-a8ce-aceda9932ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3c508-83eb-4d16-8d5d-398790761ce4",
        "cursor": {
          "ref": "5e6050be-2385-43f4-bff3-9dabbe952c30",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "396900b2-7c81-4069-99a9-e0199f9835d7"
        },
        "item": {
          "id": "0bb3c508-83eb-4d16-8d5d-398790761ce4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a8cdb7d3-2b35-47f6-bad5-9d82ca6aa436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b63f9f-cb44-410e-8fc9-ef0d47b6ff4f",
        "cursor": {
          "ref": "7d2fc514-9ee0-4564-a82b-d01c60f7cae2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c1825eec-abdb-4c77-9720-08b0c7f6f9c9"
        },
        "item": {
          "id": "e8b63f9f-cb44-410e-8fc9-ef0d47b6ff4f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a99b72dd-d5b2-4abc-9567-08b694bf0ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a583a8-13d3-43f4-adc3-3e163aba5bff",
        "cursor": {
          "ref": "20371ab2-ae60-492b-aca9-72b87921c12a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "089104f5-3fb1-4c19-9ab2-f138c1c6b6e4"
        },
        "item": {
          "id": "f3a583a8-13d3-43f4-adc3-3e163aba5bff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "43e70255-c479-4a98-a352-ff12f4c3e075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb630fe-775b-4911-b365-75abb17159cf",
        "cursor": {
          "ref": "ecec1725-8485-404f-bfe2-6011e833c860",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b1897273-bca9-4afa-a41f-27a9bb1a6e49"
        },
        "item": {
          "id": "afb630fe-775b-4911-b365-75abb17159cf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "249a43be-3941-499f-b095-364cccb4157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb0e608-f99f-465d-84d1-2e290c9b140e",
        "cursor": {
          "ref": "a7cb0ec3-4656-4afc-8dc2-31779e96dd03",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3e7f2c7f-e161-4273-9b9f-dd59b14fb8ab"
        },
        "item": {
          "id": "6cb0e608-f99f-465d-84d1-2e290c9b140e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7d8e0a35-8eff-4a69-860c-1668878d7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823712a1-9427-42a3-af50-79690722001c",
        "cursor": {
          "ref": "d846ce59-8a76-44e5-8549-df8eaabe7f6e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0c01306-7f73-43de-99f9-28aa4532f246"
        },
        "item": {
          "id": "823712a1-9427-42a3-af50-79690722001c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bb02bd10-5e01-434b-be14-a33933c6e4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf3e25f-6a69-401c-b86b-4f97efc24769",
        "cursor": {
          "ref": "2e4bbca2-b85e-43f9-8a0b-c28e46989739",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2ae360dd-a542-4b66-983c-8c9be1ca9a7c"
        },
        "item": {
          "id": "0cf3e25f-6a69-401c-b86b-4f97efc24769",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2cd7c3b3-ad9c-49bc-8147-7430aa661a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb675d59-f496-489e-9442-a57152cb8ff3",
        "cursor": {
          "ref": "4c980bd6-b5c1-4329-a939-43b4bb51d8de",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1fd76b30-79fb-4684-a87e-5bcac62ffa9c"
        },
        "item": {
          "id": "cb675d59-f496-489e-9442-a57152cb8ff3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "02321c9d-3d67-4372-b20c-72690bf5b402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4e06b0-fe14-4917-a8fc-d98fd6f38c13",
        "cursor": {
          "ref": "bd587b44-3a6f-4682-9b61-e444f774d8a3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a341b4a0-591e-4f66-adc7-39d5e6d3b403"
        },
        "item": {
          "id": "ae4e06b0-fe14-4917-a8fc-d98fd6f38c13",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e431c970-85aa-43c4-b469-f02bb5a97499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461366e0-3480-4dd6-9389-9ab08e86d8e7",
        "cursor": {
          "ref": "9425d885-a0cc-479a-9984-1930617f4528",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "40f909b4-0891-4d54-81a8-bef9799258c9"
        },
        "item": {
          "id": "461366e0-3480-4dd6-9389-9ab08e86d8e7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e0901efc-6934-41ee-992f-bf32badbc0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c8ee4-d3e3-41aa-bb92-6c9447dd0e24",
        "cursor": {
          "ref": "b5510ceb-0fdf-4241-b659-0464ad3b43e1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "162e22fa-94c2-4921-8af2-77ef45834d0e"
        },
        "item": {
          "id": "1b7c8ee4-d3e3-41aa-bb92-6c9447dd0e24",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "44df4719-0fdb-4147-afc1-fbf0a318998c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe397c77-8d6d-418b-a93e-5f686994128b",
        "cursor": {
          "ref": "44b2836a-0d86-45f8-ace4-e52a4d6c3c00",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "317b98f3-53ac-445a-a4f4-5bb234c1b9de"
        },
        "item": {
          "id": "fe397c77-8d6d-418b-a93e-5f686994128b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e2da3bb8-d130-40d2-9443-e5f4fc61da8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5399d115-80e5-4709-b094-d20f0b24802c",
        "cursor": {
          "ref": "2c21d49a-352c-4036-83d3-737727be804c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b71d0d57-2fab-4a35-a845-3494139cfc01"
        },
        "item": {
          "id": "5399d115-80e5-4709-b094-d20f0b24802c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a7c2c1b-c99b-44e3-b5b9-32f99f5f1f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8ff512-aa5a-4777-b6c5-068260f6c3f3",
        "cursor": {
          "ref": "7df74897-75ae-44e4-b0c3-7d730cdb0b05",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "168a114a-1b2e-439c-a27a-6c4e15ae1dd1"
        },
        "item": {
          "id": "0f8ff512-aa5a-4777-b6c5-068260f6c3f3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "94d40206-8e13-4eb9-a3e6-7d8ed3ad043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d3077d-f023-4ea3-b8f6-2288d94c697d",
        "cursor": {
          "ref": "4f06340a-2d7a-4196-9cdf-f4601596c680",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6e27131d-ed96-4fa9-9ec8-a63ba765ccbe"
        },
        "item": {
          "id": "08d3077d-f023-4ea3-b8f6-2288d94c697d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "291e9bd1-3edd-4dc1-88f9-1e5003c73215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a652d69-4c89-4b15-bdf2-b2a5226047ec",
        "cursor": {
          "ref": "05454c9e-09f7-4139-9c39-1502fbdf3e43",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed77e955-4361-4ed5-b11b-afea72ddab6f"
        },
        "item": {
          "id": "1a652d69-4c89-4b15-bdf2-b2a5226047ec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5ea52ca3-7456-49e2-b5ca-4bf88c08776c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918a4e63-37a9-4b12-82f5-bfb40cda180f",
        "cursor": {
          "ref": "9e188987-8a23-459f-a905-0e3288a58ec3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b42fcc06-26e4-4b53-b076-8b0536ef6d96"
        },
        "item": {
          "id": "918a4e63-37a9-4b12-82f5-bfb40cda180f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8cb52fa1-7f5e-4bf9-91ca-ab3a6c34c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a0bd04-8afd-4793-a292-03b3c25ea165",
        "cursor": {
          "ref": "09eb0fd1-0325-4b0d-af1c-f2f05deb60cf",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "373c1553-a3c9-4b37-b98e-587c826a8145"
        },
        "item": {
          "id": "c4a0bd04-8afd-4793-a292-03b3c25ea165",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d464a6f5-7ecf-4bee-a96e-7cbd2ddcfefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f05b8f-3383-4f3a-8dd6-f5c677dff394",
        "cursor": {
          "ref": "2f9c5887-e04a-4aea-bea7-08ee7e2a50c6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a7776585-9ea5-48dd-b030-54cd68ab6522"
        },
        "item": {
          "id": "e1f05b8f-3383-4f3a-8dd6-f5c677dff394",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f4ea112-a406-4052-a9d1-5fed4026a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d18fa5-e243-4214-9038-3a8254c67466",
        "cursor": {
          "ref": "9a402aa4-ad8d-4f06-8119-d1e9e2d96cf7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "82ad4e11-2501-473b-becd-f2ddbb01b6e8"
        },
        "item": {
          "id": "38d18fa5-e243-4214-9038-3a8254c67466",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0319dba1-c732-4eda-95a5-054f883f86b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b0cd49-e980-4e4d-a36a-2c9092d26ffd",
        "cursor": {
          "ref": "36cf315e-482f-423d-ad08-8a633d0073c1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d9af6422-4850-4d5c-9f91-dc69e125eef3"
        },
        "item": {
          "id": "59b0cd49-e980-4e4d-a36a-2c9092d26ffd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a124c0f-fb65-4e95-996a-9f0caed113d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3cc989-f72c-4c9a-af4f-dfa9cd334e07",
        "cursor": {
          "ref": "b86a729d-12b0-45e2-a8d7-40b227ae2e69",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c91de66-d8d5-4edb-88c2-cb4a19914dbc"
        },
        "item": {
          "id": "3e3cc989-f72c-4c9a-af4f-dfa9cd334e07",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e2c8e9d-192a-4aa7-ad17-4a5e7d38589b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3de7cff-40a8-4ef1-a101-7db15a4c24c5",
        "cursor": {
          "ref": "24e2e0fa-0ceb-438d-99e1-e4b4b1ef7565",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "98f8d60b-821e-4aeb-a293-822ee0b01805"
        },
        "item": {
          "id": "c3de7cff-40a8-4ef1-a101-7db15a4c24c5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2063aed-dc9e-47dc-baa5-2cfb8d932fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f525d0f3-6af0-4e42-ac92-0ee04db273ab",
        "cursor": {
          "ref": "a18187fa-c684-4323-9215-4eeac4907947",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b822cd0b-37a9-4a6b-9c0c-c4118bad841b"
        },
        "item": {
          "id": "f525d0f3-6af0-4e42-ac92-0ee04db273ab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "005071f2-3035-4852-84c3-05e0923b2ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43522b5-e205-42c7-9fde-f84aecdb2817",
        "cursor": {
          "ref": "85766f77-f2eb-4eec-a07c-92bfdec19eec",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "48f932b2-3b15-41b1-9c47-e4ee85dd6175"
        },
        "item": {
          "id": "c43522b5-e205-42c7-9fde-f84aecdb2817",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d269ecdf-722e-4d61-bce6-90bef6e4a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a24afa-f86a-4190-85b2-9c16f2584b1e",
        "cursor": {
          "ref": "552329c8-eb82-4f80-ab49-0da641f44e37",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bfdfad86-4cc2-4136-89e7-d2abca926542"
        },
        "item": {
          "id": "d6a24afa-f86a-4190-85b2-9c16f2584b1e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f3228c66-bc57-42b5-8c7d-9b3c5a972a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb219dc4-c4bb-4600-aef3-2c6a554bbccd",
        "cursor": {
          "ref": "b0332bac-b51a-4cd8-8db8-05acbeb265fd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b554cb6-0890-44ef-a88f-82397aba3fce"
        },
        "item": {
          "id": "bb219dc4-c4bb-4600-aef3-2c6a554bbccd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0532cb7f-99c6-4b50-957d-495b31868032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d259fa6-11f5-46d4-84cd-46cf43246084",
        "cursor": {
          "ref": "904e8e63-eeba-4098-bfd2-0b16a9d4d41e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "75a2e835-2829-4964-8833-2580a918c189"
        },
        "item": {
          "id": "4d259fa6-11f5-46d4-84cd-46cf43246084",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "357e9b17-ff81-4ae1-af5d-31cb6a797af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbe8f81-8728-4b21-858c-5b99ff7bccd6",
        "cursor": {
          "ref": "53e437e6-b8c1-4cdc-9a10-77c1365128f3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32bf8e55-cfd4-4c19-9bf0-09d00c9de1be"
        },
        "item": {
          "id": "ddbe8f81-8728-4b21-858c-5b99ff7bccd6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f4154b4e-b832-49af-bf29-f4083322e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351f395b-2134-4e31-8458-7fefb672da95",
        "cursor": {
          "ref": "bfa2eb9e-7123-43f0-a3e2-5e88335a4283",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3f2c2000-6309-46ad-8e63-db86e209a281"
        },
        "item": {
          "id": "351f395b-2134-4e31-8458-7fefb672da95",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aa87429c-2e29-49d4-89a8-81ba8efd9ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed8096-e909-4b95-b54e-8da940816ff9",
        "cursor": {
          "ref": "279c1f95-5151-40c1-b669-5c410e56c279",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d0df09d4-359c-41a4-afff-6744661d73fe"
        },
        "item": {
          "id": "85ed8096-e909-4b95-b54e-8da940816ff9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06cf45fd-253f-42f2-88d4-6d876c1d57a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c72e227-09e7-448e-921a-cbb998fd8fab",
        "cursor": {
          "ref": "bb462e81-b8b7-4237-b5a1-f96a4f990a40",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "28883e2d-b86a-41d6-8d2b-d37b35be7003"
        },
        "item": {
          "id": "8c72e227-09e7-448e-921a-cbb998fd8fab",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "211e6e92-c9c5-4416-afb3-ea357da90714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a656ddc-5454-4c18-aef4-966c79b16a04",
        "cursor": {
          "ref": "bb03b16f-7885-4773-a444-ac55c0823ad3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6817d09d-2472-4501-8d90-820b72e317f2"
        },
        "item": {
          "id": "8a656ddc-5454-4c18-aef4-966c79b16a04",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c43a0df-86e4-4a46-a5e5-ec15a0e0a41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8760b87-9372-4ae4-85c2-3bb6539e95f9",
        "cursor": {
          "ref": "f45ec6c3-0b19-4b02-bdce-6dd78f7d386b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7848af6e-13d0-47c9-8852-6d6676413462"
        },
        "item": {
          "id": "e8760b87-9372-4ae4-85c2-3bb6539e95f9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eee8a240-713f-4ead-806b-f2420fc6e0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a1fee-6770-4f35-9457-b0d4398aacd7",
        "cursor": {
          "ref": "2851fcfc-98c4-4221-aaed-7e2d16476313",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3938a44b-24fc-4b69-8129-283214e8e11a"
        },
        "item": {
          "id": "328a1fee-6770-4f35-9457-b0d4398aacd7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6e7fbe3-1ea9-4264-a452-fb7e3fb7a176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f151005-7a4a-441b-99eb-09dc25496b61",
        "cursor": {
          "ref": "15564291-5a16-4ff4-b99b-61309dce19b2",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "056bea80-3c24-4c25-8c0a-10ca87cb1720"
        },
        "item": {
          "id": "3f151005-7a4a-441b-99eb-09dc25496b61",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3c4fff90-87a8-4a42-a8d8-8894eb0fa8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548f2222-70ee-4a64-90db-cc8689519a8d",
        "cursor": {
          "ref": "035dace4-0291-4a99-a9d6-b71e018d3b62",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04c63a41-c1c2-497e-b1a7-e33050b96f8e"
        },
        "item": {
          "id": "548f2222-70ee-4a64-90db-cc8689519a8d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9069d3cd-f5c2-407f-bec8-a3c7937856cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ebef6f-450b-461c-aad8-dbe3d8ce8cc2",
        "cursor": {
          "ref": "63d7b5cb-e848-4e37-b627-684819e31a1b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8d9a3f7f-47d7-4741-8c99-b9715d75a57d"
        },
        "item": {
          "id": "00ebef6f-450b-461c-aad8-dbe3d8ce8cc2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78e1dba0-797b-447a-88ad-4a5715349964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a4f1b7-eed9-49d1-9ca9-c52d7f75eac1",
        "cursor": {
          "ref": "43de7944-1217-49ef-b011-74b6fd84be72",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "45af1076-c455-4052-8fc2-8b98156f4a72"
        },
        "item": {
          "id": "71a4f1b7-eed9-49d1-9ca9-c52d7f75eac1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d291f387-7c0e-463c-ae65-3fa4f3104e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d73d3f-a4a6-4c80-87a9-47be601354ff",
        "cursor": {
          "ref": "f3bb149b-f4d0-4d4f-afb7-fd4f85d0423e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8ebd77dd-828e-4a30-bc06-43c5f269c7f2"
        },
        "item": {
          "id": "26d73d3f-a4a6-4c80-87a9-47be601354ff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2118c3b0-2b59-4f7a-a5c9-105edc89d2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f61493b-5693-4819-8669-f6e883ac6775",
        "cursor": {
          "ref": "7d2dc8af-d347-4864-b5a7-4c85d27cbfa4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dd5c2406-783a-4d24-badd-026a9f587a05"
        },
        "item": {
          "id": "2f61493b-5693-4819-8669-f6e883ac6775",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b39d9498-eda1-48b4-bad8-4fd0ee040f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6966719-b9f2-4cd1-92ea-a6f99e3ad70b",
        "cursor": {
          "ref": "2fedcf14-58d4-4a0f-b8a9-e91db0fc0d01",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4c6ec023-94db-425c-b934-2213cf5a7131"
        },
        "item": {
          "id": "d6966719-b9f2-4cd1-92ea-a6f99e3ad70b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8bafc7ba-9a54-45db-bf7f-f01b7062d419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31479a75-a085-4df1-a290-8cd3ba7181d2",
        "cursor": {
          "ref": "0b520d4b-38c1-448c-9846-7bd65889fee4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "00ae91c7-9de2-4ae9-8aed-92f582ee4bc1"
        },
        "item": {
          "id": "31479a75-a085-4df1-a290-8cd3ba7181d2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9797c08e-cc0d-4cc2-9b88-d846c91eef91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba488be8-4350-47cd-b8a7-6b2c09a30c32",
        "cursor": {
          "ref": "33a1c56b-a3fa-4caf-83c2-f186ee8aca2e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aaca7a84-8aa0-426d-96a7-9ad2a95d672e"
        },
        "item": {
          "id": "ba488be8-4350-47cd-b8a7-6b2c09a30c32",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "484d1516-fe62-40f1-8cee-7fe5a36ba98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a6066e-cbf4-42a3-a966-b3d297051229",
        "cursor": {
          "ref": "45817cc4-6dcb-4b86-981c-28c57fca361f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "76b85680-fd3e-40d9-a741-b34a6e598ff7"
        },
        "item": {
          "id": "23a6066e-cbf4-42a3-a966-b3d297051229",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "31c63ac7-e040-4d9e-8396-e12a08104e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f611e399-18d6-4827-b2cb-1bdf85809de6",
        "cursor": {
          "ref": "66c8bcfd-2b38-4832-a242-fb05dd4b9f40",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0b3755ec-a3d2-4d39-94cf-53465581a494"
        },
        "item": {
          "id": "f611e399-18d6-4827-b2cb-1bdf85809de6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bb47aca0-ceb1-4203-a447-0ee8f6a9347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26bb242-9b02-4a33-add0-2402fc87f851",
        "cursor": {
          "ref": "3859ac33-6a83-46f2-a9bd-d345dc778710",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "55016b3b-9593-4eb7-b453-58f1ca7a9b66"
        },
        "item": {
          "id": "b26bb242-9b02-4a33-add0-2402fc87f851",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aa46f1c7-0df8-4149-9901-07f0bfb45093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e2c86e-1337-4448-b906-1117e06fdad2",
        "cursor": {
          "ref": "6617c9d5-7c74-4ce7-9e3c-3cc5e91df71a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dcf34cc8-720c-433f-b411-f7e834d97c02"
        },
        "item": {
          "id": "40e2c86e-1337-4448-b906-1117e06fdad2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5566feb5-a166-433d-be6c-823e18bbd1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810a772-1f2d-4229-8bfc-7bffbb7a9764",
        "cursor": {
          "ref": "27f80492-f6fb-4e6e-b793-73f0df548278",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d3c770c7-119a-430d-b9bf-e3d2635a6c57"
        },
        "item": {
          "id": "b810a772-1f2d-4229-8bfc-7bffbb7a9764",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9082576-10fd-455c-bbd0-0df3ec0ae5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a3f6e6-0181-454f-972a-047d921c47f2",
        "cursor": {
          "ref": "06c2f007-50a0-4596-9faa-f4619ccea2c0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bf3a54a7-2c37-40a5-8180-3b062335d30f"
        },
        "item": {
          "id": "b6a3f6e6-0181-454f-972a-047d921c47f2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae71264d-1840-481b-80bc-47c4906e7dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e804055-1298-437a-af6c-3b3b028ba486",
        "cursor": {
          "ref": "400b491f-a80d-4f02-8687-badbba6013b6",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e0413b25-a699-473b-bebc-32121cc88cb4"
        },
        "item": {
          "id": "0e804055-1298-437a-af6c-3b3b028ba486",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3b49d3d8-5b32-40aa-a230-f3cd8ce40f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5713821-fa92-47f3-936f-f4fe628e3ad2",
        "cursor": {
          "ref": "298eb157-9897-49f8-b758-9d67a73bfa6e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "550dd703-2be7-4b81-9295-fc8c77035bda"
        },
        "item": {
          "id": "b5713821-fa92-47f3-936f-f4fe628e3ad2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "25fd3d75-8215-4c26-be38-d195308595e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3379d83a-9eec-4b55-a0a1-3f9ec4f17f4c",
        "cursor": {
          "ref": "2a5aa68c-be9c-4d5e-8911-4bf4cfa6c91f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e87c9acb-8e4b-4d99-8ee7-c78c62b90394"
        },
        "item": {
          "id": "3379d83a-9eec-4b55-a0a1-3f9ec4f17f4c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2429ab8a-64d4-471f-9d59-bcaba0f2bc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75867ff-d0a1-4459-8603-77e501bf9d48",
        "cursor": {
          "ref": "5a53a336-1f0b-4eb1-ba7a-00db8dfaa357",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a73c4850-f8e3-4137-b300-3d41c1d30854"
        },
        "item": {
          "id": "a75867ff-d0a1-4459-8603-77e501bf9d48",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "82104c5d-eff1-472a-8c97-414ee5876350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd70055-1bc3-4c32-af77-d567b9954ede",
        "cursor": {
          "ref": "2e2e97ab-e8c3-4ffc-8d46-4ab2c3cf857f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ff5a8b6c-a127-40bf-a031-d264f5db42a2"
        },
        "item": {
          "id": "1bd70055-1bc3-4c32-af77-d567b9954ede",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5d9dc64a-4c5d-477f-910b-1229695e820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c92572-c771-4db7-a38b-bcccb6ec8e1f",
        "cursor": {
          "ref": "51fb2c5b-41fe-4bb3-a403-26b22d297d72",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7f8a5c20-b314-4ec7-b8b6-96bcb74f1404"
        },
        "item": {
          "id": "67c92572-c771-4db7-a38b-bcccb6ec8e1f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f0f3ab85-eff3-40e7-8260-e542b5b5fa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e5ebe-3df3-4f6a-aa06-bc70d0f58b70",
        "cursor": {
          "ref": "be65d60f-0c84-468e-b9ef-b35f2d89ff00",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9e98d8ab-0e22-4623-9d45-c6733741903c"
        },
        "item": {
          "id": "9c7e5ebe-3df3-4f6a-aa06-bc70d0f58b70",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3fd08119-10da-4864-ae42-02d9de348d75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d1e832-3b50-42bb-ac44-c4257f307e6c",
        "cursor": {
          "ref": "f593821f-c4c7-4e10-ade6-923fa885f8e7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "691c975a-9526-4cb1-85d1-fa7309e514aa"
        },
        "item": {
          "id": "d9d1e832-3b50-42bb-ac44-c4257f307e6c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5687aad1-fcdb-4741-92cb-862bc4ea08ba",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "83374811-7a51-48fd-b8bd-a867ff7f9382",
        "cursor": {
          "ref": "d12db816-cbab-408d-a7b3-c4cab72fa8ce",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b25626ce-594b-4c54-a173-d91650d3dc93"
        },
        "item": {
          "id": "83374811-7a51-48fd-b8bd-a867ff7f9382",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f40ca16-8598-4b78-ae76-25d3563a2ab4",
          "status": "OK",
          "code": 200,
          "responseTime": 3009,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b235de1c-31ad-44e2-967e-aa2cc4024ce0",
        "cursor": {
          "ref": "da4d9606-a46b-41f0-bdaa-587e03a927f1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "978b0818-95f6-409c-9f56-c509cdd19c5a"
        },
        "item": {
          "id": "b235de1c-31ad-44e2-967e-aa2cc4024ce0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a5bac5a9-50a6-47d9-8177-563617e27181",
          "status": "OK",
          "code": 200,
          "responseTime": 2852,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "139c353f-4765-4cc0-a7e2-4a1f9923c345",
        "cursor": {
          "ref": "3901535e-3592-4cdb-9660-89133c89cc8d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "76be3fc7-1a27-46ff-a812-38d350a7ca64"
        },
        "item": {
          "id": "139c353f-4765-4cc0-a7e2-4a1f9923c345",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8568633b-58dc-4204-b321-cb8ad78b211a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139c353f-4765-4cc0-a7e2-4a1f9923c345",
        "cursor": {
          "ref": "3901535e-3592-4cdb-9660-89133c89cc8d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "76be3fc7-1a27-46ff-a812-38d350a7ca64"
        },
        "item": {
          "id": "139c353f-4765-4cc0-a7e2-4a1f9923c345",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8568633b-58dc-4204-b321-cb8ad78b211a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379409d5-059a-4fa1-99ca-313df83e16bf",
        "cursor": {
          "ref": "b4486111-caaa-4e3a-8bdd-419440860ebb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "06432f6b-5cab-458b-8b09-c10c8ab7b887"
        },
        "item": {
          "id": "379409d5-059a-4fa1-99ca-313df83e16bf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6baa04e9-a7dc-47bc-a281-3782d8fbea2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 362,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fbd1f5-8c4f-42b9-8a3e-f78cdaf73999",
        "cursor": {
          "ref": "37e5ac9d-2cfc-4c30-998f-2998715a4aa6",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "86764e7f-9eb6-4104-8fca-a09de7b850fe"
        },
        "item": {
          "id": "a4fbd1f5-8c4f-42b9-8a3e-f78cdaf73999",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eaad8cbf-ecf1-4bca-99b7-6aa733541fa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 348,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}