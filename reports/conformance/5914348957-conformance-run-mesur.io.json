{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f435c736-5c05-4ff7-8b17-f4352b04e4d6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "40d834ad-8751-4851-b33d-0a79b6a7e6bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5362d44b-9c69-49e7-857c-2a8460b3e36f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b7a774a4-6e6d-46ea-9763-46e522f9f509"
                }
              }
            ]
          },
          {
            "id": "5dedd569-0118-4c93-8731-46132544d512",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b843fc1-2a54-4701-8656-2cead205e3c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6440261-3e34-48b6-9dc1-b69008cfc15d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6df4e3a-40b7-4481-ad79-bb2fc4fb6cb8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8ce8d6e3-9cb7-4db9-9bb5-910d68905352",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c275873-be77-4c58-bea4-03a2b7decdc5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1c3d72e-c7c6-43f5-b066-093651a6bede",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc276173-a3c8-49d1-a7c5-17cbf4ab94d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50fa99f1-5f27-49a0-b057-d223974cabb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bc5ba96-975e-4d8d-8881-c8efb2d2a531"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9836ca51-3e33-4583-aac9-fc4dc55ed2e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb82e020-f6c0-4f34-b5b1-eb3d9d16e091"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b762bfc7-1d15-4a3e-9970-d07ad9c46f9d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2ac24930-af6e-46ff-8958-4409e54eb13a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6af65813-1fa0-404f-a0b0-35f56c83beb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc16d3d1-ae73-42f1-90bc-5396daf57071"
            }
          }
        ]
      },
      {
        "id": "cff77cf5-8097-4b7e-a0f1-09f533a52abd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "afc0b594-f961-4f9b-a842-fa72d256c2e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "532d407d-2bba-4828-bbe6-895858d63688",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b201d707-b5f9-4d81-b2f6-39d4173c005a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a808d6c2-e211-423b-9c31-99c56d81108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df453463-66df-45ce-93b2-6f9223467889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc51ead1-d539-40ec-a692-f4dfa3aec111",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1c7ea-834a-4a28-8d58-e80a596d08ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4434aa4-f36e-406c-ae69-0911fe26770d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c399d85a-28e6-4844-8b7f-5ae4b19dac4f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c365168-9003-44da-adde-a062400c8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a70afd7-91c8-4d27-9bbe-fd76ef930c91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc6caaa9-c118-4b75-8667-53844ae780b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5c30e06-2bb9-4b1d-a415-07b6fca8a548",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d098a9c-7362-4884-bfbd-bd0a6a9b6de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bca35d6-1547-456b-8016-76b5076802c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beeb122-b5b6-4f4c-8910-645bc8e2625c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62ebc48-78fa-4ce1-9d5f-437139db7e06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c8311ee1-51d2-462e-a2fb-ac41c1404be3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2e58433-8d15-4c74-812c-5feaa52ad6e1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "652091cf-4d41-43e3-aa76-08fe19aa930f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd5cf7bd-de90-4549-abf5-35740d5cb7f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7e5d94c-2ec5-4a4c-b999-4e204e837585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eb821381-792d-4c11-ac7e-86c646d6b8e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80bcfa0c-e407-4d3c-a4c9-8fc02250d095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79d47020-ee21-4297-a273-dab4012f5d2d"
            }
          }
        ]
      },
      {
        "id": "5886fa28-2063-4ba5-a3d9-617fbf38f81c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "acc77427-9e67-459e-bc5e-82ae0edc866b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "221a9d9e-f23b-49d8-a10d-5ae3c59b894c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b6940b55-ccaf-4024-b3ae-40699a0811c1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c156857c-cbd9-4e99-ac7f-cbbf9b8e8207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4effe650-2f37-47c9-97ba-72e597a486cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af68f44-7a5e-4559-b014-b23e007530ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0864e865-4182-4fbc-aa7c-382d2cd41fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f547ce7f-a90e-46a7-bd41-2865c9055798",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76593270-a294-4a4f-a8fc-1dbf52eef293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb7bab7-6cb9-4385-82b4-71521f295803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121b9a9a-b30c-446b-9086-c1276407adb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cebe641b-4c57-4c72-b446-cbbd2177d28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaf2a00-9cb2-4c70-8309-951d98f4c7ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f7f969-251f-49d7-a0ec-0978f74dacb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871fc0b4-e82c-4591-85b3-9fa0962ad561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e3442-257e-42bb-be00-c44b15a900cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0627c195-24aa-48c0-ac0f-cfda590684ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018366e1-4ea1-40eb-8905-c4ebbf201322",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec00589-6df2-4c27-861a-d94b93042414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac238a38-29f9-48a2-9054-ce63998912d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f3cc3a-e57f-4508-a40c-ebf8538ab4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2700138b-e29b-4589-82b9-4858130f3e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40573aef-5626-4249-9ab0-2a8d5b587f93",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469632e4-5749-49de-9635-f729a2baa54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a56009-0452-43d7-acf8-20be5428f34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52df8f12-036a-4c39-be72-68ff14506af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0201562-4063-4b77-9e83-2abf3a8a4e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa18c7-dbfb-4721-b0a9-ae8e602f3ee3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e85b23-80e5-4ade-af03-e4fcaa777d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fa7511-b2bc-45a8-9624-04103fc8e29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9dacae-a50a-4071-8a02-73f43e977cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d176be30-09f7-46bc-b909-2c5ca583ccf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffc7535-5de2-4f0f-b8b7-74b6eebfa267",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf23a9f-527d-48dd-bf42-19c9792eeffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c52407-9edb-4e46-9f35-3051597df22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d6be0c-ea68-46c4-8976-2e768b3aa368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e9b5267-63ca-4016-a84b-a7b2cf286762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a6c28-68be-4e1f-97e0-22e129845f67",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c07a052-589a-47de-aa11-eedcc3900990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc07e6d-48e4-44ff-b8af-cd40528c13fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5cadd0-44e7-4a94-afaa-616ec3c73819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1c4919d-0c3d-43ee-bc58-827ebbffc722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1862bf-0386-45df-a5c7-e7c726ca6b2a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6878d4-d5cf-4c5d-9e92-820b70091b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac1b36-9303-44c8-b045-277944843fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e661927a-9f84-4dbf-919b-7800a646a892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "326d7a71-27d3-427b-af52-884f79e4d2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a147c3b4-9bad-4e14-a501-40b5cbe805a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9db1c50-a85f-4059-aa90-75f225203d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ff283c-feec-4a2e-bed5-e6320d2aeaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fcfa91-f8ad-43b1-a2d2-09ca0764eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8113cad2-b44b-406d-a0d6-3599c6d54923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b0f03d-fd67-49a3-bbb1-7d447198ade0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ae6eec-16cb-433c-a9db-f78978bfda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5094b2-de29-4985-a29b-fa5a6d7b6169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa56fd9e-8002-407c-8a0b-67281c7f9492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04f5fe1e-a286-4c51-b744-2ae0c431e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9932b9dd-acca-4522-9bfb-225a994a1218",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ac3401-1d5c-4f93-b8cb-dfa2c44c512d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c4824c-049e-49bc-812a-1d4e83e1874f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fb3a08-0e61-4f92-81d7-ffbd6c9cfacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad439570-c0a2-4b35-870b-1f7a698d919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0105056d-5e19-4afb-bf2b-1029f3775f92",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a49d9c-bbec-423f-bf32-4ce44eb383ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae2b251-28b3-4322-bda3-4873a06874e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc356c1-f733-4d6a-a557-ea02e5ba6358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab804ab0-ad46-42a4-8206-9b6157e35254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65e5ffc-9a53-409d-bda8-ba762e0df41f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03faee96-b7be-443b-bfe6-8ff983a46cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874f7a47-34cf-4594-8fb3-289ec60da46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a696a7-b376-4b50-8b23-fbfb925a54bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c18b540-d29f-4ec5-9c1b-2e4a5219292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe3ce67-5d0e-49cc-99f2-bf312d2a638c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dfeb79-0bf4-45c1-b5a6-bf4996e883e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e1cc59-e870-4585-a122-53d77b38cf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440057d8-aec6-41b5-93f3-85652ab6003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5278da8-3567-4393-807c-a5189a9e6ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7340a0-3484-4b20-86c7-22eed11c393b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc07dc3-c6be-4e7c-a47e-91cb42ff25b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddc4ab5-21a5-4ddd-9540-a5ab2b6e620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacdba5f-1a95-4ea5-bb33-22fd7aaa1d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d26ee689-3f95-476e-b63d-1ca19e0a6900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ddd16d-2fa6-4ff1-87aa-e2b44c5a9048",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed42bae7-1247-412d-98fa-84748f135916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2855b73e-4993-4f97-8ac4-efaa0d72c907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd0865-adf8-4fcd-8734-783fab7d30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bc43d51-5c8c-4cca-bbcf-453f206e6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1579a941-b43e-426f-bcb2-001fa564c408",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a65e64a-5c4b-48a6-b152-8cb3379926dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bb47db-ac98-44c5-a55b-87973438171b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e779dc-17cf-4cef-94c7-19d352ec0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfa46fd-dffd-44c9-9be7-1d4e5dc892d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5978f9-e19f-4b16-9d5f-ad3c39d337f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7458959f-6acc-47e3-84aa-63b8bda34cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd664c3-2028-450f-9e9b-4bab9ee4b448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51adba9e-1d0e-4473-9d3f-78ec5d8b0474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640a5952-1dcc-40ef-bf76-1797cdfc7b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202cf1a4-cd46-407c-bbc5-0a769c4b1996",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cff95dd-7527-44ba-9f12-c577335ec978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef3ee12-dfb2-44d4-a3cf-673e0a7367e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995c465-3ae4-45b3-bea5-a6cc8e39f7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2acc56-4061-4468-a583-a22c888699cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6735743-842c-49ba-8b5a-cb1c5f62d0ba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f6a6c8-fcce-4a78-b85e-8328de6ff789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd971b6b-1097-45c6-8c4f-a159434dd37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bba7075-393f-4d0a-918a-161d9c954555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a8dda-b03b-415c-a4fd-ca8bb30b1e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98c8e4a-3a2f-4b96-8465-1a88fa625c7f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7643a-ed4b-4e8d-a622-ad812293a255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf13d599-871f-42e0-8635-a1f5b7d64307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d946e56b-7c3c-4b0c-814b-d9370adad6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ae6366-c242-4bbf-98a1-44afc53abd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7045c6-f0d0-4354-a750-790bd3e4ea06",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c252b8-ebde-4dda-b08b-3d132dae0b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa56250-70a1-403e-8fca-89744e22d142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef935c98-b341-49db-8c24-ee6be4072171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abac48cc-93c8-4f42-9f34-735ae8c8f042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ea4dd-66cc-4e16-a3ec-00d679ea2a10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d98aae-2754-493f-99c8-9b62df36a704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0b3a43-be74-4e7a-a954-a14bc221c8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93e2a2-0610-4b57-8ec2-6a4e71d11525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa481e7-547a-48ec-995e-0fe0921253ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097db479-328a-474c-957f-a18ea769df7b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a2a028-9266-45b7-9e3d-39af8ead1a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69866ab1-6bf1-4ea3-bde0-900435944261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3832b462-a8ef-445c-a960-3cabc1b3d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f4242c-ddc6-4ff2-943d-3903b848826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bffe448-3c11-4bbf-a454-c5551c8fb2b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9872f40b-1fb5-4513-8958-63ac7560a271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c464d5c-c46b-4342-acc4-5a1c1d83880b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb726c61-1adb-49c4-b087-80d7b1edb65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de626583-b952-451d-a923-65d481364006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5238a161-692d-473c-93e6-8fa899cd5acf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa2f4a2-c150-4e78-8f93-c33a2dd35f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51675424-4419-4cfe-8e64-d203e0d47471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385dbc7-9648-426d-a0f1-264304b3140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c14f8ff-213d-4b0d-b15c-80991b193e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b00275-b967-4e0f-8fe0-73530a4f8b8e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5942b32b-2513-4729-abea-ef246cd79911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e77f97d-b901-470e-9131-08558891b7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaee240-fb92-4803-8583-0a06f3383bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfff6099-3852-40fa-b7da-c6a9e2784819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5befb4-0dca-4735-be2d-3c5150a011f3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb7e7a-2eb6-49a8-a439-cc73a1066b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812a7f0d-ff99-47a8-aafe-084f083720e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba300688-46f0-4d15-9fa0-c359eb29928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4609fa9-85a2-4f54-b7ea-6d39e90713d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368606d0-9435-423e-85ac-8c30f5665951",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7dc9e-7da9-422e-82eb-2ec8b79762df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1befebe1-008a-4d12-93a5-13a27c5fc2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8988db-5036-4427-92bb-0b903bcdb2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae4690d-9437-4d8f-842d-ece1167c9cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f8f362-c52a-47cf-bc35-7c5165c6719d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd4ba57-66be-46be-8a1a-85422f1eb294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5739453e-139b-442a-9a21-63b336aa7d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6613aff-a9a6-40d0-9bfc-dcc0b237c869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe7facf-ea91-4763-863b-fe3250972287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f99dd7c-71ca-40fd-a445-6cc6efaeb3f8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e549bfee-5cb0-4534-ac79-280265c3e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ef7fa4-41f0-46da-a625-352ce238234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dd7b82-afe6-49fb-b78d-2490184088a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11472d8-7d84-4409-a43b-2741b9d00249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a714f636-9624-412d-b736-ea504b593693",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c5531f-2754-4d53-a9ad-65e887cbc19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0889df61-3808-4ff2-a835-100eb939dd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f40ba2-2142-47f7-a9bf-8a39da86753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d2e5d3-46ee-4890-9ae2-817e96626f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e0086b-0adf-4452-9d1d-ba76f23bda71",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd1b556-4180-4460-b79b-0b13889fbe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875da61a-4479-47fa-ad93-25f63269ff01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adcdde-6825-4dc6-bf32-c6de55ae6fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eabfc71-5043-418c-91f4-95f133efaafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e5180c-92fd-4f50-9c2b-c9062f951c58",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715c0ce9-4ba5-4f95-976b-91959fdd0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4c7234-ad4a-471a-85a4-d4820d30eac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302b86f9-ccb3-4e3a-88fb-f77ce42ca516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a6f78-71d2-45e4-b343-5c385838ab8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627e780-227a-4265-91a4-68bf243559c2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc59583-b4b4-442b-93c3-a32ebde53465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02432640-b38d-4c52-9229-5e8b8aad8ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f557f1-5a6c-4eb5-83f2-41d1534cb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30cbf163-90fe-4c56-a271-48f1a9784175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00000db9-8a15-4ff1-a80b-bdf1bd259efc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b69b87f-8617-476d-81b5-dba18e472b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed3362f-77ff-42d4-8fde-063e726ebaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1956d14f-5a43-4278-978e-67180d7da95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65aecc94-1391-4046-8d04-d1b59a4ec81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647a1bf3-4aa4-4736-b4f6-68dca574ea07",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335f37e2-16dd-46bd-ac3b-9cabf256f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a147e81-c090-423a-b82a-7cce9a6611ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5e9310-5365-4b44-a226-d927b93e4455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4290a3-e453-4bf7-b036-2361b3e85de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f00a80-7d03-458c-a351-59f2d0a1d75e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d2cdef-9dd8-4124-9e2f-598928bd47e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf2a2ce-8dd9-4525-87ed-742e7ce5112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3defc8-2b98-4b7b-8185-bbd0f1284f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f266d3f-76cb-4605-935a-92e78196c649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afffd293-c4c7-4a21-aa4b-3e9fa3e744fa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7331c7b1-3a56-4382-a401-7385431bb5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7623adca-d962-4547-a525-cdae79a5eeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6842188-6b01-4152-9c36-80868894d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b24af9e-7173-4cf1-aacb-eb5d11263904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608c5ee0-3e34-4b16-a47a-bc5fd1d39942",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667d2255-49d2-4aa4-bbc7-3ec5e81e644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5e7180-7b03-4f80-82cc-8b8d81d90de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8065a7fb-1cce-4fc7-8537-6e3dd228c332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a404e7-b167-4235-b79f-327b8d26282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a1e774-20b5-473d-9d8d-2330546b22e7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8c4189-36fc-42b6-a1d2-f74be0174485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd770a94-7a53-4e57-bfca-064a47390719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8346de3e-f921-4363-acbf-a6b7cd461782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2efebd9c-8531-4ca3-ba11-39a5f043f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2db4e9-5706-4bd1-9365-046187e3a8d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4072e8d8-2bf5-4fbe-acad-b502d78228ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8beff04c-29e8-40e5-afcb-e406fbdade17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e81a2-cb32-48f7-87fe-123fa2b2e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ccf5bd-3d20-4c23-900c-51a1b1ae9482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eacc15-053c-4c0a-86dd-bcbe9297b710",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef896b3a-a981-4c2a-b49f-0eb0b83b5d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeb790a-281c-4f21-a13e-0d24c7496479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa939d6b-a8c3-4dd4-bade-7ba861ff6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a759b95-815a-4dff-9889-b7688bbb82f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce0e651-7385-489a-8c93-d98d20a810ea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec4ff3-3465-4b1f-acbf-a0a6cc0163ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e810a32-988b-41af-b36d-b2cba3cf037e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c79b25-6dd4-4fff-9a1d-c70decefa4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b3004e-fcb1-46ce-a13a-28a53448f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae85965-def9-4f96-9c7e-457556ff7e4d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24da06a0-2320-4814-bf5e-89d33956de75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fec262-bbbb-4ee1-b80a-29ad36747242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b277cf78-aba0-410e-9df8-f92c629308c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e31972-4001-4337-8446-3d983b98a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db7b4a-4857-4ec9-9ad8-4237e6292336",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fe3be7-79b2-4447-b6e6-99aad206dbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b0204d-53b8-466e-9493-8da3e452279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4254745c-8dba-41fe-ac51-11e53d53507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cc18df-32e2-437f-b9cc-d486ef3314db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf7bd61-4f87-4494-b9ce-d38a760954c2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcd7952-f093-47aa-8cb1-600f52b14bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd4d825-3ba4-4cba-9d5e-fbbc1acbc1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3060efd8-b878-4421-9e18-b37c06b6285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f33c4a-ef7a-4a04-91b1-789247438d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d9874c-d9b0-4d4d-8cbc-6e1eaeab4cea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9153905-0e9a-4284-acd0-90a2cbdc7d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10383f25-407b-49c7-af23-517be758d8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5e2e21-27dc-4e51-81a3-ddd92d156e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cf70be-fdc6-4cc9-8a80-5d59c230ba72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cd54d8-cdb3-4076-bc52-52b3597e7716",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b984a0ca-3d04-4f74-986b-213fcecf33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d25fab-71c1-4cf4-aa4c-a1391b206c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f70bea-43ce-4304-bbe5-9b24d1370e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a85096-0716-4902-a992-28f243083a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea4db0b-8fc7-4b1f-8e60-1119f8307cb4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b2c63-86df-49c4-9142-05b868f485a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df514ae-0fd5-4444-985d-0078730de948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3697d30-4af2-4f84-84a9-b6452723f68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e98ab082-f427-4386-a782-4a4b4d833b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b068bcdd-4586-4c66-a9cc-ccf20b4ec913",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649a971f-b59d-4541-9d11-669511bc1a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d208fe2d-4369-49b2-9a4f-fdbd69ba89b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b034709-8253-42a3-8a2d-aebb9ce58ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56321b0f-13c6-4d31-a4f4-fee40b7682e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2503b03d-426d-4ca0-83fa-e48c6a6dde2b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2829196f-e3b2-439a-915a-6274367f7a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d481355d-42c5-4f0c-81e6-db51b7a67548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841be6f7-c29d-4b5c-b4cf-69162a97a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "461cc81a-548a-43df-9498-9423e14b04fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b1846-81ce-479c-9b06-e17afb133648",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0868d68e-fd18-4724-8b56-8d125380550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9cc2cd-cf1d-487f-9d3b-e907a5369600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c5f8e-1fe3-4d25-beac-37e5db11f4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5f9d5b-b60d-4204-bf20-12313cd835c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2743b4-b8c9-4a0f-a7e1-db59923bcef7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6095833c-7490-49ae-9026-e1377f6dcf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c7ddfd-8d0c-4c5c-bda5-97c8bfdf59fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13638ebe-50c3-4dca-8560-84804dc542a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "467f76ba-b791-42f0-87f4-9b5cd4c7f8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7b1fd-12b3-487b-8eea-67d20a970695",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c87e57c-57a9-4c40-834e-c0205f0100cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8f56e6-36ff-461b-a16f-6e7a3afc0dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaab565-7691-40f4-a933-71edc143356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb293bf-e701-47db-a977-01844febdde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079bc0cb-7dd4-4ad9-8c6a-1c4ece0cffb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40ab190-9a59-451d-a885-17f2661e5147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c676e32-9760-4f5f-9476-dae0bb266bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367243d1-85be-438d-846b-c6fe29f967f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90bd8916-0ab8-4454-9d45-c49f796bb9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a42b048-8754-4cc9-b299-993b5a5c586b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572196c9-ae85-468b-8d9e-383d7c45f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6099bd-722d-4c5c-b47f-94fe123efda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84ebf03-99b9-4f81-adaf-5011c8e29e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57972510-0de7-41fc-bd8b-4beea668df1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad5718-eb86-49dc-a584-4931586b8489",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e66e3f-b3ed-496d-a455-cc258964d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851842b2-088d-449c-a290-4c7ed7039904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f7a02-e0fa-46c5-80ff-4ea7b2a19981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d87b6e2c-03e3-426c-b1df-2c5f60c244c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a04cb5-cb8c-457d-9a9a-0c20558f3c6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9929811d-b3d6-4f2c-bf99-be0bc22174cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b9e5b2-5b30-4f90-9e6d-ce02c4620f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab98716c-43f2-4fbe-a853-6c528fb2c996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97786f74-66ec-4e8b-bcd8-bbb4310f2049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b622507a-b5d9-4565-9ab3-16896ea47dcc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86552d7-4a5f-4a0d-906f-9f88d23eebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d549f5e6-a911-4b2c-9b56-d0157de22e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f765ad4c-e089-4c89-998f-a18f2bb01ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d13ae562-c900-4ff3-8e4f-1a8f40d5f224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efc9954-59be-41a4-86cb-490189d8a332",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbcb1ff-444b-46a3-afd1-b28451fd0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46eaa46-0e18-4bd4-8f51-75a4ee795a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d966bc5-4830-41cd-baaf-89a27ba23994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b02555-110d-4d67-a80b-b051fa6fbc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0748be-a468-4e31-b480-92e5409dc8c1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e6871f-9fe7-4e41-a010-ddfcc5c59edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3910456-bc69-4b13-9953-e32e96681737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d119a4-3ff6-424a-ab5c-3bef36c94683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22dccd7-b0cc-4239-ae82-0fa341097cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c75620a-2e90-47b3-94a5-eee3b383ada1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c654fa41-e643-49ad-aa9c-cbe126b1abf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2735e4-84d4-42d1-9ab6-c7d930257b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927abcc4-9432-4dfe-86f4-05da42afa9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b04a6c-2d1b-48ec-8a4f-9004ca53d816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33271770-a9eb-4e52-8d07-3903f238b486",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b26985-f448-4d5f-8233-dbdd0e4f0d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dd9f6f-28a3-47e0-9649-94cf9ee0b4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2616892-77c0-4e56-a224-846428d5da0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f78ca9-e597-429a-8835-86aee433234b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63814cbc-8736-4a7c-a074-8c4e083d3f22",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376f3107-6885-4b93-86e2-0952b4521c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a567d3-8b53-40e3-abfa-ec25d7835733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d23091-3994-432e-814d-77cf6cf12531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d3080a-0909-4295-ac99-bbef61c8b177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd467d9-59f1-4a7e-a129-1e4daff87b37",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2500c5c3-244e-41a6-a59c-9b46ba445739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20852aa-0f2a-40c2-8c77-790ab931bfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a1ae5e-0ad9-4015-b59e-0a517bf83f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54fc6131-c17d-4f5b-aac1-b3155c1d8068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2517f443-4c1e-436c-9d8c-855388e84a77",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cbe4c6-19d9-487d-82a2-8d6e2df82471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39527c53-e46d-4a13-81a0-9ace08bfe5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed71823-8640-446e-8571-05bb3dbe26ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "094aa6aa-48bc-47a4-8abe-34d3a9dadd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4592754-f55b-4108-8017-08b39ae1b5d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6268befb-f97e-4a28-b083-38afec0172ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77a7b57-eeb7-41b2-b58a-82bfcdc8ea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a812a2-c998-4c4d-931b-ac3d3b4c0a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56c1701-87f8-4f0c-8733-2748627813ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbcbbc4-387a-4910-9297-f634efad845c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c40f5c-fa10-45c1-a783-66a862e22cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea9e115-c6ee-4009-9632-a8f62de49c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb62af2-59a1-435e-b863-506f53c8d05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cb82eb-1bd0-4ef9-996a-f66a4d0a578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a692fac8-bad4-4a06-8868-00fc2e14266f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fee2fa-25c7-4841-89b2-01c51da86400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7a291d-92bc-42d5-bd12-ea062588caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f31c0a0-8273-4004-b76a-55513e5b8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "558d53c4-345c-422e-b7e8-6912959f234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d6be5-a39a-4b5a-8876-02a97f5e47ec",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7403064f-1165-467a-a868-f5c73c5898e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eb350c-8602-4d16-896e-0f854a0776df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b527f6-b226-4dbe-8b81-89a17620375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa52b47-3bb9-467f-a183-2d71a04e1716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526a1e42-15b7-4f12-840b-26d5866989a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f857eb-aa67-46d6-a82b-4131fdb635e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e6e42f-e2d1-45ba-9488-7a3acb480664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ac433e-c185-428c-942f-15bb5a1d4a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf4cd2f-62cc-4a4b-a710-765e0f22000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d92333-c787-4bd0-9faf-a457340d54e3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47916a76-52cb-4ef5-b3a9-c8a22c2f6bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980d3b8e-61bf-4289-8bca-b0f89e015252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c00a5c-7cd3-43d1-942d-32b8b5b311b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "065fbc3e-6485-4ccf-b27c-7a9e920dd4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838e7e17-3264-46d9-b0fd-fea8c7bcb4ab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19fd3b5-6bd8-4a1d-a3ed-3f9e4ef1f4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4d85c-7804-4ba4-a68d-83ff33e17ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3a6fd-793e-4508-9189-cb9655d40359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1be7491-9701-4d76-9dc0-678e697121c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afac80a-a7a0-41e8-b3ef-9907202985d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292cd8e6-d5bb-4a9e-b66f-cc95d9620d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa60d89-db2e-4cab-ad0d-7a5a66265a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a32a509-1625-445c-9ea8-866c80e96f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5320b8-31a7-4bb4-8841-aaa48e4fb211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6120b515-7a0b-42f6-9e50-5e9cfc0897d3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7842a95-d59d-40f1-bae1-135455708bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64857ef-edd2-4796-a560-518df1039698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ebac1b-2f80-4e54-ae89-4cef03bdbb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "782c9f8c-1e3e-43f7-845b-dd14b0c60827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5a062e-e227-46cd-95e2-01e3dc1326aa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d41541-9974-4259-b27b-184f0c894eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449234e6-a22d-44d1-838d-55813f5e46d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327031f9-e57c-479d-97d6-e01754944be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6f1e73-88af-4642-a152-ff70499ce2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302aa51e-3262-4913-9080-5a6c0db7a4c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b867178-6f8e-4d45-8c69-47c7d1e3ad90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5c5804-df71-4ed8-8668-9ac04ba549ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f15d436-1ef8-4ca9-910f-c72186711568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d986c34a-9856-4d43-9e2d-61d2217418a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3aab3-6264-457b-98f6-0ea03182604f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc32830-1b61-454f-bd67-5c7dce86148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e586db-611f-4ed0-bcfc-3568ad11a695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb713c1-2064-4957-a028-01952f357c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fa09f3-bb73-4589-842a-1a5cfc777dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f16c95-3e16-40f0-ae0b-d80a2c3c5ffd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a627db9-04d7-457b-9f2c-69473f3dcb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94148e5b-30ff-4069-8459-75b1ca0bc31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf7ef69-7810-4dab-96d0-866866b8b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "516369ea-2a9e-4de6-8d02-619de45b0dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea98c13b-9f9f-4e7f-8e31-606479b7f0a8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c260d1-0ca3-4feb-b1d8-0b1ddcd4d1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e6ee43-acdd-46e2-9100-2e130b60a0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc2d9f0-cec7-4c47-9163-7c46ed4e1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf37f25-fa2a-4759-8651-031575cdf0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c29f5d-e889-40c2-b871-f5bcefb259ea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891581c5-7c7b-499e-95ac-dd932d44f535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b35500-6a0d-43da-8276-5f7442ecb5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d86fe5-9925-4d78-aed4-828fe0f9a46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f58bfac-19b7-4df7-9254-c578fba6663e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b047c4-e793-480f-9412-e6566daa58df",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01e06f-0098-4b10-a167-77e7042e58a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc4bfb6-b41d-4915-acc4-9e1da8c605d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1163db-bdeb-4f61-bef3-19781f99f346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68eb8f9-4cea-40bb-8691-d3c5d61d0d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7562f1-3c9d-4c46-9944-fc1c6b3fe7ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65817acf-0824-41b7-abfc-3ed79b452bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e63c9-7a53-423c-97b6-3c3a3236abfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a321fcc-5a9a-4d63-b922-99bf51bb4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "987c4afc-6043-45bb-a15d-47b5db922d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb05710a-16e9-4255-99ac-808d1a221639",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6fbca2-fad9-4e66-b1e4-edc1af0b1007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a8d730-beb6-4569-bf8a-fc015c7c9b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7966c74-c565-4ec0-8a6f-a59d5399aeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1780cc55-b073-4594-82d7-3ca4d5a9f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ad64e4-9a7f-4dea-abbd-4d9c84112e38",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81cd9a3-cffb-42bd-a8a0-e74bfc8e09c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a41447-8089-4413-b5f1-25b43c8aff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18101b-4376-4c51-9aa2-d3774f69e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cef2cf-7b13-4093-98cc-375d6ac8e214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427d57db-1c56-4c20-b1af-3ecf33492cd6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fdf183-e4ad-44b4-86c5-b01316735c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74463cdc-4bed-4f9c-aaed-5e3b658b4ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd4dad-5469-4f87-84f9-841380cd2ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f524f927-cbf2-4216-b048-278d19c8620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235cb3c9-8b50-4285-b8de-22103dfe9625",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3d8606-5ddc-45b9-a7ae-42ec53d10944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8273f91-29c1-43e1-8144-59ac9d51ab3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ea68e9-b500-43b5-a0fc-2ecdf5949342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0abe5cc3-fe40-4019-8f24-67f572909749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d77fd5e-82e4-49ad-b436-2bc66b295955",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c4a22-8119-45b8-9dd6-6e0d1b986e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0b3fa6-f664-4cb3-86ce-71cfd5434049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69f588-e383-4363-ba05-95e40b80daa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0331bafc-fdf3-40ee-9068-69a43a95f585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4d2a90-0d54-4f03-a5f6-b87a761b28c6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c6310-0560-4dda-8063-a5b49437b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be80bdb1-a1e0-42fc-b488-7769e4bff426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ee2e44-012a-41f5-801a-ba1624a41e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "698614dd-1ce6-4d48-b4e8-7644fb72b4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e70dcb7-7aa1-4938-b0ae-8d395a2394c3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38e3a0c-831a-45e7-98e4-89adf1aa04fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f80f2120-bdb6-463a-8f5c-859c4091c9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94c9bed-7678-44ee-9e78-9d6e3f47541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe6b029-60d0-48a4-bd01-bba5c27ad607"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd81e733-5561-456d-9141-c55dbc98a8e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84de05b1-026a-4e0c-b6d9-42034b75c5f8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bc4734-7bf4-4e45-9c1f-066f48577cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00459640-0f6c-43af-a7da-2745c64aee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf16132-c515-43be-a997-ce16cf06d000",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6a616ad-9f0f-43b2-a664-03bcb17c1565"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95f33c07-8fb9-4477-b84b-52ee88f52cbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cb8c58f-98d3-47e1-8151-847b6ebe2355"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1529d0d2-1ea9-45db-b530-87703d392105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64da88af-c7b7-4870-8da6-9abf69ee2ddf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1be7b81-b38b-40b2-80fc-107e90cf2498",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd456ab3-1ae5-4e8e-b32b-a7d9104b15fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5af86c2-a0ed-4b55-aa6b-cc1f10ca4913",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aae2b40-ee77-4a9d-a1cc-a3314c24a903"
                }
              }
            ]
          },
          {
            "id": "c1ee5ec1-8072-4cf3-8ab4-44e4f5c42bf5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d10303dd-5422-4d88-b8a4-9be90b86f28d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71887b0e-4b38-4dae-8399-392828119810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32dcf8ab-1b2e-4004-ad79-6a5636157cc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e36aff8-a511-4537-884e-c6ad61a2b629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03309c30-455e-468f-9467-1666024b9e12"
                    }
                  }
                ]
              },
              {
                "id": "ad3f4454-120b-4c32-a433-ae768d24b4f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2c731d6-6177-402c-adb4-34d153dd0995",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1e4049c-87e6-40ce-beda-7a1b4b844580"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec852a7d-9e0e-4caa-a413-dc148403bedc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79eed897-8495-4227-8e86-9ec2c38a9787"
                    }
                  }
                ]
              },
              {
                "id": "3631d635-31d1-4d09-9b86-3157f28c7bb2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e79b35fb-2e96-4651-9cdb-107e1e898108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12f244cd-3fc5-46a2-bf96-36906d6224cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dde9829-5b36-4250-b478-8033a009dea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9118f605-a3a7-461e-a484-4d68e7f29109"
                    }
                  }
                ]
              },
              {
                "id": "713210f2-b6ae-4b46-aba0-1806c4623451",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d16420c7-16f4-481a-bade-17977dcbfe17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c11b20b5-90b4-4529-90a7-fc535aa7f1c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f59420ba-f0ee-4943-8a1b-c2d0bf692ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b110a20f-d847-4853-9c8a-cf22b70c4840"
                    }
                  }
                ]
              },
              {
                "id": "1698ff01-da14-440a-bf0d-58c89cd80a8d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bddeb9a3-6a29-4e89-8133-1c989ab20a95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e2a2c9-1dc5-4403-8072-55bdcbcb5c4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59831876-3264-48d0-bcee-c87b06381624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ad66bc34-579a-4b9e-b332-df77a19204bc"
                    }
                  }
                ]
              },
              {
                "id": "37ff505e-e7cc-41ce-8d0d-b85396d37dbc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b23cae02-b11b-4c4f-8713-5c90fa8aad28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc355b7a-4484-4f92-8a3e-0b48255695f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81504985-a970-446c-92b7-80ad5f4a6691",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b296856-54e0-403d-8697-c969bce6e937"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46fcec64-7e8b-4899-ab4d-dd2505175474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18b5a3eb-8cae-4d5d-be5f-0c006c4191a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8a55e9d-214c-439b-bebb-f1a27c68719a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce20ec61-872a-45cc-9f3f-7d0e4896b554"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daf11c1d-620b-4a39-9b78-9f349bc883be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc9b6484-a9c3-4901-9104-9e7cbf23c23c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71f63752-41f0-4b62-8f11-c6de06723b97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14f1ef8a-8550-43c2-98ed-9e458738f591"
            }
          }
        ]
      },
      {
        "id": "952a4ac2-9ce8-49ce-aaf0-8270f8301f4d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2b40527b-f4dc-4b4b-8800-3a5ddb020499",
            "name": "Negative Testing",
            "item": [
              {
                "id": "817325be-13b5-4610-9b0a-4fc774dc1c6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ede143c-1e7a-4833-abf9-060b715f67a8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236db7c-1291-4fe7-9102-7827c8a82059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f71b613-130f-4de7-bc43-b491ed619613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd56b78-9077-42cd-9bf7-bae6f4c0706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ac2d3e-26c6-4574-bc3a-8a8fdf3cc101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198a04fa-c80b-481d-9a8c-d96298b977e0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cafef74-1ef6-463c-9bb7-47cca1fe63ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352b9b3b-a1ea-4644-8586-04afd0923b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5629fec3-7406-481c-bd10-cd0f746b843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f039f1-ee66-463e-a2fe-213ee8e281e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da9aebc-36e1-4648-a681-fd594dbc46cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c6dddb-5e6e-402b-b739-11bcb47a6884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51a1d36-6882-4e3c-9aaa-443e2479b76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e521cbf-9f34-4ab2-b9a1-99411615b8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e5070f-34e5-43f6-a265-2432e7dd2aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814c893-6d93-4989-9a4e-577d575aebad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617a45eb-2597-41ae-aba6-9ab70c168d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d604ca27-f109-428e-ab2e-674af3d7da9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54c86d5-814e-45c8-9d09-ba1c3b5a6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a55e3c-ff4f-4360-bea9-9c1330b36beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf4ba01-b0f5-475d-a072-b611b0b83433",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356f502a-6db8-4e64-8382-3c226423809a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bb42f1-60f2-4fa9-806f-1012028eccd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab11fc7-fd89-4db8-aa66-d346f812cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c45d1b-8385-4773-a5be-06ab5e686c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad206588-c869-4572-8a55-dd6aa5f981a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9797e06-729a-4011-a78d-595ac20daee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8add65c4-604d-4ef2-a248-b01db41d9681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e002298-f140-4b5b-928f-d3a50f496938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "202de95d-078c-46e6-8d71-c763dd33ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d68b9-8088-4f28-811f-b28f91c8851a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506c60f-32cd-4e01-8ea9-4f0049c0381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31671e6-b1da-4182-bcd3-8446e10fffd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1326cf-f8a5-4368-a0ad-abc223627a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "792b998d-d228-4709-a006-6be4c564a1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4a7183-d4bd-4deb-8c94-e1cacce42ce3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc41bbd-2ba0-4821-bcaf-c797f56d8d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840cd868-0926-42bf-bad9-9be7c41dd02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f5b3b-90a5-4baf-aad0-67b15fb252b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53615db1-3c21-47bc-86af-86e6a09b1848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a419820-845d-4b46-9039-1d36b9152b9d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf84759b-a888-4989-a807-3bd8821fc631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20b3bfe-8a44-43d2-9627-568a7f580328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159038dd-5620-47a7-be86-e888c6053823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de20eb9-9376-49c6-9445-08718ad8e9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d4a5b3-c08e-4816-934d-95cd788224b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdc8807-8464-46b0-97da-66efe60da9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0d31e1-244f-4c92-9dbc-ef1b073d3222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896b10a0-46d9-4458-9cf1-b9f7f0cb6925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5adb890c-90f6-4e21-be8d-28c18a645c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c58b1-3e6f-4f7f-9d1c-1438a9e1d69e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b141bc-1379-466f-9e3a-860985224f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd0dcb7-f5fd-43ff-8dae-5c28ba7d134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf8614e-3d01-4d2f-b017-b68b929b7f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0d702883-a4da-4fbb-851d-606a4107fed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dc85a5-1a0a-4e23-9114-d9a659efe3a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8bf9f0-e580-4906-8e15-d43f80bd1872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6e13d0-a7d8-4ac1-a4ac-6bfec62c7396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3bbb3c-a7b9-4297-b19c-fbf5fbf88c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58df839e-146a-450e-920a-791ba6468e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ef95ec-3051-4258-92d8-70726188eeb4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0f310d-4008-485b-8b45-4ef475ddaade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43262947-6fac-4f88-ad0a-757250ded03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5b330c-c82f-4c39-9b8e-89f9b0258ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "daefbf6a-38a7-42fc-9cca-25cdaf4af60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db27a2d-000f-4e12-9559-c217dffd33dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8825401a-89f9-4bbe-ad9f-b9d29bb39f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b50d062-247a-46ff-9137-4352c51c5960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5340ac-3bcd-4abc-89ca-cbc4e53e2765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a3b2d7-1955-4d45-ae86-68606e5031c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4954cc-1404-4634-a214-e95f9386e3bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b55d34-2a32-4658-8353-47f58ee543f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2b1d8e-6a1a-446b-9e2d-68d915465c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515e03c0-6708-4873-bb1f-93880eb9118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb47c76-c1f2-4879-b0f1-733b08195f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053aee0e-cbcf-4fc9-a379-3a969465024c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9319ba50-8ed0-4887-916a-8dfcf271d9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd7b878-4a6e-4c2e-8d6d-a8b842d67025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060c1c4b-95a4-4e04-9c23-d52ce7e1e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4597124-7d3e-4f87-aa63-30d15cf68a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73724b06-0b77-4113-a5a1-7ea4e12b95d2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f079191-7dcf-4e89-bdc4-fb0f5dc4e2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331a2e84-3ec6-4114-94a1-4ec26678ae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9448ea3-8c87-49c0-ab35-5a02adacf600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1312e8-21e2-4d55-b38f-0585aad00d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca3faf6-a2ce-47c2-8f94-634706e67a9c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3541975d-5238-460b-bc60-d1c73b2a45d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1726952-6a4b-4620-94f1-307e9e88e280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c316e6a6-8880-4981-b329-76cd618e8671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9735d1-8e79-4840-b397-f74f67340a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e625167e-79fa-41ea-8670-445c81ce8b1f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78ad023-43ad-4e8d-a63e-1b6283fa2aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea453cec-2ea0-44db-ad19-29b2956dd900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4661327-08bf-4729-814c-329871444203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe308f8e-ba55-42ee-b252-381b0967a3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcdfecc-9236-4e26-9816-b84b0e53f441",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7775f7db-8643-45f0-9692-9e51b59eb105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f652049-d78d-4e45-b1d0-d0c973399034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0459044a-d35a-405a-94fc-86c9ebfa403b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c1a430-b20a-40db-942b-064627a3d4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7ec6d2-fc65-439a-bf3a-9bf120413e87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666dc48e-d2fd-4a13-9ff9-e5c45ae691ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f8ae95-6f1d-48fa-a80d-621991cd390d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd5b65-2bdb-4eca-ba35-f6a46a195cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcc561d-d8a0-4806-94aa-da370f5666c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026bb2b6-7b93-4ede-9d1f-3b03804b38b1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fc98ab-6bb4-469d-8527-1eb1156ced63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44166976-87a1-46d4-b077-589189cfd545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb55502d-198c-4891-b4c7-5e1c78eb3fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59753778-bed0-4d07-bc42-15025b60d312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653aba0e-1704-4951-8adc-3eb4b88fa940",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14544d35-6337-494b-a9c9-4b06e296bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425f44da-9086-4912-97b2-b5a1944fdeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ca6ad-4fc2-465a-9301-99e3bf50d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33ab6a3-c584-41a6-ba3b-4635acc43ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc48916-34a2-4847-933d-f8a9245a7e58",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37692ea-7554-4992-8a7f-801de01b3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2962e66-1552-46c5-8f12-89c0ce18383c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c4744c-7343-4ccd-998b-6b654baf14df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c35a72-8ae4-498e-8154-801e0255eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becf4825-ccda-498f-8988-a858201e515f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9efa45-4c00-41dc-8387-7ad4759b9552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f93158e-bdf0-412a-8d23-ebaac7e4ce03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a19f57-8695-4bb4-a6f9-0535b28c8d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c865caf9-3a99-4f8d-bf5e-e91ea7ff70a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155c9e34-0389-4b6c-af46-53533430589a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ead8568-b5a5-4cb6-9d45-e04ff5d1c433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c3d82e-ca87-42ea-8ce0-8d8c9faf46a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d68641-edd9-4869-9386-2b2d38e81cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2f97a3-481e-461d-8598-1381471ec35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d3da48-89ff-4016-8d9f-357e9880dcf0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1873a8-be87-4ed0-93bd-43b75c16f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67da5132-d196-4e5f-a662-3531a7048a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8109226-3c91-49e3-acf7-09a3e589d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb22da1d-e6b7-481d-879a-19329b2148a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9612459-ce93-4097-8885-ce402ef45a06",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88526ac8-d9f0-41cb-a3af-12cbaec7dae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e460105-ab7f-459f-b557-ad9587a30d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b1b90-b2bb-4c19-bd59-c5d84db23fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eed81ea-e5e3-49b6-9a5b-349efce1ad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67d45b1-f593-4f10-a55b-2e381f66e595",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550d463-0ed0-45d5-98f2-ed42ba060959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafd3cd6-0f79-4d3b-bbad-3b92738b7f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd397500-62c6-44b9-a7d1-b90f95c7f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "272514e1-f49c-4917-9864-56f1876faf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fb7705-e5fd-45d4-8fb5-8cbae3a97d6d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd652bfa-7a7b-44e7-944d-13f9ce9c4ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb9b116-2ae1-4648-b36a-3d9b111d5432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1bbddd-06fb-4fc1-b052-c3981faf3d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682f7b10-510f-4b1b-bfc8-69181458a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fb0b5f-9487-45d7-8a03-d824cdc1a1fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7b6188-7869-418b-9745-5228116d0c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dad3f2c-513d-473b-b33a-c52220e54d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22817b84-7bb0-4433-b225-9386c3dce88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "065aa709-ef82-4478-96d1-3c0618d5ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6716c6-1ed3-4813-98d6-f7bad7eeeaeb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a560d-6a06-4ced-82e4-961fc4917d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ec7a56-d3eb-44e7-86a3-4347871cdefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa8f477-b73e-4708-9018-13953ac30bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82ef9f2-09b9-47ad-8f94-61f7a75cc1f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5a701a3-a094-4e9c-86d0-4c07c66b2ca4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dbbad60-6e3b-41ac-8c81-5c006c2e2544",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df95e21-96b0-401e-ae83-c39034cc15ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a14eeb88-f99c-4a3a-8663-2510fbadb754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef46225-366f-4596-ab90-4d21737685b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72768458-a95f-4ccf-ad73-86ebccf2a94a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae72c13-35cf-4467-a73d-1a6c54d58757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a5f649-1b02-49bb-936a-5d47fe1f258e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa38e95-bfef-4050-a476-896abb77d875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2da13a6-46ae-4333-8ea4-0cf7de99bd64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc85a56e-2189-421a-8241-a3dd9d3d7179",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e4fb2e1-4ce7-439e-9166-c03ea3cd019f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f4271f2-0e74-4e19-9ef5-a8668191454f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6a1aeb8-34fa-4eb1-a9bb-0f0da6a7806d"
            }
          }
        ]
      },
      {
        "id": "921a8043-9c4b-4b39-a51e-eacaff235eab",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0237a6ba-4790-4935-a886-86147b9c6807",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c0616da-d208-4e50-b0cc-2afe358bd515",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a4c65c7-6df5-4b7a-b90f-0f24a6fbd3fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc02349-d687-49d4-9a48-6970d71dff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006d3cec-252d-4d3e-be05-39e3be12c5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e379e5-68fc-4872-9fd7-9997bd884966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93561d7-482d-4199-a26e-26285e72d12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3124f-a380-489b-8e27-62fac90833b6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aea6ca4-1cd2-40e6-aecf-4a77ef260f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84c16d5-0b39-423e-b220-5718c2fe7bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029f146-caba-479a-b972-f550f34414a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a85d5a3-7c10-4716-a5c4-4203b81309a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3383dee-38cd-453c-8bd1-a9d42aae68bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36091c2a-4974-41fc-9cca-fe466f5fcc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83958186-ed6a-416d-a2c3-4b9fc5f5e96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81da940-9f79-4968-b84e-2482e86e1959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "943911e6-604d-46ce-9105-df6e91b53d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70042e07-2994-416f-a25b-549d4fc69039",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf17768b-5e24-4d70-aeea-d8ae52dfd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401c106f-783f-4e0d-baa4-4960b7939608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc3d5a-8a6a-4830-8e80-cb02637bb81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6493f2-e6d6-48ab-bb26-ea58d4a27f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93fdbe0-56a0-45d0-8482-d3d69f793349",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f50a5-0a11-4dde-b188-32fac91c90c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd7f1ea-1c0a-48f5-8a49-b01f648c5ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb8c59-7159-4a0b-ab3d-ad6108f82be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e322af-9c9d-41d7-ba5f-afc439331ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c04a0a-8153-477f-a343-ca900383629c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95068c65-bacb-4554-bf54-e24688ad2ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe9b4b3-5c99-4eae-bbeb-9958de94b05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d330e0cf-b861-4833-b8b8-64a54d57f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a052aa4-2023-4b3c-b81b-5c551c351019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b47404-f20f-45f2-9823-af0c96da6e58",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e39758-2f2b-4ba0-a8cc-8d963a7beefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee8ac84-6014-45f5-a24c-2273b2958c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199c9702-868b-4e07-a2ca-04dacc08e0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "552da75c-c6ef-40fe-8777-2c9edd982c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9e888a-4b00-46c7-8963-422dd0517cc3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39699851-98ab-4479-9116-bf111d031d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420996c6-905b-42bd-8f2d-8ba346d9ae6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a63414e-2d3a-44f5-b320-d680190eb4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a33916-f25e-4221-a1a0-74f1f173f953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6d595e-5279-4858-8931-df751b8de41d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd660635-dae6-43a0-bb58-0fd23314d23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1d9f14-6838-47f3-95d9-1d2630cf41d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487321c0-17ad-4939-83a6-e2101d1401d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e93af5-97f4-4a68-81c1-9f47d15cdeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860a1e25-a52c-455a-82ec-d2633b381d6c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a7bad3-7b2b-4c0b-8164-c6b084c9f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4f7a05-702b-4ea3-ae53-6f2f5d9ae1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28cbfde-c62c-43cd-b053-9ed5a8938aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae808bb3-513b-4cad-aa56-7625dca96e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1903ceb0-00a3-49a4-9c69-0a3ef81fbd69",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e53c0-8588-485f-852a-152123730eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f540a3af-3a63-4678-abca-598e02809e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a78e42-9e6d-4146-a5b8-91313f3eabef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "358de591-6193-4b7f-a265-2498687f83f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5afde6-feee-445e-af19-62ad2dcbf786",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a110cd20-708d-465b-8cc1-2dfde36271d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ff57d5-c98e-4c70-932b-6f7953abc30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb416e04-7db6-4a72-bab4-c303edfc605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ff346-2d52-489e-ab8d-89a0622c5d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af544d75-e520-4482-a729-79eb3e74a0ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6c82b4-4cc5-4e84-bd6f-a2ea38c946f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37025257-07c4-43bc-8fc5-8be25438831a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f02a5a0-87d1-4688-9393-7643e5f499dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf98fed6-ac27-42d3-9b7d-c6c77ba3bca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d611662-8e65-4f8f-9108-0ceff7b66523",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f52a4e-827c-4c7b-a925-22eafff61db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0bd983-02ec-4502-8fff-2009df57501e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cd11dc-4506-4ed9-8ae4-63214abbdb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf9a932-b884-4838-8210-5903e43bb2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721674e6-222d-48ea-8fb9-3c8fba77e910",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fd502-aef3-4eb8-9522-ed85b422bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e843ec8f-d0cb-46a5-a612-3a301e4cb760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994f91a4-d009-41b8-b57c-a0924b7f8464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "373b6c3e-814a-473f-86a1-3a56689586d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5607e48e-587d-4666-a965-6da855f31092",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab12555-f0cd-403e-a807-2bc6c02f38d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8f8265-77c4-458b-958b-46cd9d2eabb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e1e9ce-5ef0-4508-a395-9584d5c0554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac178ece-15bb-418f-935a-55fc719f12c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc77b10f-fe1c-447e-b09d-ede6c82333ce",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b7b0f1-2d9b-42fa-99dd-76b137e25ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df92c505-f4ed-4f1b-92a7-000258af20da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314cc586-9587-45e3-92f0-219976f062f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef369349-fb76-41fb-a42b-c5630e20d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b1ddbf-c905-4977-a6a5-224fd7b829ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860aa2e-ea56-4b1e-9036-65a4c62b7890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6753e4-817a-4420-b7c0-6c9c4e4508ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1971ac2-b7ed-4fa1-bd02-dff28b17a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06fcf20-6ffb-4f34-bb62-ad8faa4727ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b3f042-7524-4e6f-b067-ec04bdede846",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69d6be9-15d9-4861-a52a-09614d5baef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21d4763-daa6-4045-8f7a-cbae3bfc5811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75073d40-ea82-4177-8b98-761b5c39e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b4ff41-bb0e-4068-b154-1953afa1d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12889abc-9905-4647-95cf-c73c8289ee7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac9002-1684-4b2e-b883-422ee8382af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077d90f8-9f0e-4a0f-a062-688d65a8cbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7103142a-043b-485a-a69a-1b31bd10d93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f8e37f-7bd6-4753-a292-2b77c4cd6fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ddd908-9ed6-47d7-9772-91d8122b1202",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968bd659-2756-4219-9c50-3c2adc70d71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ec8030-d895-49a1-813b-e770da21579d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0067cc-97d2-49dc-a8a4-cc0c48bbdc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7288e487-2967-4289-b61e-41b6b733fe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6182cff1-e7cf-4abc-94e2-771abbd8cdc4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03ad65-3fbe-461b-86c4-95ab042d4cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fea282d-cee2-420e-bb63-cb02064cff0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbf93ad-e08f-4160-9761-b99ecd690b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30015275-9727-4d58-97f2-d46c20e079cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a5311b-22b2-4387-bb3a-d00d237eadbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7075ea2-015a-4472-9bd3-2934b4d75afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ebdd3b-6b55-4ee9-85fb-aa0e47a4a95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc5cb1a-cfbc-4743-ac10-a76a5c8637bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88dc3c9-3815-47aa-8e3c-1e8b7bb261f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaecb38-49c6-482b-956c-76b8843694fb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce9f643-eeb0-4b06-9ca2-ebe677274b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092ca3ea-f683-44ac-b533-0fe4d6946519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898903b-18a6-47b8-8a30-679fdc323839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "479a0303-0cb5-4960-966b-452bec06e46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b953b618-2680-46c6-ae2c-e63d68796a2b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb23618-d235-47ae-a04e-7923f151fd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8d24dd-0cb1-467e-a40b-c77e4820c992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08484887-f68f-43e2-827c-04765e17909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a204f5ea-2d51-40f1-ad2b-0c7c0418a570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927ed293-bc00-45a4-80a5-aa5c883458e4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc5bee7-d966-427b-a0ba-3d7bcb4d533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc89d1d-3f79-4563-bf97-b1a42c4b4608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2655e3-a6e3-4eff-826b-65da54f9b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a6143d-1070-43f7-a201-ac9bb46f70c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a1a345-32c1-497c-b26d-949315a27712",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e2c03-ea32-4d36-9a95-85409a65d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04db656b-be45-401e-8bc5-6b81724037d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea0ea5-2e4a-41e8-863f-00c52a1ac60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dda91b-9973-43d6-811e-31be29436085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56903902-c835-4eb3-9bd2-8718f3b48cab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde809bf-5b58-4856-80da-f33911d63ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0415cf8c-96ae-4e2c-895d-4043a17cc419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4029dd-3db1-4be6-923c-ad83e0371c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5fa199-f137-48cb-96e2-a7adea7cbf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ee4d7-4c2c-49bb-bc6f-4296e33e4201",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b47d53-bde0-4e8e-a174-ffa748bb1f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b21c20-9b47-4cfb-b97c-2364ed9722f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c968a4b0-584f-44cd-9ff4-2808a785e5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c82b55-b7dd-40c9-9dc5-20eefd0474c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca0cb67-7ad4-41a6-8a8c-cc097a5762e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655bb76d-2035-4e07-b26d-1b8273b093f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f3398c-4d49-4436-85c2-df1ede0f97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b007e7-4372-43d9-a735-e9d6c18472cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace0e683-1864-4f83-8031-18fded3b5002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f5e1b4-6af5-4fb2-bdbb-b1a839bc6960",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c63e1-3d44-4b36-8ea1-1b4a33929650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a38008-5520-4bea-965a-15918f325f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e20dd09-69ca-4497-bdd2-1bbfd3ef1020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3816b83e-fe77-476a-914a-eee06c575b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3335aa99-1958-4980-8503-40374e1724b1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c539b73e-5a00-4d97-ac8b-dde67230d603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71738494-c1c4-454a-ae71-9649d7da199c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f40dd8-6019-4d5a-beff-a646cadacc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "355f148e-7fce-4a17-a1fa-03a50ec16b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57524e6-4d37-47f1-afc5-28fa5c6cb6aa",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39a7d68-1419-4997-97f6-fbb9b1f9220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7a52a1-e1de-4b20-a006-bdd386073549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca20c8ab-a88e-40d5-a432-767b9eff5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590324ca-a076-4e8c-892b-676fff77a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5399562f-96dc-41f4-ac06-64c84021cf47",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4942ff0-f36c-417d-98f8-d05e13b98218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab589b0-ca34-4648-914d-c3595ee67a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a8b8db-78a3-4095-8f79-ef25fa781168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6731451a-d25e-4674-83bf-18485f541ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80793570-3fb4-415c-a56d-77341e1fc859",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c999af5e-c019-4476-a817-cd69f007dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5108b3a0-2e9b-4bb4-823b-4130f049b1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9e476a-0d73-409e-b6c6-83145a5837fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9e0c3c-0d9e-4fe6-b422-a299dfccdb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc8023b-f540-4ab3-b6a5-03c16ddccb9d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d66af-6de2-42a9-8dac-c8321d6c1fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819d5212-3e74-4e02-b741-b7f9dca30b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0119fa8b-6b80-46bb-b254-0e4519579718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20cbde8-6092-4f15-9734-5f85029e3ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc51727-2cc8-4f4a-9a49-f8c4f47f360e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1726fd7-6db8-4adf-b110-8ca185ec1d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7875cf-27c6-46d7-bd59-91bad09c2a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efd3d93-72bb-4b38-803e-effc6b0e6970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e741ffc-1251-4c74-ad6e-6c22cd450cfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9da6752e-a883-4796-a827-45397e798a0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "575e86b2-4db3-4b4d-be73-53ec5fd5dea7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a84e41a-831e-4f50-b1d0-d7208e76434b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "397d12b3-f2e6-45da-80db-26932e9481f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90ce255-6568-4e6e-bd27-4a2db3839c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22f09bcc-ffa8-44f3-ada1-be9f664a7159"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30e2c089-b75b-4e7d-80e1-2e2681913688",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3684eec3-0daf-4086-b84d-325647ca9253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16ec71e3-82e0-46f5-88da-c062555f68f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fce4a6f-b095-4598-8139-7dc855d15079"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a19eb8-8319-4c6a-9a61-0a2e2edebefa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e23e7b78-0561-449c-8070-8fc85f896940"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b6307e-33e5-4726-9c97-0e4d815253ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "246b2422-dca8-4847-84eb-ec5c59e21805"
            }
          }
        ]
      },
      {
        "id": "0bb6932d-e398-4240-aa88-c3e8fd48a750",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "22a92265-1995-4beb-aca5-8f9e9adfdc67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3926f366-842c-4aaa-bea2-604f21d323a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b4d05a7-0dd6-4c27-bc72-cee8b155d8a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e8731-3c5c-4a37-8488-ba41f2b1fe05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af9b7e9-0e8c-4158-a02c-a915cdbe42b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4605b77e-ec07-44f5-b7cc-3e82ae687e25",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e265cdf1-5ae1-453a-9e8c-6146af07bbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e45382-b955-4000-9d6b-fa643d568191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c20aa6e-bfd0-4a14-9bbf-0ed20fafdc3f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40c7b4-cb0a-4405-a303-186028fa95a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765e6cdd-71a2-41ad-81c1-26d8e8d96882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e847e12-f1f0-491f-a0d8-4afea74f9058",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97b2d25-4265-414b-9999-87b7ca18b304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a189aa6d-12f6-4573-9bf7-e797b1bb122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2128624-e8f8-4eb0-85d5-38864e18a622",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec4b5b-a979-4ecc-a5ec-a45802ecf18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447084a7-bf82-436b-b70e-56e55c5c6c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fb33e1-e48a-4baf-bc09-dc4b870557c7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f43b59-1343-4981-ab33-12c71e37e16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972bd56c-dac4-4222-818e-60278d3d99f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e816a307-1131-4c88-abae-966810c97eb5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45882e29-3d8d-4468-aa84-59fb029d905f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e7324-5d37-4938-a94b-712393124d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb2583-a63c-48dd-a0c4-0b1090a0ec89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de64f620-afc0-4a39-bc76-624d6f1ae13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc20aa88-2713-4e85-a2cd-c040c052c983",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8a90e4-a98c-4f37-a967-097928fe7e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8df01b-b842-4d41-8486-ec6f57d7e4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8825a6e-f652-42f9-9b5c-ccf65b0c769a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54beea47-a6fd-487d-b740-e7f47d5b68f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4758456-6723-4444-93c4-06cd0863096d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0bd6c2-1edc-480b-b741-408666ca2666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18c8380-9a15-4230-ba69-2acd38e72ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9741dad-4656-4639-9819-40d351eeeb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cd287c-fd3d-4048-88b0-9d0eb19193ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85fdb9e-68f0-4e54-b644-48ba17d2bea8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5d1f38-8286-4fe5-a366-068acf17e36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c2fe36-b28e-4869-8049-888eedba8c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e227f683-86d7-4ac5-9637-52813d736f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c12e02-eae1-4c26-b07b-30c71c845da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0393ff-134d-4fa1-b11e-cea3b3f7f2d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0d3761-eac6-4ab6-b26c-04623aaff902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a215d4-4a84-42e0-aaf9-1efdd7bfc488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0fcf0f-7381-457d-94a9-5cad2a5703ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c5af9f-dbc3-43ab-b5fa-d9a3025289b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2528b83f-1278-4f7b-9d6d-19f998ac19f8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b84c4f0-4fd4-483a-93d0-dec77fb52100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4a01e-c9d9-49e6-89b8-8bc4599a4a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d9832-95f0-4876-ae51-2ba2468597a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e92323-7369-4fba-a7f9-87c38f48c5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330437dd-b360-4965-b77b-466aacf65968",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e3ed0c-c7a3-44d5-8cb7-b2b1f07d8600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ef8f64-7cd9-49ad-83f1-c12328fbd385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f9dc8b-820f-4c6f-b5ea-e4197f4b46ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1779546-8d47-4de0-9b71-840efaa22374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b712bb-8471-4dc5-a4fd-524ae80d3968",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1772bb8-e854-4be6-98c7-91de9e66fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b93330-10d4-4e8d-9a84-229d7022adcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ea883-9df0-4f6b-8ef8-f5bbc21a7bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a833e528-9a86-400f-acf9-78735895929a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df5c311-08a8-40aa-9749-26f5f4b41746",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c533c7-9054-4bd3-9d5e-7143325eee63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec021b76-64c1-4c4d-a464-9195af3a364b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f89136-97cd-46ab-bbb3-cb0f3253c5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1202e2b-5779-46ef-bd91-cef40db2265e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1cb19c-9e8e-480e-b3ce-10efcad5503d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bef327-4736-4919-97ea-514e932210d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a0de40-f2fc-4f5c-ae6f-80a8d0670a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a612810-51df-4f75-afd8-498e1ab667f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62694ae7-455a-432f-aa93-caabbc50e921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2a149c-739d-4e7e-abed-3d3f818e79c3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bcd69b-4435-4251-9d69-78d8e468839b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda1c558-3dc2-41ab-881a-f1d0d4ce9435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64566dc-eba8-4c7a-8ea4-7db8665cd1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95d959a-c072-4f8b-9478-a4c95db2f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd71978d-8f07-4e82-91ff-8c60b27a1201",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bc277d-2123-46df-8bbb-006bfa779bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92a2551-c82b-4605-bc64-561b825ef578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef051f8e-89ad-4ed8-a76e-75a5b2a34ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70423922-71bc-4d2c-b2b4-32610e4bd736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04fb9a2-576e-481c-8a9d-bdc114c8d17b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebc146e-ffb0-4676-b1ec-278bd72bc2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e39da8d-0586-4dc2-809e-d5ce93704abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229d7890-1b21-4a64-9ff9-7ece1f5bc5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb3d68f-bd8b-4811-869f-984b44f8913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484ad186-1a33-4e64-9bae-381e0543bfae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31c87f1-0b21-437e-acbb-c73a98d8b184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b08f12-7334-47a9-a4d0-de749101337e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b031f7-8f7b-43a9-96bf-3294647e9864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8607275d-5efc-424f-8b55-72e81bf202c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eeac41-aca5-4d84-ac99-9b277c870298",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3664d7a2-080b-4c1f-bea9-d0fa1e14b107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282874b3-bafa-4714-a873-13fd20fb3e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903e8d6c-7033-4b45-98ca-84ac17361f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235e856a-352d-4e80-8baa-cd4ba7215aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774d5aa4-f246-49cd-b33f-e79614dffa3b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01ce7a1-35aa-4506-8e65-d3accb6cbb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706def4c-5253-4020-8623-86f1eb2eda72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ef183b-c8f5-4194-9edd-89cdef669c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e9d220-c616-41e0-9c0f-b728f9169568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ba3ad4-ddc5-44e0-b729-8d698ea2eeeb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edaa933-bd06-4c30-9ca1-85951dd1597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b6cb26-880f-4d65-b9d4-67d7d61e5bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950b6efa-6898-41c5-aa4a-c8461549b98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b320ef-6734-43e8-ab2c-600659e26922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1852698-f4a3-4f50-a2b5-fa59df430b1a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab880c-42af-41f1-9817-cf2f9f2d2911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8f6c660-4a1c-460f-9fd7-45d93a0b8b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1faa6f-8ce3-4315-a77b-dbe40545622e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de3333b-beec-4671-b422-6629b7095e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d260a45a-1b47-47e8-9eae-74630c214fdd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7e38b4-da83-4303-ad08-9231475fb3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c955c2c6-7385-47ec-9207-871b87b0a16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43deb9eb-c89d-40c0-a9d6-196ffe0d331d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865dfd35-be5c-461b-a7f3-d07e8b80498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641ba3c9-f486-472c-beec-1be6f34bd355",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e9dda-8d5f-48ab-9962-dccdbf27f79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed4acba-3b41-46bf-af88-344c23b1a7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b1695a-130d-4005-beb7-ab49a185e3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b981fd-d1b3-4edc-97fd-69fc420a560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be808bdd-098e-49f9-a5ad-a5129c29b84c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db69e4f3-64e1-49d3-a358-32347ec1619e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361dae0c-6d21-4275-977d-2cdb21c010f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f51faf8-4dc0-41b2-9e30-6de5a4ed8104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59b12c5-7013-46e5-af92-7e62f2259b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03973a6-50f2-43cc-a560-f69d8f890543",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db04f57-7627-448a-96bd-56f71445cc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b644d8d9-891b-41a0-8b69-5933daa9119b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16baf69c-0a06-4757-b77c-cb1c6c1fd68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1207fb71-a676-4d6b-8c56-e405927b917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a381b3bf-0b99-4f95-8aeb-19334b6b5ccd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd021d6-4144-4127-95b4-fc77bcb81887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e510ec-8e6d-4613-98b9-c9200145d8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de787ef7-1acc-4a56-8802-46e6c5d09bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b402f907-2c38-4960-8d70-209c3223f345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f21bd-1fb8-4858-94d0-ca85b80e66a8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48aa7e2-99f0-4a16-9d06-e5b582d7a7b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0baa0990-20c2-4c2c-b675-4ea46e195b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad594c-551e-424a-b462-d41f18d58dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67d5764-eb8d-45d2-99cf-89c464c6ebc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff37a90-8768-4839-890c-453dce0138d5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44063c23-8819-4c50-8ece-3e85c3a75bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53341ae4-7f1b-41eb-99ab-b3887d5fdd2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eabce3-6170-43b8-9994-f5ca542bb28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758ee855-a3cb-4bc7-ac2d-728813f89515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff6aa37-a2fc-43f5-a1d0-737cb41abbab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39371573-ae63-4444-a61d-a3b94d2390fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128b620f-2fdf-470f-a13f-11dd8994725f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb1bd60-1968-4e2c-bfba-56492a7c5af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d7e6ac-6d75-4bf5-bbfb-7c5230ec8740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c99ee4-2d67-4d9f-b6ff-3c969747da05",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b56d48-d265-439d-81bb-4eea26ee8a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a603a3-ae78-41cb-a347-cb66295c46c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25e7a46-4e18-4df7-8390-0075be7c5cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e32b53-42a0-4b42-ab99-99fbfc1997c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59ae3ed-c499-4d9c-bff7-c631fb023557",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e103ac0a-573c-4b7a-a450-c584abbcce28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7494ebb-56a5-4b7c-ae6f-482da61049e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c377d4-b57a-472d-839d-05ead91cad98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b90d5c-6c7e-4d35-a103-d6cba6c392cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a1aac-a09a-4bae-a1d0-6a6c422b95bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55893841-341a-4eea-99a0-827c899f554f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3c186a-d1c3-409d-b772-7106d01b2b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b9703b-f654-4dae-a17c-162ded47a55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeb9100-001d-4b0e-8d52-fa987254914f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11726180-d370-4b64-a4f9-078fcb96c1bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26a973e-6a68-41e3-92df-c9ffabf63c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75c8fdf-cd7a-4e5a-b492-34597e48fcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96057ad0-b04e-41e3-a67e-44e334607945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61813fe-079f-4fca-9ec6-3e3e790c7e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b039997-6237-453b-89b0-fda39f4dedd6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83401c1d-38ea-4760-a560-2d66f6dd4465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74616bf7-185b-4df1-80cc-a5c6761aa7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114b7fa-d250-4c06-8c2c-854f83da7780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca79d9fe-7369-4119-b125-0e3be78767e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cf7299-abe9-498f-b139-7fe51fa0dfc9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bacc4d8-346c-4f8b-a230-fb344a240114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d2c600-183f-4a35-9c11-3008de024312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0b228a-4038-4bd6-a3fd-8f455b7ad3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0ffe73-e398-4e9a-8c0e-6dba1d1cc888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f957503-16dc-461e-b41e-f65727336b8f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53096ec-ad83-40d4-b298-d064d539beb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cf77d1-8dad-411f-a8c8-977fcbcc6ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1231f7c-59dc-4bf4-a707-3008eb8a0697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c036edf-db6a-42b0-9fa0-34bd2a1da246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1454c1dc-c321-4520-af4a-e70954aa00d8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637874cc-effc-4e35-afb9-4febb25f4f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1493d0-c7ad-4af8-be00-a7e0e2f44c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461fbe08-5c99-4a5e-8a6e-c2cfc16694d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfff96f7-8369-4107-bd99-0d5fe6ad1fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ace3c8-1c13-4ffe-a65c-dbbc14689974",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc56cb9-4557-4571-a2bf-1e120b705694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b207e3c-4ef3-4276-ba75-b7caeea924ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff9fa75-1c8f-4170-a1f8-501b422b813a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c9ef1e-a1a7-4af5-8436-d6813c8759e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05cb71a-1a3d-4e0e-883e-3a98608f3906",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f44aa7e-506b-496b-93a9-1b0cec1abb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fecdf51-e871-408e-9738-cd9d6bdca9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d2766b-04b1-412c-a346-1b683b957239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ede9a5-3714-4f65-8cce-77b2a0901c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727e06a1-5f80-4222-b2a4-ccaadd44e989",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b2dba4-31c9-44f2-8d24-b65c641bc559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca018d07-2d5e-4a3b-9b9a-ce082b2a0f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a986de-8dd4-4984-b1d3-d14b34032190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d3addf-e69a-4f7d-b0ba-b0d0cfc0813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3d72b6-6273-4334-81d4-10a9420d6427",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772d0e6-c565-47c6-a166-aa2e24eaae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f37724-4cd8-49e8-a38e-01d52734ab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfba345-1bb5-4560-8b1f-14f197f14df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5729584-ab75-44de-a0e1-1124027b9686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9bd5fa-a003-4098-b438-d15ebc545549",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbb90b5-446c-4831-a863-31ece91fcd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169739c4-2098-465c-8901-1101e957ccf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad77c587-edd7-4ab1-9bef-20782c1f1132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a0fdad-b40d-489d-928a-98b73270724b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f435bb52-d93c-4a54-bb3f-cfb7084a95b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c63081-58be-417b-94db-28827af87b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88b5946-1525-4268-a5c5-1c0a236ac86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dcae79-3c90-4a11-bb88-4ffa4d94a742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b351a66-03f5-4b9d-9372-d2a1660ba726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fcdf08-8bc4-463a-a932-e757fa08db19",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca1b7cc-5bf9-4ed6-b489-609b1709c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c90cd5-70bc-4ee3-bf63-4aba1344d340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ac25ee-b878-47ea-af0e-16cf1296f056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c25469-0a7a-4485-af92-cc6042f0dcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a6fec-603e-4a45-b836-9f93620d7abf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337949a-0fa8-487b-8a49-4265c1568a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a27284-f5c4-4e95-a33f-d2ecce110133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5107a46-0de9-492b-8c0b-b847c326e1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceebd390-5b47-4dbe-88c5-9383743f0600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8f08db-5285-4707-977b-208fc322ce8f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a116aa-b8ff-4356-9ca0-4386a430ac58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5473051-b87e-4282-88a4-5cfb29d30f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad23cad-95e5-4576-9c1f-2624ac339469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c90252b-672c-43fa-86b4-f37371a91a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405d5196-5a7e-402f-bd03-f01f883bf3b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936b0fb3-8a70-4c2a-b0d3-f199ac343637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91afdba7-e960-4241-b9f5-f4ac31085fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc959d96-2c2a-4ce6-872f-de583abebe8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd8e86f-b174-4c2a-8fe4-77ffd630791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c3d5e-8870-465b-b4ba-c9e44b76b8e4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ec5c37-05b7-42bd-ad3e-0b11d0b820ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b5a465-aeac-44fb-abaf-c38fae1a5734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cea78d-bfcb-4870-95d3-35beb9b90802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f20928e-d32b-4d80-a620-273c94c54351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10ddb3c-d483-4f15-a011-01873dbd2cf4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cca67f-d7cb-410a-90f3-138d6301d0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f28242-2af5-4c87-82c0-e72001e0d071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80caea6e-97c4-4100-ac06-cc8b4afda29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc310a8-7b1e-4255-87ef-d3a24202cff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e357eae6-7f3f-48a5-acfa-5a54f94e8bbc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e5b109-0b07-484e-9530-f22bd9e71f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cf2c96-a6c0-46ce-9c82-59ac047db789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb3b5e-c713-4544-92e7-2028a8a7617b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8792f5-17dc-4e3b-b2f4-989bc0fd95fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3558f3f-64f6-456b-bc2c-d4d4cee0fb68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd361a34-3636-4bcd-911f-96f3cb8e86ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941d7b09-eec5-424f-a49f-93375dedad1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3f1498-0e8c-4afc-9732-db47803b3cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ca0e75-d77c-439b-a615-89c4890e9cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c17f21-2ca5-4cf7-aa21-fe655b61a852",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bf8072-57e3-4cc6-a36d-9fc4540604f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36704f24-8030-449f-9a42-f2e91ae2a00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c35637-5f86-487b-ae3a-88d561aadd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b11c8e6-5da4-45a7-b6d6-5e4b6583c97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3795db-6068-486d-9d73-cf162345f194",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3916058-dcf6-4dd3-a551-daf37d61c2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a4242c-f023-4694-990a-8c3d7db9a623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c6e2d1-0326-4eea-9d19-106b78f15506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e816205a-7957-4fd1-8024-a394b54c1ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5997f157-f65d-4e8b-ae32-899682529e7f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98e1cd4-90fa-4c55-86bd-a18304284fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69ec21a-d779-4d53-898b-d09a63e591dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cabf71-6225-424c-9436-836b95dc3ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558a9822-1b5c-4a68-8a96-94b52901da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1cae4e-4f0d-4bdb-8d38-c61687262c33",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b4f4b7-c8b0-4a61-9c62-8b51dc1888b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5b4911-798c-47d9-8e9f-7ecf8cf8749e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b3197d-0313-4b83-a437-44f02e706bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fba62a-0710-4dbf-930c-d45c27b652e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783a75e-c0d4-47e1-865d-f5c93dd7ce05",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f5d99-625d-4172-8aaa-9f399547badd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377b546f-29b3-40c0-8800-4881a3e41197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e670da99-4f00-458c-a44e-be767ffe3365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9938efdf-582e-41f9-914f-cddb65d010b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552a2880-5967-4c52-b4cd-efc2fc6d485c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64574c26-64cd-42e4-94d0-daa831b3533e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f1cac4-7255-4bdd-a184-0c13ef959422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb875450-bcba-4caa-a53b-d44a386e4ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b591b3c-13c7-4308-9cce-7ff50543db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3af170e-3fab-4596-8e94-ed732fe33673",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2beabc3-daf7-4e9a-9c2e-bc93a832c64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecbcb0e-782b-47ee-95d2-41e3d05ca400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd28aa-1c7d-4d7f-8f80-073822745bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb296c2a-6355-49a3-9fab-90a8bf3642ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d4b4d7-584a-4a96-aaac-8393e1e8c2bf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49327796-870e-4f11-95e0-978c4f4f458a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac4d398-3867-411c-854b-f79715a04514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888f75bd-525c-4d50-8b07-175333e52112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b9e7bc-38a8-45c3-9228-20d60be37e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178bd3c-1dcb-4085-add8-baac93e8411d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5e767a-029d-47a8-84e6-3894bf1a4b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b441b193-335d-4007-bd7a-5d86b3ec472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e047f2da-8203-4665-850a-6048bdb1383b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9db2f5-d2dd-4598-841c-123f7bd4b458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac68a9b-c258-47e8-959f-2bd4cd4b0eae",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cef90b3-2175-4e0c-be92-de3f9e4789f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2c2a34-8e43-47a9-8c65-c24cdb13c07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625d67cf-70d3-4075-a202-355744f87822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4371f0a-0020-4459-b663-3e181feb4f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815ade07-be07-4917-8961-602f0423aa72",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028d4283-9966-4da3-80d9-c146038d0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e718321-a182-4a88-8d12-2280e1415c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a90ad7-c770-45b9-92e4-455cae213cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4b8326-b94b-4b26-97d9-0a36ca6016c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90cb1b2-0242-4a75-abeb-3782aee1adfb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b0e88-eb2b-4797-a936-5174e8509dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01dc16cc-4fcf-4cf2-b309-be1d90fb36a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b591b319-baf7-4d86-b0df-878a7c6c8e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a362a61-7eaa-49aa-841c-9b580c84c915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a68a8c5-7a9e-4c82-8276-d33bed3a29c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4b982-4f52-436a-b23f-a5460e901beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9189c3-fcdf-4757-a7fa-daebf473d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7613a95-6b59-4953-bed5-1eeadbe322da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30ddd0e-e435-4d30-80df-149e22a09c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ead8335-45a8-449a-8670-cac2dc17aff5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e1679c-ca8c-45f1-b4d8-74dffb1ed61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3aec75a-0b3a-47b8-96ce-cc55f2f2c5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ed5353-1fe7-4380-b551-b67574ef2eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72af965-d442-41bb-b5cb-0e07f2500ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2d74c1-e328-4466-93ae-38aef3d8e751",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b04866-b2f5-434f-b9d2-8571d3eb3024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611481ee-5806-44d3-bb9b-9bb88a1ddb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9512cd02-3174-4a06-80ed-3eba71bd49b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9eef16-70ce-408a-bee4-5c6a17be3dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a0c477-8135-4645-a45b-05e47d501943",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af34c9a0-d7fe-41be-b769-b02b65405933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f5b509-9e42-4215-8cb8-3e087fdf7bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c6df6-9439-4a4e-9a1f-dbd496d83862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8627d9cc-8e6c-4def-82fc-14e19d25a978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458058bc-517f-4935-9212-4b947610e968",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f8ebf5-2b54-488d-8471-b5ee38cc72b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb55da3c-31fb-4f0e-9fc2-4611abcde4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b28b9ee-1b73-4031-a8cc-c6bfe2cb771a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666cab29-825d-4b90-abfa-8a18aadb9d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d049ac2c-918f-42a7-8e2d-01334d09644a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a69ff37-8bbd-4415-917a-e3e864d34e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc46dc74-bb55-4aec-a04c-418b25ef6ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ad98e-ad4b-441c-bbaf-1595af1579d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2992d19-4161-4c57-8742-0b8b0bfbbafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e964e5-f438-41cd-9ceb-488d2cd8ff85",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad1c586-43a6-45e1-8dab-83c496874df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb496a6-476c-4511-b0f8-e68675ad525e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91abcfb5-2f32-4181-9926-b6b858a89612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b4eaf-8223-4b8d-9a97-e585aea6cb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e884ab4-d53c-429f-9d8b-604503eb48a7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd69e6b-e1da-46c7-ac1c-8fdce1c36688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26a3a55-f0ef-4bf2-adaf-ca3c6ad2d52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4809bd-9ba7-476b-86f6-0d1b1b06c58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cbd603-15db-43ab-9d0f-976c72c329ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bd387c-3cc6-4de8-807c-d2e5a0a5ce35",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5023ff9-1ae3-42a9-8077-f0dad891b4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc79345-0ca1-408e-b760-4e20bc32ad2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d8bb4-8f6d-4763-b383-9123e5555b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb12dc3d-1500-4c95-8cd0-485367f59050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d61f5b-7e50-4177-a4ce-499c8907590b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a69203-ff8a-4693-bd6c-a5bfcee622e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ed3ac9-1448-4c4e-9f06-07c10a886702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67460582-2387-41f4-aa66-459ad6e9a94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee018eb-6da4-4a74-9355-ea60981085b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6e7f2-6fc3-45ee-92de-48a705ce2b6a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b1624d-eef7-4c0b-9256-810bc76e6a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca14f8c-cddb-43d4-b4d1-668e79257eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dea1c9-c886-426d-9a91-87870bef4014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0278ec9f-0f72-43e1-b6f0-53f22f3d8ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2afb6c-1c47-4889-a958-eadda77d31e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228fdc38-6282-4499-9b31-bb88633bb4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f4fe68-77b3-4bce-88ff-f61760331642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35735dba-8253-4686-a8d3-c5a24e3caa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3499291-45a3-4869-98bf-a7e5f096e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fc02c7-419e-4d88-8b1d-6ea9c7001b98",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf10c45-a216-43f4-99bd-68ed80c725a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d504ef23-f69d-4f71-8472-cf8df439354f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac66f6dd-72a0-4154-878b-e6f783755f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6eab0c8-8ec2-4f18-9541-ce4d5af3297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9b1a14-2bf0-434f-a8fd-1e4eeab6aee0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae594d8-38f9-41eb-9d61-96b8c67b1529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3ec6ba-dbbb-4aa2-a6c8-97a1737044bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7a63e3-4fb2-4946-ae51-c5844f8866a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6a95c4-d27d-43c8-ab28-5b6e71c397dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e54871-ea2e-407c-a911-840188cc1d6b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6cba90-4459-4a8c-a465-7d187724e76f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb479ff-be44-42eb-9e0c-20409ebbd1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2db4d-6e97-481b-b061-0a29f06b85e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecea9b57-61b3-4ea2-9a7d-2df741d424c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a2d09a-12d2-455f-b8b9-c5c9b3718272",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14161278-c37b-41d1-b0e0-8a1368b0e079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229a9fd0-e406-466e-a708-41d10ec9cb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4838e955-2a5e-4b66-b962-2b086e6acb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c697e4c9-c804-4536-b62e-7a6560666ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec742b7-6a85-4ed5-b3fc-3aae9736d570",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad24f33-747b-4562-9fc7-7413730ecee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afff80b9-dc3f-4ad2-a191-72a85675a6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6b5788-be51-4d54-84e3-e06980f3d96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b27c22-93e8-483e-a9fd-fc36241f9fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725811c3-e565-491b-bcbf-30c3eacf9930",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1b708d-8ad4-484f-849a-36f5520f537f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cc1e68-becc-451b-b535-29eef88afb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f7e2e1-1ce2-41a6-82c5-5edf5e58f844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5aa82b-8f1e-4c52-8f94-6afcb8d39198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8410b3c7-af56-4ca1-8cc8-acf337110fd9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b329cf2e-7c85-4d8c-a910-0263e4cc27ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd51c6d-03b1-412e-9c72-720c2272acc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f19bf-0aa0-4102-b582-61085461bd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee7110c-d3d1-4a24-8f06-b2ff3376153a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6831fd-fc92-41df-abda-eed5708f2e81",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15596a4e-1675-4e72-8850-3cc2d8d50d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f12308f-f864-45ea-8c30-af563040b0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055686b0-d984-4537-935d-c91464986777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96738d93-f732-4247-963c-36db1b62dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ac46e-aa34-4c5c-983b-df33873cd3b0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d288f50-6c11-4043-b948-71870f24ab17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73796536-f1e7-4a22-b9f0-d25f77b4f718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c760c1d6-a6f4-4b6e-a2f9-0bffd0ac6a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b944e601-e369-4d4f-b86d-a7ea767b7c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ee5ec6-1923-414b-bbd1-29d6a07538e9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c437493-65c0-4c46-ac2c-2b799ea8f546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be19b56-90db-48d5-98a3-12a979b95aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168906c-8931-4bbc-8d92-4afa678c7727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e29e96a-955e-49a6-822f-839cc01a17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40c6909-d42d-4db8-8779-415fac9128e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b18a53-9010-48ff-a09c-0c32f45dbc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab70928-8c20-41c6-a07e-9ea0b4de5518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d720ce64-b3dc-4007-9588-2e59858e6f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d3d90d-0073-4940-8ae7-3ef0d8ca0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b44365b-4a5c-4511-b239-7a0a41a6a254",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7f48b5-467c-48eb-bef5-c2c7802a090b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a244d9-14dd-41b9-b397-0cbc006bc71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c47b137-b327-4083-94bf-0b62e84c727b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c6397d-4cac-44b2-8ccb-24c43618f4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337f621e-5850-4303-921b-8a4645349402",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95215c0-b859-4d5d-9bfb-0b873c383d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026a9488-78dd-4000-b04d-e809ab29c015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688acd9e-0471-405f-bb9a-cbeb7fd529c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54be799-e77e-49e7-8bc4-1f649166d7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe082c0-225b-4624-ac12-7c786237dc32",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982c95ed-53f1-4a36-b7e0-11915fc9b888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e344615-54e5-4556-8cb6-f036ddde98fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a4a193-292b-41c6-97f6-42fa4f6f7038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f88c2e-9f18-4689-9387-0de20140d43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafef75-919f-42be-956c-b1e5a93442b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ce6131-f197-4c5c-9d11-fe5c64e62148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ce856d-fa5c-4f0b-95e1-b4c4509e3cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e905943a-d28f-4693-b600-22aa1e9c4f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a36a57-fc72-4ae7-a0ef-d8fcf77bd35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff1723-1acd-4430-b0f2-d568f2bd2d0e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac120cc-1b21-4534-b81e-1587e988fda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a20f48-9805-456d-88db-cbfbe3521edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d5b8c-7d96-42fb-8df5-e273912949ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22121c3-b943-47c8-bf3b-c6d3e97b0ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888de613-e136-4995-b97b-97f5a87b0577",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f522461c-bb95-4bb4-8fff-032747456e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3dd61e-1df1-4ef3-a8fd-c582c6ac0f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa55a0d-e6c5-4462-adcb-af0ed02807e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cf37c1-281f-4a92-b5e5-191536af5d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60bfb16-d163-40be-90fd-6c375bd7902e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58178fe-1513-4bc9-8c7a-62518e65c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a272cbb0-b2be-498f-8634-bb76c8d22cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d9841f-ac81-4d42-afcd-997af570f4d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6111914e-c7a8-4ea5-b8cd-e93a3974fd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54db8c69-7195-476c-9803-4c2c4d4a6fe9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f8108-d8ae-4d0c-bd49-747a6a8936af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0caa774a-68c3-4251-8b18-5803240deca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d200d93-f2c5-42bf-8d7c-f9b94199bfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b99ecef-727f-4db7-91a8-673b23fb6245"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb03c3fc-de28-486c-bfc2-62033c240ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c23f9df0-b6e9-4817-a650-b8733eb22035"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bddb1746-0eab-40f1-90a2-add0e8cdc257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18b0ffb1-db11-456c-bc2c-e18d806d843d"
                    }
                  }
                ]
              },
              {
                "id": "be6315ea-e669-489c-bb43-9de5c735bad3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a35ecef-a137-466f-b053-c03f276c04e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d3a8e1-b4ea-4b86-ac74-4f956a0edce5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "da8f67e7-01b1-4b35-abc1-e0ba3da07a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25738399-b169-4b01-928a-91bf1206f986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ade743f-658b-4e12-8414-95b31bf892af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd5aa9a7-6ca0-4bd2-9c08-aadeb1276d33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca6498f-6ad1-45ec-a3dc-61456e41a082"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "298a2bfc-1e22-4523-ab24-bf60bcc247b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2c0e4d1-0551-4f8d-bbcc-fd56bdfc2b05"
                    }
                  }
                ]
              },
              {
                "id": "f01b02de-75e6-4331-b9e3-8611d834ae1d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "11496f1e-7092-4d47-9db1-e17ad03cad9e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c92942-d6da-4c1e-a7c4-2be451ec5efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c85e5b58-0f75-47a0-9fd4-4aa07e521c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc37135-bb21-401b-8832-f1b6ec9e2af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f96f57e-cfd8-4970-81d0-51e7ac8b4b9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "649eb124-12be-4eec-8560-85b12c5dbf50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "232f8606-1e40-48e6-8d63-ada1995bc9bf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "841f0da3-5b0c-43a9-86fa-f3d7649964c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22ab7aaf-335e-4ab3-a6df-28aaff85b546"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca3d944-50d3-4c1b-8839-a41ed6f7aeec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b808264-d8cb-4404-b942-ed2d99196a03"
                    }
                  }
                ]
              },
              {
                "id": "978a3765-b862-4451-b488-5d362e471bb6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c75b3ced-22c0-484e-902c-534a587ac1d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d85682e-0328-4d01-b02d-6b502935b957"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7c33487-a924-4b02-9fae-cdeabbf78eed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "450d07f9-40f6-490b-afb2-04ebd3a3f2fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7406011e-af89-4de1-b2d1-303919f9f3a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "80a5e0b9-05bd-42da-8749-d3e6dcb1fd13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afa35978-d120-475f-9c4f-edcc95eb53c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24641d1e-b855-48ee-8591-4cebd3b7f8d1"
            }
          }
        ]
      },
      {
        "id": "3d540e04-a252-4d62-a2c9-5cfd134b5faa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ffc10c8-e6c2-4469-a113-ea14c8275923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "555d76ac-11dd-48c3-9335-63f61688aab2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f084b2f8-b99b-423c-b21c-e9e6efcf1084",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad47eee-c0ea-4ab7-ba7b-341238e7ba43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a00a9268-08d6-4c4c-b9f4-5ccb2b322404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be08017-56ea-4f99-9350-1ae384d0f7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce013831-4e5b-46e5-a1d1-2ee93b9867d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e8644a0-389b-48ed-85ff-00ecf0eae842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b3e440-09a5-4d6a-8cc4-acf4ea561c8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6314b80f-5e15-487d-965b-27a0a7e9f455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e1750a-ce50-4fb6-b197-5f83dd8c605d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a6552a2-236c-4243-840c-60005bb43bfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a3c07df7-127e-4063-a3cb-84b59ecf8b70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "779483f3-cebf-4f4e-879d-b64bb917ce11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb935575-9357-4577-bb1e-70b850fdb2c1"
            }
          }
        ]
      },
      {
        "id": "f03f6911-eaa4-46aa-b9d6-db5c0d9f04d2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4820bae5-3ae7-49bd-b9d0-972970e12210",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd318032-3e6e-4370-9caf-afeeeb6e31af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efe46c14-fe58-449c-be94-839b7d9446bf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b72d56f-8560-45ea-972d-52acc27cb234",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c021d0b9-2f7a-40f9-b921-dfab17f36d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b162323b-8fd1-4987-af83-78f14d506b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1db84220-11e5-48b4-94cb-8fdca1a7872c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ccd186f-c797-4c30-a836-ad652695b545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a6143d-8a8c-4a4d-982e-fdfe406d8f16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6480e00-6043-489b-9d86-b8cf8a5b58e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18321b65-460d-4d40-963e-bceaf1af34ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7ae16d6-10bd-400b-a0fc-11a59e99fc62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcb34328-4b40-4a89-bc2f-47123f9ac5df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a88867db-9c26-431e-806a-6bf909094e05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dba49c5b-6743-4648-b21c-7319333e3186"
            }
          }
        ]
      },
      {
        "id": "e60fcdc5-b7d7-432c-8560-efa162f30911",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bb2cc2b4-59e1-4227-aa3d-1b0e4b1df176",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe75e34f-cee1-445d-ac22-60e6f3d8a6cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a82e7cd1-30d1-4c62-810d-24a6d970e48d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f70bc78-8a5a-4b77-8d79-7bda4bf7064f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8902302e-76e9-4e24-90a6-f19eaca127c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eda56fa-0bf7-44a1-a52b-40d4df3fd58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d747c24-f89d-4e33-84a7-442558bd861d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fd041c2-b1f8-499a-a677-e0f2d764dc71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a43f0e-7eab-49f1-bfb6-9ed1ef7664d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ea9a95-96e2-46d5-bfc4-b0eb446f2275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e5e19fb-ec35-44a2-995f-bf1d9350ac45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f02d9a5-c54c-4145-9036-5fe292340005",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2282765-e939-4a53-8ba1-33c0e1695483"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5aaab77-20c3-4b14-a180-199d54c4b07c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29dbadfe-c6b2-4a11-8f84-453220e9531c"
            }
          }
        ]
      },
      {
        "id": "b398d3d4-ec1d-4705-9381-a4e75d5a9d58",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "674fdc33-c831-4891-98bf-bf3333b06ee0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96d302dc-3bff-4f99-9ce0-e96b33eb5696",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "38b37bd6-248c-4529-b754-fe2ad0f89bb1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd56f20d-b902-474d-bd57-7566adbd4b92",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfff4bfd-82f2-4449-aae0-199d0a01d867",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.09859154929575,
      "responseMin": 15,
      "responseMax": 315,
      "responseSd": 27.83788832123016,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692491615516,
      "completed": 1692491639427
    },
    "executions": [
      {
        "id": "40d834ad-8751-4851-b33d-0a79b6a7e6bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "679116ac-5261-4119-8953-000ec3dfa9a3",
          "httpRequestId": "63afb8c0-ad97-4d37-b3fc-ba76957042c7"
        },
        "item": {
          "id": "40d834ad-8751-4851-b33d-0a79b6a7e6bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4e1d092d-9cbf-4341-ba62-81e85d5daff7",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "5dedd569-0118-4c93-8731-46132544d512",
        "cursor": {
          "ref": "7f651ad8-1788-4e05-bf04-0457ffd21e0c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea63c2d8-5a0c-4877-9e53-69413f7b3778"
        },
        "item": {
          "id": "5dedd569-0118-4c93-8731-46132544d512",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cafd67bc-1de8-4df0-8755-877953419430",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "7c275873-be77-4c58-bea4-03a2b7decdc5",
        "cursor": {
          "ref": "c708bb54-ac48-4c07-a8fb-01af53948489",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "05a56ea9-adf3-4879-9be0-cd98862c1ad2"
        },
        "item": {
          "id": "7c275873-be77-4c58-bea4-03a2b7decdc5",
          "name": "did_json"
        },
        "response": {
          "id": "23b04af0-8f75-4b41-af54-427763ff1278",
          "status": "OK",
          "code": 200,
          "responseTime": 175,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201d707-b5f9-4d81-b2f6-39d4173c005a",
        "cursor": {
          "ref": "6f17c8f7-c7ff-4267-85e9-d517403e26c6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0df412a8-80a8-428d-a437-170223dad1f0"
        },
        "item": {
          "id": "b201d707-b5f9-4d81-b2f6-39d4173c005a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d408ba6-61b0-49a3-a78f-b4dc8396f4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201d707-b5f9-4d81-b2f6-39d4173c005a",
        "cursor": {
          "ref": "6f17c8f7-c7ff-4267-85e9-d517403e26c6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0df412a8-80a8-428d-a437-170223dad1f0"
        },
        "item": {
          "id": "b201d707-b5f9-4d81-b2f6-39d4173c005a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d408ba6-61b0-49a3-a78f-b4dc8396f4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc51ead1-d539-40ec-a692-f4dfa3aec111",
        "cursor": {
          "ref": "e37e2dd0-fbef-44df-90ef-872f80769a03",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "102b02f5-c62a-4cf9-9024-f58e2a75cc2c"
        },
        "item": {
          "id": "cc51ead1-d539-40ec-a692-f4dfa3aec111",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "af68ac0e-345f-4d1a-b989-643a37acaa1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c399d85a-28e6-4844-8b7f-5ae4b19dac4f",
        "cursor": {
          "ref": "9a878b69-8767-4f0c-ab70-3d5082a32596",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9823c012-1c8a-4a16-8464-27872b999625"
        },
        "item": {
          "id": "c399d85a-28e6-4844-8b7f-5ae4b19dac4f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "75977489-92cf-4a2a-8084-578b328e7e02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c30e06-2bb9-4b1d-a415-07b6fca8a548",
        "cursor": {
          "ref": "1871f19f-e19a-48c3-b2b2-26f6fea156c4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "89197447-0838-4bb7-8c3c-dd6fe743d822"
        },
        "item": {
          "id": "e5c30e06-2bb9-4b1d-a415-07b6fca8a548",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8fcb776a-e0af-4986-8470-8b737bec0c43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e58433-8d15-4c74-812c-5feaa52ad6e1",
        "cursor": {
          "ref": "524b90e2-d1d1-4e0a-8dee-804e6ef1dc47",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b806767-4c27-44ab-b1dd-dd8548173f8d"
        },
        "item": {
          "id": "d2e58433-8d15-4c74-812c-5feaa52ad6e1",
          "name": "identifiers"
        },
        "response": {
          "id": "50a6b727-edf2-4570-bb58-ab6862b7f794",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6940b55-ccaf-4024-b3ae-40699a0811c1",
        "cursor": {
          "ref": "0a9b3bd2-61aa-4012-b83d-37a081f69319",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e4fe1b5f-61f9-4a0c-9253-07efb8b4b856"
        },
        "item": {
          "id": "b6940b55-ccaf-4024-b3ae-40699a0811c1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f2cb6caa-979a-4ac7-8924-e186c193bb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f547ce7f-a90e-46a7-bd41-2865c9055798",
        "cursor": {
          "ref": "b4e4b4ce-8aca-4019-9177-08da83128e5b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "833ca13a-0dce-41c8-b542-806eeb7ae0e3"
        },
        "item": {
          "id": "f547ce7f-a90e-46a7-bd41-2865c9055798",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "501f106a-18fb-48e9-b023-d6370e3a58b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaf2a00-9cb2-4c70-8309-951d98f4c7ee",
        "cursor": {
          "ref": "2c80f26f-8811-485f-afea-3c6dd1cb38a0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "044cb6f1-a266-4b3a-9004-6e6853ceee63"
        },
        "item": {
          "id": "feaf2a00-9cb2-4c70-8309-951d98f4c7ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7fe23d0b-199e-494a-b81c-905cb0ea1534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018366e1-4ea1-40eb-8905-c4ebbf201322",
        "cursor": {
          "ref": "c0f86325-66bc-4f1b-89ce-a6be0bdc7193",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "23bf418c-701b-4e00-9853-6f5f67d3cdac"
        },
        "item": {
          "id": "018366e1-4ea1-40eb-8905-c4ebbf201322",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c4f50ad3-5e48-4b4a-9e78-5884467a0277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40573aef-5626-4249-9ab0-2a8d5b587f93",
        "cursor": {
          "ref": "17d8521b-c832-4d09-9380-f7f59936a85c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "44a7d04a-a3cd-48fe-9c5b-3c8c441ce162"
        },
        "item": {
          "id": "40573aef-5626-4249-9ab0-2a8d5b587f93",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "23c66ae0-161e-402b-911b-b9ffeca5c84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa18c7-dbfb-4721-b0a9-ae8e602f3ee3",
        "cursor": {
          "ref": "13183984-7ab2-4173-b17a-4304b4e05223",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b56051de-0009-45ce-8433-f5814c0e2701"
        },
        "item": {
          "id": "44aa18c7-dbfb-4721-b0a9-ae8e602f3ee3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a5fb380-6cd0-4c27-afb1-c8dc77d8b26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffc7535-5de2-4f0f-b8b7-74b6eebfa267",
        "cursor": {
          "ref": "32a0cccc-98a4-4aa2-a401-b920f10d0f1d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce1207cb-d0e1-48d6-b2df-374bf624b1be"
        },
        "item": {
          "id": "9ffc7535-5de2-4f0f-b8b7-74b6eebfa267",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "32a0186c-5c85-439a-b6f6-8f1d492f4c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a6c28-68be-4e1f-97e0-22e129845f67",
        "cursor": {
          "ref": "04f8c649-d9aa-4b40-b936-d9f8bab504a9",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9dc5fee-9b0a-4626-a687-8911b1abfb2a"
        },
        "item": {
          "id": "298a6c28-68be-4e1f-97e0-22e129845f67",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1615740e-a077-4023-8c2c-db3ecc6a45a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1862bf-0386-45df-a5c7-e7c726ca6b2a",
        "cursor": {
          "ref": "90e223a6-1e40-4463-926f-5b37b01c0fde",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c0aec6a9-fbdf-4369-97dd-34a5e3a47b7a"
        },
        "item": {
          "id": "6a1862bf-0386-45df-a5c7-e7c726ca6b2a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a63558bc-3790-496b-9f0e-f6431ac903cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a147c3b4-9bad-4e14-a501-40b5cbe805a3",
        "cursor": {
          "ref": "1af24039-69f2-4488-b72c-2dff49e1f835",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "80ab67f9-f4d2-40de-b816-3a2899b83b62"
        },
        "item": {
          "id": "a147c3b4-9bad-4e14-a501-40b5cbe805a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "49e5c38d-0f6d-4056-ae3f-ddd224d7b060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b0f03d-fd67-49a3-bbb1-7d447198ade0",
        "cursor": {
          "ref": "7aea286f-a5c3-4e20-a6f4-e2c6e3cddcfb",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "99ec05cc-856c-443a-9cc5-1429bbb23b25"
        },
        "item": {
          "id": "69b0f03d-fd67-49a3-bbb1-7d447198ade0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d61b9fa-6e92-4fac-a30f-8f1e72e5e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9932b9dd-acca-4522-9bfb-225a994a1218",
        "cursor": {
          "ref": "282d8f22-28b1-49a2-b962-19b4940fb8f3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "58f49707-4b0e-49fb-af28-e122f7f747dc"
        },
        "item": {
          "id": "9932b9dd-acca-4522-9bfb-225a994a1218",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "227aa466-f4b6-4c9c-ac9d-2febeb608cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0105056d-5e19-4afb-bf2b-1029f3775f92",
        "cursor": {
          "ref": "f6804bf7-c296-4ebc-a206-b34ed1daf9d1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "42e8ad55-08e4-4ce3-9d39-2cd646156e08"
        },
        "item": {
          "id": "0105056d-5e19-4afb-bf2b-1029f3775f92",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bb10fa5e-fc8f-40ce-80c1-9d8aa867c561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65e5ffc-9a53-409d-bda8-ba762e0df41f",
        "cursor": {
          "ref": "edcb6fe3-fe49-4f82-acf1-c5c5c9f95ebe",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4d8cedb4-2abf-4102-b2d5-5010f512219d"
        },
        "item": {
          "id": "a65e5ffc-9a53-409d-bda8-ba762e0df41f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "36757042-bc0f-4b92-b4cf-2ce02927d041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe3ce67-5d0e-49cc-99f2-bf312d2a638c",
        "cursor": {
          "ref": "b0fa73b8-7219-47ab-8369-ad0052f0dff4",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c6b1a5a-5454-428c-b9c8-aa0a1ff130ab"
        },
        "item": {
          "id": "ffe3ce67-5d0e-49cc-99f2-bf312d2a638c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "26efa928-ba12-47b8-bfc7-e43a16bf7a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7340a0-3484-4b20-86c7-22eed11c393b",
        "cursor": {
          "ref": "87a28a2a-c5ca-45a6-a057-8323c632b974",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3024b1f4-bed8-4ca5-a388-4b4e5cbab9de"
        },
        "item": {
          "id": "ac7340a0-3484-4b20-86c7-22eed11c393b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4b5f0a19-54ba-496d-abe9-f71678a7d439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ddd16d-2fa6-4ff1-87aa-e2b44c5a9048",
        "cursor": {
          "ref": "e12d254d-4ffc-45b1-bf48-6b3e9c10ae96",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1b321e4c-e69a-4bc4-b955-27dcb9e5a142"
        },
        "item": {
          "id": "b3ddd16d-2fa6-4ff1-87aa-e2b44c5a9048",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cc46f4da-dcb0-403c-9a53-61219e8308e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1579a941-b43e-426f-bcb2-001fa564c408",
        "cursor": {
          "ref": "7f8b09f3-cc42-4504-b407-4e1653ecbb92",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "17638930-a51d-4b7a-8f28-696aeb89a3b3"
        },
        "item": {
          "id": "1579a941-b43e-426f-bcb2-001fa564c408",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "66053431-8f69-4df7-aa67-23fb5c7310ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5978f9-e19f-4b16-9d5f-ad3c39d337f5",
        "cursor": {
          "ref": "dafbc349-5e60-4282-a233-7ee182256e9a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e9e9138c-977d-44d5-919f-84655430b7ba"
        },
        "item": {
          "id": "bf5978f9-e19f-4b16-9d5f-ad3c39d337f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f54f4144-10d4-4e28-b2d2-8df3734bebc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202cf1a4-cd46-407c-bbc5-0a769c4b1996",
        "cursor": {
          "ref": "102a9918-b309-4cd4-ab00-0820b6a3ef0c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "655a0171-f52f-4d79-9ce3-a73a863131a7"
        },
        "item": {
          "id": "202cf1a4-cd46-407c-bbc5-0a769c4b1996",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2dca7962-6c83-43d3-ba6b-45dc453879f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6735743-842c-49ba-8b5a-cb1c5f62d0ba",
        "cursor": {
          "ref": "5e3a310c-1881-4ed5-96e5-d017d72e7084",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3b593089-3caf-439e-9533-9ff12e1f30a1"
        },
        "item": {
          "id": "f6735743-842c-49ba-8b5a-cb1c5f62d0ba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0c53b43d-06f5-4df4-838f-cd732e5e9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c8e4a-3a2f-4b96-8465-1a88fa625c7f",
        "cursor": {
          "ref": "e94bde1a-ed50-45f0-93e9-15324c00947e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "436c14f9-7d3a-4f8a-8753-6bfc92d3c2f7"
        },
        "item": {
          "id": "d98c8e4a-3a2f-4b96-8465-1a88fa625c7f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "30dc80ba-facd-4c14-806e-3f135f150e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7045c6-f0d0-4354-a750-790bd3e4ea06",
        "cursor": {
          "ref": "1f010542-e30b-4949-a7c4-d630d013c925",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "12bc956d-72c1-433e-aee0-50f2ed7ab8a2"
        },
        "item": {
          "id": "ab7045c6-f0d0-4354-a750-790bd3e4ea06",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cfb3b482-2569-423d-be2d-3a329f74271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ea4dd-66cc-4e16-a3ec-00d679ea2a10",
        "cursor": {
          "ref": "efeb79e6-da02-4fd1-ae9f-2813176d387b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8fb6a746-9c19-40f6-9358-4761d79c4f30"
        },
        "item": {
          "id": "182ea4dd-66cc-4e16-a3ec-00d679ea2a10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "820c4000-8c38-4688-aba4-6748aa8a632c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097db479-328a-474c-957f-a18ea769df7b",
        "cursor": {
          "ref": "2e2f2f83-1755-4507-a0f1-b4216cf7247b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1578e8ea-714f-4ea7-a94b-9a3777aeadf2"
        },
        "item": {
          "id": "097db479-328a-474c-957f-a18ea769df7b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1a776d29-50c2-4d25-807f-f1405691f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bffe448-3c11-4bbf-a454-c5551c8fb2b5",
        "cursor": {
          "ref": "ac0acd1a-43bd-4357-aa5c-d861464e82c2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cb19a436-fba0-4f6d-b335-39f5ee90f99e"
        },
        "item": {
          "id": "9bffe448-3c11-4bbf-a454-c5551c8fb2b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8eb9033e-b06c-4469-87ef-bfadcc137b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5238a161-692d-473c-93e6-8fa899cd5acf",
        "cursor": {
          "ref": "adfa59fd-6a77-46e8-8c3c-4a3c73b1a0ae",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7ae7bf27-2b24-4945-918c-ac1d6bddd3e5"
        },
        "item": {
          "id": "5238a161-692d-473c-93e6-8fa899cd5acf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d1ca1f15-362d-4d17-a3f9-1f43565074c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b00275-b967-4e0f-8fe0-73530a4f8b8e",
        "cursor": {
          "ref": "634b575a-1c45-4472-b37c-919f6cb024f7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2664202f-3def-4fef-97b9-d12b14831c3a"
        },
        "item": {
          "id": "54b00275-b967-4e0f-8fe0-73530a4f8b8e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "80dcb02c-98f8-4c7b-b273-6b90d2c0ebf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5befb4-0dca-4735-be2d-3c5150a011f3",
        "cursor": {
          "ref": "dcf39455-e11d-4a9a-800c-7700e3cfeab8",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b75c32d2-abe9-40f2-8643-498008781dd7"
        },
        "item": {
          "id": "fe5befb4-0dca-4735-be2d-3c5150a011f3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "29f8aeb2-5c42-4d75-8f8a-602a44e33a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368606d0-9435-423e-85ac-8c30f5665951",
        "cursor": {
          "ref": "f40b5a03-aed9-49b9-b3d2-2bfab705730f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dca0cb7f-5fda-4af9-ba7f-200ea0bd1b22"
        },
        "item": {
          "id": "368606d0-9435-423e-85ac-8c30f5665951",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7e89d45e-c1fa-44cc-a773-497b5a38549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f8f362-c52a-47cf-bc35-7c5165c6719d",
        "cursor": {
          "ref": "961fa570-33f4-468e-9775-48439e98e4fc",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d12cfd4b-9402-4e15-9dea-fe3eb6839d74"
        },
        "item": {
          "id": "d7f8f362-c52a-47cf-bc35-7c5165c6719d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5a67c4d7-1671-4629-b8b7-6b365b025061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f99dd7c-71ca-40fd-a445-6cc6efaeb3f8",
        "cursor": {
          "ref": "d860c8fe-cdbe-4eed-8b53-f33a87427f2a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f6d759a9-35d7-48c4-8c9a-1ba5d0d49981"
        },
        "item": {
          "id": "5f99dd7c-71ca-40fd-a445-6cc6efaeb3f8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "14e7139a-5115-4da4-9e8c-786a4fe8c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a714f636-9624-412d-b736-ea504b593693",
        "cursor": {
          "ref": "0dc5f193-9abc-41b1-8f71-e934d6ee28bb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c83fddfd-9016-44d4-b781-43153405419b"
        },
        "item": {
          "id": "a714f636-9624-412d-b736-ea504b593693",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0e3f40f8-1b31-4a89-b547-aaa1278789f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e0086b-0adf-4452-9d1d-ba76f23bda71",
        "cursor": {
          "ref": "36e8b28b-1325-494e-802b-04cb47c51615",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09f070ef-694a-478d-8d06-c05cf8fdf21f"
        },
        "item": {
          "id": "79e0086b-0adf-4452-9d1d-ba76f23bda71",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "82d19552-ca55-420d-859c-6b64beb27a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e5180c-92fd-4f50-9c2b-c9062f951c58",
        "cursor": {
          "ref": "239e9276-8e8e-4d51-8df3-2bcae8c2d50e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "40ee3498-8b96-46a0-a9ea-78207f6bc5a0"
        },
        "item": {
          "id": "c0e5180c-92fd-4f50-9c2b-c9062f951c58",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "345c6fce-6f09-4525-bc5b-49a98d1060a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627e780-227a-4265-91a4-68bf243559c2",
        "cursor": {
          "ref": "713bd0b5-af6f-4331-94a9-80b4a5ba7fcd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "39f5a78f-9eae-4542-b1e5-9a63843cb05a"
        },
        "item": {
          "id": "b627e780-227a-4265-91a4-68bf243559c2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d7bffd5a-7887-4ff4-a717-dd876c32e4bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00000db9-8a15-4ff1-a80b-bdf1bd259efc",
        "cursor": {
          "ref": "71f0ad65-7506-4490-91e3-7b2fb0b9387e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "60b8070f-4970-4be5-884f-1a5f37d1d915"
        },
        "item": {
          "id": "00000db9-8a15-4ff1-a80b-bdf1bd259efc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d062c3db-e46c-49a8-9e42-bf7d6895cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647a1bf3-4aa4-4736-b4f6-68dca574ea07",
        "cursor": {
          "ref": "4c90910c-96b4-4675-a14b-9bebfd4352d5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6a841a80-b97a-4a82-af5c-76bf20a47a1b"
        },
        "item": {
          "id": "647a1bf3-4aa4-4736-b4f6-68dca574ea07",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d8e4386d-4191-4b4e-adef-5329218eb89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f00a80-7d03-458c-a351-59f2d0a1d75e",
        "cursor": {
          "ref": "ff319748-42a6-4a4e-9ac0-e3f263bafdba",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9e9c94ce-0816-4281-905e-51b530d0b1f3"
        },
        "item": {
          "id": "59f00a80-7d03-458c-a351-59f2d0a1d75e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1a3ef25b-d1ee-4a17-b580-7e21e41b6e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afffd293-c4c7-4a21-aa4b-3e9fa3e744fa",
        "cursor": {
          "ref": "0286f08a-c49a-4fbf-b875-b2467153d7c0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "60dd957d-1c4b-48e3-b456-87de9e9ef1bf"
        },
        "item": {
          "id": "afffd293-c4c7-4a21-aa4b-3e9fa3e744fa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6b720c59-6e98-4fd7-a9bf-e3a3232a2936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608c5ee0-3e34-4b16-a47a-bc5fd1d39942",
        "cursor": {
          "ref": "a6b75596-58c6-4e30-bc2c-83944ac59b2f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6f8cbb08-5bc5-4b3c-aaac-ac2b77fa5033"
        },
        "item": {
          "id": "608c5ee0-3e34-4b16-a47a-bc5fd1d39942",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88eca925-5f3a-436d-8515-e529ba1bb95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a1e774-20b5-473d-9d8d-2330546b22e7",
        "cursor": {
          "ref": "ede31618-7a4d-4e6c-98e8-b9bbd6988134",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4c508af6-df77-4c59-8b45-454f3d8b3340"
        },
        "item": {
          "id": "16a1e774-20b5-473d-9d8d-2330546b22e7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e2f9c43b-20f5-4fa8-aa96-ce0a85b58161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2db4e9-5706-4bd1-9365-046187e3a8d6",
        "cursor": {
          "ref": "cdc6ef67-1f37-442b-a9d8-65f6b173b77f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "712c31ce-f283-48b4-8691-ee90b54dbb19"
        },
        "item": {
          "id": "8d2db4e9-5706-4bd1-9365-046187e3a8d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5f586c15-2a2f-4134-9523-646a7e27fb4b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eacc15-053c-4c0a-86dd-bcbe9297b710",
        "cursor": {
          "ref": "3a66e6e0-6270-4cee-93ee-13e01d8862ba",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1026bb67-ddf1-46e0-99f5-9d7f608730de"
        },
        "item": {
          "id": "35eacc15-053c-4c0a-86dd-bcbe9297b710",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5d9d218c-b8ce-4c83-8a5f-5a9d4dd7d420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce0e651-7385-489a-8c93-d98d20a810ea",
        "cursor": {
          "ref": "0b71e222-580b-468a-bd8a-5c96dc55c41e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8bde78f2-8e9a-4660-82be-14554c97c3a1"
        },
        "item": {
          "id": "fce0e651-7385-489a-8c93-d98d20a810ea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "959322e7-3826-4b59-b512-047f661ad45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae85965-def9-4f96-9c7e-457556ff7e4d",
        "cursor": {
          "ref": "d71b3d27-b3ee-4e8f-aa43-c231383d4d5c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "64d44320-e8a3-4f97-b853-2e2a5eebe5ab"
        },
        "item": {
          "id": "9ae85965-def9-4f96-9c7e-457556ff7e4d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c426fa1-6bf9-4ee6-91f0-9ed6e2b633c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db7b4a-4857-4ec9-9ad8-4237e6292336",
        "cursor": {
          "ref": "5135566e-e390-46fe-8d08-ae0895c1c646",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d6560f9-92db-4eb5-85f0-c0805c1b1142"
        },
        "item": {
          "id": "e2db7b4a-4857-4ec9-9ad8-4237e6292336",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bff6851c-c418-4a1f-a1f7-a452ffeac4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf7bd61-4f87-4494-b9ce-d38a760954c2",
        "cursor": {
          "ref": "4ecf140d-c978-425d-a034-d47dfc9fd892",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cf2db1aa-5e9a-4619-83da-28cb71d060c4"
        },
        "item": {
          "id": "6bf7bd61-4f87-4494-b9ce-d38a760954c2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5374f40a-58a0-449d-a41a-a54eabccb90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d9874c-d9b0-4d4d-8cbc-6e1eaeab4cea",
        "cursor": {
          "ref": "36cff4b2-e092-4eba-bae4-c963ce3508d3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ccd5c2ec-833d-44e4-8779-a66868d9c921"
        },
        "item": {
          "id": "e6d9874c-d9b0-4d4d-8cbc-6e1eaeab4cea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1afc50cc-b6b1-4778-820a-a8b3fa67aff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cd54d8-cdb3-4076-bc52-52b3597e7716",
        "cursor": {
          "ref": "e2e3f22b-0508-4c0f-924b-97cb660f1cac",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "556c3574-5d14-40a1-9e05-1536081f8c24"
        },
        "item": {
          "id": "07cd54d8-cdb3-4076-bc52-52b3597e7716",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "685e3ec9-386b-4593-bd01-705017edddc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea4db0b-8fc7-4b1f-8e60-1119f8307cb4",
        "cursor": {
          "ref": "1a32a597-a2a6-45cc-9bbb-01f2fb668614",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "37a6c3f9-9167-41c0-a04d-fef6f14aae0b"
        },
        "item": {
          "id": "cea4db0b-8fc7-4b1f-8e60-1119f8307cb4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cbff455c-c97a-4d27-8960-6b2a8f2fe433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b068bcdd-4586-4c66-a9cc-ccf20b4ec913",
        "cursor": {
          "ref": "cca9cf4b-e547-41bd-a0db-657a34610983",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "118a53ce-24e6-4400-884a-cceca5e7e523"
        },
        "item": {
          "id": "b068bcdd-4586-4c66-a9cc-ccf20b4ec913",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da37d9a9-d8b0-41ac-aa44-fd72132547b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2503b03d-426d-4ca0-83fa-e48c6a6dde2b",
        "cursor": {
          "ref": "1a20bc7e-9b63-4583-92e0-8ad2c7309e20",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f97c64fc-ba54-4bde-997b-1342e77ac4f6"
        },
        "item": {
          "id": "2503b03d-426d-4ca0-83fa-e48c6a6dde2b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "13a9b4cc-891a-4905-8980-910d8a4da524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b1846-81ce-479c-9b06-e17afb133648",
        "cursor": {
          "ref": "5ce6873b-b7da-4cf6-87d0-67cbb3740737",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4a6e5cf2-0fa1-4874-b587-a4246a5d69ba"
        },
        "item": {
          "id": "1e3b1846-81ce-479c-9b06-e17afb133648",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "badd649f-cb54-4ff1-89d2-ec8fedb208c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2743b4-b8c9-4a0f-a7e1-db59923bcef7",
        "cursor": {
          "ref": "eb7e5ca0-b83f-469a-a3ca-2dcdf10daad8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "60d5bed9-9039-40e3-82b4-fa9d42d6cc6d"
        },
        "item": {
          "id": "ab2743b4-b8c9-4a0f-a7e1-db59923bcef7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "898dd292-e9b3-4228-a172-c9311a5af912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7b1fd-12b3-487b-8eea-67d20a970695",
        "cursor": {
          "ref": "9bedd6c9-af79-4ee4-a59a-a41efa482858",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5238c56b-c19c-4b32-9b08-0e8efda061c9"
        },
        "item": {
          "id": "f5b7b1fd-12b3-487b-8eea-67d20a970695",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cf53982b-681f-4b3a-bc80-c9e37d0613c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079bc0cb-7dd4-4ad9-8c6a-1c4ece0cffb8",
        "cursor": {
          "ref": "ed8f1ddd-7763-42f3-b50d-3ab4a1be4d4d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e58b6d08-f549-4d40-8d50-83882620bfda"
        },
        "item": {
          "id": "079bc0cb-7dd4-4ad9-8c6a-1c4ece0cffb8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72f125e5-bc24-4cb0-ab62-947722079538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a42b048-8754-4cc9-b299-993b5a5c586b",
        "cursor": {
          "ref": "18a55606-e5dc-446f-b27b-0dbf7e1ac450",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3a97f046-379d-42f8-b7f7-f23d967719da"
        },
        "item": {
          "id": "9a42b048-8754-4cc9-b299-993b5a5c586b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9bdce705-92fb-4b0e-94e8-79f0bd9a1b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad5718-eb86-49dc-a584-4931586b8489",
        "cursor": {
          "ref": "a26cc915-14a4-49bb-9ed2-ba28df36b19b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f27a6bdf-bd13-4d45-a045-80af6431b9d3"
        },
        "item": {
          "id": "57ad5718-eb86-49dc-a584-4931586b8489",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4e73024e-2e61-4b7b-8623-f53d6dc095aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a04cb5-cb8c-457d-9a9a-0c20558f3c6e",
        "cursor": {
          "ref": "ea7880dd-bbaa-4c6d-9a31-e999dcffd37d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "86d37def-e393-419d-a560-149764161233"
        },
        "item": {
          "id": "89a04cb5-cb8c-457d-9a9a-0c20558f3c6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c7289be7-0379-4400-9026-9e1d6d44a95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b622507a-b5d9-4565-9ab3-16896ea47dcc",
        "cursor": {
          "ref": "78f6dc0e-3025-49c4-8562-b0e5f54f1ea7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "061b9d94-d4d3-4875-be50-c5aaaa30d95a"
        },
        "item": {
          "id": "b622507a-b5d9-4565-9ab3-16896ea47dcc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b61cff3b-4adb-47d2-8a43-f35dcad95194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efc9954-59be-41a4-86cb-490189d8a332",
        "cursor": {
          "ref": "e7ec2575-b2ae-4792-9192-1418e71d4c1c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7a7bd617-4db5-4a20-af84-a61b12fdb2e6"
        },
        "item": {
          "id": "0efc9954-59be-41a4-86cb-490189d8a332",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "17cade17-d764-4320-885c-471d6d15aca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0748be-a468-4e31-b480-92e5409dc8c1",
        "cursor": {
          "ref": "5204ad26-85f1-494c-8269-e53ef25c1594",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "311d5c16-d546-4692-a726-54d446cdfa42"
        },
        "item": {
          "id": "4a0748be-a468-4e31-b480-92e5409dc8c1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a613613f-455e-41b6-934b-ff7e6537fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c75620a-2e90-47b3-94a5-eee3b383ada1",
        "cursor": {
          "ref": "bc67c42f-6c18-42c4-ae2b-fca289fa3665",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "83f5de99-b5f8-411a-ac94-4515ad4af647"
        },
        "item": {
          "id": "3c75620a-2e90-47b3-94a5-eee3b383ada1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "96a91cbf-ff9f-40e6-bc52-f495fcdc9fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33271770-a9eb-4e52-8d07-3903f238b486",
        "cursor": {
          "ref": "532538a5-0766-4d75-b573-b4fc6b26a621",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8c7d1e47-cd11-460f-a81d-066aac235ce9"
        },
        "item": {
          "id": "33271770-a9eb-4e52-8d07-3903f238b486",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ce255f06-48db-461e-ba02-5513b9720f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63814cbc-8736-4a7c-a074-8c4e083d3f22",
        "cursor": {
          "ref": "3b713134-d62a-468e-9fd0-e27ce18117d9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6e090318-c545-4574-9e41-c1bdf01b82f0"
        },
        "item": {
          "id": "63814cbc-8736-4a7c-a074-8c4e083d3f22",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7ee1d7c-6216-4095-bce3-02707dae0300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd467d9-59f1-4a7e-a129-1e4daff87b37",
        "cursor": {
          "ref": "66d0256b-a7f4-4188-a9d1-3f6d1af62cb7",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "562f641b-d81c-4ce7-ac79-1e2dffdfb915"
        },
        "item": {
          "id": "7cd467d9-59f1-4a7e-a129-1e4daff87b37",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "189cb230-566b-4b33-8893-84a6294fa645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2517f443-4c1e-436c-9d8c-855388e84a77",
        "cursor": {
          "ref": "4ad55a34-1ef6-4637-9b7a-501bc205ccfa",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "263a0317-5094-41c8-a08b-55e7102a5b5c"
        },
        "item": {
          "id": "2517f443-4c1e-436c-9d8c-855388e84a77",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "21eb7540-f209-4c64-8c88-d953b45c2989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4592754-f55b-4108-8017-08b39ae1b5d4",
        "cursor": {
          "ref": "424d330e-bff8-42b6-8e1d-1d832e01472d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e5b2d9cf-e1b9-438d-8da3-a717b9325351"
        },
        "item": {
          "id": "c4592754-f55b-4108-8017-08b39ae1b5d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "70a64ff4-b8ac-4c5f-b738-cc63fbc73a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbcbbc4-387a-4910-9297-f634efad845c",
        "cursor": {
          "ref": "bd6470a1-c294-4815-8d8f-6cfe6c83bb01",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b0127371-1df4-4dfa-ace6-0bad9ec10d05"
        },
        "item": {
          "id": "bdbcbbc4-387a-4910-9297-f634efad845c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4d0c28da-de3e-4e57-8e47-0af7def9db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a692fac8-bad4-4a06-8868-00fc2e14266f",
        "cursor": {
          "ref": "f6a7ef3c-3c40-4414-98ee-af345176152c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b2bff476-9030-423f-a1a4-d5a5a4750781"
        },
        "item": {
          "id": "a692fac8-bad4-4a06-8868-00fc2e14266f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "956c3ee9-c82d-4711-b963-cfb4ef38f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d6be5-a39a-4b5a-8876-02a97f5e47ec",
        "cursor": {
          "ref": "3b54943d-3726-4438-9167-eafb61ccb95e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8d8f9e97-9dc0-4bbb-bafe-3aa4baf08e24"
        },
        "item": {
          "id": "f24d6be5-a39a-4b5a-8876-02a97f5e47ec",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e30337c7-8c23-4e34-ae4a-9048c64d3f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526a1e42-15b7-4f12-840b-26d5866989a3",
        "cursor": {
          "ref": "a3562fa1-cf96-4ca1-bc7d-e14f9c5871bc",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "62084c9e-2c66-4d3e-9d45-3d435087b52e"
        },
        "item": {
          "id": "526a1e42-15b7-4f12-840b-26d5866989a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "55f5dbc8-e532-4d21-b503-d9d45be286a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d92333-c787-4bd0-9faf-a457340d54e3",
        "cursor": {
          "ref": "3f7fde55-580f-4667-a045-f5a31baedf97",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2f5cfd2d-5a3c-4202-a7f1-4b4e64db687f"
        },
        "item": {
          "id": "f7d92333-c787-4bd0-9faf-a457340d54e3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "29a80ea8-57ad-4af3-95e6-41116cb1445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838e7e17-3264-46d9-b0fd-fea8c7bcb4ab",
        "cursor": {
          "ref": "013b04d9-2d43-432e-990d-75143e8de0e7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "edd288ac-c44d-48c1-b80f-0f92a9f7fc46"
        },
        "item": {
          "id": "838e7e17-3264-46d9-b0fd-fea8c7bcb4ab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "52acfa13-084d-4ea2-b86e-10cbd2d8b76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afac80a-a7a0-41e8-b3ef-9907202985d5",
        "cursor": {
          "ref": "cfd9cc8d-9488-46d9-8603-539cab80f6a9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c8d46ee7-759e-4abf-baf5-27d1f3426b87"
        },
        "item": {
          "id": "4afac80a-a7a0-41e8-b3ef-9907202985d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "33bffc1a-c71a-4ff2-9fc3-7d327dd337b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6120b515-7a0b-42f6-9e50-5e9cfc0897d3",
        "cursor": {
          "ref": "2d851aa8-e718-45c4-ac3a-8360f47c4897",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ac08d74d-8432-4421-85e7-828923d8d28d"
        },
        "item": {
          "id": "6120b515-7a0b-42f6-9e50-5e9cfc0897d3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea14d239-2540-4650-b608-bb82c58f868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5a062e-e227-46cd-95e2-01e3dc1326aa",
        "cursor": {
          "ref": "b9f63323-1058-48ca-835e-1ed84d889808",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2f964d21-4d9d-4298-9f2c-1d027e1a2723"
        },
        "item": {
          "id": "be5a062e-e227-46cd-95e2-01e3dc1326aa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a8840863-434e-46b4-a7e4-999f6eee6c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302aa51e-3262-4913-9080-5a6c0db7a4c2",
        "cursor": {
          "ref": "4fc01f59-57c1-46c4-8726-782eb0e53cba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "30756bf9-89ac-4852-9ea6-28d4cef84964"
        },
        "item": {
          "id": "302aa51e-3262-4913-9080-5a6c0db7a4c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d72b8392-8280-4059-a886-ae3c247db302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3aab3-6264-457b-98f6-0ea03182604f",
        "cursor": {
          "ref": "5386b667-53fe-4524-b59e-91e9bef41135",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "45d52a2f-a053-4f56-9483-e5a717cb42f7"
        },
        "item": {
          "id": "2ff3aab3-6264-457b-98f6-0ea03182604f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c3d10012-ddee-44e0-90e6-2ed7f05482f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f16c95-3e16-40f0-ae0b-d80a2c3c5ffd",
        "cursor": {
          "ref": "fa35d13b-caa6-4efd-8cc4-f954b3b85fbf",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "32e47e5b-2155-46bb-86cc-49959c1d5b96"
        },
        "item": {
          "id": "f0f16c95-3e16-40f0-ae0b-d80a2c3c5ffd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a5c1b23-40f4-4d50-be13-556ee7a4c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea98c13b-9f9f-4e7f-8e31-606479b7f0a8",
        "cursor": {
          "ref": "67ccffab-43d5-44e1-82e4-7d430cdc2493",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c19acada-e6e6-442a-872a-ccb518b5b7c2"
        },
        "item": {
          "id": "ea98c13b-9f9f-4e7f-8e31-606479b7f0a8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "849d7a3a-a54f-4d26-babe-01d8134b6029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c29f5d-e889-40c2-b871-f5bcefb259ea",
        "cursor": {
          "ref": "bc8c4273-0345-4b6b-8df4-03fb18ac2f90",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2ef4f498-f663-4dde-b3a2-af45326fd661"
        },
        "item": {
          "id": "92c29f5d-e889-40c2-b871-f5bcefb259ea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "494cf5d5-145c-4571-84a0-4d65e5f15651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b047c4-e793-480f-9412-e6566daa58df",
        "cursor": {
          "ref": "425d6462-a8cd-49a7-a7d2-52055240bf2f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "09e981ae-7b9a-4cc6-9249-7f617997be78"
        },
        "item": {
          "id": "10b047c4-e793-480f-9412-e6566daa58df",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "016f00c8-b3ef-40d1-9529-5f51ec6704e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7562f1-3c9d-4c46-9944-fc1c6b3fe7ed",
        "cursor": {
          "ref": "9adb6971-6155-4deb-a649-4c3cf77669b8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "91eb5a33-13cc-4e60-a43b-4c3874917793"
        },
        "item": {
          "id": "bd7562f1-3c9d-4c46-9944-fc1c6b3fe7ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cbffee8b-8210-4065-806b-edbfa9beb60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb05710a-16e9-4255-99ac-808d1a221639",
        "cursor": {
          "ref": "b6a4afc6-5887-453f-900b-ec47cd7d4e97",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b9eda20c-2a29-4af7-8ac1-fe0b72b0b15f"
        },
        "item": {
          "id": "bb05710a-16e9-4255-99ac-808d1a221639",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b8bc14d6-06e8-4b2f-95c4-b11783683778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ad64e4-9a7f-4dea-abbd-4d9c84112e38",
        "cursor": {
          "ref": "acf58a27-e293-493d-acb9-4b38dea691d8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f4eea3e5-c897-4821-8ef7-ce4b3bfea70c"
        },
        "item": {
          "id": "f3ad64e4-9a7f-4dea-abbd-4d9c84112e38",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5439c7c5-d733-47aa-b623-4bbfd0b0b6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427d57db-1c56-4c20-b1af-3ecf33492cd6",
        "cursor": {
          "ref": "670e5313-2670-4cb6-9f5f-6029e1f6faac",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a26ff23c-c4ec-43ac-9e80-3808a8b86294"
        },
        "item": {
          "id": "427d57db-1c56-4c20-b1af-3ecf33492cd6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e7f91fbb-d74b-4f94-a1dc-b44a8776faf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235cb3c9-8b50-4285-b8de-22103dfe9625",
        "cursor": {
          "ref": "9abf44e9-dec9-4d0b-a087-036684939dca",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8cf522ce-2823-4375-a3f5-f4ac1b6e4ffe"
        },
        "item": {
          "id": "235cb3c9-8b50-4285-b8de-22103dfe9625",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9da19afc-b246-4faa-ac7e-84b99c4aaa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d77fd5e-82e4-49ad-b436-2bc66b295955",
        "cursor": {
          "ref": "af730112-3967-43f6-86d5-ad6adadfe8a1",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d153e170-4fd9-4c00-bb0e-ca7c0f5c608e"
        },
        "item": {
          "id": "5d77fd5e-82e4-49ad-b436-2bc66b295955",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb53eb91-5623-4111-8f3e-d21c5e2b9341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d2a90-0d54-4f03-a5f6-b87a761b28c6",
        "cursor": {
          "ref": "4ef51820-a0fc-4da7-a6f4-96c818c5be00",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ef5e4d7a-416f-4e4c-ad44-1a1a140822e5"
        },
        "item": {
          "id": "af4d2a90-0d54-4f03-a5f6-b87a761b28c6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0c826a41-555c-4feb-957c-3c0b41c44229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e70dcb7-7aa1-4938-b0ae-8d395a2394c3",
        "cursor": {
          "ref": "e90770d6-7654-41cb-989e-3576374fda2d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "56686ad0-9d8a-481a-93bb-93601a93522b"
        },
        "item": {
          "id": "6e70dcb7-7aa1-4938-b0ae-8d395a2394c3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b77f90a6-0254-49dc-b88e-77b9c3e81e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84de05b1-026a-4e0c-b6d9-42034b75c5f8",
        "cursor": {
          "ref": "9a3dfb29-42dd-4cb2-bcc4-0fbf62b869c4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "830d97f4-8211-4a8a-9d61-c7aa78e14756"
        },
        "item": {
          "id": "84de05b1-026a-4e0c-b6d9-42034b75c5f8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "86283409-6fc8-4c4a-a177-9a7d4ff76aa4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10303dd-5422-4d88-b8a4-9be90b86f28d",
        "cursor": {
          "ref": "d8b254f7-1958-4b61-9428-f2130e4bc300",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "796a4431-c3ff-460a-9f40-9695b075c896"
        },
        "item": {
          "id": "d10303dd-5422-4d88-b8a4-9be90b86f28d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ced7fb54-556d-4ece-a1ea-85c2733940c6",
          "status": "Created",
          "code": 201,
          "responseTime": 65,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3f4454-120b-4c32-a433-ae768d24b4f6",
        "cursor": {
          "ref": "32fa363c-0881-4e43-b62f-d168bfacc427",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6cd78184-e17d-4923-a76e-7f2e2da74d32"
        },
        "item": {
          "id": "ad3f4454-120b-4c32-a433-ae768d24b4f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0f2674c3-62f5-4bb8-be93-281ed1ff596d",
          "status": "Created",
          "code": 201,
          "responseTime": 167,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3631d635-31d1-4d09-9b86-3157f28c7bb2",
        "cursor": {
          "ref": "ec89770d-c7a4-4360-b849-ebd7fec8b588",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "facabf7b-602b-4c1a-9f1a-a4530ad960d4"
        },
        "item": {
          "id": "3631d635-31d1-4d09-9b86-3157f28c7bb2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a13f4217-0386-4919-9752-db86cadc92d8",
          "status": "Created",
          "code": 201,
          "responseTime": 215,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "713210f2-b6ae-4b46-aba0-1806c4623451",
        "cursor": {
          "ref": "26e5a961-cb4c-457d-9239-42f54f33854c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d0b4304b-c587-48f9-9903-50a5be2a5662"
        },
        "item": {
          "id": "713210f2-b6ae-4b46-aba0-1806c4623451",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "71b31541-4609-4cbd-93eb-63055e964983",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1698ff01-da14-440a-bf0d-58c89cd80a8d",
        "cursor": {
          "ref": "9c1866b6-2ec2-4ace-83de-6f12a9cb4497",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1ebd813-aea7-45bb-952f-febd39864fb4"
        },
        "item": {
          "id": "1698ff01-da14-440a-bf0d-58c89cd80a8d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dce57bf9-c5f2-46e6-b63c-6d9a322304fb",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff505e-e7cc-41ce-8d0d-b85396d37dbc",
        "cursor": {
          "ref": "78082fea-9a0d-421b-9753-24b2d209bdce",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0f43dba1-d9cf-42b7-b7de-8c64763781cd"
        },
        "item": {
          "id": "37ff505e-e7cc-41ce-8d0d-b85396d37dbc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ec2900a0-15d2-4ca7-ac0f-06c02c053111",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ede143c-1e7a-4833-abf9-060b715f67a8",
        "cursor": {
          "ref": "d98d6a59-7973-4912-b86d-d83fdca7570b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b04fe775-bf51-4291-be08-0d0c6ef85225"
        },
        "item": {
          "id": "7ede143c-1e7a-4833-abf9-060b715f67a8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f870d219-cd39-41b6-bc7f-1cc2bc5457c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198a04fa-c80b-481d-9a8c-d96298b977e0",
        "cursor": {
          "ref": "5a6e6f9f-392b-433a-9e54-2a95df500ef1",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "213908e3-23f9-46db-81f6-b894bbf2a4d0"
        },
        "item": {
          "id": "198a04fa-c80b-481d-9a8c-d96298b977e0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "77cd80f4-f8ba-4df8-b36f-8fceb04aba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da9aebc-36e1-4648-a681-fd594dbc46cf",
        "cursor": {
          "ref": "6ea68c7a-d64b-45d3-996a-7bc0c0e71b39",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4f9c18b2-dece-44ce-8838-c42db6aa50b2"
        },
        "item": {
          "id": "2da9aebc-36e1-4648-a681-fd594dbc46cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7040ed82-cfd3-45ce-bc17-c52b493e7cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814c893-6d93-4989-9a4e-577d575aebad",
        "cursor": {
          "ref": "f8bdbcd4-1a25-4221-b47d-002b9dbde370",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c035693d-0e16-4e4a-8427-93902789dc30"
        },
        "item": {
          "id": "a814c893-6d93-4989-9a4e-577d575aebad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87c7d354-ebf0-44eb-b119-d28169963c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf4ba01-b0f5-475d-a072-b611b0b83433",
        "cursor": {
          "ref": "e1a7879e-f3a3-45d3-9f16-e3596d8a0715",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5150f238-e9d3-4615-8dbe-c3549696eb91"
        },
        "item": {
          "id": "cbf4ba01-b0f5-475d-a072-b611b0b83433",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1e7b30cd-512e-43b8-bb7b-1d60243051e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad206588-c869-4572-8a55-dd6aa5f981a0",
        "cursor": {
          "ref": "e8bef869-b056-4265-b48d-4a2b77ebbb58",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "09cfff94-0202-4f58-a7ec-d703da634749"
        },
        "item": {
          "id": "ad206588-c869-4572-8a55-dd6aa5f981a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7906b007-039c-40f5-89bc-bdbf7e0f510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d68b9-8088-4f28-811f-b28f91c8851a",
        "cursor": {
          "ref": "d6e2617c-9d9b-4abe-912e-74d42fd084fb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fa64f8dc-504e-420f-a6f3-5602d489d9ba"
        },
        "item": {
          "id": "088d68b9-8088-4f28-811f-b28f91c8851a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3676ea98-3644-4821-a960-367eda0ab45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4a7183-d4bd-4deb-8c94-e1cacce42ce3",
        "cursor": {
          "ref": "c942658b-0146-4ea7-8cad-5ff7b7f44048",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5124c2a-f1f7-4fc6-9dc0-a9b3ef55874f"
        },
        "item": {
          "id": "2f4a7183-d4bd-4deb-8c94-e1cacce42ce3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "287c5ed2-7130-45d4-b2a7-27d6cb3c37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a419820-845d-4b46-9039-1d36b9152b9d",
        "cursor": {
          "ref": "4d6a1c58-dd09-4a92-a077-47d1c830b556",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a9144bb1-70ab-4685-b0ca-ff01980428d1"
        },
        "item": {
          "id": "9a419820-845d-4b46-9039-1d36b9152b9d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a3905a5-3a0f-4e16-a983-8c2f44095476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d4a5b3-c08e-4816-934d-95cd788224b1",
        "cursor": {
          "ref": "b6439888-802b-4ca6-ad48-d0297c29a685",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ebdfb254-7e8f-44d8-9b75-b7da1d921b63"
        },
        "item": {
          "id": "52d4a5b3-c08e-4816-934d-95cd788224b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04e90b39-5072-457e-9446-d524cbbc1e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c58b1-3e6f-4f7f-9d1c-1438a9e1d69e",
        "cursor": {
          "ref": "a687516e-7dbc-4c4a-8878-9d6d1462057d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e56d0afe-e63d-45ff-a142-da51eeffc4cd"
        },
        "item": {
          "id": "d33c58b1-3e6f-4f7f-9d1c-1438a9e1d69e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "59c55c95-4557-4a75-91ef-aa4ea9707e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dc85a5-1a0a-4e23-9114-d9a659efe3a9",
        "cursor": {
          "ref": "f84cc2d9-0bcb-4f73-98fa-e36e7c46c691",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ac760066-c04a-452d-b12e-e4eb54fa7975"
        },
        "item": {
          "id": "e8dc85a5-1a0a-4e23-9114-d9a659efe3a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f8e27d7-2b67-4b6e-84e0-f49ca65dfac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ef95ec-3051-4258-92d8-70726188eeb4",
        "cursor": {
          "ref": "35dcb88b-a6f2-4146-aad9-e3dfbd58570c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8ba04b2-7775-42b6-8454-99efdc50ecae"
        },
        "item": {
          "id": "93ef95ec-3051-4258-92d8-70726188eeb4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6fc08620-84d3-40e4-9cf9-c477fb5cd203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db27a2d-000f-4e12-9559-c217dffd33dc",
        "cursor": {
          "ref": "e65f8e81-9405-44db-a543-f73a305ab69c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9912babe-597a-41ee-a516-0acb15496838"
        },
        "item": {
          "id": "2db27a2d-000f-4e12-9559-c217dffd33dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "667cd829-6bd0-4434-92fd-5bb11f07284f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4954cc-1404-4634-a214-e95f9386e3bc",
        "cursor": {
          "ref": "8ed9059a-26ca-4e78-a038-7cb13e66099c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "520808f1-0715-4d65-9736-b7284a5935dd"
        },
        "item": {
          "id": "3b4954cc-1404-4634-a214-e95f9386e3bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a9438372-4e64-4886-a0b8-247f01dc4318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053aee0e-cbcf-4fc9-a379-3a969465024c",
        "cursor": {
          "ref": "8b855f46-a7a4-461f-b36d-d02445245791",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31788180-5ae1-4b56-9f48-3d27e30e0988"
        },
        "item": {
          "id": "053aee0e-cbcf-4fc9-a379-3a969465024c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c78ce23a-b9ff-49b9-a8c1-67ff7b0f8cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73724b06-0b77-4113-a5a1-7ea4e12b95d2",
        "cursor": {
          "ref": "32e1f649-9353-4577-8d7f-59a04bd3932f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dce2b29e-e823-4c33-a975-3dd35a24a412"
        },
        "item": {
          "id": "73724b06-0b77-4113-a5a1-7ea4e12b95d2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b14c02d3-c6d5-4900-9522-257254928f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca3faf6-a2ce-47c2-8f94-634706e67a9c",
        "cursor": {
          "ref": "8ed0c1d8-e450-49fe-8884-82703b00071a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6260e22c-0afe-41b4-a915-b97a306fea2d"
        },
        "item": {
          "id": "1ca3faf6-a2ce-47c2-8f94-634706e67a9c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b0cc8d1-759d-43f5-97bf-60dd93c2b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e625167e-79fa-41ea-8670-445c81ce8b1f",
        "cursor": {
          "ref": "c7abe038-ccee-47bf-b4b6-69bac48512f7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "55f88b6b-d29f-43ea-9f21-80eae7319603"
        },
        "item": {
          "id": "e625167e-79fa-41ea-8670-445c81ce8b1f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e7fc4e2-66c7-4cc5-8006-4b353274d4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcdfecc-9236-4e26-9816-b84b0e53f441",
        "cursor": {
          "ref": "f13cbed8-9c44-425a-b860-67e418d5e61f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "da83374d-e654-4f6c-92c1-6efba8813d20"
        },
        "item": {
          "id": "bdcdfecc-9236-4e26-9816-b84b0e53f441",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "21d75914-7d1e-45b1-95a9-d727c86f6044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ec6d2-fc65-439a-bf3a-9bf120413e87",
        "cursor": {
          "ref": "fd0b5c52-ab75-43f2-a54d-9720b4f6e688",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e3a6c09f-384e-4a11-b187-2c2eb26a638e"
        },
        "item": {
          "id": "9d7ec6d2-fc65-439a-bf3a-9bf120413e87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e1b03d00-7114-41be-9611-7ab7062a7e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026bb2b6-7b93-4ede-9d1f-3b03804b38b1",
        "cursor": {
          "ref": "17dd55d4-5a22-412e-97d3-5fcc092b72f1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2926dd3c-0d61-46e7-9789-6a24b765505d"
        },
        "item": {
          "id": "026bb2b6-7b93-4ede-9d1f-3b03804b38b1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ee452f8-1ba3-40d6-adc1-74f4ec55f6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653aba0e-1704-4951-8adc-3eb4b88fa940",
        "cursor": {
          "ref": "ba9c32c0-894e-428d-8bf4-9413e8d42d36",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73833e76-ff2c-4751-967e-3586a1a0ecd8"
        },
        "item": {
          "id": "653aba0e-1704-4951-8adc-3eb4b88fa940",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d1403e3-3e9a-4400-a0d8-6faec744c9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc48916-34a2-4847-933d-f8a9245a7e58",
        "cursor": {
          "ref": "8f7dc71d-7bdd-49f9-bce0-44577e0a6655",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "77f6e8ef-feb9-456f-8625-017a5bd30405"
        },
        "item": {
          "id": "cfc48916-34a2-4847-933d-f8a9245a7e58",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fdf2bf44-cc3e-406c-af1d-c340d114499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becf4825-ccda-498f-8988-a858201e515f",
        "cursor": {
          "ref": "681c54f2-aed3-4765-b764-ac7ad8990cd5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e3a5ac7a-f27b-4647-b974-6fe810d1ef89"
        },
        "item": {
          "id": "becf4825-ccda-498f-8988-a858201e515f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "418f56ef-7db8-431c-82ff-205f4996dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155c9e34-0389-4b6c-af46-53533430589a",
        "cursor": {
          "ref": "1bbef13d-3db1-4d30-bc17-2ad6df8931e8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b05cd4f9-af45-49d9-a200-59cb964320ca"
        },
        "item": {
          "id": "155c9e34-0389-4b6c-af46-53533430589a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "72a7b45b-bcbd-4c4f-b9f1-0448d3b097cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d3da48-89ff-4016-8d9f-357e9880dcf0",
        "cursor": {
          "ref": "e0d0a28b-e1b7-4ff8-823f-1661d2b601ba",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8255276f-cb80-47c8-a6ef-c56b9f9e29de"
        },
        "item": {
          "id": "d6d3da48-89ff-4016-8d9f-357e9880dcf0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6cb62d06-50ca-4e1d-9bbc-eb2121ddc8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9612459-ce93-4097-8885-ce402ef45a06",
        "cursor": {
          "ref": "5a604ebf-22c4-4dd3-b678-82b0e8f54191",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9863825e-e9c2-46c0-9b2d-49e74bb57117"
        },
        "item": {
          "id": "e9612459-ce93-4097-8885-ce402ef45a06",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ae62915a-255e-49da-9878-4a82a9f760b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d45b1-f593-4f10-a55b-2e381f66e595",
        "cursor": {
          "ref": "d42c3baf-c58c-4699-81bc-37075097ee2e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dba29d6c-7e73-42be-ac49-28fd43fa5095"
        },
        "item": {
          "id": "b67d45b1-f593-4f10-a55b-2e381f66e595",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0e2fa695-7cb2-48e5-a8db-ea4f87c33939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fb7705-e5fd-45d4-8fb5-8cbae3a97d6d",
        "cursor": {
          "ref": "62650164-59e6-4287-bc7d-355c54c21ea2",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "152ab828-b816-4faf-ba01-8523abc21fea"
        },
        "item": {
          "id": "c6fb7705-e5fd-45d4-8fb5-8cbae3a97d6d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f536ba7-86f9-46ca-8088-d6a633c00757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fb0b5f-9487-45d7-8a03-d824cdc1a1fb",
        "cursor": {
          "ref": "26077bf6-57b5-4597-94d5-da7bf25df48f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "293f8316-ff84-4f90-9703-280378fa934c"
        },
        "item": {
          "id": "37fb0b5f-9487-45d7-8a03-d824cdc1a1fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd773127-90c3-4485-a5d8-3bea65879b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6716c6-1ed3-4813-98d6-f7bad7eeeaeb",
        "cursor": {
          "ref": "c6b5cd6e-fde0-423e-a5dc-30cde975f962",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "15491d5d-b92f-4456-9c33-45c8cba008ba"
        },
        "item": {
          "id": "5f6716c6-1ed3-4813-98d6-f7bad7eeeaeb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb817eb0-1e6d-4183-b37c-d4d19edea250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbbad60-6e3b-41ac-8c81-5c006c2e2544",
        "cursor": {
          "ref": "33ae16e5-0462-4fd5-a4d2-990dd3a86f10",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2ef6b35-7569-466a-a177-d2a33a4c7a59"
        },
        "item": {
          "id": "1dbbad60-6e3b-41ac-8c81-5c006c2e2544",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "82ecacbf-6de6-4f31-a5fb-66ddce203d55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4c65c7-6df5-4b7a-b90f-0f24a6fbd3fc",
        "cursor": {
          "ref": "98af296d-2389-48d6-92e0-e935c6558d90",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c0d81b8d-23a2-4f58-a9be-b9910f1445c6"
        },
        "item": {
          "id": "9a4c65c7-6df5-4b7a-b90f-0f24a6fbd3fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a164577f-a03c-4c7f-8b9d-cd22640d47bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3124f-a380-489b-8e27-62fac90833b6",
        "cursor": {
          "ref": "780c1274-3444-4d39-93a5-a2a57b4e3221",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f06e4ad-155f-4a08-add9-4e026198eb40"
        },
        "item": {
          "id": "87e3124f-a380-489b-8e27-62fac90833b6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "be70c427-57df-4578-88fc-5fca5ba3ac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3383dee-38cd-453c-8bd1-a9d42aae68bc",
        "cursor": {
          "ref": "d449cc1b-4780-49f7-89ef-5ec10b08ee2a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b7dacb9f-7a02-442d-b75e-4502142fc327"
        },
        "item": {
          "id": "f3383dee-38cd-453c-8bd1-a9d42aae68bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb9c4137-cd5a-4081-9494-2d0cfc48979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70042e07-2994-416f-a25b-549d4fc69039",
        "cursor": {
          "ref": "7f38be49-f5a0-45e0-b810-7458f0ede889",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4b63038a-b547-4e18-bd43-ea946b2cb1c8"
        },
        "item": {
          "id": "70042e07-2994-416f-a25b-549d4fc69039",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e90574f8-1055-427a-8395-38782f833532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93fdbe0-56a0-45d0-8482-d3d69f793349",
        "cursor": {
          "ref": "ea9c61e9-df12-47bf-86ce-63b4483a4328",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6a8aa5eb-2603-4a0f-b89d-e3e83d1f4f62"
        },
        "item": {
          "id": "a93fdbe0-56a0-45d0-8482-d3d69f793349",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "284659cc-3cb0-4ead-b818-443c3cef6b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c04a0a-8153-477f-a343-ca900383629c",
        "cursor": {
          "ref": "28ca26c6-1479-49d7-af15-afba73e8d571",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "13a3d358-06e6-4066-8443-4880401e3bd6"
        },
        "item": {
          "id": "03c04a0a-8153-477f-a343-ca900383629c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "76449625-e0a7-4935-97bb-bd33c7e841c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b47404-f20f-45f2-9823-af0c96da6e58",
        "cursor": {
          "ref": "55f126e0-5fca-4b60-af0d-7f2258b40c7b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3038e78d-c0db-4a89-8107-9bd588d72652"
        },
        "item": {
          "id": "c7b47404-f20f-45f2-9823-af0c96da6e58",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7d7475a-4bbd-46a3-9dac-8f2aa88f77cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9e888a-4b00-46c7-8963-422dd0517cc3",
        "cursor": {
          "ref": "d562013d-d327-43d9-be03-6025d59758d3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d0700013-2678-46dd-b7a9-011a8abe63ad"
        },
        "item": {
          "id": "bd9e888a-4b00-46c7-8963-422dd0517cc3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "103ce76c-c8a7-4680-a139-3419e264534e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6d595e-5279-4858-8931-df751b8de41d",
        "cursor": {
          "ref": "6ee9c19e-b577-4c5c-8ce1-c42583b218db",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bef610ff-7d9b-4289-8cf1-d8eacfb388c5"
        },
        "item": {
          "id": "2f6d595e-5279-4858-8931-df751b8de41d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0391fa5-3ec1-4a60-b401-4419af4297aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860a1e25-a52c-455a-82ec-d2633b381d6c",
        "cursor": {
          "ref": "380a1193-3232-4185-9d6f-5609cc793247",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "02646350-7295-4963-941e-17841ed62d59"
        },
        "item": {
          "id": "860a1e25-a52c-455a-82ec-d2633b381d6c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a0a9dee4-cb11-4339-9dcc-f3d9717bf1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1903ceb0-00a3-49a4-9c69-0a3ef81fbd69",
        "cursor": {
          "ref": "9a3951a7-743d-4c8d-829f-594019705436",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ef4fe0c-3965-4f74-85d5-268f5e2e32c6"
        },
        "item": {
          "id": "1903ceb0-00a3-49a4-9c69-0a3ef81fbd69",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03b0fd30-2c9c-4699-9126-fc8d9a9a59ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5afde6-feee-445e-af19-62ad2dcbf786",
        "cursor": {
          "ref": "43426738-dcc3-45a4-8413-e2761aa3d4a5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a4dcfb6-9405-4c4d-a904-ca67e23bd9c1"
        },
        "item": {
          "id": "7b5afde6-feee-445e-af19-62ad2dcbf786",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41c2d5ac-d082-48d9-97ec-30b6b8bef1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af544d75-e520-4482-a729-79eb3e74a0ce",
        "cursor": {
          "ref": "63eb859c-c3dd-4725-a670-b52bec410d9d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7465d3f0-56ce-4453-becd-b33ea3c534fc"
        },
        "item": {
          "id": "af544d75-e520-4482-a729-79eb3e74a0ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2709c67-2fc1-4fa9-ac4d-b13a2bb808c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d611662-8e65-4f8f-9108-0ceff7b66523",
        "cursor": {
          "ref": "7e908097-2a94-4d96-b560-7bce78247798",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e38b80bd-7560-47f2-98f7-8bfc287efc68"
        },
        "item": {
          "id": "9d611662-8e65-4f8f-9108-0ceff7b66523",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3c3449c7-ea22-494d-bccd-2db599b7ba4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721674e6-222d-48ea-8fb9-3c8fba77e910",
        "cursor": {
          "ref": "2df7beed-556b-44d5-b2c1-c49f6c952875",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a3377787-171b-4a8c-a62d-2164ad6e020b"
        },
        "item": {
          "id": "721674e6-222d-48ea-8fb9-3c8fba77e910",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "846f978d-a745-4a88-8a11-b58f3a439b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5607e48e-587d-4666-a965-6da855f31092",
        "cursor": {
          "ref": "c6e17496-d33e-47d5-833d-3cb45d2b77ef",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae156020-fc6a-4603-8f7e-93b95b252a76"
        },
        "item": {
          "id": "5607e48e-587d-4666-a965-6da855f31092",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "824abd0f-53ab-41ff-82f2-b76c95637a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc77b10f-fe1c-447e-b09d-ede6c82333ce",
        "cursor": {
          "ref": "e463e789-28c6-43e4-aea1-d46af594d505",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "432d089e-546b-4fea-b62f-abc64cd94e44"
        },
        "item": {
          "id": "cc77b10f-fe1c-447e-b09d-ede6c82333ce",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a20a9f96-635d-40fb-b553-8ce685fa3128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b1ddbf-c905-4977-a6a5-224fd7b829ea",
        "cursor": {
          "ref": "d857aa5d-29a4-40ff-80ca-4e9a16b92e7f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "64e75385-d504-406e-b428-198def0c1eb0"
        },
        "item": {
          "id": "13b1ddbf-c905-4977-a6a5-224fd7b829ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "85404db0-48d9-450f-aeae-86f558bbd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b3f042-7524-4e6f-b067-ec04bdede846",
        "cursor": {
          "ref": "aac63198-de09-4e78-a4a0-2b05f09e809f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e744ea7-5700-40d2-aec2-019e4bbaac38"
        },
        "item": {
          "id": "e7b3f042-7524-4e6f-b067-ec04bdede846",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4b46cb91-4af4-4711-8d85-4cc4ef9c82fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12889abc-9905-4647-95cf-c73c8289ee7f",
        "cursor": {
          "ref": "a83f4529-edcb-4447-b57e-354e7d32c98a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "649d7152-8918-4fd1-8334-b29b68684daf"
        },
        "item": {
          "id": "12889abc-9905-4647-95cf-c73c8289ee7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8155ca68-62fa-4bf9-9981-430681189ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ddd908-9ed6-47d7-9772-91d8122b1202",
        "cursor": {
          "ref": "9e344206-d0c0-4811-86a6-39b226c6ba0c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b472ee04-a936-48e7-81eb-861dc1e459b0"
        },
        "item": {
          "id": "17ddd908-9ed6-47d7-9772-91d8122b1202",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f1b95d34-cba8-45ff-b35c-084d9190468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6182cff1-e7cf-4abc-94e2-771abbd8cdc4",
        "cursor": {
          "ref": "15996219-0794-422b-9c69-e9168c4577f5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6eabfd94-8a27-4423-b924-69eb50004528"
        },
        "item": {
          "id": "6182cff1-e7cf-4abc-94e2-771abbd8cdc4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af3ac84e-c087-4354-936f-fe031e08cb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a5311b-22b2-4387-bb3a-d00d237eadbf",
        "cursor": {
          "ref": "ca22d6da-7db3-4911-aee9-5d7a98286845",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4c7ac713-3dba-44db-85b3-9c8a741d039e"
        },
        "item": {
          "id": "f1a5311b-22b2-4387-bb3a-d00d237eadbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "00091f2e-d2ae-4c31-bc6f-3953d58d949a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaecb38-49c6-482b-956c-76b8843694fb",
        "cursor": {
          "ref": "f45d2234-72c8-4f3c-9f99-d5d76f1037fd",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5cbe35f8-2a74-4a19-80cd-062fb49e3654"
        },
        "item": {
          "id": "4aaecb38-49c6-482b-956c-76b8843694fb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eca95309-07c4-43f0-87bc-e4dc3b19483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b953b618-2680-46c6-ae2c-e63d68796a2b",
        "cursor": {
          "ref": "fdf0a65f-4c24-4cd7-bb7e-bec4903abafb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9ec474d-3245-40c3-8341-d2c512971697"
        },
        "item": {
          "id": "b953b618-2680-46c6-ae2c-e63d68796a2b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "feccc814-b926-4c9b-8cf8-cfc977005a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927ed293-bc00-45a4-80a5-aa5c883458e4",
        "cursor": {
          "ref": "baa6bb86-44c6-47ec-9d0d-3b0dc5742993",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "04e5f832-e341-4d05-a91f-c66f5a882485"
        },
        "item": {
          "id": "927ed293-bc00-45a4-80a5-aa5c883458e4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9e6f47b2-1b75-4c49-91a0-9bf8a14c23a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1a345-32c1-497c-b26d-949315a27712",
        "cursor": {
          "ref": "1710c299-626b-4200-980f-3038e7dc6344",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "01890f2a-d981-4119-96a3-17fead50f536"
        },
        "item": {
          "id": "88a1a345-32c1-497c-b26d-949315a27712",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "02eff52f-26ef-41fe-9ef2-d32b1c2c7820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56903902-c835-4eb3-9bd2-8718f3b48cab",
        "cursor": {
          "ref": "9e9416f7-0826-404b-a78f-b3fecad61deb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d0dc979-eb12-4d7b-ab1e-fc7e48c98eca"
        },
        "item": {
          "id": "56903902-c835-4eb3-9bd2-8718f3b48cab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "44773c34-9431-4287-a966-47ebb283e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ee4d7-4c2c-49bb-bc6f-4296e33e4201",
        "cursor": {
          "ref": "d0718596-9a93-4ee4-9db9-6f800ecaef96",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9a06fb1e-a5b7-4492-808d-dde374b6d987"
        },
        "item": {
          "id": "e37ee4d7-4c2c-49bb-bc6f-4296e33e4201",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "feefc553-09f6-42ba-a8d1-6e655202eb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca0cb67-7ad4-41a6-8a8c-cc097a5762e9",
        "cursor": {
          "ref": "90ae2d1e-c6e9-4513-bb69-089d0bb54e6e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ad73028c-cea5-4c1e-bf4d-74b9e76bd0d4"
        },
        "item": {
          "id": "6ca0cb67-7ad4-41a6-8a8c-cc097a5762e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3aa91bdc-36e5-4e9e-80a6-86e2ac1a0944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f5e1b4-6af5-4fb2-bdbb-b1a839bc6960",
        "cursor": {
          "ref": "6a75a838-23b1-4dfc-a2be-6664426ffe10",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cb2d7f50-1acf-4423-80d5-1a064fe420ff"
        },
        "item": {
          "id": "64f5e1b4-6af5-4fb2-bdbb-b1a839bc6960",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "17219ddc-2f6b-471a-a227-7705f844ddb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3335aa99-1958-4980-8503-40374e1724b1",
        "cursor": {
          "ref": "51931312-d5e7-4c64-b983-fb96b5be177d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c01e4a80-de93-4bf6-9a57-9b8b49213076"
        },
        "item": {
          "id": "3335aa99-1958-4980-8503-40374e1724b1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5605c9cc-ee8f-4808-8f9c-589629b87396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57524e6-4d37-47f1-afc5-28fa5c6cb6aa",
        "cursor": {
          "ref": "223aca12-9c65-4dff-8406-d7925f20b9d8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c3e85cb7-f8ff-454e-af83-b6796c92a898"
        },
        "item": {
          "id": "c57524e6-4d37-47f1-afc5-28fa5c6cb6aa",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6f446570-84f6-4b00-b4a3-bb8d176fe110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5399562f-96dc-41f4-ac06-64c84021cf47",
        "cursor": {
          "ref": "9563ba36-d2ac-451d-b785-fba43df64ff2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3400b464-ca38-45fe-8c7e-33f2250c69b1"
        },
        "item": {
          "id": "5399562f-96dc-41f4-ac06-64c84021cf47",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb2f806a-8412-4785-b7ee-c36539ab65f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80793570-3fb4-415c-a56d-77341e1fc859",
        "cursor": {
          "ref": "d895aa5f-69df-476a-98ff-09f3fe726fa2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20474cac-b9da-487a-af0a-ef84334d63ae"
        },
        "item": {
          "id": "80793570-3fb4-415c-a56d-77341e1fc859",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dc1e89d1-7eaf-4826-8018-2baa90e4bfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc8023b-f540-4ab3-b6a5-03c16ddccb9d",
        "cursor": {
          "ref": "e354c859-a39f-45ce-88e9-c7ca5b0eaa68",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4d15a6c0-d77a-479b-ba8b-35274047bef1"
        },
        "item": {
          "id": "8bc8023b-f540-4ab3-b6a5-03c16ddccb9d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "09a5282c-c557-41a6-80b3-c6b8a149206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc51727-2cc8-4f4a-9a49-f8c4f47f360e",
        "cursor": {
          "ref": "6df812f0-6d83-4b04-9824-133dc516e130",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba161dd6-1d9a-467f-a494-d8738bc48416"
        },
        "item": {
          "id": "ffc51727-2cc8-4f4a-9a49-f8c4f47f360e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fd6dd2ff-24ea-478f-ba02-ef3970f8e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575e86b2-4db3-4b4d-be73-53ec5fd5dea7",
        "cursor": {
          "ref": "bce4343c-3c7b-4a18-b283-fb9653729c4b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "28048f03-13a4-4637-9b82-06f3d71f6a4f"
        },
        "item": {
          "id": "575e86b2-4db3-4b4d-be73-53ec5fd5dea7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98a4ce98-ffc0-4309-a030-7efba2147b1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4d05a7-0dd6-4c27-bc72-cee8b155d8a7",
        "cursor": {
          "ref": "b403bfc4-50d1-4040-83e1-7fbf0c58eaa8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "302f9a12-7e75-48aa-8eaa-30faae9bfc30"
        },
        "item": {
          "id": "9b4d05a7-0dd6-4c27-bc72-cee8b155d8a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e2570975-9b04-470e-9a60-4a63873ea838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4605b77e-ec07-44f5-b7cc-3e82ae687e25",
        "cursor": {
          "ref": "c6596fbd-479e-47a2-b00d-1a930464387f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48673254-55b6-46d5-b2bf-e5ff8c7559fe"
        },
        "item": {
          "id": "4605b77e-ec07-44f5-b7cc-3e82ae687e25",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8a2a497c-794f-4b3d-a9f6-6aef268582bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c20aa6e-bfd0-4a14-9bbf-0ed20fafdc3f",
        "cursor": {
          "ref": "27593832-2d17-4749-ba74-eba6be4b8dfe",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cb2fa117-1c18-4cc1-b4df-63344e140fcd"
        },
        "item": {
          "id": "7c20aa6e-bfd0-4a14-9bbf-0ed20fafdc3f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8e8b388d-f18a-4c17-9a99-7a31dcc04b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e847e12-f1f0-491f-a0d8-4afea74f9058",
        "cursor": {
          "ref": "b71953b3-782f-4631-a860-eadff0f04cae",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e5d1a7fa-ebf3-4107-8206-96494e5de88d"
        },
        "item": {
          "id": "3e847e12-f1f0-491f-a0d8-4afea74f9058",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f066149-3cd9-4ea8-b74e-75cf5e7d6e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2128624-e8f8-4eb0-85d5-38864e18a622",
        "cursor": {
          "ref": "fac7e9ac-6677-4973-bbe8-27c16caf91ea",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d60903b1-bcb8-4c79-ae1e-59d9d0ff5d42"
        },
        "item": {
          "id": "d2128624-e8f8-4eb0-85d5-38864e18a622",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cd901e61-f027-4a82-bfc1-c8cd3218a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fb33e1-e48a-4baf-bc09-dc4b870557c7",
        "cursor": {
          "ref": "67067d45-b379-43ab-ae3d-f59aeb0ad15e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5bda079-2b05-460a-9dd1-3261f0f1bc80"
        },
        "item": {
          "id": "b7fb33e1-e48a-4baf-bc09-dc4b870557c7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d081d2fb-e98b-48f6-9c79-347889359a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e816a307-1131-4c88-abae-966810c97eb5",
        "cursor": {
          "ref": "4ae0d14b-2130-45fa-a637-07014d8ec513",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54ddef6e-2331-486f-8ad6-1f09a01916b7"
        },
        "item": {
          "id": "e816a307-1131-4c88-abae-966810c97eb5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "daedc1ce-8b42-4233-b0bd-b698df33b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc20aa88-2713-4e85-a2cd-c040c052c983",
        "cursor": {
          "ref": "d5634f26-c710-4f56-8f8c-e727b75f7335",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c48bc5ea-5e09-4cd9-89ef-d744343f1702"
        },
        "item": {
          "id": "bc20aa88-2713-4e85-a2cd-c040c052c983",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "176a6745-3bed-4ceb-b91a-369833075d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4758456-6723-4444-93c4-06cd0863096d",
        "cursor": {
          "ref": "ac3a5d37-8bbf-486e-a3fc-d7adb0d22996",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "39317f76-b4c1-40cd-a30f-15c2df16f42c"
        },
        "item": {
          "id": "a4758456-6723-4444-93c4-06cd0863096d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "58ed191d-7644-49cf-86d5-e832c6cbad2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85fdb9e-68f0-4e54-b644-48ba17d2bea8",
        "cursor": {
          "ref": "59efbb8e-821c-40e9-85a2-3372a38f5372",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "17dd1247-490a-4db6-8fc2-62e8f306ad06"
        },
        "item": {
          "id": "e85fdb9e-68f0-4e54-b644-48ba17d2bea8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eb178c08-aefe-4bfe-98eb-cfae0f0b5b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0393ff-134d-4fa1-b11e-cea3b3f7f2d8",
        "cursor": {
          "ref": "75ab22e3-333d-4f11-84c1-527d0a2feb3c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "79429f4e-2278-47aa-b4d8-1c09a4e90ec5"
        },
        "item": {
          "id": "6c0393ff-134d-4fa1-b11e-cea3b3f7f2d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ba343f06-201a-4264-8eea-6c7687d66452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2528b83f-1278-4f7b-9d6d-19f998ac19f8",
        "cursor": {
          "ref": "996b6f12-fe49-4a61-85d3-c89f4603e2bb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "452ca5a1-13a9-48d8-bbf3-3a2f66909d70"
        },
        "item": {
          "id": "2528b83f-1278-4f7b-9d6d-19f998ac19f8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ce615da3-b0df-475f-aff5-d23f06143f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330437dd-b360-4965-b77b-466aacf65968",
        "cursor": {
          "ref": "0ffa3bf2-1360-4209-828c-1fbd6232f63b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6581ce4c-05a1-49e8-9e57-96cbd36a90e8"
        },
        "item": {
          "id": "330437dd-b360-4965-b77b-466aacf65968",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6b89fdb-dca0-48bc-b838-32cd97e166c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b712bb-8471-4dc5-a4fd-524ae80d3968",
        "cursor": {
          "ref": "6e2bd7fd-d024-4a42-8f9f-d00a368d30a0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "285f2525-e375-4a62-b39a-97bacb92178d"
        },
        "item": {
          "id": "e9b712bb-8471-4dc5-a4fd-524ae80d3968",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c94f5028-5dcb-4a59-a7bd-e6afde18e626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df5c311-08a8-40aa-9749-26f5f4b41746",
        "cursor": {
          "ref": "2a0c9179-9799-4ec1-9663-7ec832d29d64",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "602af4bb-ae34-4cd8-80b6-762ad068bfff"
        },
        "item": {
          "id": "7df5c311-08a8-40aa-9749-26f5f4b41746",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0f1e557b-7255-44ce-b90a-8f194eb8456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1cb19c-9e8e-480e-b3ce-10efcad5503d",
        "cursor": {
          "ref": "36b7a023-b12a-4460-996a-b6814222813d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "224c1d34-527e-42d2-b9e7-83fc092aed0b"
        },
        "item": {
          "id": "7e1cb19c-9e8e-480e-b3ce-10efcad5503d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80d0975a-de83-499d-bdb5-0204cf06b616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2a149c-739d-4e7e-abed-3d3f818e79c3",
        "cursor": {
          "ref": "43367361-cc21-404c-9df7-c37746c3dbcd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c8d67734-b4e1-4442-9bd3-670063297f4d"
        },
        "item": {
          "id": "0f2a149c-739d-4e7e-abed-3d3f818e79c3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "edac4933-f70c-4017-b912-0701c914ccf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd71978d-8f07-4e82-91ff-8c60b27a1201",
        "cursor": {
          "ref": "ef42c25c-c0ef-4a5b-a8c4-e5f21ba8f3c9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2a4649d9-381a-44b7-b08f-b516b890cdfc"
        },
        "item": {
          "id": "bd71978d-8f07-4e82-91ff-8c60b27a1201",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "68359570-f4cf-4c06-b6c2-e17648c44717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04fb9a2-576e-481c-8a9d-bdc114c8d17b",
        "cursor": {
          "ref": "30d148ad-227b-4197-9150-7990e6b2549e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9fd9e5f1-bda7-418f-baf2-5ede7e320b3a"
        },
        "item": {
          "id": "a04fb9a2-576e-481c-8a9d-bdc114c8d17b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e63b9571-b8ee-4031-91af-3012dc3a51e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484ad186-1a33-4e64-9bae-381e0543bfae",
        "cursor": {
          "ref": "023fc7e7-161e-4c61-8261-f13858186ecb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f98172bd-26a7-434c-ac0e-c586dcb94d94"
        },
        "item": {
          "id": "484ad186-1a33-4e64-9bae-381e0543bfae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4c1931dd-1273-4cea-b9f3-a89e25517471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eeac41-aca5-4d84-ac99-9b277c870298",
        "cursor": {
          "ref": "85974fb5-b489-4ad1-9f73-056f7e883058",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0bf9e8b-b21f-4c3c-b3c8-46c96b7ca728"
        },
        "item": {
          "id": "a6eeac41-aca5-4d84-ac99-9b277c870298",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "23069a39-c473-496b-bb33-96c063e5e94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774d5aa4-f246-49cd-b33f-e79614dffa3b",
        "cursor": {
          "ref": "96d0d136-c645-4804-bc30-cf5d9f3676e0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c140c182-5d34-447f-be70-7e4333cd3327"
        },
        "item": {
          "id": "774d5aa4-f246-49cd-b33f-e79614dffa3b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6d901c46-7fb9-483b-beec-25bb97636f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ba3ad4-ddc5-44e0-b729-8d698ea2eeeb",
        "cursor": {
          "ref": "bf058d25-36cd-457f-9453-93858453fd59",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "60b55899-a233-4e21-aae5-b18358a5ea5e"
        },
        "item": {
          "id": "48ba3ad4-ddc5-44e0-b729-8d698ea2eeeb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fe4ba1d3-0cea-40ad-94f0-4c71f8833f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1852698-f4a3-4f50-a2b5-fa59df430b1a",
        "cursor": {
          "ref": "7e14863d-76f8-4dab-b58c-9e4b6c5756f6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0857d25f-dfb6-4a16-a428-2196973a916a"
        },
        "item": {
          "id": "a1852698-f4a3-4f50-a2b5-fa59df430b1a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bfee1626-8fa2-47d8-a8e1-5d7f25138413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d260a45a-1b47-47e8-9eae-74630c214fdd",
        "cursor": {
          "ref": "7ecec06b-59c1-45cf-9854-f7b5a61a145a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f1a3c42f-77c0-4ca6-9b4a-01a95e6c6944"
        },
        "item": {
          "id": "d260a45a-1b47-47e8-9eae-74630c214fdd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2778b011-9f8c-472e-a15a-0af9e21bcbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641ba3c9-f486-472c-beec-1be6f34bd355",
        "cursor": {
          "ref": "df87f189-ec14-4250-9f84-f513ba872b80",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4ad7d5e0-cbf3-432e-9d14-d238c84d63d3"
        },
        "item": {
          "id": "641ba3c9-f486-472c-beec-1be6f34bd355",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f21f86a4-29aa-459a-a2f8-722e4746d347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be808bdd-098e-49f9-a5ad-a5129c29b84c",
        "cursor": {
          "ref": "e1df509d-1747-4048-821e-858065de89e4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "48c93c1c-6ae1-42d9-abd1-eef4a3f73bde"
        },
        "item": {
          "id": "be808bdd-098e-49f9-a5ad-a5129c29b84c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6f585638-6eb5-4a1f-8305-aaf2f9a7bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03973a6-50f2-43cc-a560-f69d8f890543",
        "cursor": {
          "ref": "a9a0e086-d554-43d5-943f-6d510d7b5aab",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "87dd8bf6-1229-45d7-a0f4-62ac8fe00c8c"
        },
        "item": {
          "id": "b03973a6-50f2-43cc-a560-f69d8f890543",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9fc387d-ebbb-49ad-9226-f230ef1dc857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a381b3bf-0b99-4f95-8aeb-19334b6b5ccd",
        "cursor": {
          "ref": "cc196430-8851-447f-8c66-37d38978c07e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99dfd81a-df6c-4991-b7ed-af6caf37c7fb"
        },
        "item": {
          "id": "a381b3bf-0b99-4f95-8aeb-19334b6b5ccd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "edf06d33-d948-4aa6-b6ed-922dd17e78b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f21bd-1fb8-4858-94d0-ca85b80e66a8",
        "cursor": {
          "ref": "99efd00a-50d3-4669-8c05-56e2d0af95dc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c65feed8-04a6-41db-bb20-d28173263261"
        },
        "item": {
          "id": "9f5f21bd-1fb8-4858-94d0-ca85b80e66a8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ed225702-424f-45a9-b1e3-1d1d48a6bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff37a90-8768-4839-890c-453dce0138d5",
        "cursor": {
          "ref": "a1ab55a8-8da2-423a-a20a-8964baea98cd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d02b63ea-2064-47cb-87bd-50ed04039a02"
        },
        "item": {
          "id": "fff37a90-8768-4839-890c-453dce0138d5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "faed2440-5bf6-4422-a66c-436cc800101c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff6aa37-a2fc-43f5-a1d0-737cb41abbab",
        "cursor": {
          "ref": "251e470a-7d12-4a7f-b207-6ae05be40e4f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cad5545d-da78-4db9-b906-51b7023c4bce"
        },
        "item": {
          "id": "bff6aa37-a2fc-43f5-a1d0-737cb41abbab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8d6fa8ed-2a8f-4752-83ea-97d81af894eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c99ee4-2d67-4d9f-b6ff-3c969747da05",
        "cursor": {
          "ref": "0de39905-fa9a-4492-b760-30ac831de338",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2ac09dfa-d98a-40c5-9677-3c9b8e637f6b"
        },
        "item": {
          "id": "28c99ee4-2d67-4d9f-b6ff-3c969747da05",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b14eb8fb-78ef-4e11-84f5-bf80c7035c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ae3ed-c499-4d9c-bff7-c631fb023557",
        "cursor": {
          "ref": "fe115481-dee4-44af-ae7a-82c191e39c0d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dc3ccec7-5139-42eb-a60d-6e660a6e8f24"
        },
        "item": {
          "id": "c59ae3ed-c499-4d9c-bff7-c631fb023557",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "13a22687-d034-4c6f-8d6a-74b66ea3a391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a1aac-a09a-4bae-a1d0-6a6c422b95bb",
        "cursor": {
          "ref": "d0adc908-3813-4f25-9ae2-03600285b1c8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56a48e86-c6e1-43b1-9605-98fe22033c70"
        },
        "item": {
          "id": "4f1a1aac-a09a-4bae-a1d0-6a6c422b95bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a09a2df-37ea-4229-8f12-82b0f660a798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11726180-d370-4b64-a4f9-078fcb96c1bb",
        "cursor": {
          "ref": "754cd9d5-192d-45ed-a13d-8c8774964cde",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "196dcf56-8d57-4272-9af4-e832fe985c59"
        },
        "item": {
          "id": "11726180-d370-4b64-a4f9-078fcb96c1bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e31d895a-4ff7-4306-8618-6795d3f5e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b039997-6237-453b-89b0-fda39f4dedd6",
        "cursor": {
          "ref": "de6cbbdd-6192-43d3-8864-fdaeaa84a68c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8292755b-1602-417d-ac1f-8f2158c77dbd"
        },
        "item": {
          "id": "9b039997-6237-453b-89b0-fda39f4dedd6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6f0cfc12-4599-4ba8-a9fd-8d2e32128d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cf7299-abe9-498f-b139-7fe51fa0dfc9",
        "cursor": {
          "ref": "159b263d-a6b9-4eb6-a333-70abf5780a2d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7f5d9694-3362-4765-8439-c98093107914"
        },
        "item": {
          "id": "f5cf7299-abe9-498f-b139-7fe51fa0dfc9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f72a825c-b3cc-4d8f-91c2-73e9bdf0a501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f957503-16dc-461e-b41e-f65727336b8f",
        "cursor": {
          "ref": "01e23b17-aad0-451a-ac75-db688d2482ac",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff6f15af-8778-4f39-ae21-57fbaefcb178"
        },
        "item": {
          "id": "3f957503-16dc-461e-b41e-f65727336b8f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1a144dcb-28c7-4203-b2b5-7a5d44465723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1454c1dc-c321-4520-af4a-e70954aa00d8",
        "cursor": {
          "ref": "0ee4a6ff-f0b3-48bd-8dcd-8364034d871b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "35a8900b-f271-4ba2-b278-964f966775c6"
        },
        "item": {
          "id": "1454c1dc-c321-4520-af4a-e70954aa00d8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e57670f-fa88-4c6a-8cc2-1a9d06d4d1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ace3c8-1c13-4ffe-a65c-dbbc14689974",
        "cursor": {
          "ref": "db10c8cf-0d76-4de3-b89c-28193d6e687d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1cb35437-e73d-42e1-930a-6de490f2ff7c"
        },
        "item": {
          "id": "53ace3c8-1c13-4ffe-a65c-dbbc14689974",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f459f4b-fb5b-4113-b179-66e3770d14ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05cb71a-1a3d-4e0e-883e-3a98608f3906",
        "cursor": {
          "ref": "66244ac9-76ba-4207-b474-d21911d59685",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "855423b9-88d7-43e0-9545-68408bef3dcf"
        },
        "item": {
          "id": "f05cb71a-1a3d-4e0e-883e-3a98608f3906",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8fd45123-f20c-437e-8ebf-358d93019812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727e06a1-5f80-4222-b2a4-ccaadd44e989",
        "cursor": {
          "ref": "0ea600ab-9dff-4874-8d3d-f2f509c799e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d9e7b07d-b476-4e4c-b2d1-dc8da99eccd1"
        },
        "item": {
          "id": "727e06a1-5f80-4222-b2a4-ccaadd44e989",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "06146cff-802a-41c7-b217-19e756c9162e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3d72b6-6273-4334-81d4-10a9420d6427",
        "cursor": {
          "ref": "bbebb509-f8fe-4616-b5be-e8b2d3cc42cc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c443cbff-cf7d-45f0-8c05-6564968a04a1"
        },
        "item": {
          "id": "fa3d72b6-6273-4334-81d4-10a9420d6427",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0320b2a4-2e98-4043-bba3-70c0727e6335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9bd5fa-a003-4098-b438-d15ebc545549",
        "cursor": {
          "ref": "86ad341e-5074-43d1-888e-9d8ec280d080",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "448bfc91-efa4-487b-b598-788089f0be5d"
        },
        "item": {
          "id": "7b9bd5fa-a003-4098-b438-d15ebc545549",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5eb55da6-1293-4519-a375-c3faf9f17f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f435bb52-d93c-4a54-bb3f-cfb7084a95b8",
        "cursor": {
          "ref": "0de5fe05-2485-4ce7-bc11-6792e32f4832",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "514b0a50-7619-49fa-938e-dfbd79252aa7"
        },
        "item": {
          "id": "f435bb52-d93c-4a54-bb3f-cfb7084a95b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ad1848fc-820e-478c-b69d-84b0976aa2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fcdf08-8bc4-463a-a932-e757fa08db19",
        "cursor": {
          "ref": "f581ee19-d5ba-4c5e-85cb-00b2b78de9be",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04b2bae9-1524-483a-9fd0-3a7c614c0888"
        },
        "item": {
          "id": "85fcdf08-8bc4-463a-a932-e757fa08db19",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3c0cedcf-6fb6-4594-b543-41099eb5a931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a6fec-603e-4a45-b836-9f93620d7abf",
        "cursor": {
          "ref": "0430e060-182b-450b-8219-b2827f578c32",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "65f62ea9-faf8-42d5-98e7-5bf50c024a4f"
        },
        "item": {
          "id": "0e9a6fec-603e-4a45-b836-9f93620d7abf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "10db728c-13d5-494d-b084-d50d4ad72e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8f08db-5285-4707-977b-208fc322ce8f",
        "cursor": {
          "ref": "17cad77e-418d-4ead-83a2-7c2988dbc2d1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4da62f54-f977-4337-bd3e-3e90a346d46e"
        },
        "item": {
          "id": "4a8f08db-5285-4707-977b-208fc322ce8f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "391454a9-1339-4cb3-a551-b7503251cbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405d5196-5a7e-402f-bd03-f01f883bf3b9",
        "cursor": {
          "ref": "44d5d61c-ef74-4a62-931a-75d4edfa0734",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "823474e7-c915-4abd-b3cd-7754f95c2abe"
        },
        "item": {
          "id": "405d5196-5a7e-402f-bd03-f01f883bf3b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "deea4033-cffd-403c-8c1f-7f568a029602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c3d5e-8870-465b-b4ba-c9e44b76b8e4",
        "cursor": {
          "ref": "db3e4644-3951-469a-9f3d-0b9697ec1bea",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c8e5cf1-a692-431c-b2dc-1d09dede20ae"
        },
        "item": {
          "id": "d75c3d5e-8870-465b-b4ba-c9e44b76b8e4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0b51eb62-8de9-4f4b-9453-0027976be061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ddb3c-d483-4f15-a011-01873dbd2cf4",
        "cursor": {
          "ref": "38b21f57-687d-4f95-a5d0-34fc3952a605",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e4d4c45a-4e7e-49c1-b497-8fea04132f05"
        },
        "item": {
          "id": "f10ddb3c-d483-4f15-a011-01873dbd2cf4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "650cde9f-7aea-43c5-8035-f9b6a6c7ba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e357eae6-7f3f-48a5-acfa-5a54f94e8bbc",
        "cursor": {
          "ref": "33c1a84e-6091-4246-acac-c7737b14ee23",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "740a8464-b485-48a3-83d3-2c1a1f470851"
        },
        "item": {
          "id": "e357eae6-7f3f-48a5-acfa-5a54f94e8bbc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed3993d3-6098-47c3-83bb-a7e828b5e954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3558f3f-64f6-456b-bc2c-d4d4cee0fb68",
        "cursor": {
          "ref": "bd4a2cbc-b937-4d91-b26c-76fd78a8a326",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d93e6063-d75b-4012-b2b9-3472fcc66bc0"
        },
        "item": {
          "id": "a3558f3f-64f6-456b-bc2c-d4d4cee0fb68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f252a950-49a4-4775-96d5-4785c4517a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c17f21-2ca5-4cf7-aa21-fe655b61a852",
        "cursor": {
          "ref": "8514e281-06fe-4573-86a1-fac517b9f9ce",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b9267f11-c929-469c-9a1d-a9f772a14d2f"
        },
        "item": {
          "id": "20c17f21-2ca5-4cf7-aa21-fe655b61a852",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5090d729-1b70-41f7-baf4-957bfb3d53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3795db-6068-486d-9d73-cf162345f194",
        "cursor": {
          "ref": "820ec27c-cf57-412f-87b6-c6abbab05fa8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ce92a009-cc8a-4487-b95a-6fcf98f1f16a"
        },
        "item": {
          "id": "db3795db-6068-486d-9d73-cf162345f194",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fac1818c-03b2-4c2d-9c0d-a4843890d6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5997f157-f65d-4e8b-ae32-899682529e7f",
        "cursor": {
          "ref": "af880097-bbf0-442b-a705-ef9e93ba9134",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d90cf7e7-8f77-45f5-b224-b00d61888286"
        },
        "item": {
          "id": "5997f157-f65d-4e8b-ae32-899682529e7f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6846f760-d5db-4e5d-aec1-84bbf0f374b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1cae4e-4f0d-4bdb-8d38-c61687262c33",
        "cursor": {
          "ref": "dbf351e0-42e7-4042-8bb2-07efb3c0d216",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cac9ca7a-43dd-4d22-8d84-022294ee11cc"
        },
        "item": {
          "id": "5b1cae4e-4f0d-4bdb-8d38-c61687262c33",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c6fb4e08-9fc0-411c-b7e2-1f4c85f0b420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783a75e-c0d4-47e1-865d-f5c93dd7ce05",
        "cursor": {
          "ref": "f13f88bb-0482-44b1-ae16-125f4477e036",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e584339e-da6d-44df-a14c-ba5bd0760b3c"
        },
        "item": {
          "id": "0783a75e-c0d4-47e1-865d-f5c93dd7ce05",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "966e02f0-c669-46e1-99ad-666e6a2ca2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a2880-5967-4c52-b4cd-efc2fc6d485c",
        "cursor": {
          "ref": "24758620-e346-4834-b17e-6de76840d96a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cdc5ac89-fe20-4af7-a6e6-4794740494ec"
        },
        "item": {
          "id": "552a2880-5967-4c52-b4cd-efc2fc6d485c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "34cedbe3-517c-4e3d-82a9-17d758b2bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3af170e-3fab-4596-8e94-ed732fe33673",
        "cursor": {
          "ref": "7bef1dd5-5d88-4a55-b6ed-fe0b2225a91d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8dbd10ad-36da-4cf2-91fc-92820fd7f3a2"
        },
        "item": {
          "id": "a3af170e-3fab-4596-8e94-ed732fe33673",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ebc2bdff-5be3-44b9-a267-fa2425c3d0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d4b4d7-584a-4a96-aaac-8393e1e8c2bf",
        "cursor": {
          "ref": "3b2a2678-1187-423b-8f80-95ece8133896",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c3f9873f-b766-4707-bda3-645b3c093106"
        },
        "item": {
          "id": "68d4b4d7-584a-4a96-aaac-8393e1e8c2bf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9502171e-5fb8-4480-a37e-c977498bef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178bd3c-1dcb-4085-add8-baac93e8411d",
        "cursor": {
          "ref": "95e01d9d-a802-4e46-9cc9-caca1984addd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "79ac734a-3896-4f77-b875-84e403ed2bb0"
        },
        "item": {
          "id": "1178bd3c-1dcb-4085-add8-baac93e8411d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d09937d7-52c0-4641-bda9-1743a9f55127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac68a9b-c258-47e8-959f-2bd4cd4b0eae",
        "cursor": {
          "ref": "b3222ba4-93e2-4657-ae76-1b5c6885f7e7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "13d5c796-6b1a-44e5-b135-6d73aace73d2"
        },
        "item": {
          "id": "9ac68a9b-c258-47e8-959f-2bd4cd4b0eae",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "951a8e60-4765-4943-a46b-109c2dfd8d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815ade07-be07-4917-8961-602f0423aa72",
        "cursor": {
          "ref": "876e51a2-4685-4c48-86bd-2b1e5950145d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1cacf0c3-4454-4b71-b15f-053db8edbff9"
        },
        "item": {
          "id": "815ade07-be07-4917-8961-602f0423aa72",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "35861579-d493-44f8-8466-2e557596831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90cb1b2-0242-4a75-abeb-3782aee1adfb",
        "cursor": {
          "ref": "9bdc40d8-4720-403d-b1df-cad7bd4cc54a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8aa9e31e-5eb8-44bc-87e9-ebfc87710807"
        },
        "item": {
          "id": "b90cb1b2-0242-4a75-abeb-3782aee1adfb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5636e277-fd77-4256-b2e7-487615005c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a68a8c5-7a9e-4c82-8276-d33bed3a29c9",
        "cursor": {
          "ref": "e466b28a-4f04-44a4-b4e0-d00d71c5646a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "761aae0b-f64d-4db2-b56c-52b04825cd69"
        },
        "item": {
          "id": "1a68a8c5-7a9e-4c82-8276-d33bed3a29c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6cc584ad-8361-4108-80d5-932f2f1aa3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ead8335-45a8-449a-8670-cac2dc17aff5",
        "cursor": {
          "ref": "1e05f8a6-2029-459e-8078-2b349677e9d7",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0206f4ed-0658-41bd-864d-a4dc40e19afa"
        },
        "item": {
          "id": "5ead8335-45a8-449a-8670-cac2dc17aff5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9170fe5d-b268-4da1-b7a1-0ea091453d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2d74c1-e328-4466-93ae-38aef3d8e751",
        "cursor": {
          "ref": "788fc66d-afb1-4ef2-9264-0cce5043d0a6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a8866eb-480c-42a1-ba68-6d12a5ab8b06"
        },
        "item": {
          "id": "9f2d74c1-e328-4466-93ae-38aef3d8e751",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fa244459-4c8f-40ec-b6ff-7e3e7663bc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a0c477-8135-4645-a45b-05e47d501943",
        "cursor": {
          "ref": "b55b75d4-d530-4dd7-bbb8-e4bddc366693",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "16f2ce2c-2b93-4fe6-9c07-b38f2643c548"
        },
        "item": {
          "id": "59a0c477-8135-4645-a45b-05e47d501943",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c861fb50-8594-4eef-8bae-06cf9206be59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458058bc-517f-4935-9212-4b947610e968",
        "cursor": {
          "ref": "c7d47f97-649a-476e-9f80-ab6a5e0560e7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7a6f5575-5b1e-4696-aa55-8cef55417beb"
        },
        "item": {
          "id": "458058bc-517f-4935-9212-4b947610e968",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "90a4dc56-fe64-47ce-b227-4e8dd436a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d049ac2c-918f-42a7-8e2d-01334d09644a",
        "cursor": {
          "ref": "de01c35a-7ed6-406e-b1ff-2e5bb5c76c71",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f46cd73e-a9cb-42a0-a431-7ac572b6b114"
        },
        "item": {
          "id": "d049ac2c-918f-42a7-8e2d-01334d09644a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e5a89326-b5e7-4d7f-8429-b9b33c4f7eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e964e5-f438-41cd-9ceb-488d2cd8ff85",
        "cursor": {
          "ref": "f26e9a84-0a05-4e69-b40f-6562f9f197bb",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6936ce53-6fe3-4271-baaa-fd0ca6961b0f"
        },
        "item": {
          "id": "50e964e5-f438-41cd-9ceb-488d2cd8ff85",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bf2db179-2ca3-4988-b058-1cfaffddac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e884ab4-d53c-429f-9d8b-604503eb48a7",
        "cursor": {
          "ref": "b026027f-4c70-47a0-a8a1-f2d13be02d6a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "26e4ec11-0f29-41b6-95fa-3e6726ccae22"
        },
        "item": {
          "id": "6e884ab4-d53c-429f-9d8b-604503eb48a7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e920097f-edc7-443b-9b9e-d9527008192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bd387c-3cc6-4de8-807c-d2e5a0a5ce35",
        "cursor": {
          "ref": "92066573-bc67-413d-a1f8-2312f604de7d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1735d176-a724-444b-819e-cda51f286a36"
        },
        "item": {
          "id": "57bd387c-3cc6-4de8-807c-d2e5a0a5ce35",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "975a38c1-727f-4d77-baf5-e393f74aab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d61f5b-7e50-4177-a4ce-499c8907590b",
        "cursor": {
          "ref": "f2c4675a-50df-4223-9a9e-29e1c40bf393",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b3fddce5-4650-44cb-afee-93ca19b1f95f"
        },
        "item": {
          "id": "f7d61f5b-7e50-4177-a4ce-499c8907590b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73bd610a-8d86-4a66-b817-8db74f5edc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e6e7f2-6fc3-45ee-92de-48a705ce2b6a",
        "cursor": {
          "ref": "533ece86-ae6a-4e78-9b28-1daf86fcaa1e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "66b44789-4502-486c-ba91-820215434158"
        },
        "item": {
          "id": "b2e6e7f2-6fc3-45ee-92de-48a705ce2b6a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "560e9959-6930-4677-9f8a-90a3417f7619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2afb6c-1c47-4889-a958-eadda77d31e1",
        "cursor": {
          "ref": "9a10c1fa-a6c2-480a-adca-c0df1b19c9cc",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "37d52a35-b9e4-4939-958c-f7fd615b44e9"
        },
        "item": {
          "id": "1a2afb6c-1c47-4889-a958-eadda77d31e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eeb41893-e5f1-404a-8628-cb3584669dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fc02c7-419e-4d88-8b1d-6ea9c7001b98",
        "cursor": {
          "ref": "beddded0-c067-4c16-8fda-00656ab4f236",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1019fb24-f8b4-4687-9c98-01ccb1003ed5"
        },
        "item": {
          "id": "f4fc02c7-419e-4d88-8b1d-6ea9c7001b98",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3eadc2f3-bad6-4e37-bada-bd76db6f70c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9b1a14-2bf0-434f-a8fd-1e4eeab6aee0",
        "cursor": {
          "ref": "cb1475a7-c109-4633-9239-33f43334c690",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "05691839-0cf2-47a8-9b58-a09b758d1f17"
        },
        "item": {
          "id": "1b9b1a14-2bf0-434f-a8fd-1e4eeab6aee0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b5f63476-d3d0-4e18-978c-55d62efb2efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e54871-ea2e-407c-a911-840188cc1d6b",
        "cursor": {
          "ref": "c4459919-efe1-4cb2-aada-2673b741f48f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3307a4eb-6dc1-4ed4-917a-f7acd9c8da5a"
        },
        "item": {
          "id": "78e54871-ea2e-407c-a911-840188cc1d6b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92663ca5-739a-42c2-b174-583bb05fd7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a2d09a-12d2-455f-b8b9-c5c9b3718272",
        "cursor": {
          "ref": "c8172f18-669f-44c7-a311-f7ca64468f2b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0a38ebb8-9ff7-44b9-984e-2c6a023df823"
        },
        "item": {
          "id": "84a2d09a-12d2-455f-b8b9-c5c9b3718272",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1918b254-f832-466a-a758-b6dec6a340ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec742b7-6a85-4ed5-b3fc-3aae9736d570",
        "cursor": {
          "ref": "784d5120-1e11-4205-8965-4db05794da79",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46608650-f4b9-4eb8-863b-68c56470b983"
        },
        "item": {
          "id": "0ec742b7-6a85-4ed5-b3fc-3aae9736d570",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f519838c-e020-45f7-b8da-17999ee4ed37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725811c3-e565-491b-bcbf-30c3eacf9930",
        "cursor": {
          "ref": "afc8e308-a272-4a2c-8131-269d0e089f49",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "965ec442-099e-4154-ab88-efee52d48c4a"
        },
        "item": {
          "id": "725811c3-e565-491b-bcbf-30c3eacf9930",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a9c94635-084f-431e-b044-94892926fa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8410b3c7-af56-4ca1-8cc8-acf337110fd9",
        "cursor": {
          "ref": "cf387ea8-1dd9-4346-b3c6-057e088625e0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c817d2c5-cf44-4f51-b3cb-f6a4979df44d"
        },
        "item": {
          "id": "8410b3c7-af56-4ca1-8cc8-acf337110fd9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f35e4c1-8139-4654-9d88-27936b1dd4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6831fd-fc92-41df-abda-eed5708f2e81",
        "cursor": {
          "ref": "a155f5ad-d3eb-4a7d-bfb0-27048859e79c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dd6fed43-2b29-4b09-a350-747409d21b5e"
        },
        "item": {
          "id": "6a6831fd-fc92-41df-abda-eed5708f2e81",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "650698ce-38bc-4aef-9470-203050d00ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ac46e-aa34-4c5c-983b-df33873cd3b0",
        "cursor": {
          "ref": "5e684b80-8aaf-4976-b86b-c31eb69cb688",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "859cba8b-8ddb-42d1-8221-a9775d4360c2"
        },
        "item": {
          "id": "1e0ac46e-aa34-4c5c-983b-df33873cd3b0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4420ee21-1b90-45cf-a2cc-1723b7bc2cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ee5ec6-1923-414b-bbd1-29d6a07538e9",
        "cursor": {
          "ref": "d87ba282-db5f-492d-8fca-ec41d49c194a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b77fe31b-3fa7-43c2-8ae0-44d9353b80f1"
        },
        "item": {
          "id": "77ee5ec6-1923-414b-bbd1-29d6a07538e9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e4a5d5e8-ccf0-4074-a7c8-47ca067f5ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40c6909-d42d-4db8-8779-415fac9128e0",
        "cursor": {
          "ref": "351da5cd-d665-4acd-b376-76df91394f4c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d38a496d-2851-4c14-b8f8-d0d0032c19ff"
        },
        "item": {
          "id": "a40c6909-d42d-4db8-8779-415fac9128e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "56c9bb5e-8a0e-4e13-b38e-a8948b4b0917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b44365b-4a5c-4511-b239-7a0a41a6a254",
        "cursor": {
          "ref": "83a6cc85-becd-470d-b8b7-307f9b0f38f4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "25b84302-83af-4b78-bdef-47584a3249cd"
        },
        "item": {
          "id": "7b44365b-4a5c-4511-b239-7a0a41a6a254",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "207ac1bc-13bd-42c9-8d2c-315f0c7f2024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337f621e-5850-4303-921b-8a4645349402",
        "cursor": {
          "ref": "bcf2740f-969b-4aa6-b7bf-1d1017fb1464",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d4b7bf06-9d87-4655-8621-1f5dec12e64a"
        },
        "item": {
          "id": "337f621e-5850-4303-921b-8a4645349402",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eb3bd12f-0108-45b7-913a-923b876fac5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe082c0-225b-4624-ac12-7c786237dc32",
        "cursor": {
          "ref": "e2b7687b-0bb2-4fa3-b875-e01650a82f63",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f9d4313e-a322-4d3f-b06b-54e83f935b98"
        },
        "item": {
          "id": "fbe082c0-225b-4624-ac12-7c786237dc32",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e27e7c9e-f62d-4c18-a4ef-0e32e7081f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafef75-919f-42be-956c-b1e5a93442b8",
        "cursor": {
          "ref": "f52cc4df-1500-4bf2-b2f8-cd6b54376ee8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "049078a4-9cf7-4e57-aaf9-b59e4aed59e0"
        },
        "item": {
          "id": "7aafef75-919f-42be-956c-b1e5a93442b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6307ef5a-1c6b-42fd-b444-ba2b31e8c691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff1723-1acd-4430-b0f2-d568f2bd2d0e",
        "cursor": {
          "ref": "181b4bff-4b4f-498b-904d-7fb27cccce18",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "71e32717-8c84-4a1e-b4b8-d7d2b82d6459"
        },
        "item": {
          "id": "92ff1723-1acd-4430-b0f2-d568f2bd2d0e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "335b02d2-cab4-4a20-9da7-6a645de6a007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888de613-e136-4995-b97b-97f5a87b0577",
        "cursor": {
          "ref": "82656ce1-7536-400b-aee2-752377db87da",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "65940700-52dc-41c9-9ff3-b44187e322cf"
        },
        "item": {
          "id": "888de613-e136-4995-b97b-97f5a87b0577",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1eaf0762-1151-4b51-988c-884477eafcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60bfb16-d163-40be-90fd-6c375bd7902e",
        "cursor": {
          "ref": "bd320fee-df43-47a4-bdd1-71e54a1a5fc0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "31c978b1-8615-407c-a93a-57a3bd7bded0"
        },
        "item": {
          "id": "f60bfb16-d163-40be-90fd-6c375bd7902e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a31de3bf-7d46-44d7-8d5f-852a7fba3df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54db8c69-7195-476c-9803-4c2c4d4a6fe9",
        "cursor": {
          "ref": "ca1d423c-4f31-4331-ae05-751b16732b5a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3703c0b5-9002-4aeb-9595-e3bd20c95f03"
        },
        "item": {
          "id": "54db8c69-7195-476c-9803-4c2c4d4a6fe9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eb3a1866-bfb5-458b-ad4a-4d67151884d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a35ecef-a137-466f-b053-c03f276c04e9",
        "cursor": {
          "ref": "731fc913-d0c2-4110-b1f4-b565090e0bd0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1fb89105-c4fa-4674-b4ec-f9d36b727441"
        },
        "item": {
          "id": "5a35ecef-a137-466f-b053-c03f276c04e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "18fcd051-4f90-44b1-b2c4-35da20d3b254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11496f1e-7092-4d47-9db1-e17ad03cad9e",
        "cursor": {
          "ref": "99308f27-6c50-4df1-8b37-512d74d42fd0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fafc0140-2eeb-49cd-8525-37c803b8709d"
        },
        "item": {
          "id": "11496f1e-7092-4d47-9db1-e17ad03cad9e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "22b7241d-66bb-430b-9113-45b454ddb79b",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "232f8606-1e40-48e6-8d63-ada1995bc9bf",
        "cursor": {
          "ref": "d13cbf01-4fb5-4107-8b96-3df17c8fa5b9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d87dfed2-a1a0-4dec-a03f-457cda9be728"
        },
        "item": {
          "id": "232f8606-1e40-48e6-8d63-ada1995bc9bf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9abb10c6-1d91-47d9-a4f8-1dded8632489",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "978a3765-b862-4451-b488-5d362e471bb6",
        "cursor": {
          "ref": "39234b5b-b474-4bca-94e5-1cbd69da8a49",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bcd3b6fe-9c66-47d0-8c58-1bc18b5fe818"
        },
        "item": {
          "id": "978a3765-b862-4451-b488-5d362e471bb6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "69de8e37-782b-409e-8b2c-0b7337f0957b",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084b2f8-b99b-423c-b21c-e9e6efcf1084",
        "cursor": {
          "ref": "1a91e2d8-6dff-474c-b932-eaa43e80c530",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f77ac465-c199-403b-a41e-89184f058199"
        },
        "item": {
          "id": "f084b2f8-b99b-423c-b21c-e9e6efcf1084",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50b5e94a-7043-457a-8367-3279ea24a77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084b2f8-b99b-423c-b21c-e9e6efcf1084",
        "cursor": {
          "ref": "1a91e2d8-6dff-474c-b932-eaa43e80c530",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f77ac465-c199-403b-a41e-89184f058199"
        },
        "item": {
          "id": "f084b2f8-b99b-423c-b21c-e9e6efcf1084",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50b5e94a-7043-457a-8367-3279ea24a77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe46c14-fe58-449c-be94-839b7d9446bf",
        "cursor": {
          "ref": "282537db-a5f0-469d-b504-616e269c8906",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b2175471-9873-40ef-b061-fbafbd68b17f"
        },
        "item": {
          "id": "efe46c14-fe58-449c-be94-839b7d9446bf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "16282ecf-25bc-4e9d-8c08-1b6730d050c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82e7cd1-30d1-4c62-810d-24a6d970e48d",
        "cursor": {
          "ref": "d248d54c-cb00-4293-b673-a078b00a90bb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "20316c1a-49d3-47ee-abda-cb9b039a63d2"
        },
        "item": {
          "id": "a82e7cd1-30d1-4c62-810d-24a6d970e48d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dec37486-137f-4764-a6ed-9a5f384b9b97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}